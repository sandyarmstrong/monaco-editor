{"version":3,"sources":["vs/base/common/worker/fake","vs/base/common/worker/workerServer.js","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/arrays.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/assert.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/collections.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/events.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/map.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/platform.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/paths.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/stopwatch.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/strings.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/filters.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/glob.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/types.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/graph.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/lifecycle.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/mime.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/objects.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/uri.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/marshalling.ts","vs/base/common/worker/vs/base/common/winjs.base.raw.js","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/worker/workerProtocol.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/core/arrays.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/core/modeTransition.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/core/position.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/core/range.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/core/viewLineToken.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/model/indentRanges.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/model/indentationGuesser.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/model/lineToken.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/model/tokenIterator.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/model/wordHelper.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/abstractState.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/languageSelector.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/lineStream.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/monarch/monarchCommon.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/monarch/monarchCompile.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/nullMode.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/supports.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/supports/characterPair.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/supports/richEditBrackets.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/supports/electricCharacter.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/supports/tokenizationSupport.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/monarch/monarchLexer.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/viewModel/prefixSumComputer.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/errors.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/callbackList.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/event.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/cancellation.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/eventEmitter.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/timer.ts","vs/base/common/worker/vs/base/common/winjs.base.js","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/async.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/worker/workerServer.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/model/tokensBinaryEncoding.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/model/modelLine.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/languageFeatureRegistry.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/supports/onEnter.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/languageConfigurationRegistry.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/model/textModelWithTokensHelpers.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/supports/suggestSupport.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/base/common/severity.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/config/defaultConfig.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/platform/event/common/eventService.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/platform/instantiation/common/descriptors.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/platform/instantiation/common/instantiation.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/services/compatWorkerService.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/services/editorWorkerService.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/services/modeService.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/services/modelService.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/services/resourceService.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/services/resourceServiceImpl.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/platform/configuration/common/configuration.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/abstractMode.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/platform/contextkey/common/contextkey.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/editorCommon.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/model/textModel.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/model/textModelWithTokens.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/model/mirrorModel.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/platform/event/common/event.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/platform/extensions/common/extensions.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/platform/instantiation/common/instantiationService.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/platform/platform.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/modes/modesRegistry.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/services/compatWorkerServiceWorker.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/services/languagesRegistry.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/platform/extensions/common/extensionsRegistry.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/services/modeServiceImpl.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/platform/extensions/common/abstractExtensionService.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/platform/telemetry/common/telemetry.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/platform/workspace/common/workspace.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/languages.common.ts","vs/base/common/worker/file:/Users/sandy/random-code/vscode/src/vs/editor/common/worker/editorWorkerServer.ts"],"names":["__m","__M","deps","result","i","len","length","define","require","exports","tail","array","n","forEach","callback","splice","equals","one","other","itemEquals","a","b","binarySearch","key","comparator","low","high","mid","comp","findFirst","p","Math","floor","top","compare","slice","sort","_loop_1","m","element","pop","j","e","merge","arrays","hashFn","Array","map","hash","hasOwnProperty","push","apply","coalesce","filter","contains","item","indexOf","swap","pos1","pos2","element1","element2","move","from","to","isFalsyOrEmpty","obj","isArray","distinct","keyFn","position","seen","Object","create","elem","uniqueFilter","firstIndex","fn","first","notFoundValue","index","commonPrefixLength","min","flatten","arr","reduce","r","v","concat","range","fill","num","valueFn","indexer","merger","t","ok","value","message","Error","createStringDictionary","createNumberDictionary","lookup","what","alternate","String","lookupOrInsert","stringOrNumber","insert","into","data","call","values","remove","groupBy","groupFn","prototype","__extends","this","d","__","constructor","Event","originalEvent","time","Date","getTime","source","PropertyChangeEvent","_super","oldValue","newValue","ViewerEvent","EventType","PROPERTY_CHANGED","SELECTION","FOCUS","BLUR","HIGHLIGHT","EXPAND","COLLAPSE","TOGGLE","BEFORE_RUN","RUN","EDIT","SAVE","CANCEL","CHANGE","DISPOSE","LinkedMap","_size","defineProperty","get","enumerable","configurable","k","peek","getOrSet","res","set","keys","entries","has","clear","entry","toString","BoundedLinkedMap","limit","ratio","Number","MAX_VALUE","trim","next","prev","head","current","LRUCache","hasWebWorkerSupport","_globals","Worker","_isWindows","_isMacintosh","_isLinux","_isRootUser","_isNative","_isWeb","_isQunit","_locale","undefined","_language","LANGUAGE_DEFAULT","process","platform","getuid","rawNlsConfig","env","nlsConfig","JSON","parse","resolved","availableLanguages","locale","navigator","userAgent","language","self","QUnit","Platform","_platform","Web","Mac","Windows","Linux","isWindows","isMacintosh","isLinux","isRootUser","isNative","isWeb","isQunit","global","globals","setTimeout","bind","clearTimeout","setInterval","clearInterval","platform_1","relative","normalize","fromParts","split","sep","toParts","shift","unshift","join","dirname","path","idx","lastIndexOf","substring","basename","substr","extname","_isNormal","win","_winBadPath","test","_posixBadPath","toOSPath","wantsBackslash","root","getRoot","start","skip","end","charCodeAt","_slash","_backslash","streql","prev_start","prev_part","part","code","pos_1","replace","_A","_Z","_a","_z","_colon","pos","isUNC","isNaN","isPosixAbsolute","makePosixAbsolute","isEqualOrParent","candidate","candidateLen","lastCandidateChar","toLowerCase","char","isValidBasename","name","INVALID_FILE_CHARS","lastIndex","WINDOWS_FORBIDDEN_NAMES","isAbsolute","isAbsoluteRegex","nativeSep","arguments","last","hasPerformanceNow","performance","now","StopWatch","highResolution","_highResolution","_startTime","_now","_stopTime","stop","elapsed","map_1","pad","l","str","reverse","format","args","_i","_formatRegexp","match","group","parseInt","escape","html","escapeRegExpCharacters","haystack","needle","trimmed","ltrim","rtrim","needleLen","offset","haystackLen","convertSimple2RegExpPattern","pattern","stripWildcards","startsWith","endsWith","diff","createRegExp","searchString","isRegex","matchCase","wholeWord","charAt","modifiers","RegExp","regExpLeadsToEndlessLoop","regexp","exec","normalizeNFC","canNormalize","cached","normalizedCache","nonAsciiCharactersPattern","firstNonWhitespaceIndex","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","isAsciiChar","equalsIgnoreCase","len1","len2","codeA","codeB","abs","fromCharCode","toLocaleLowerCase","commonSuffixLength","aLastIndex","bLastIndex","isFullWidthCharacter","charCode","difference","second","maxLenDelta","lengthDifference","LCS","zeroArray","max","sqrt","computeLineStarts","text","ret","lcut","segments","count","empty","removeAnsiEscapeCodes","EL","LF","COLOR_START","COLOR_END","startsWithUTF8BOM","__utf8_bom","appendWithLimit","maxLength","newLength","safeBtoa","btoa","encodeURIComponent","repeat","s","UTF8_BOM_CHARACTER","strings","or","word","wordToMatchAgainst","and","_matchesPrefix","ignoreCase","matchesContiguousSubString","matchesSubString","_matchesSubString","isLower","isUpper","isNumber","isWhitespace","isAlphanumeric","nextAnchor","camelCaseWord","c","_matchesCamelCase","nextUpperIndex","isCamelCaseWord","upper","lower","alpha","numeric","upperPercent","lowerPercent","alphaPercent","numericPercent","isCamelCasePattern","whitespace","matchesCamelCase","matchesWords","target","_matchesWords","nextWord","nextWordIndex","matchesFuzzy","enableSeparateSubstringMatching","fuzzyRegExpCache","fuzzySeparateFilter","fuzzyContiguousFilter","matchesStrictPrefix","matchesPrefix","SubstringMatching","paths","starsToRegExp","starCount","NO_PATH_REGEX","PATH_REGEX","splitGlobAware","splitChar","inBraces","inBrackets","curVal","parseRegExp","regEx","every","previousSegmentWasGlobStar_1","segment","braceVal","bracketVal","choices","braceRegExp","parsePattern","parsedPattern","CACHE","T1","trivia","Trivia","T2","T3","toRegExp","error","arg1","siblings","base","some","matchExpression","expression","patterns","getOwnPropertyNames","when","clause","clausePattern_1","sibling","state_1","_typeof","number","isString","string","isStringArray","isObject","object","isBoolean","isUndefined","isUndefinedOrNull","isEmptyObject","isFunction","areFunctions","objects","validateConstraints","constraints","validateConstraint","arg","constraint","ctor","function","types_1","collections_1","newNode","incoming","outgoing","Graph","_hashFn","_nodes","roots","traverse","inwards","startNode","_traverse","node","_this","nodes","insertEdge","fromNode","lookupOrInsertNode","toNode","removeNode","dispose","disposables","combinedDisposable","toDisposable","fns","freeze","Disposable","_toDispose","_register","Disposables","add","arg_1","types","glob_1","registerTextMime","association","registeredAssociations","userConfigured","mime","extension","console","warn","filename","filepattern","firstline","clearTextMimes","onlyUserConfigured","guessMimeTypes","firstLine","MIME_UNKNOWN","configuredMime","guessMimeTypeByPath","MIME_TEXT","registeredMime","firstlineMime","guessMimeTypeByFirstline","associations","filenameMatch","patternMatch","extensionMatch","matches","isBinaryMime","mimes","mimeVals","MIME_BINARY","isUnspecific","suggestFilename","theMime","prefix","Types","clone","deepClone","cloneAndChange","changer","_cloneAndChange","encounteredObjects","changed","r1","i1","r2","i2","mixin","destination","overwrite","assign","sources","toObject","keyMap","valueMap","x","o","oneKeys","otherKeys","ensureProperty","property","defaultValue","arrayToHash","createKeywordMatcher","caseInsensitive","derive","baseClass","derivedClass","prop","basePrototype","derivedPrototype","getOwnPropertyDescriptor","writable","safeStringify","stringify","getOrDefault","_encode","ch","toUpperCase","encodeURIComponent2","encodeNoop","URI","_scheme","_empty","_authority","_path","_query","_fragment","_formatted","_fsPath","isUri","thing","authority","fragment","query","scheme","_driveLetterPath","change","_validate","_parseComponents","decodeURIComponent","file","_regexp","components","_schemePattern","_singleSlashStart","_doubleSlashStart","skipEncoding","_asFormatted","uri","encoder","parts","_upperCaseDrive","lastIdx","toJSON","fsPath","external","$mid","revive","uri_1","replacer","reviver","flags","multiline","marshallingConst","_modules","_winjs","moduleId","factory","exportsPassedIn","depsValues","dep","globalObject","window","_Global","markSupportedForProcessing","func","supportedForProcessing","hasWinRT","_setImmediate","setImmediate","handler","msWriteProfilerMark","_WinJS","_BaseCoreUtils","_WriteProfilerMark","initializeProperties","members","properties","member","setName","defineProperties","createNamespace","parentNamespace","currentNamespace","namespaceFragments","namespaceName","defineWithParent","lazy","f","state","LazyStates","uninitialized","initialized","working","moduleDefine","publicNS","_rootNamespace","Namespace","_lazy","_moduleDefine","instanceMembers","staticMembers","mix","Class","_Base","ErrorFromName","createEventProperty","eventPropStateName","userHandler","wrapper","evt","addEventListener","removeEventListener","createEventProperties","props","EventMixinEvent","type","detail","timeStamp","bubbles","cancelable","currentTarget","defaultPrevented","_preventDefaultCalled","trusted","eventPhase","preventDefault","stopImmediatePropagation","_stopImmediatePropagationCalled","stopPropagation","eventMixin","_listeners","listener","useCapture","eventListeners","dispatchEvent","details","listeners","eventValue","_createEventProperty","nop","_traceAsyncOperationStarting","Debug","msTraceAsyncOperationStarting","_traceAsyncOperationCompleted","msTraceAsyncOperationCompleted","_traceAsyncCallbackStarting","msTraceAsyncCallbackStarting","_traceAsyncCallbackCompleted","msTraceAsyncCallbackCompleted","_ErrorFromName","_Events","_Trace","_","completed","promise","targetState","then","state_waiting","state_success_notify","_value","_setState","createErrorDetails","exception","id","parent","detailsForHandledError","errorValue","context","_isException","errorId","_errorId","detailsForChainedError","setErrorInfo","detailsForError","error_number","detailsForException","exceptionValue","done","onComplete","onError","onProgress","asyncOpID","pushListener","onerrorDetails","callonerror","state_error_notify","notifySuccess","queue","MS_ASYNC_OP_STATUS_SUCCESS","_setCompleteValue","ex","_setExceptionValue","_state","CompletePromise","notifyError","errorID","canceledName","MS_ASYNC_OP_STATUS_CANCELED","MS_ASYNC_OP_STATUS_ERROR","asyncCallbackStarted","handlesOnError","_setChainedErrorValue","ErrorPromise","onerrorDetailsGenerator","promiseEventListeners","errorET","progress","_progress","isException","setErrorValue","state_error","setCompleteValue","state_success","ThenPromise","timeout","timeoutMS","Promise","timeoutWithPromise","cancelPromise","cancel","cancelTimeout","setNonUserCodeExceptions","ListenerType","tagWithStack","tag","thenPromise","errorPromise","exceptionPromise","completePromise","all","state_created","state_working","state_waiting_canceled","state_canceled","state_canceling","enter","_completed","_error","_notify","_setErrorValue","waitedUpon","_chainedError","_cancelAction","_cleanupAction","staticCanceledPromise","PromiseStateMachine","_nextState","_run","creator","_stack","_getStack","_creator","unused","_doneHandler","ExceptionPromise","init","oncancel","_oncancel","complete","stack","eventType","capture","any","canceled","as","is","errors","results","undefineds","pending","argDone","errorCount","canceledCount","Key","Done","thenEach","wrap","wrapError","_veryExpensiveTagWithStack","_veryExpensiveTagWithStack_tag","debuggerEnabled","_cancelBlocker","input","output","_StateMachine","exported","amd","module","nextTick","MessageType","INITIALIZE","REPLY","PRINT","ReplyType","COMPLETE","ERROR","PROGRESS","PrintType","LOG","DEBUG","INFO","WARN","Arrays","findIndexInSegmentsArray","desiredIndex","ceil","arrays_1","ModeTransition","mode","modeId","getId","modeTransitions","modeTransition","Position","lineNumber","column","isBefore","isBeforeOrEqual","lift","isIPosition","position_1","Range","startLineNumber","startColumn","endLineNumber","endColumn","isEmpty","containsPosition","containsRange","otherRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","cloneRange","setEndPosition","setStartPosition","collapseToStart","isIRange","areIntersectingOrTouching","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","compareRangesUsingEnds","spansMultipleLines","ViewLineToken","equalsArray","aLen","bLen","ViewLineTokens","lineTokens","fauxIndentLength","textLength","_lineTokens","_fauxIndentLength","_textLength","getTokens","getFauxIndentLength","getTextLength","findIndexOfOffset","computeRanges","model","minimumRangeSize","previousRegions","indent","line","getLineCount","getIndentLevel","previous","IndentRange","deepCloneArr","indentRanges","spacesDiff","aLength","bLength","aCharCode","bCharCode","aSpacesCnt","aTabsCount","__space","bSpacesCnt","bTabsCount","tabsDiff","guessIndentation","lines","defaultTabSize","defaultInsertSpaces","linesIndentedWithTabsCount","linesIndentedWithSpacesCount","previousLineText","previousLineIndentation","ALLOWED_TAB_SIZE_GUESSES","MAX_ALLOWED_TAB_SIZE_GUESS","spacesDiffCount","currentLineText","currentLineHasContent","currentLineIndentation","currentLineSpacesCount","currentLineTabsCount","lenJ","__tab","currentSpacesDiff","deltaSpacesCount","insertSpaces","tabSize","tabSizeScore","possibleTabSize","possibleTabSizeScore","LineToken","TokenIterator","_model","_currentLineNumber","_currentTokenIndex","_readLineTokens","_next","_prev","columnIndex","tokenEndIndex","_currentLineTokens","getTokenCount","tokenStartIndex","getTokenStartIndex","_current","getLineTokens","_advanceNext","_advancePrev","getTokenType","endIndex","getTokenEndIndex","getLineContent","token","hasNext","hasPrev","_invalidate","errorFn","createWordRegExp","allowInWords","usualSeparators","USUAL_WORD_SEPARATORS","ensureValidWordDefinition","wordDefinition","DEFAULT_WORD_REGEXP","getWordAtText","textOffset","startWord","endWord","words","AbstractState","stateData","getMode","makeClone","initializeFrom","getStateData","setStateData","safeEquals","tokenize","stream","safeClone","selection","score","selector","valueLanguage","valueScheme","valuePattern","LineStream","_source","sourceLength","_pos","whitespaceArr","stringToArray","separators","separatorsArr","tokenStart","tokenEnd","STRING_TO_ARRAY_CACHE","actualStringToArray","maxCharCode","eos","next2","advance","oldPos","_advance2","advanceToEOS","resetPeekedToken","goBack","createPeeker","condition","_advanceIfStringCaseInsensitive","advanceIfStringCaseInsensitive","advanceIfStringCaseInsensitive2","_advanceIfString","advanceIfString","advanceIfString2","_advanceIfCharCode","advanceIfCharCode","advanceIfCharCode2","_advanceIfRegExp","lastMatch","advanceIfRegExp","advanceIfRegExp2","advanceLoop","isWhile","including","peeker","advanceWhile","advanceUntil","_advanceUntilString","advanceUntilString","advanceUntilString2","setTokenRules","peekToken","nextToken","peekWhitespace","_skipWhitespace","skipWhitespace","skipWhitespace2","fixCase","lexer","sanitize","log","msg","languageId","throwError","substituteMatches","re","stateMatches","full","sub","dollar","attr","ofs","total","findRules","rules","tokenizer","stateExists","exist","stateNames","MonarchBracket","monarchCommon","isArrayOf","elemType","bool","def","onerr","compileRegExp","selectScrutinee","createGuard","ruleName","tkey","val","scrut","oppat","op","pat","tester","inWords","patx","patexp","scrutinee","compileAction","action","newAction","tokenSubst","bracket","Open","Close","switchTo","nextEmbedded","usesEmbedded","cases","defaultToken","didmatch","compile","json","addRules","newrules","rule","include","newrule","Rule","setRegex","lexerMin","setAction","rule1","regex","matchOnlyAtStart","matchOnlyAtLineStart","noThrow","maxStack","tokenPostfix","brackets","open","close","bracketIdx","desc","sregex","act","nullTokenize","buffer","deltaOffset","stopAtOffset","tokens","actualStopOffset","endState","NullState","stateDataClone","otherStateData","NullMode","ID","toSimplifiedMode","modeTransition_1","handleEvent","runner","modeIndex","nestedMode","modeStartIndex","firstTokenInModeIndex","nextCharacterAfterModeIndex","nextTokenAfterMode","firstTokenCharacterOffset","newCtx","FilteredLineContext","ignoreBracketsInToken","tokenType","IGNORE_IN_TOKENS","Token","LineTokens","retokenize","actual","_actual","_firstTokenInModeIndex","_nextTokenAfterMode","_firstTokenCharacterOffset","_nextCharacterAfterModeIndex","actualLineContent","tokenIndex","getTokenText","supports_1","CharacterPairSupport","registry","config","_registry","_modeId","_autoClosingPairs","autoClosingPairs","_surroundingPairs","surroundingPairs","getAutoClosingPairs","shouldAutoClosePair","character","nestedModeId","notIn","notInIndex","characterPairSupport","getCharacterPairSupport","getSurroundingPairs","range_1","once","computeFn","cache","createOrRegex","pieces","regexStr","toReversedString","reversedStr","RichEditBrackets","forwardRegex","getRegexForBracketPair","reversedRegex","getReversedRegexForBracketPair","getRegexForBrackets","getReversedRegexForBrackets","textIsBracket","textIsOpenBracket","maxBracketLength","BracketsUtils","_findPrevBracketInText","reversedBracketRegex","reversedText","matchOffset","matchLength","absoluteMatchOffset","findPrevBracketInToken","lineText","currentTokenStart","currentTokenEnd","currentTokenReversedText","findNextBracketInText","bracketRegex","findNextBracketInToken","currentTokenText","richEditBrackets_1","BracketElectricCharacterSupport","autoClosePairs","contribution","Brackets","docComment","getElectricCharacters","embeddedElectricCharacters","onElectricCharacter","electricCharacterSupport","getElectricCharacterSupport","richEditBrackets","_richEditBrackets","_complexAutoClosePairs","pair","bracketPair","lastChar","_onElectricAutoClose","_onElectricAutoIndent","containsTokenTypes","fullTokenSpec","tokensToLookFor","isOpen","matchOpenBracket","this_1","lastTokenIndex","tokenType_1","scope","appendText","lineStream_1","nullMode_1","something","TokenizationSupport","customization","supportsNestedModes","_mode","_embeddedModesListeners","setTokenizationSupport","defaults","enterNestedMode","getNestedMode","getNestedModeInitialState","getLeavingNestedModeData","onReturningFromNestedMode","getInitialState","_nestedTokenize","_myTokenize","nestedModeState","prependTokens","prependModeTransitions","myStateBeforeNestedMode","leavingNestedModeData","stepOnceNestedState","tokenizationSupport","nestedModeBuffer","nestedModeLineTokens","bufferAfterNestedMode","myStateAfterNestedMode","stateAfterNestedMode","myState","tokenResult","beforeTokenizeStreamPos","lineStream","previousType","maxPos","nextState","dontMergeWithPrev","currentEmbeddedLevels","_getEmbeddedLevel","MAX_EMBEDDED_LEVELS","embeddedMode","addSupportChangedListener","emitting","restOfBuffer","missingModePromise","_validatedNestedMode","lastNestedModeState","abstractState_1","tokenizationSupport_1","findBracket","matched","bracketType","createTokenizationSupport","modeService","MonarchLexer","embeddedEntered","rawState","isRegisteredMode","getOrCreateMode","mstate","groupActions","groupMatches","groupMatched","groupRule","otherm","noConsumeIsOk","stackLen0","groupLen0","callres","getModeIdForLanguageName","transform","totalLen","rest","None","PrefixSumIndexOfResult","remainder","PrefixSumComputer","prefixSum","prefixSumValidIndex","getCount","insertValue","insertIndex","insertValues","_zeroArray","changeValue","removeValues","cnt","getTotalValue","getAccumulatedValue","getIndexOf","accumulatedValue","midStop","midStart","nls","setUnexpectedErrorHandler","newUnexpectedErrorHandler","errorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedPromiseError","transformErrorForSerialization","name_1","stacktrace","$isError","xhrToErrorMessage","xhr","verbose","ce","ConnectionError","verboseMessage","exceptionToErrorMessage","localize","detectSystemErrorMessage","errno","syscall","toErrorMessage","status","notImplemented","illegalArgument","illegalState","readonly","loaderError","err","options","severity","actions","ErrorHandler","unexpectedErrorHandler","addListener","_removeListener","emit","getUnexpectedErrorHandler","statusText","responseText","errorMessage","errorCode","errorObject","errorObj","connectionErrorToMessage","connectionErrorDetailsToMessage","errors_1","CallbackList","bucket","_callbacks","_contexts","foundCallbackWithDifferentContext","invoke","callbacks","contexts","callbackList_1","fromEventEmitter","emitter","thisArgs","addListener2","fromPromise","toCancel","Emitter","onFirstListenerAdd","event","fire","onLastListenerRemove","mapEvent","filterEvent","debounceEvent","delay","subscription","handle","cur","_output","_disposable","_options","_event","_noop","_disposed","EventDelayerState","EventBufferer","buffers","wrapEvent","bufferEvents","flush","event_1","CancellationToken","shortcutEvent","isCancellationRequested","onCancellationRequested","Cancelled","MutableToken","_isCancelled","_emitter","CancellationTokenSource","_token","Errors","safeInvokeNoArg","safeInvoke1Arg","EmitterEvent","_type","_data","getType","getData","EventEmitter","allowedEventTypes","_bulkListeners","_collectedEvents","_deferredCnt","_allowedEventTypes","bound","addOneTimeDisposableListener","disposable","addBulkListener","_removeBulkListener","addBulkListener2","addEmitter","eventEmitter","events","newEvents","_emitEvents","addEmitter2","_emitToSpecificTypeListeners","_emitToBulkListeners","bulkListeners","emitterEvent","deferredEmit","_emitCollected","EmitQueueElement","OrderGuaranteeEventEmitter","_emitQueue","queueElement","precision","topic","description","timeKeeper","getTimeKeeper","ENABLE_TIMER","Topic","NullTimerEvent","timeTaken","TimerEvent","startTime","stopTime","sw","profilerName","_onEventStopped","TimeKeeper","cleaningIntervalId","collectedEvents","isEnabled","nullEvent","strTopic","EDITOR","LANGUAGES","WORKER","WORKBENCH","STARTUP","initAutoCleaning","addEvent","EVENT_ID","_EVENT_CACHE_LIMIT","_MAX_TIMER_LENGTH","_CLEAN_UP_INTERVAL","getCollectedEvents","clearCollectedEvents","emitEvents","setInitialCollectedEvents","PARSE_TIME","winjs","__Errors__","promiseErrorHandler","outstandingPromiseErrors","TPromise","PPromise","winjs_base_1","cancellation_1","lifecycle_1","isThenable","toThenable","asWinJsPromise","resolve","reject","wireCancellationToken","resolveAsUndefinedWhenCancelled","always","e1","sequence","promiseFactory","thenHandler","didCall","nfcall","ninvoke","thisArg","Throttler","activePromise","queuedPromise","queuedPromiseFactory","onComplete_1","SimpleThrottler","promiseTask","Delayer","defaultDelay","completionPromise","onSuccess","task","trigger","isTriggered","ThrottledDelayer","throttler","PeriodThrottledDelayer","minimumPeriod","periodThrottler","PromiseSource","_completeCallback","_errorCallback","ShallowCancelThenPromise","outer","completeCallback","errorCallback","progressCallback","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","consume","iLimitedTask","consumed","TimeoutTimer","cancelAndSet","setIfNotSet","IntervalTimer","interval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","isScheduled","setRunner","schedule","marshalling_1","workerProtocol","postMessage","WorkerServer","postSerializedMessage","_postSerializedMessage","_workerId","_requestHandler","_bindConsole","_sendPrintMessage","debug","info","level","transformedObjects","monacoWorker","req","payload","_postMessage","_sendReply","msgId","loadModule","errorback","onmessage","_onmessage","loaderConfig","loaderConfiguration","baseUrl","vs","nlsConfig_1","pseudo","nlsPlugin","setPseudoTranslation","catchError","handlerModule","_handleMessage","handlerMethod","handlerError","viewLineToken_1","START_INDEX_MASK","TYPE_MASK","START_INDEX_OFFSET","TYPE_OFFSET","pow","DEFAULT_VIEW_TOKEN","INFLATED_TOKENS_EMPTY_TEXT","DEFLATED_TOKENS_EMPTY_TEXT","INFLATED_TOKENS_NON_EMPTY_TEXT","DEFLATED_TOKENS_NON_EMPTY_TEXT","TokensInflatorMap","_inflate","_deflate","","TokensBinaryEncoding","deflateArr","deflatedToken","deflated","inflateMap","deflateMap","prevStartIndex","getStartIndex","binaryEncodedToken","deflatedType","inflateArr","binaryEncodedTokens","sliceAndInflate","startOffset","endOffset","deltaStartIndex","originalToken","newStartIndex","originalStartIndex","tokensBinaryEncoding_1","computePlusOneIndentLevel","chCode","toLineTokensFromInflated","toLineTokensFromDeflated","toModeTransitions","topLevelMode","MarkerMoveSemantics","NO_OP_TOKENS_ADJUSTER","adjust","finish","NO_OP_MARKERS_ADJUSTER","adjustDelta","adjustSet","ModelLine","_lineNumber","_metadata","_setText","_modeTransitions","_markers","_text","_setPlusOneIndentLevel","updateTabSize","setState","getState","getModeTransitions","setTokens","_setLineTokensFromDeflated","EmptyLineTokens","INSTANCE","DefaultLineTokens","_createTokensAdjuster","tokensLength","tokensIndex","currentTokenStartIndex","toColumn","delta","minimumAllowedColumn","minimumAllowedIndex","newToken","prevTokenStartIndex","lineTextLength","lastTokenStartIndex","_createMarkersAdjuster","changedMarkers","_compareMarkers","markers","markersLength","markersIndex","marker","adjustMarkerBeforeColumn","moveSemantics","ForceMove","ForceStay","stickToPreviousCharacter","newColumn","oldLineNumber","oldColumn","MarkerDefined","applyEdits","edits","deltaColumn","resultText","tokensAdjuster","markersAdjuster","edit","deletingCnt","insertingCnt","forceMoveMarkers","commonLength","splitColumn","myText","otherText","otherMarkers","myMarkers","otherLine","addMarkers","append","thisTextLength","otherTokens","deflatedStartIndex","myLineTokens","addMarker","removeMarker","_indexOfMarkerId","removeMarkers","deleteMarkers","getMarkers","updateLineNumber","newLineNumber","deleteLine","setMarkersColumn","setMarkersOldLineNumber","markerId","_tokens","getBinaryEncodedTokensMap","getBinaryEncodedTokens","inflate","languageSelector_1","LanguageFeatureRegistry","_clock","_entries","_onDidChange","register","provider","isBuiltin","_score","_time","_lastCandidate","isTooLargeForHavingAMode","_updateScores","ordered","_orderedForEach","orderedGroups","lastBucket","lastBucketScore","getModeId","_compareByScoreAndTime","languageFeatureRegistry_1","DocumentHighlightKind","SymbolKind","kind","Method","Function","Constructor","Variable","Interface","Package","Module","Property","Enum","File","Boolean","Null","IndentAction","ReferenceProviderRegistry","RenameProviderRegistry","SuggestRegistry","SignatureHelpProviderRegistry","HoverProviderRegistry","DocumentSymbolProviderRegistry","DocumentHighlightProviderRegistry","DefinitionProviderRegistry","CodeLensProviderRegistry","CodeActionProviderRegistry","DocumentFormattingEditProviderRegistry","DocumentRangeFormattingEditProviderRegistry","OnTypeFormattingEditProviderRegistry","LinkProviderRegistry","modes_1","OnEnterSupport","opts","_brackets","openRegExp","_createOpenBracketRegExp","closeRegExp","_createCloseBracketRegExp","_regExpRules","regExpRules","_indentationRules","indentationRules","onEnter","getLineContext","_onEnter","onEnterSupport","getOnEnterSupport","beforeEnterText","afterEnterText","oneLineAboveText","_actualOnEnter","beforeText","afterText","_INDENT_OUTDENT","increaseIndentPattern","_INDENT","indentNextLinePattern","decreaseIndentPattern","_OUTDENT","_safeRegExp","indentAction","Indent","IndentOutdent","Outdent","characterPair_1","electricCharacter_1","onEnter_1","wordHelper_1","RichEditSupport","rawConf","_conf","_mergeConf","_handleOnEnter","_handleComments","characterPair","LanguageConfigurationRegistry","electricCharacter","__electricCharacterSupport","wordPattern","comments","onEnterRules","conf","commentRule","lineComment","lineCommentToken","blockComment","blockStart","blockEnd","blockCommentStartToken","blockCommentEndToken","LanguageConfigurationRegistryImpl","onDidChange","configuration","_getRichEditSupport","getComments","getWordDefinition","getRawEnterActionAtPosition","getEnterActionAtPosition","indentation","enterAction","removeText","getBracketsSupport","languageConfigurationRegistry_1","WordHelper","_safeGetWordDefinition","massageWordDefinitionOf","_getWordAtColumn","txt","modeEndIndex","getWordAtPosition","textSource","_lineIsTokenized","_getLineModeTransitions","filters_1","async_1","filterSuggestions","currentWord","suggestions","label","incomplete","TextualSuggestSupport","editorWorkerService","configurationService","_editorWorkerService","_configurationService","provideCompletionItems","getConfiguration","wordBasedSuggestions","textualSuggest","Severity","fromValue","_warning","_warn","Warning","_info","Info","Ignore","_displayStrings","DEFAULT_INDENTATION","detectIndentation","DEFAULT_TRIM_AUTO_WHITESPACE","DEFAULT_WINDOWS_FONT_FAMILY","DEFAULT_MAC_FONT_FAMILY","DEFAULT_LINUX_FONT_FAMILY","GOLDEN_LINE_HEIGHT_RATIO","ConfigClass","editor","experimentalScreenReader","rulers","wordSeparators","selectionClipboard","ariaLabel","lineNumbers","selectOnLineNumbers","lineNumbersMinChars","glyphMargin","lineDecorationsWidth","revealHorizontalRightPadding","roundedSelection","theme","readOnly","scrollbar","verticalScrollbarSize","horizontal","useShadows","verticalHasArrows","horizontalHasArrows","overviewRulerLanes","cursorBlinking","mouseWheelZoom","cursorStyle","fontLigatures","disableTranslate3d","hideCursorInOverviewRuler","scrollBeyondLastLine","automaticLayout","wrappingColumn","wrappingIndent","wordWrapBreakBeforeCharacters","wordWrapBreakAfterCharacters","wordWrapBreakObtrusiveCharacters","hover","contextmenu","mouseWheelScrollSensitivity","quickSuggestions","quickSuggestionsDelay","parameterHints","iconsInSuggestions","autoClosingBrackets","formatOnType","suggestOnTriggerCharacters","acceptSuggestionOnEnter","snippetSuggestions","tabCompletion","selectionHighlight","codeLens","referenceInfos","folding","renderWhitespace","renderControlCharacters","renderIndentGuides","useTabStops","fontFamily","fontSize","lineHeight","DefaultConfig","eventEmitter_1","EventService","AbstractDescriptor","_staticArguments","appendStaticArguments","more","staticArguments","nth","SyncDescriptor","_ctor","moreStaticArguments","allArgs","createSyncDescriptor","AsyncDescriptor","_moduleName","_ctorName","moduleName","ctorName","_createAsyncDescriptor","createAsyncDescriptor0","createAsyncDescriptor1","createAsyncDescriptor2","createAsyncDescriptor3","createAsyncDescriptor4","createAsyncDescriptor5","createAsyncDescriptor6","createAsyncDescriptor7","storeServiceDependency","optional","_util","DI_TARGET","DI_DEPENDENCIES","createDecorator","serviceId","serviceIdentifier","getServiceDependencies","IInstantiationService","instantiation_1","findMember","proto","CompatWorkerAttr","methodName","param","compatWorkerService","CompatWorker","ICompatWorkerService","ID_EDITOR_WORKER_SERVICE","IEditorWorkerService","IModeService","IModelService","ResourceEvents","ADDED","REMOVED","CHANGED","IResourceService","resourceService_1","ResourceService","unbinds","addListener2_","_anonymousModelId","url","originalEvents","addedElement","removedElement","getConfigurationValue","settingPath","accessSetting","IConfigurationService","__decorate","decorators","Reflect","decorate","__param","paramIndex","decorator","descriptors_1","configuration_1","modes","suggestSupport_1","editorWorkerService_1","wordHelper","_createModeSupportChangedEvent","ModeWorkerManager","descriptor","workerModuleId","workerClassName","superWorkerModuleId","instantiationService","_descriptor","_workerDescriptor","_superWorkerModuleId","_instantiationService","_workerPiecePromise","worker","_getOrCreateWorker","superWorkerCodePromise","_loadModule","createInstance","AbstractMode","_eventEmitter","_simplifiedMode","SimplifiedMode","supportImpl","CompatMode","registerCompatMode","sourceMode","_sourceMode","_id","_assignSupports","isDigit","_0","_1","_2","_3","_4","_5","_6","_7","_8","_9","_b","_c","_d","_e","_f","_B","_C","_D","_E","_F","FrankensteinMode","cmp","aType","bType","ContextKeyExprType","Defined","Not","Equals","NotEquals","ContextKeyExpr","ContextKeyDefinedExpr","ContextKeyEqualsExpr","notEquals","ContextKeyNotEqualsExpr","not","ContextKeyNotExpr","expr","ContextKeyAndExpr","deserialize","serialized","_deserializeOne","serializedOne","_deserializeValue","serializedValue","evaluate","serialize","_normalizeArr","And","RawContextKey","_defaultValue","bindTo","createKey","getValue","getContextKeyValue","toNegated","isEqualTo","IContextKeyService","SET_CONTEXT_COMMAND_ID","contextkey_1","cursorStyleToString","TextEditorCursorStyle","Line","Block","Underline","WrappingIndent","InternalEditorScrollbarOptions","arrowSize","vertical","handleMouseWheel","horizontalScrollbarSize","horizontalSliderSize","verticalSliderSize","EditorWrappingInfo","isViewportWrapping","InternalEditorViewOptions","canUseTranslate3d","_toSortedIntegerArray","editorClassName","stopRenderingLineAfter","arrSource","el","_numberArraysEqual","createChangeEvent","newOpts","EditorContribOptions","InternalEditorOptions","tabFocusMode","layoutInfo","fontInfo","viewInfo","wrappingInfo","contribInfo","OverviewRulerLane","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TrackedRangeStickiness","CursorChangeReason","VerticalRevealType","OverviewRulerPosition","width","height","right","EditorLayoutInfo","glyphMarginLeft","glyphMarginWidth","glyphMarginHeight","lineNumbersLeft","lineNumbersWidth","lineNumbersHeight","decorationsLeft","decorationsWidth","decorationsHeight","contentLeft","contentWidth","contentHeight","verticalScrollbarWidth","horizontalScrollbarHeight","overviewRuler","MouseTargetType","EditorContextKeys","TextFocus","Focus","ReadOnly","Writable","HasNonEmptySelection","HasOnlyEmptySelection","HasMultipleSelections","HasSingleSelection","TabMovesFocus","TabDoesNotMoveFocus","LanguageId","ModeContextKeys","hasCompletionItemProvider","hasCodeActionsProvider","hasCodeLensProvider","hasDefinitionProvider","hasHoverProvider","hasDocumentHighlightProvider","hasDocumentSymbolProvider","hasReferenceProvider","hasRenameProvider","hasFormattingProvider","hasSignatureHelpProvider","BareFontInfo","FontInfo","typicalHalfwidthCharacterWidth","typicalFullwidthCharacterWidth","spaceWidth","maxDigitWidth","ViewEventNames","ModelFlushedEvent","LinesDeletedEvent","LinesInsertedEvent","LineChangedEvent","TokensChangedEvent","DecorationsChangedEvent","CursorPositionChangedEvent","CursorSelectionChangedEvent","RevealRangeEvent","LineMappingChangedEvent","ScrollRequestEvent","Viewport","left","CodeEditorStateFlag","EditorType","ICodeEditor","IDiffEditor","ClassName","EditorWarningDecoration","EditorErrorDecoration","Disposed","ConfigurationChanged","ModelDispose","ModelChanged","ModelTokensChanged","ModelModeChanged","ModelModeSupportChanged","ModelOptionsChanged","ModelRawContentChanged","ModelContentChanged2","ModelRawContentChangedFlush","ModelRawContentChangedLinesDeleted","ModelRawContentChangedLinesInserted","ModelRawContentChangedLineChanged","EditorTextBlur","EditorTextFocus","EditorFocus","EditorBlur","ModelDecorationsChanged","CursorPositionChanged","CursorSelectionChanged","CursorRevealRange","CursorScrollRequest","ViewFocusGained","ViewFocusLost","ViewFocusChanged","ViewScrollChanged","ViewZonesChanged","ViewLayoutChanged","ContextMenu","MouseDown","MouseUp","MouseMove","MouseLeave","KeyDown","KeyUp","EditorLayout","DiffUpdated","CursorMovePosition","Left","Right","Up","Down","WrappedLineStart","WrappedLineFirstNonWhitespaceCharacter","WrappedLineColumnCenter","WrappedLineEnd","WrappedLineLastNonWhitespaceCharacter","ViewPortTop","ViewPortCenter","ViewPortBottom","CursorMoveByUnit","WrappedLine","Character","HalfLine","isCursorMoveArgs","cursorMoveArg","select","by","EditorScrollDirection","EditorScrollByUnit","Page","HalfPage","isEditorScrollArgs","scrollArg","CommandDescription","CursorMove","EditorScroll","Handler","ExecuteCommand","ExecuteCommands","CursorLeft","CursorLeftSelect","CursorWordLeft","CursorWordStartLeft","CursorWordEndLeft","CursorWordLeftSelect","CursorWordStartLeftSelect","CursorWordEndLeftSelect","CursorRight","CursorRightSelect","CursorWordRight","CursorWordStartRight","CursorWordEndRight","CursorWordRightSelect","CursorWordStartRightSelect","CursorWordEndRightSelect","CursorUp","CursorUpSelect","CursorDown","CursorDownSelect","CursorPageUp","CursorPageUpSelect","CursorPageDown","CursorPageDownSelect","CursorHome","CursorHomeSelect","CursorEnd","CursorEndSelect","ExpandLineSelection","CursorTop","CursorTopSelect","CursorBottom","CursorBottomSelect","CursorColumnSelectLeft","CursorColumnSelectRight","CursorColumnSelectUp","CursorColumnSelectPageUp","CursorColumnSelectDown","CursorColumnSelectPageDown","AddCursorDown","AddCursorUp","CursorUndo","MoveTo","MoveToSelect","ColumnSelect","CreateCursor","LastCursorMoveToSelect","JumpToBracket","Type","ReplacePreviousChar","CompositionStart","CompositionEnd","Paste","Tab","DeleteLeft","DeleteRight","DeleteWordLeft","DeleteWordStartLeft","DeleteWordEndLeft","DeleteWordRight","DeleteWordStartRight","DeleteWordEndRight","DeleteAllLeft","DeleteAllRight","RemoveSecondaryCursors","CancelSelection","Cut","Undo","Redo","WordSelect","WordSelectDrag","LastCursorWordSelect","LineSelect","LineSelectDrag","LastCursorLineSelect","LastCursorLineSelectDrag","LineInsertBefore","LineInsertAfter","LineBreakInsert","SelectAll","ScrollLineUp","ScrollLineDown","ScrollPageUp","ScrollPageDown","TextEditorCursorBlinkingStyle","ColorZone","colorId","OverviewRulerZone","forceHeight","color","darkColor","_color","_darkColor","_colorZones","getColor","useDarkColor","compareTo","setColorZones","colorZones","getColorZones","editorCommon","modelLine_1","indentationGuesser_1","defaultConfig_1","prefixSumComputer_1","indentRanges_1","LIMIT_FIND_COUNT","LONG_LINE_BOUNDARY","TextModel","rawText","_shouldSimplifyMode","MODEL_SYNC_LIMIT","_shouldDenyMode","MODEL_TOKENIZATION_LIMIT","_constructLines","_setVersionId","_isDisposed","_isDisposing","isTooLargeForHavingARichMode","getOptions","updateOptions","somethingChanged","trimAutoWhitespace","newTabSize","_lines","guessedIndentation","_normalizeIndentationFromWhitespace","spacesCnt","tabsCnt","normalizeIndentation","getOneIndent","getVersionId","_versionId","getAlternativeVersionId","_alternativeVersionId","_ensureLineStarts","_lineStarts","lineStartValues","eolLength","_EOL","getOffsetAt","rawPosition","validatePosition","getPositionAt","out","lineLength","_increaseVersionId","newVersionId","_overwriteAlternativeVersionId","newAlternativeVersionId","isDisposed","_BOM","_createContentChangedFlushEvent","changeType","versionId","isUndoing","isRedoing","_emitContentChanged2","rangeLength","eol","_resetValue","toRawText","BOM","EOL","getLinesContent","getValueLength","setValue","defaultEOL","setValueFromRawText","oldFullModelRange","getFullModelRange","oldModelValueLength","getValueLengthInRange","getLineMaxColumn","_emitModelContentChangedFlushEvent","preserveBOM","fullModelRange","fullModelValue","getValueInRange","getEmptiedValueInRange","rawRange","fillCharacter","TextDefined","validateRange","_repeatCharacter","lineEnding","_getEndOfLine","startLineIndex","endLineIndex","resultLines","isDominatedByLongLines","smallLineCharCount","longLineCharCount","_resetIndentRanges","_indentRanges","_getIndentRanges","getIndentRanges","getLineIndentGuide","rng","getEOL","setEOL","newEOL","CRLF","getLineMinColumn","getLineFirstNonWhitespaceColumn","getLineLastNonWhitespaceColumn","validateLineNumber","maxColumn","modifyPosition","lineCount","carriageReturnCnt","lastCarriageReturnIndex","lineFeedCnt","resolvedOpts","rawLines","modelLines","_isMultiline","BACKSLASH_CHAR_CODE","n_CHAR_CODE","r_CHAR_CODE","nextChCode","parseSearchRequest","isMultiline","findMatches","rawSearchScope","limitResultCount","searchRange","_doFindMatchesMultiline","_doFindMatchesLineByLine","searchRegex","prevStartOffset","prevEndOffset","counter","startPosition","endPosition","_findMatchesInLine","findNextMatch","rawSearchStart","searchStart","_doFindNextMatchMultiline","_doFindNextMatchLineByLine","_findFirstMatchInLine","lineIndex","findPreviousMatch","_doFindPreviousMatchMultiline","_doFindPreviousMatchLineByLine","_findLastMatchInLine","bestResult","DEFAULT_CREATION_OPTIONS","RawText","fromString","fromStringWithModelOptions","stopwatch_1","timer","textModel_1","textModelWithTokensHelpers_1","tokenIterator_1","lineToken_1","ModeToModelBinder","modePromise","_modePromise","_externalModePromise","_externalModePromise_c","_externalModePromise_e","setMode","_warmUpTokens","getModePromise","FullModelRetokenizer","retokenizePromise","_retokenizePromise","isFulfilled","onRetokenizerFulfilled","getRange","LineContext","TextModelWithTokens","modeOrPromise","_modeListener","_modeToModelBinder","_tokensInflatorMap","_invalidLineStartIndex","_lastState","_revalidateTokensTimeout","_scheduleRetokenizeNow","_retokenizers","promiseValue","_massageMode","_resetModeListener","_retokenizeNow","_resetTokenizationState","_clearTimers","_shouldAutoTokenize","whenModeIsReady","fulfilled","hasFullModel","isInvalid","minLineNumber","_beginBackgroundTokenization","_createRetokenizer","_resetMode","newMode","emitModelTokensChangedEvent","_onModeSupportChanged","_emitModelModeSupportChangedEvent","_initializeTokenizationState","initialState","friendlyMessage","MODE_TOKENIZATION_FAILED_MSG","inaccurateTokensAcceptable","_updateTokensUntilLine","_getInternalTokens","newModeOrPromise","actualNewMode","e2","oldMode","_emitModelModeChangedEvent","getModeIdAtPosition","_column","validPosition","getStateBeforeLine","getStateAfterLine","modeTransitionIndex","_invalidateLine","_toLineTokens","_toModeTransitions","_updateLineTokens","_revalidateTokensNow","maxLineNumber","toLineNumber","t1","elapsedTime","MAX_ALLOWED_TIME","fromLineNumber","tokenizedChars","currentCharsToTokenize","currentEstimatedTimeToTokenize","linesLength","stopLineTokenizationAfter","endStateIndex","nextInvalidLineIndex","_getWordDefinition","getWordUntilPosition","wordAtPosition","tokenIterator","iter","findMatchingBracketUp","_position","currentModeIndex","currentMode","currentModeBrackets","_findMatchingBracketUp","matchBracket","_matchBracket","currentTokenIndex","prevTokenIndex","prevTokenType","prevTokenStart","prevMode","prevModeBrackets","foundBracket","foundBracketText","_matchFoundBracket","_findMatchingBracketDown","currentModeStart","currentModeId","currentTokenType","hitText","nextModeStart","startTokenIndex","findPrevBracket","_toFoundBracket","findNextBracket","textModelWithTokens_1","createTestMirrorModelFromString","associatedResource","MirrorModel","NO_TAB_SIZE","AbstractMirrorModel","_associatedResource","destroy","getRangeFromOffsetAndLength","getOffsetAndLengthFromRange","getPositionFromOffset","getOffsetFromPosition","getLineStart","getAllWordsWithRange","toTextRange","wordenize","getAllWords","getAllUniqueWords","skipWordOnce","foundSkipWord","uniqueWords","content","wordsRegexp","onEvents","contentChanged","contentChangedEvent","_onLinesFlushed","_onLinesDeleted","_onLinesInserted","_onLineChanged","fromLineIndex","toLineIndex","firstLineState","splitLines","newLengths","IEventService","IExtensionService","ServiceCollection","entries_1","instanceOrDescriptor","_entryCompare","old","_searchEntry","_dummy","assert","graph_1","serviceCollection_1","InstantiationService","services","strict","_services","_strict","createChild","_createAndCacheServiceInstance","invokeFunction","signature","accessor","isOptional","_getOrCreateServiceInstance","_createInstanceAsync","_createInstance","canceledError","_module","staticArgs","serviceDependencies","serviceArgs","dependency","service","firstServiceArgPos","argArray","instance","throwCycleError","graph","dependencies","dependencies_1","instanceOrDesc","roots_1","Assert","RegistryImpl","knows","Registry","BaseRegistry","toBeInstantiated","instances","setInstantiationService","instantiate","_getInstances","_setInstances","Extensions","ModesRegistry","EditorModesRegistry","_onDidAddCompatModes","onDidAddCompatModes","_onDidAddLanguages","onDidAddLanguages","_compatModes","_languages","registerCompatModes","getCompatModes","registerLanguage","registerLanguages","getLanguages","extensions","aliases","mimetypes","modeService_1","mirrorModel_1","modesRegistry_1","CompatWorkerServiceWorker","resourceService","modesRegistryData","isInMainThread","compatModes","languages","compatMode","handleMainRequest","rpcId","_acceptNewModel","_acceptDidDisposeModel","_acceptModelEvents","_acceptCompatModes","_acceptLanguages","_instantiateCompatMode","mirrorModel","LanguagesRegistry","useModesRegistry","_onDidAddModes","onDidAddModes","knownModeIds","mime2LanguageId","name2LanguageId","id2Name","id2Extensions","lowerName2Id","id2ConfigurationFiles","_registerCompatModes","_registerLanguages","defs","addedModes","_registerLanguage","filenames","_setLanguageName","languageName","force","prevName","lang","primaryMime","filenamePatterns","filenamePattern","firstLineRegexStr","firstLineRegex","containsAliases","bestName","mimetypeOrModeId","getRegisteredModes","getRegisteredLanguageNames","getLanguageName","getModeIdForLanguageNameLowercase","languageNameLower","getConfigurationFiles","getMimeForMode","theModeId","_mime","extractModeIds","commaSeparatedMimetypesOrCommaSeparatedIdsOrName","mimeTypeOrIdOrName","getModeIdsFromLanguageName","getModeIdsFromFilenameOrFirstLine","mimeTypes","getCompatMode","getExtensions","normalizeId","JSONContribution","JSONContributionRegistry","schemasById","addRegistryChangedListener","registerSchema","unresolvedSchemaContent","getSchemaContributions","schemas","jsonContributionRegistry","severity_1","jsonContributionRegistry_1","isValidExtensionDescription","extensionFolderPath","extensionDescription","notices","publisher","version","engines","vscode","extensionDependencies","_isStringArray","activationEvents","main","normalizedAbsolutePath","ExtensionMessageCollector","messageHandler","_messageHandler","_msg","schemaRegistry","ExtensionPoint","_handler","setHandler","_handle","registerPointListener","descriptions","users","contributes","collector","schemaId","schema","default","author","displayName","categories","items","enum","galleryBanner","defaultSnippets","body","scripts","vscode:prepublish","ExtensionsRegistryImpl","_extensionsMap","_extensionsArr","_activationMap","_pointListeners","_extensionPoints","_oneTimeActivationEventListeners","point","extensionPoint","_triggerPointListener","_filterWithExtPoint","getAllExtensionDescriptions","registerExtensionPoint","jsonSchema","handleExtensionPoints","extensionPointName","registerExtensions","extensionDescriptions","activationEvent","listenerEntry","getExtensionDescriptionsForActivationEvent","getExtensionDescription","extensionId","registerOneTimeActivationEventListener","triggerActivationEventListeners","PRExtensions","ExtensionsRegistry","extensions_1","extensionsRegistry_1","abstractMode_1","languagesRegistry_1","isUndefinedOrStringArray","isValidLanguageExtensionPoint","languagesExtPoint","ModeServiceImpl","extensionService","_onDidCreateMode","onDidCreateMode","_extensionService","_activationPromises","_instantiatedModes","_config","getConfigurationForMode","configureMode","mimetype","configureModeById","previousOptions","newOptions","configSupport","configure","_configureAllModes","modeIdentifier","isCompatMode","compatModeData","alias","commaSeparatedMimetypesOrCommaSeparatedIds","modeIds","isInstantiated","isPlainText","getModeIdByLanguageName","getModeIdByFilenameOrFirstLine","onReady","_getOrCreateMode","getOrCreateModeByLanguageName","getOrCreateModeByFilenameOrFirstLine","cc","ee","pp","_createMode","activateByEvent","modeDescriptor","_createModeDescriptor","resolvedDeps","compatModeAsyncDescriptor","_registerTokenizationSupport","registerModeSupport","registerTokenizationSupport","registerTokenizationSupport2","support","TokenizationSupport2Adapter","TokenizationState2Adapter","_stateData","offsetDelta","actualResult","tokens_1","scopes","MainThreadModeServiceImpl","allValidLanguages","ext","onDidUpdateConfiguration","onConfigurationChange","_onReadyPromise","configuration_2","files","ActivatedExtension","activationFailed","AbstractExtensionService","isReadyByDefault","_onReady","_onReadyC","_activatingExtensions","_activatedExtensions","_triggerOnReady","getExtensionsStatus","isActivated","activateExtensions","_activateExtensions","activateById","_handleActivateRequest","currentExtension","greenExtensions","redExtensions","depIds","currentExtensionGetsGreenLight","depId","depDesc","_showMessage","_createFailedExtension","recursionLevel","greenMap","red","green","_activateExtension","_actualActivateExtension","timer_1","combinedAppender","appenders","anonymize","ITelemetryService","NullTelemetryService","_serviceBrand","timedPublicLog","publicLog","eventName","isOptedIn","getTelemetryInfo","instanceId","sessionId","machineId","NullAppender","IWorkspaceContextService","eventService_1","abstractExtensionService_1","instantiationService_1","modeServiceImpl_1","resourceServiceImpl_1","compatWorkerServiceWorker_1","compatWorkerService_1","WorkerExtensionService","EditorWorkerServer","initialize","mainThread","initData","request"],"mappings":"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","file":"vs/base/common/worker/workerServer.js","sourcesContent":["}).call(this);","/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.5.3(36e67863cf6a6f202f5a80acff4146a695c48357)\n * Released under the MIT license\n * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt\n *-----------------------------------------------------------*/\n\n(function() {\nvar __m = [\"exports\",\"require\",\"vs/base/common/errors\",\"vs/platform/instantiation/common/instantiation\",\"vs/base/common/strings\",\"vs/base/common/winjs.base\",\"vs/base/common/types\",\"vs/base/common/platform\",\"vs/nls\",\"vs/base/common/event\",\"vs/nls!vs/base/common/worker/workerServer\",\"vs/editor/common/modes/supports\",\"vs/base/common/lifecycle\",\"vs/base/common/paths\",\"vs/base/common/eventEmitter\",\"vs/platform/platform\",\"vs/editor/common/editorCommon\",\"vs/editor/common/model/wordHelper\",\"vs/editor/common/modes\",\"vs/editor/common/core/modeTransition\",\"vs/editor/common/core/position\",\"vs/editor/common/core/arrays\",\"vs/editor/common/services/resourceService\",\"vs/editor/common/modes/supports/richEditBrackets\",\"vs/editor/common/modes/monarch/monarchCommon\",\"vs/platform/instantiation/common/descriptors\",\"vs/base/common/severity\",\"vs/editor/common/core/range\",\"vs/editor/common/services/modeService\",\"vs/base/common/objects\",\"vs/editor/common/modes/modesRegistry\",\"vs/base/common/map\",\"vs/base/common/assert\",\"vs/base/common/async\",\"vs/editor/common/modes/languageConfigurationRegistry\",\"vs/editor/common/modes/abstractState\",\"vs/editor/common/modes/nullMode\",\"vs/base/common/glob\",\"vs/base/common/collections\",\"vs/platform/extensions/common/extensionsRegistry\",\"vs/editor/common/services/compatWorkerService\",\"vs/editor/common/modes/supports/tokenizationSupport\",\"vs/base/common/stopwatch\",\"vs/editor/common/core/viewLineToken\",\"vs/platform/extensions/common/extensions\",\"vs/editor/common/model/textModel\",\"vs/base/common/mime\",\"vs/editor/common/modes/abstractMode\",\"vs/base/common/callbackList\",\"vs/base/common/arrays\",\"vs/base/common/cancellation\",\"vs/base/common/uri\",\"vs/base/common/timer\",\"vs/platform/configuration/common/configuration\",\"vs/editor/common/modes/supports/suggestSupport\",\"vs/editor/common/modes/lineStream\",\"vs/platform/jsonschemas/common/jsonContributionRegistry\",\"vs/editor/common/model/tokensBinaryEncoding\",\"vs/editor/common/model/modelLine\",\"vs/platform/instantiation/common/serviceCollection\",\"vs/editor/common/modes/languageSelector\",\"vs/editor/common/modes/languageFeatureRegistry\",\"vs/editor/common/languages.common\",\"vs/editor/common/model/textModelWithTokensHelpers\",\"vs/platform/workspace/common/workspace\",\"vs/nls!vs/base/common/severity\",\"vs/nls!vs/base/common/errors\",\"vs/nls!vs/editor/common/config/defaultConfig\",\"vs/editor/common/config/defaultConfig\",\"vs/nls!vs/editor/common/model/textModelWithTokens\",\"vs/nls!vs/editor/common/modes/modesRegistry\",\"vs/nls!vs/editor/common/services/modeServiceImpl\",\"vs/nls!vs/platform/extensions/common/abstractExtensionService\",\"vs/nls!vs/platform/extensions/common/extensionsRegistry\",\"vs/platform/event/common/eventService\",\"vs/editor/common/viewModel/prefixSumComputer\",\"vs/editor/common/modes/monarch/monarchLexer\",\"vs/editor/common/modes/supports/electricCharacter\",\"vs/editor/common/services/editorWorkerService\",\"vs/editor/common/modes/supports/characterPair\",\"vs/editor/common/services/modelService\",\"vs/editor/common/modes/monarch/monarchCompile\",\"vs/editor/common/services/resourceServiceImpl\",\"vs/editor/common/modes/supports/onEnter\",\"vs/editor/common/model/tokenIterator\",\"vs/platform/contextkey/common/contextkey\",\"vs/editor/common/model/lineToken\",\"vs/editor/common/model/indentationGuesser\",\"vs/editor/common/model/textModelWithTokens\",\"vs/editor/common/model/mirrorModel\",\"vs/platform/event/common/event\",\"vs/editor/common/model/indentRanges\",\"vs/base/common/worker/workerProtocol\",\"vs/platform/instantiation/common/instantiationService\",\"vs/base/common/marshalling\",\"vs/base/common/graph\",\"vs/editor/common/services/compatWorkerServiceWorker\",\"vs/editor/common/services/languagesRegistry\",\"vs/base/common/filters\",\"vs/base/common/events\",\"vs/editor/common/services/modeServiceImpl\",\"vs/platform/extensions/common/abstractExtensionService\",\"vs/platform/telemetry/common/telemetry\",\"vs/base/common/winjs.base.raw\",\"vs/base/common/worker/workerServer\",\"vs/editor/common/worker/editorWorkerServer\"];\nvar __M = function(deps) {\n  var result = [];\n  for (var i = 0, len = deps.length; i < len; i++) {\n    result[i] = __m[deps[i]];\n  }\n  return result;\n};\ndefine(__m[49], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /**\n     * Returns the last element of an array.\n     * @param array The array.\n     * @param n Which element from the end (default ist zero).\n     */\n    function tail(array, n) {\n        if (n === void 0) { n = 0; }\n        return array[array.length - (1 + n)];\n    }\n    exports.tail = tail;\n    /**\n     * Iterates the provided array and allows to remove\n     * elements while iterating.\n     */\n    function forEach(array, callback) {\n        for (var i = 0, len = array.length; i < len; i++) {\n            callback(array[i], function () {\n                array.splice(i, 1);\n                i--;\n                len--;\n            });\n        }\n    }\n    exports.forEach = forEach;\n    function equals(one, other, itemEquals) {\n        if (itemEquals === void 0) { itemEquals = function (a, b) { return a === b; }; }\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (var i = 0, len = one.length; i < len; i++) {\n            if (!itemEquals(one[i], other[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    exports.equals = equals;\n    function binarySearch(array, key, comparator) {\n        var low = 0, high = array.length - 1;\n        while (low <= high) {\n            var mid = ((low + high) / 2) | 0;\n            var comp = comparator(array[mid], key);\n            if (comp < 0) {\n                low = mid + 1;\n            }\n            else if (comp > 0) {\n                high = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -(low + 1);\n    }\n    exports.binarySearch = binarySearch;\n    /**\n     * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n     * are located before all elements where p(x) is true.\n     * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n     */\n    function findFirst(array, p) {\n        var low = 0, high = array.length;\n        if (high === 0) {\n            return 0; // no children\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (p(array[mid])) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    exports.findFirst = findFirst;\n    /**\n     * Returns the top N elements from the array.\n     *\n     * Faster than sorting the entire array when the array is a lot larger than N.\n     *\n     * @param array The unsorted array.\n     * @param compare A sort function for the elements.\n     * @param n The number of elements to return.\n     * @return The first n elemnts from array when sorted with compare.\n     */\n    function top(array, compare, n) {\n        var result = array.slice(0, n).sort(compare);\n        var _loop_1 = function(i, m) {\n            var element = array[i];\n            if (compare(element, result[n - 1]) < 0) {\n                result.pop();\n                var j = findFirst(result, function (e) { return compare(element, e) < 0; });\n                result.splice(j, 0, element);\n            }\n        };\n        for (var i = n, m = array.length; i < m; i++) {\n            _loop_1(i, m);\n        }\n        return result;\n    }\n    exports.top = top;\n    function merge(arrays, hashFn) {\n        var result = new Array();\n        if (!hashFn) {\n            for (var i = 0, len = arrays.length; i < len; i++) {\n                result.push.apply(result, arrays[i]);\n            }\n        }\n        else {\n            var map = {};\n            for (var i = 0; i < arrays.length; i++) {\n                for (var j = 0; j < arrays[i].length; j++) {\n                    var element = arrays[i][j], hash = hashFn(element);\n                    if (!map.hasOwnProperty(hash)) {\n                        map[hash] = true;\n                        result.push(element);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    exports.merge = merge;\n    /**\n     * @returns a new array with all undefined or null values removed. The original array is not modified at all.\n     */\n    function coalesce(array) {\n        if (!array) {\n            return array;\n        }\n        return array.filter(function (e) { return !!e; });\n    }\n    exports.coalesce = coalesce;\n    /**\n     * @returns true if the given item is contained in the array.\n     */\n    function contains(array, item) {\n        return array.indexOf(item) >= 0;\n    }\n    exports.contains = contains;\n    /**\n     * Swaps the elements in the array for the provided positions.\n     */\n    function swap(array, pos1, pos2) {\n        var element1 = array[pos1];\n        var element2 = array[pos2];\n        array[pos1] = element2;\n        array[pos2] = element1;\n    }\n    exports.swap = swap;\n    /**\n     * Moves the element in the array for the provided positions.\n     */\n    function move(array, from, to) {\n        array.splice(to, 0, array.splice(from, 1)[0]);\n    }\n    exports.move = move;\n    /**\n     * @returns {{false}} if the provided object is an array\n     * \tand not empty.\n     */\n    function isFalsyOrEmpty(obj) {\n        return !Array.isArray(obj) || obj.length === 0;\n    }\n    exports.isFalsyOrEmpty = isFalsyOrEmpty;\n    /**\n     * Removes duplicates from the given array. The optional keyFn allows to specify\n     * how elements are checked for equalness by returning a unique string for each.\n     */\n    function distinct(array, keyFn) {\n        if (!keyFn) {\n            return array.filter(function (element, position) {\n                return array.indexOf(element) === position;\n            });\n        }\n        var seen = Object.create(null);\n        return array.filter(function (elem) {\n            var key = keyFn(elem);\n            if (seen[key]) {\n                return false;\n            }\n            seen[key] = true;\n            return true;\n        });\n    }\n    exports.distinct = distinct;\n    function uniqueFilter(keyFn) {\n        var seen = Object.create(null);\n        return function (element) {\n            var key = keyFn(element);\n            if (seen[key]) {\n                return false;\n            }\n            seen[key] = true;\n            return true;\n        };\n    }\n    exports.uniqueFilter = uniqueFilter;\n    function firstIndex(array, fn) {\n        for (var i = 0; i < array.length; i++) {\n            var element = array[i];\n            if (fn(element)) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    exports.firstIndex = firstIndex;\n    function first(array, fn, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = null; }\n        var index = firstIndex(array, fn);\n        return index < 0 ? notFoundValue : array[index];\n    }\n    exports.first = first;\n    function commonPrefixLength(one, other, equals) {\n        if (equals === void 0) { equals = function (a, b) { return a === b; }; }\n        var result = 0;\n        for (var i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n            result++;\n        }\n        return result;\n    }\n    exports.commonPrefixLength = commonPrefixLength;\n    function flatten(arr) {\n        return arr.reduce(function (r, v) { return r.concat(v); }, []);\n    }\n    exports.flatten = flatten;\n    function range(to, from) {\n        if (from === void 0) { from = 0; }\n        var result = [];\n        for (var i = from; i < to; i++) {\n            result.push(i);\n        }\n        return result;\n    }\n    exports.range = range;\n    function fill(num, valueFn, arr) {\n        if (arr === void 0) { arr = []; }\n        for (var i = 0; i < num; i++) {\n            arr[i] = valueFn();\n        }\n        return arr;\n    }\n    exports.fill = fill;\n    function index(array, indexer, merger) {\n        if (merger === void 0) { merger = function (t) { return t; }; }\n        return array.reduce(function (r, t) {\n            var key = indexer(t);\n            r[key] = merger(t, r[key]);\n            return r;\n        }, Object.create(null));\n    }\n    exports.index = index;\n});\n\ndefine(__m[32], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /**\n     * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n     */\n    function ok(value, message) {\n        if (!value || value === null) {\n            throw new Error(message ? 'Assertion failed (' + message + ')' : 'Assertion Failed');\n        }\n    }\n    exports.ok = ok;\n});\n\ndefine(__m[38], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    function createStringDictionary() {\n        return Object.create(null);\n    }\n    exports.createStringDictionary = createStringDictionary;\n    function createNumberDictionary() {\n        return Object.create(null);\n    }\n    exports.createNumberDictionary = createNumberDictionary;\n    function lookup(from, what, alternate) {\n        if (alternate === void 0) { alternate = null; }\n        var key = String(what);\n        if (contains(from, key)) {\n            return from[key];\n        }\n        return alternate;\n    }\n    exports.lookup = lookup;\n    function lookupOrInsert(from, stringOrNumber, alternate) {\n        var key = String(stringOrNumber);\n        if (contains(from, key)) {\n            return from[key];\n        }\n        else {\n            if (typeof alternate === 'function') {\n                alternate = alternate();\n            }\n            from[key] = alternate;\n            return alternate;\n        }\n    }\n    exports.lookupOrInsert = lookupOrInsert;\n    function insert(into, data, hashFn) {\n        into[hashFn(data)] = data;\n    }\n    exports.insert = insert;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    function contains(from, what) {\n        return hasOwnProperty.call(from, what);\n    }\n    exports.contains = contains;\n    function values(from) {\n        var result = [];\n        for (var key in from) {\n            if (hasOwnProperty.call(from, key)) {\n                result.push(from[key]);\n            }\n        }\n        return result;\n    }\n    exports.values = values;\n    function forEach(from, callback) {\n        for (var key in from) {\n            if (hasOwnProperty.call(from, key)) {\n                var result = callback({ key: key, value: from[key] }, function () {\n                    delete from[key];\n                });\n                if (result === false) {\n                    return;\n                }\n            }\n        }\n    }\n    exports.forEach = forEach;\n    function remove(from, key) {\n        if (!hasOwnProperty.call(from, key)) {\n            return false;\n        }\n        delete from[key];\n        return true;\n    }\n    exports.remove = remove;\n    /**\n     * Groups the collection into a dictionary based on the provided\n     * group function.\n     */\n    function groupBy(data, groupFn) {\n        var result = createStringDictionary();\n        data.forEach(function (element) { return lookupOrInsert(result, groupFn(element), []).push(element); });\n        return result;\n    }\n    exports.groupBy = groupBy;\n});\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\ndefine(__m[99], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var Event = (function () {\n        function Event(originalEvent) {\n            this.time = (new Date()).getTime();\n            this.originalEvent = originalEvent;\n            this.source = null;\n        }\n        return Event;\n    }());\n    exports.Event = Event;\n    var PropertyChangeEvent = (function (_super) {\n        __extends(PropertyChangeEvent, _super);\n        function PropertyChangeEvent(key, oldValue, newValue, originalEvent) {\n            _super.call(this, originalEvent);\n            this.key = key;\n            this.oldValue = oldValue;\n            this.newValue = newValue;\n        }\n        return PropertyChangeEvent;\n    }(Event));\n    exports.PropertyChangeEvent = PropertyChangeEvent;\n    var ViewerEvent = (function (_super) {\n        __extends(ViewerEvent, _super);\n        function ViewerEvent(element, originalEvent) {\n            _super.call(this, originalEvent);\n            this.element = element;\n        }\n        return ViewerEvent;\n    }(Event));\n    exports.ViewerEvent = ViewerEvent;\n    exports.EventType = {\n        PROPERTY_CHANGED: 'propertyChanged',\n        SELECTION: 'selection',\n        FOCUS: 'focus',\n        BLUR: 'blur',\n        HIGHLIGHT: 'highlight',\n        EXPAND: 'expand',\n        COLLAPSE: 'collapse',\n        TOGGLE: 'toggle',\n        BEFORE_RUN: 'beforeRun',\n        RUN: 'run',\n        EDIT: 'edit',\n        SAVE: 'save',\n        CANCEL: 'cancel',\n        CHANGE: 'change',\n        DISPOSE: 'dispose',\n    };\n});\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\ndefine(__m[31], __M([1,0]), function (require, exports) {\n    'use strict';\n    /**\n     * A simple map to store value by a key object. Key can be any object that has toString() function to get\n     * string value of the key.\n     */\n    var LinkedMap = (function () {\n        function LinkedMap() {\n            this.map = Object.create(null);\n            this._size = 0;\n        }\n        Object.defineProperty(LinkedMap.prototype, \"size\", {\n            get: function () {\n                return this._size;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        LinkedMap.prototype.get = function (k) {\n            var value = this.peek(k);\n            return value ? value : null;\n        };\n        LinkedMap.prototype.getOrSet = function (k, t) {\n            var res = this.get(k);\n            if (res) {\n                return res;\n            }\n            this.set(k, t);\n            return t;\n        };\n        LinkedMap.prototype.keys = function () {\n            var keys = [];\n            for (var key in this.map) {\n                keys.push(this.map[key].key);\n            }\n            return keys;\n        };\n        LinkedMap.prototype.values = function () {\n            var values = [];\n            for (var key in this.map) {\n                values.push(this.map[key].value);\n            }\n            return values;\n        };\n        LinkedMap.prototype.entries = function () {\n            var entries = [];\n            for (var key in this.map) {\n                entries.push(this.map[key]);\n            }\n            return entries;\n        };\n        LinkedMap.prototype.set = function (k, t) {\n            if (this.get(k)) {\n                return false; // already present!\n            }\n            this.push(k, t);\n            return true;\n        };\n        LinkedMap.prototype.delete = function (k) {\n            var value = this.get(k);\n            if (value) {\n                this.pop(k);\n                return value;\n            }\n            return null;\n        };\n        LinkedMap.prototype.has = function (k) {\n            return !!this.get(k);\n        };\n        LinkedMap.prototype.clear = function () {\n            this.map = Object.create(null);\n            this._size = 0;\n        };\n        LinkedMap.prototype.push = function (key, value) {\n            var entry = { key: key, value: value };\n            this.map[key.toString()] = entry;\n            this._size++;\n        };\n        LinkedMap.prototype.pop = function (k) {\n            delete this.map[k.toString()];\n            this._size--;\n        };\n        LinkedMap.prototype.peek = function (k) {\n            var entry = this.map[k.toString()];\n            return entry ? entry.value : null;\n        };\n        return LinkedMap;\n    }());\n    exports.LinkedMap = LinkedMap;\n    /**\n     * A simple Map<T> that optionally allows to set a limit of entries to store. Once the limit is hit,\n     * the cache will remove the entry that was last recently added. Or, if a ratio is provided below 1,\n     * all elements will be removed until the ratio is full filled (e.g. 0.75 to remove 25% of old elements).\n     */\n    var BoundedLinkedMap = (function () {\n        function BoundedLinkedMap(limit, ratio) {\n            if (limit === void 0) { limit = Number.MAX_VALUE; }\n            if (ratio === void 0) { ratio = 1; }\n            this.limit = limit;\n            this.map = Object.create(null);\n            this._size = 0;\n            this.ratio = limit * ratio;\n        }\n        Object.defineProperty(BoundedLinkedMap.prototype, \"size\", {\n            get: function () {\n                return this._size;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        BoundedLinkedMap.prototype.set = function (key, value) {\n            if (this.map[key]) {\n                return false; // already present!\n            }\n            var entry = { key: key, value: value };\n            this.push(entry);\n            if (this._size > this.limit) {\n                this.trim();\n            }\n            return true;\n        };\n        BoundedLinkedMap.prototype.get = function (key) {\n            var entry = this.map[key];\n            return entry ? entry.value : null;\n        };\n        BoundedLinkedMap.prototype.getOrSet = function (k, t) {\n            var res = this.get(k);\n            if (res) {\n                return res;\n            }\n            this.set(k, t);\n            return t;\n        };\n        BoundedLinkedMap.prototype.delete = function (key) {\n            var entry = this.map[key];\n            if (entry) {\n                this.map[key] = void 0;\n                this._size--;\n                if (entry.next) {\n                    entry.next.prev = entry.prev; // [A]<-[x]<-[C] = [A]<-[C]\n                }\n                else {\n                    this.head = entry.prev; // [A]-[x] = [A]\n                }\n                if (entry.prev) {\n                    entry.prev.next = entry.next; // [A]->[x]->[C] = [A]->[C]\n                }\n                else {\n                    this.tail = entry.next; // [x]-[A] = [A]\n                }\n                return entry.value;\n            }\n            return null;\n        };\n        BoundedLinkedMap.prototype.has = function (key) {\n            return !!this.map[key];\n        };\n        BoundedLinkedMap.prototype.clear = function () {\n            this.map = Object.create(null);\n            this._size = 0;\n            this.head = null;\n            this.tail = null;\n        };\n        BoundedLinkedMap.prototype.push = function (entry) {\n            if (this.head) {\n                // [A]-[B] = [A]-[B]->[X]\n                entry.prev = this.head;\n                this.head.next = entry;\n            }\n            if (!this.tail) {\n                this.tail = entry;\n            }\n            this.head = entry;\n            this.map[entry.key] = entry;\n            this._size++;\n        };\n        BoundedLinkedMap.prototype.trim = function () {\n            if (this.tail) {\n                // Remove all elements until ratio is reached\n                if (this.ratio < this.limit) {\n                    var index = 0;\n                    var current = this.tail;\n                    while (current.next) {\n                        // Remove the entry\n                        this.map[current.key] = void 0;\n                        this._size--;\n                        // if we reached the element that overflows our ratio condition\n                        // make its next element the new tail of the Map and adjust the size\n                        if (index === this.ratio) {\n                            this.tail = current.next;\n                            this.tail.prev = null;\n                            break;\n                        }\n                        // Move on\n                        current = current.next;\n                        index++;\n                    }\n                }\n                else {\n                    this.map[this.tail.key] = void 0;\n                    this._size--;\n                    // [x]-[B] = [B]\n                    this.tail = this.tail.next;\n                    this.tail.prev = null;\n                }\n            }\n        };\n        return BoundedLinkedMap;\n    }());\n    exports.BoundedLinkedMap = BoundedLinkedMap;\n    /**\n     * A subclass of Map<T> that makes an entry the MRU entry as soon\n     * as it is being accessed. In combination with the limit for the\n     * maximum number of elements in the cache, it helps to remove those\n     * entries from the cache that are LRU.\n     */\n    var LRUCache = (function (_super) {\n        __extends(LRUCache, _super);\n        function LRUCache(limit) {\n            _super.call(this, limit);\n        }\n        LRUCache.prototype.get = function (key) {\n            // Upon access of an entry, make it the head of\n            // the linked map so that it is the MRU element\n            var entry = this.map[key];\n            if (entry) {\n                this.delete(key);\n                this.push(entry);\n                return entry.value;\n            }\n            return null;\n        };\n        return LRUCache;\n    }(BoundedLinkedMap));\n    exports.LRUCache = LRUCache;\n});\n\ndefine(__m[7], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    // --- THIS FILE IS TEMPORARY UNTIL ENV.TS IS CLEANED UP. IT CAN SAFELY BE USED IN ALL TARGET EXECUTION ENVIRONMENTS (node & dom) ---\n    var _isWindows = false;\n    var _isMacintosh = false;\n    var _isLinux = false;\n    var _isRootUser = false;\n    var _isNative = false;\n    var _isWeb = false;\n    var _isQunit = false;\n    var _locale = undefined;\n    var _language = undefined;\n    exports.LANGUAGE_DEFAULT = 'en';\n    // OS detection\n    if (typeof process === 'object') {\n        _isWindows = (process.platform === 'win32');\n        _isMacintosh = (process.platform === 'darwin');\n        _isLinux = (process.platform === 'linux');\n        _isRootUser = !_isWindows && (process.getuid() === 0);\n        var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n        if (rawNlsConfig) {\n            try {\n                var nlsConfig = JSON.parse(rawNlsConfig);\n                var resolved = nlsConfig.availableLanguages['*'];\n                _locale = nlsConfig.locale;\n                // VSCode's default language is 'en'\n                _language = resolved ? resolved : exports.LANGUAGE_DEFAULT;\n            }\n            catch (e) {\n            }\n        }\n        _isNative = true;\n    }\n    else if (typeof navigator === 'object') {\n        var userAgent = navigator.userAgent;\n        _isWindows = userAgent.indexOf('Windows') >= 0;\n        _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n        _isLinux = userAgent.indexOf('Linux') >= 0;\n        _isWeb = true;\n        _locale = navigator.language;\n        _language = _locale;\n        _isQunit = !!self.QUnit;\n    }\n    (function (Platform) {\n        Platform[Platform[\"Web\"] = 0] = \"Web\";\n        Platform[Platform[\"Mac\"] = 1] = \"Mac\";\n        Platform[Platform[\"Linux\"] = 2] = \"Linux\";\n        Platform[Platform[\"Windows\"] = 3] = \"Windows\";\n    })(exports.Platform || (exports.Platform = {}));\n    var Platform = exports.Platform;\n    exports._platform = Platform.Web;\n    if (_isNative) {\n        if (_isMacintosh) {\n            exports._platform = Platform.Mac;\n        }\n        else if (_isWindows) {\n            exports._platform = Platform.Windows;\n        }\n        else if (_isLinux) {\n            exports._platform = Platform.Linux;\n        }\n    }\n    exports.isWindows = _isWindows;\n    exports.isMacintosh = _isMacintosh;\n    exports.isLinux = _isLinux;\n    exports.isRootUser = _isRootUser;\n    exports.isNative = _isNative;\n    exports.isWeb = _isWeb;\n    exports.isQunit = _isQunit;\n    exports.platform = exports._platform;\n    /**\n     * The language used for the user interface. The format of\n     * the string is all lower case (e.g. zh-tw for Traditional\n     * Chinese)\n     */\n    exports.language = _language;\n    /**\n     * The OS locale or the locale specified by --locale. The format of\n     * the string is all lower case (e.g. zh-tw for Traditional\n     * Chinese). The UI is not necessarily shown in the provided locale.\n     */\n    exports.locale = _locale;\n    var _globals = (typeof self === 'object' ? self : global);\n    exports.globals = _globals;\n    function hasWebWorkerSupport() {\n        return typeof _globals.Worker !== 'undefined';\n    }\n    exports.hasWebWorkerSupport = hasWebWorkerSupport;\n    exports.setTimeout = _globals.setTimeout.bind(_globals);\n    exports.clearTimeout = _globals.clearTimeout.bind(_globals);\n    exports.setInterval = _globals.setInterval.bind(_globals);\n    exports.clearInterval = _globals.clearInterval.bind(_globals);\n});\n\ndefine(__m[13], __M([1,0,7]), function (require, exports, platform_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /**\n     * The forward slash path separator.\n     */\n    exports.sep = '/';\n    /**\n     * The native path separator depending on the OS.\n     */\n    exports.nativeSep = platform_1.isWindows ? '\\\\' : '/';\n    function relative(from, to) {\n        from = normalize(from);\n        to = normalize(to);\n        var fromParts = from.split(exports.sep), toParts = to.split(exports.sep);\n        while (fromParts.length > 0 && toParts.length > 0) {\n            if (fromParts[0] === toParts[0]) {\n                fromParts.shift();\n                toParts.shift();\n            }\n            else {\n                break;\n            }\n        }\n        for (var i = 0, len = fromParts.length; i < len; i++) {\n            toParts.unshift('..');\n        }\n        return toParts.join(exports.sep);\n    }\n    exports.relative = relative;\n    /**\n     * @returns the directory name of a path.\n     */\n    function dirname(path) {\n        var idx = ~path.lastIndexOf('/') || ~path.lastIndexOf('\\\\');\n        if (idx === 0) {\n            return '.';\n        }\n        else if (~idx === 0) {\n            return path[0];\n        }\n        else {\n            return path.substring(0, ~idx);\n        }\n    }\n    exports.dirname = dirname;\n    /**\n     * @returns the base name of a path.\n     */\n    function basename(path) {\n        var idx = ~path.lastIndexOf('/') || ~path.lastIndexOf('\\\\');\n        if (idx === 0) {\n            return path;\n        }\n        else if (~idx === path.length - 1) {\n            return basename(path.substring(0, path.length - 1));\n        }\n        else {\n            return path.substr(~idx + 1);\n        }\n    }\n    exports.basename = basename;\n    /**\n     * @returns {{.far}} from boo.far or the empty string.\n     */\n    function extname(path) {\n        path = basename(path);\n        var idx = ~path.lastIndexOf('.');\n        return idx ? path.substring(~idx) : '';\n    }\n    exports.extname = extname;\n    var _posixBadPath = /(\\/\\.\\.?\\/)|(\\/\\.\\.?)$|^(\\.\\.?\\/)|(\\/\\/+)|(\\\\)/;\n    var _winBadPath = /(\\\\\\.\\.?\\\\)|(\\\\\\.\\.?)$|^(\\.\\.?\\\\)|(\\\\\\\\+)|(\\/)/;\n    function _isNormal(path, win) {\n        return win\n            ? !_winBadPath.test(path)\n            : !_posixBadPath.test(path);\n    }\n    function normalize(path, toOSPath) {\n        if (path === null || path === void 0) {\n            return path;\n        }\n        var len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        var wantsBackslash = platform_1.isWindows && toOSPath;\n        if (_isNormal(path, wantsBackslash)) {\n            return path;\n        }\n        var sep = wantsBackslash ? '\\\\' : '/';\n        var root = getRoot(path, sep);\n        // skip the root-portion of the path\n        var start = root.length;\n        var skip = false;\n        var res = '';\n        for (var end = root.length; end <= len; end++) {\n            // either at the end or at a path-separator character\n            if (end === len || path.charCodeAt(end) === _slash || path.charCodeAt(end) === _backslash) {\n                if (streql(path, start, end, '..')) {\n                    // skip current and remove parent (if there is already something)\n                    var prev_start = res.lastIndexOf(sep);\n                    var prev_part = res.slice(prev_start + 1);\n                    if ((root || prev_part.length > 0) && prev_part !== '..') {\n                        res = prev_start === -1 ? '' : res.slice(0, prev_start);\n                        skip = true;\n                    }\n                }\n                else if (streql(path, start, end, '.') && (root || res || end < len - 1)) {\n                    // skip current (if there is already something or if there is more to come)\n                    skip = true;\n                }\n                if (!skip) {\n                    var part = path.slice(start, end);\n                    if (res !== '' && res[res.length - 1] !== sep) {\n                        res += sep;\n                    }\n                    res += part;\n                }\n                start = end + 1;\n                skip = false;\n            }\n        }\n        return root + res;\n    }\n    exports.normalize = normalize;\n    function streql(value, start, end, other) {\n        return start + other.length === end && value.indexOf(other, start) === start;\n    }\n    /**\n     * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n     * `getRoot('files:///files/path') === files:///`,\n     * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n     */\n    function getRoot(path, sep) {\n        if (sep === void 0) { sep = '/'; }\n        if (!path) {\n            return '';\n        }\n        var len = path.length;\n        var code = path.charCodeAt(0);\n        if (code === _slash || code === _backslash) {\n            code = path.charCodeAt(1);\n            if (code === _slash || code === _backslash) {\n                // UNC candidate \\\\localhost\\shares\\ddd\n                //               ^^^^^^^^^^^^^^^^^^^\n                code = path.charCodeAt(2);\n                if (code !== _slash && code !== _backslash) {\n                    var pos_1 = 3;\n                    var start = pos_1;\n                    for (; pos_1 < len; pos_1++) {\n                        code = path.charCodeAt(pos_1);\n                        if (code === _slash || code === _backslash) {\n                            break;\n                        }\n                    }\n                    code = path.charCodeAt(pos_1 + 1);\n                    if (start !== pos_1 && code !== _slash && code !== _backslash) {\n                        pos_1 += 1;\n                        for (; pos_1 < len; pos_1++) {\n                            code = path.charCodeAt(pos_1);\n                            if (code === _slash || code === _backslash) {\n                                return path.slice(0, pos_1 + 1) // consume this separator\n                                    .replace(/[\\\\/]/g, sep);\n                            }\n                        }\n                    }\n                }\n            }\n            // /user/far\n            // ^\n            return sep;\n        }\n        else if ((code >= _A && code <= _Z) || (code >= _a && code <= _z)) {\n            // check for windows drive letter c:\\ or c:\n            if (path.charCodeAt(1) === _colon) {\n                code = path.charCodeAt(2);\n                if (code === _slash || code === _backslash) {\n                    // C:\\fff\n                    // ^^^\n                    return path.slice(0, 2) + sep;\n                }\n                else {\n                    // C:\n                    // ^^\n                    return path.slice(0, 2);\n                }\n            }\n        }\n        // check for URI\n        // scheme://authority/path\n        // ^^^^^^^^^^^^^^^^^^^\n        var pos = path.indexOf('://');\n        if (pos !== -1) {\n            pos += 3; // 3 -> \"://\".length\n            for (; pos < len; pos++) {\n                code = path.charCodeAt(pos);\n                if (code === _slash || code === _backslash) {\n                    return path.slice(0, pos + 1); // consume this separator\n                }\n            }\n        }\n        return '';\n    }\n    exports.getRoot = getRoot;\n    exports.join = function () {\n        // Not using a function with var-args because of how TS compiles\n        // them to JS - it would result in 2*n runtime cost instead\n        // of 1*n, where n is parts.length.\n        var value = '';\n        for (var i = 0; i < arguments.length; i++) {\n            var part = arguments[i];\n            if (i > 0) {\n                // add the separater between two parts unless\n                // there already is one\n                var last = value.charCodeAt(value.length - 1);\n                if (last !== _slash && last !== _backslash) {\n                    var next = part.charCodeAt(0);\n                    if (next !== _slash && next !== _backslash) {\n                        value += exports.sep;\n                    }\n                }\n            }\n            value += part;\n        }\n        return normalize(value);\n    };\n    /**\n     * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n     *\n     * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n     * @return A boolean indication if the path is a UNC path, on none-windows\n     * always false.\n     */\n    function isUNC(path) {\n        if (!platform_1.isWindows) {\n            // UNC is a windows concept\n            return false;\n        }\n        if (!path || path.length < 5) {\n            // at least \\\\a\\b\n            return false;\n        }\n        var code = path.charCodeAt(0);\n        if (code !== _backslash) {\n            return false;\n        }\n        code = path.charCodeAt(1);\n        if (code !== _backslash) {\n            return false;\n        }\n        var pos = 2;\n        var start = pos;\n        for (; pos < path.length; pos++) {\n            code = path.charCodeAt(pos);\n            if (code === _backslash) {\n                break;\n            }\n        }\n        if (start === pos) {\n            return false;\n        }\n        code = path.charCodeAt(pos + 1);\n        if (isNaN(code) || code === _backslash) {\n            return false;\n        }\n        return true;\n    }\n    exports.isUNC = isUNC;\n    function isPosixAbsolute(path) {\n        return path && path[0] === '/';\n    }\n    function makePosixAbsolute(path) {\n        return isPosixAbsolute(normalize(path)) ? path : exports.sep + path;\n    }\n    exports.makePosixAbsolute = makePosixAbsolute;\n    var _slash = '/'.charCodeAt(0);\n    var _backslash = '\\\\'.charCodeAt(0);\n    var _colon = ':'.charCodeAt(0);\n    var _a = 'a'.charCodeAt(0);\n    var _A = 'A'.charCodeAt(0);\n    var _z = 'z'.charCodeAt(0);\n    var _Z = 'Z'.charCodeAt(0);\n    function isEqualOrParent(path, candidate) {\n        if (path === candidate) {\n            return true;\n        }\n        path = normalize(path);\n        candidate = normalize(candidate);\n        var candidateLen = candidate.length;\n        var lastCandidateChar = candidate.charCodeAt(candidateLen - 1);\n        if (lastCandidateChar === _slash) {\n            candidate = candidate.substring(0, candidateLen - 1);\n            candidateLen -= 1;\n        }\n        if (path === candidate) {\n            return true;\n        }\n        if (!platform_1.isLinux) {\n            // case insensitive\n            path = path.toLowerCase();\n            candidate = candidate.toLowerCase();\n        }\n        if (path === candidate) {\n            return true;\n        }\n        if (path.indexOf(candidate) !== 0) {\n            return false;\n        }\n        var char = path.charCodeAt(candidateLen);\n        return char === _slash;\n    }\n    exports.isEqualOrParent = isEqualOrParent;\n    // Reference: https://en.wikipedia.org/wiki/Filename\n    var INVALID_FILE_CHARS = platform_1.isWindows ? /[\\\\/:\\*\\?\"<>\\|]/g : /[\\\\/]/g;\n    var WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\n    function isValidBasename(name) {\n        if (!name || name.length === 0 || /^\\s+$/.test(name)) {\n            return false; // require a name that is not just whitespace\n        }\n        INVALID_FILE_CHARS.lastIndex = 0; // the holy grail of software development\n        if (INVALID_FILE_CHARS.test(name)) {\n            return false; // check for certain invalid file characters\n        }\n        if (platform_1.isWindows && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n            return false; // check for certain invalid file names\n        }\n        if (name === '.' || name === '..') {\n            return false; // check for reserved values\n        }\n        if (platform_1.isWindows && name[name.length - 1] === '.') {\n            return false; // Windows: file cannot end with a \".\"\n        }\n        if (platform_1.isWindows && name.length !== name.trim().length) {\n            return false; // Windows: file cannot end with a whitespace\n        }\n        return true;\n    }\n    exports.isValidBasename = isValidBasename;\n    exports.isAbsoluteRegex = /^((\\/|[a-zA-Z]:\\\\)[^\\(\\)<>\\\\'\\\"\\[\\]]+)/;\n    /**\n     * If you have access to node, it is recommended to use node's path.isAbsolute().\n     * This is a simple regex based approach.\n     */\n    function isAbsolute(path) {\n        return exports.isAbsoluteRegex.test(path);\n    }\n    exports.isAbsolute = isAbsolute;\n});\n\ndefine(__m[42], __M([1,0,7]), function (require, exports, platform_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var hasPerformanceNow = (platform_1.globals.performance && typeof platform_1.globals.performance.now === 'function');\n    var StopWatch = (function () {\n        function StopWatch(highResolution) {\n            this._highResolution = hasPerformanceNow && highResolution;\n            this._startTime = this._now();\n            this._stopTime = -1;\n        }\n        StopWatch.create = function (highResolution) {\n            if (highResolution === void 0) { highResolution = true; }\n            return new StopWatch(highResolution);\n        };\n        StopWatch.prototype.stop = function () {\n            this._stopTime = this._now();\n        };\n        StopWatch.prototype.elapsed = function () {\n            if (this._stopTime !== -1) {\n                return this._stopTime - this._startTime;\n            }\n            return this._now() - this._startTime;\n        };\n        StopWatch.prototype._now = function () {\n            return this._highResolution ? platform_1.globals.performance.now() : new Date().getTime();\n        };\n        return StopWatch;\n    }());\n    exports.StopWatch = StopWatch;\n});\n\ndefine(__m[4], __M([1,0,31]), function (require, exports, map_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /**\n     * The empty string.\n     */\n    exports.empty = '';\n    /**\n     * @returns the provided number with the given number of preceding zeros.\n     */\n    function pad(n, l, char) {\n        if (char === void 0) { char = '0'; }\n        var str = '' + n;\n        var r = [str];\n        for (var i = str.length; i < l; i++) {\n            r.push(char);\n        }\n        return r.reverse().join('');\n    }\n    exports.pad = pad;\n    var _formatRegexp = /{(\\d+)}/g;\n    /**\n     * Helper to produce a string with a variable number of arguments. Insert variable segments\n     * into the string using the {n} notation where N is the index of the argument following the string.\n     * @param value string to which formatting is applied\n     * @param args replacements for {n}-entries\n     */\n    function format(value) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (args.length === 0) {\n            return value;\n        }\n        return value.replace(_formatRegexp, function (match, group) {\n            var idx = parseInt(group, 10);\n            return isNaN(idx) || idx < 0 || idx >= args.length ?\n                match :\n                args[idx];\n        });\n    }\n    exports.format = format;\n    /**\n     * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n     * being used e.g. in HTMLElement.innerHTML.\n     */\n    function escape(html) {\n        return html.replace(/[<|>|&]/g, function (match) {\n            switch (match) {\n                case '<': return '&lt;';\n                case '>': return '&gt;';\n                case '&': return '&amp;';\n                default: return match;\n            }\n        });\n    }\n    exports.escape = escape;\n    /**\n     * Escapes regular expression characters in a given string\n     */\n    function escapeRegExpCharacters(value) {\n        return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n    }\n    exports.escapeRegExpCharacters = escapeRegExpCharacters;\n    /**\n     * Removes all occurrences of needle from the beginning and end of haystack.\n     * @param haystack string to trim\n     * @param needle the thing to trim (default is a blank)\n     */\n    function trim(haystack, needle) {\n        if (needle === void 0) { needle = ' '; }\n        var trimmed = ltrim(haystack, needle);\n        return rtrim(trimmed, needle);\n    }\n    exports.trim = trim;\n    /**\n     * Removes all occurrences of needle from the beginning of haystack.\n     * @param haystack string to trim\n     * @param needle the thing to trim\n     */\n    function ltrim(haystack, needle) {\n        if (!haystack || !needle) {\n            return haystack;\n        }\n        var needleLen = needle.length;\n        if (needleLen === 0 || haystack.length === 0) {\n            return haystack;\n        }\n        var offset = 0, idx = -1;\n        while ((idx = haystack.indexOf(needle, offset)) === offset) {\n            offset = offset + needleLen;\n        }\n        return haystack.substring(offset);\n    }\n    exports.ltrim = ltrim;\n    /**\n     * Removes all occurrences of needle from the end of haystack.\n     * @param haystack string to trim\n     * @param needle the thing to trim\n     */\n    function rtrim(haystack, needle) {\n        if (!haystack || !needle) {\n            return haystack;\n        }\n        var needleLen = needle.length, haystackLen = haystack.length;\n        if (needleLen === 0 || haystackLen === 0) {\n            return haystack;\n        }\n        var offset = haystackLen, idx = -1;\n        while (true) {\n            idx = haystack.lastIndexOf(needle, offset - 1);\n            if (idx === -1 || idx + needleLen !== offset) {\n                break;\n            }\n            if (idx === 0) {\n                return '';\n            }\n            offset = idx;\n        }\n        return haystack.substring(0, offset);\n    }\n    exports.rtrim = rtrim;\n    function convertSimple2RegExpPattern(pattern) {\n        return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n    }\n    exports.convertSimple2RegExpPattern = convertSimple2RegExpPattern;\n    function stripWildcards(pattern) {\n        return pattern.replace(/\\*/g, '');\n    }\n    exports.stripWildcards = stripWildcards;\n    /**\n     * Determines if haystack starts with needle.\n     */\n    function startsWith(haystack, needle) {\n        if (haystack.length < needle.length) {\n            return false;\n        }\n        for (var i = 0; i < needle.length; i++) {\n            if (haystack[i] !== needle[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    exports.startsWith = startsWith;\n    /**\n     * Determines if haystack ends with needle.\n     */\n    function endsWith(haystack, needle) {\n        var diff = haystack.length - needle.length;\n        if (diff > 0) {\n            return haystack.lastIndexOf(needle) === diff;\n        }\n        else if (diff === 0) {\n            return haystack === needle;\n        }\n        else {\n            return false;\n        }\n    }\n    exports.endsWith = endsWith;\n    function createRegExp(searchString, isRegex, matchCase, wholeWord, global) {\n        if (searchString === '') {\n            throw new Error('Cannot create regex from empty string');\n        }\n        if (!isRegex) {\n            searchString = searchString.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n        }\n        if (wholeWord) {\n            if (!/\\B/.test(searchString.charAt(0))) {\n                searchString = '\\\\b' + searchString;\n            }\n            if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n                searchString = searchString + '\\\\b';\n            }\n        }\n        var modifiers = '';\n        if (global) {\n            modifiers += 'g';\n        }\n        if (!matchCase) {\n            modifiers += 'i';\n        }\n        return new RegExp(searchString, modifiers);\n    }\n    exports.createRegExp = createRegExp;\n    function regExpLeadsToEndlessLoop(regexp) {\n        // Exit early if it's one of these special cases which are meant to match\n        // against an empty string\n        if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$') {\n            return false;\n        }\n        // We check against an empty string. If the regular expression doesn't advance\n        // (e.g. ends in an endless loop) it will match an empty string.\n        var match = regexp.exec('');\n        return (match && regexp.lastIndex === 0);\n    }\n    exports.regExpLeadsToEndlessLoop = regExpLeadsToEndlessLoop;\n    /**\n     * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n     * the Normalization Form Canonical Composition.\n     *\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n     */\n    exports.canNormalize = typeof (''.normalize) === 'function';\n    var nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\n    var normalizedCache = new map_1.BoundedLinkedMap(10000); // bounded to 10000 elements\n    function normalizeNFC(str) {\n        if (!exports.canNormalize || !str) {\n            return str;\n        }\n        var cached = normalizedCache.get(str);\n        if (cached) {\n            return cached;\n        }\n        var res;\n        if (nonAsciiCharactersPattern.test(str)) {\n            res = str.normalize('NFC');\n        }\n        else {\n            res = str;\n        }\n        // Use the cache for fast lookup\n        normalizedCache.set(str, res);\n        return res;\n    }\n    exports.normalizeNFC = normalizeNFC;\n    /**\n     * Returns first index of the string that is not whitespace.\n     * If string is empty or contains only whitespaces, returns -1\n     */\n    function firstNonWhitespaceIndex(str) {\n        for (var i = 0, len = str.length; i < len; i++) {\n            if (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\n                return i;\n            }\n        }\n        return -1;\n    }\n    exports.firstNonWhitespaceIndex = firstNonWhitespaceIndex;\n    /**\n     * Returns the leading whitespace of the string.\n     * If the string contains only whitespaces, returns entire string\n     */\n    function getLeadingWhitespace(str) {\n        for (var i = 0, len = str.length; i < len; i++) {\n            if (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\n                return str.substring(0, i);\n            }\n        }\n        return str;\n    }\n    exports.getLeadingWhitespace = getLeadingWhitespace;\n    /**\n     * Returns last index of the string that is not whitespace.\n     * If string is empty or contains only whitespaces, returns -1\n     */\n    function lastNonWhitespaceIndex(str, startIndex) {\n        if (startIndex === void 0) { startIndex = str.length - 1; }\n        for (var i = startIndex; i >= 0; i--) {\n            if (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\n                return i;\n            }\n        }\n        return -1;\n    }\n    exports.lastNonWhitespaceIndex = lastNonWhitespaceIndex;\n    function compare(a, b) {\n        if (a < b) {\n            return -1;\n        }\n        else if (a > b) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    exports.compare = compare;\n    function isAsciiChar(code) {\n        return (code >= 97 && code <= 122) || (code >= 65 && code <= 90);\n    }\n    function equalsIgnoreCase(a, b) {\n        var len1 = a.length, len2 = b.length;\n        if (len1 !== len2) {\n            return false;\n        }\n        for (var i = 0; i < len1; i++) {\n            var codeA = a.charCodeAt(i), codeB = b.charCodeAt(i);\n            if (codeA === codeB) {\n                continue;\n            }\n            else if (isAsciiChar(codeA) && isAsciiChar(codeB)) {\n                var diff = Math.abs(codeA - codeB);\n                if (diff !== 0 && diff !== 32) {\n                    return false;\n                }\n            }\n            else {\n                if (String.fromCharCode(codeA).toLocaleLowerCase() !== String.fromCharCode(codeB).toLocaleLowerCase()) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    exports.equalsIgnoreCase = equalsIgnoreCase;\n    /**\n     * @returns the length of the common prefix of the two strings.\n     */\n    function commonPrefixLength(a, b) {\n        var i, len = Math.min(a.length, b.length);\n        for (i = 0; i < len; i++) {\n            if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n                return i;\n            }\n        }\n        return len;\n    }\n    exports.commonPrefixLength = commonPrefixLength;\n    /**\n     * @returns the length of the common suffix of the two strings.\n     */\n    function commonSuffixLength(a, b) {\n        var i, len = Math.min(a.length, b.length);\n        var aLastIndex = a.length - 1;\n        var bLastIndex = b.length - 1;\n        for (i = 0; i < len; i++) {\n            if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n                return i;\n            }\n        }\n        return len;\n    }\n    exports.commonSuffixLength = commonSuffixLength;\n    // --- unicode\n    // http://en.wikipedia.org/wiki/Surrogate_pair\n    // Returns the code point starting at a specified index in a string\n    // Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n    // Code points U+10000 to U+10FFFF are represented on two consecutive characters\n    //export function getUnicodePoint(str:string, index:number, len:number):number {\n    //\tlet chrCode = str.charCodeAt(index);\n    //\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n    //\t\tlet nextChrCode = str.charCodeAt(index + 1);\n    //\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n    //\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n    //\t\t}\n    //\t}\n    //\treturn chrCode;\n    //}\n    //export function isLeadSurrogate(chr:string) {\n    //\tlet chrCode = chr.charCodeAt(0);\n    //\treturn ;\n    //}\n    //\n    //export function isTrailSurrogate(chr:string) {\n    //\tlet chrCode = chr.charCodeAt(0);\n    //\treturn 0xDC00 <= chrCode && chrCode <= 0xDFFF;\n    //}\n    function isFullWidthCharacter(charCode) {\n        // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n        // http://jrgraphix.net/research/unicode_blocks.php\n        //          2E80 — 2EFF   CJK Radicals Supplement\n        //          2F00 — 2FDF   Kangxi Radicals\n        //          2FF0 — 2FFF   Ideographic Description Characters\n        //          3000 — 303F   CJK Symbols and Punctuation\n        //          3040 — 309F   Hiragana\n        //          30A0 — 30FF   Katakana\n        //          3100 — 312F   Bopomofo\n        //          3130 — 318F   Hangul Compatibility Jamo\n        //          3190 — 319F   Kanbun\n        //          31A0 — 31BF   Bopomofo Extended\n        //          31F0 — 31FF   Katakana Phonetic Extensions\n        //          3200 — 32FF   Enclosed CJK Letters and Months\n        //          3300 — 33FF   CJK Compatibility\n        //          3400 — 4DBF   CJK Unified Ideographs Extension A\n        //          4DC0 — 4DFF   Yijing Hexagram Symbols\n        //          4E00 — 9FFF   CJK Unified Ideographs\n        //          A000 — A48F   Yi Syllables\n        //          A490 — A4CF   Yi Radicals\n        //          AC00 — D7AF   Hangul Syllables\n        // [IGNORE] D800 — DB7F   High Surrogates\n        // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n        // [IGNORE] DC00 — DFFF   Low Surrogates\n        // [IGNORE] E000 — F8FF   Private Use Area\n        //          F900 — FAFF   CJK Compatibility Ideographs\n        // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n        // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n        // [IGNORE] FE00 — FE0F   Variation Selectors\n        // [IGNORE] FE20 — FE2F   Combining Half Marks\n        // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n        // [IGNORE] FE50 — FE6F   Small Form Variants\n        // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n        //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n        //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n        //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n        // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n        // [IGNORE] FFF0 — FFFF   Specials\n        charCode = +charCode; // @perf\n        return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n            || (charCode >= 0xF900 && charCode <= 0xFAFF)\n            || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n    }\n    exports.isFullWidthCharacter = isFullWidthCharacter;\n    /**\n     * Computes the difference score for two strings. More similar strings have a higher score.\n     * We use largest common subsequence dynamic programming approach but penalize in the end for length differences.\n     * Strings that have a large length difference will get a bad default score 0.\n     * Complexity - both time and space O(first.length * second.length)\n     * Dynamic programming LCS computation http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n     *\n     * @param first a string\n     * @param second a string\n     */\n    function difference(first, second, maxLenDelta) {\n        if (maxLenDelta === void 0) { maxLenDelta = 4; }\n        var lengthDifference = Math.abs(first.length - second.length);\n        // We only compute score if length of the currentWord and length of entry.name are similar.\n        if (lengthDifference > maxLenDelta) {\n            return 0;\n        }\n        // Initialize LCS (largest common subsequence) matrix.\n        var LCS = [];\n        var zeroArray = [];\n        var i, j;\n        for (i = 0; i < second.length + 1; ++i) {\n            zeroArray.push(0);\n        }\n        for (i = 0; i < first.length + 1; ++i) {\n            LCS.push(zeroArray);\n        }\n        for (i = 1; i < first.length + 1; ++i) {\n            for (j = 1; j < second.length + 1; ++j) {\n                if (first[i - 1] === second[j - 1]) {\n                    LCS[i][j] = LCS[i - 1][j - 1] + 1;\n                }\n                else {\n                    LCS[i][j] = Math.max(LCS[i - 1][j], LCS[i][j - 1]);\n                }\n            }\n        }\n        return LCS[first.length][second.length] - Math.sqrt(lengthDifference);\n    }\n    exports.difference = difference;\n    /**\n     * Returns an array in which every entry is the offset of a\n     * line. There is always one entry which is zero.\n     */\n    function computeLineStarts(text) {\n        var regexp = /\\r\\n|\\r|\\n/g, ret = [0], match;\n        while ((match = regexp.exec(text))) {\n            ret.push(regexp.lastIndex);\n        }\n        return ret;\n    }\n    exports.computeLineStarts = computeLineStarts;\n    /**\n     * Given a string and a max length returns a shorted version. Shorting\n     * happens at favorable positions - such as whitespace or punctuation characters.\n     */\n    function lcut(text, n) {\n        if (text.length < n) {\n            return text;\n        }\n        var segments = text.split(/\\b/), count = 0;\n        for (var i = segments.length - 1; i >= 0; i--) {\n            count += segments[i].length;\n            if (count > n) {\n                segments.splice(0, i);\n                break;\n            }\n        }\n        return segments.join(exports.empty).replace(/^\\s/, exports.empty);\n    }\n    exports.lcut = lcut;\n    // Escape codes\n    // http://en.wikipedia.org/wiki/ANSI_escape_code\n    var EL = /\\x1B\\x5B[12]?K/g; // Erase in line\n    var LF = /\\xA/g; // line feed\n    var COLOR_START = /\\x1b\\[\\d+m/g; // Color\n    var COLOR_END = /\\x1b\\[0?m/g; // Color\n    function removeAnsiEscapeCodes(str) {\n        if (str) {\n            str = str.replace(EL, '');\n            str = str.replace(LF, '\\n');\n            str = str.replace(COLOR_START, '');\n            str = str.replace(COLOR_END, '');\n        }\n        return str;\n    }\n    exports.removeAnsiEscapeCodes = removeAnsiEscapeCodes;\n    // -- UTF-8 BOM\n    var __utf8_bom = 65279;\n    exports.UTF8_BOM_CHARACTER = String.fromCharCode(__utf8_bom);\n    function startsWithUTF8BOM(str) {\n        return (str && str.length > 0 && str.charCodeAt(0) === __utf8_bom);\n    }\n    exports.startsWithUTF8BOM = startsWithUTF8BOM;\n    /**\n     * Appends two strings. If the appended result is longer than maxLength,\n     * trims the start of the result and replaces it with '...'.\n     */\n    function appendWithLimit(first, second, maxLength) {\n        var newLength = first.length + second.length;\n        if (newLength > maxLength) {\n            first = '...' + first.substr(newLength - maxLength);\n        }\n        if (second.length > maxLength) {\n            first += second.substr(second.length - maxLength);\n        }\n        else {\n            first += second;\n        }\n        return first;\n    }\n    exports.appendWithLimit = appendWithLimit;\n    function safeBtoa(str) {\n        return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n    }\n    exports.safeBtoa = safeBtoa;\n    function repeat(s, count) {\n        var result = '';\n        for (var i = 0; i < count; i++) {\n            result += s;\n        }\n        return result;\n    }\n    exports.repeat = repeat;\n});\n\ndefine(__m[98], __M([1,0,4,31]), function (require, exports, strings, map_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    // Combined filters\n    /**\n     * @returns A filter which combines the provided set\n     * of filters with an or. The *first* filters that\n     * matches defined the return value of the returned\n     * filter.\n     */\n    function or() {\n        var filter = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            filter[_i - 0] = arguments[_i];\n        }\n        return function (word, wordToMatchAgainst) {\n            for (var i = 0, len = filter.length; i < len; i++) {\n                var match = filter[i](word, wordToMatchAgainst);\n                if (match) {\n                    return match;\n                }\n            }\n            return null;\n        };\n    }\n    exports.or = or;\n    /**\n     * @returns A filter which combines the provided set\n     * of filters with an and. The combines matches are\n     * returned if *all* filters match.\n     */\n    function and() {\n        var filter = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            filter[_i - 0] = arguments[_i];\n        }\n        return function (word, wordToMatchAgainst) {\n            var result = [];\n            for (var i = 0, len = filter.length; i < len; i++) {\n                var match = filter[i](word, wordToMatchAgainst);\n                if (!match) {\n                    return null;\n                }\n                result = result.concat(match);\n            }\n            return result;\n        };\n    }\n    exports.and = and;\n    // Prefix\n    exports.matchesStrictPrefix = function (word, wordToMatchAgainst) { return _matchesPrefix(false, word, wordToMatchAgainst); };\n    exports.matchesPrefix = function (word, wordToMatchAgainst) { return _matchesPrefix(true, word, wordToMatchAgainst); };\n    function _matchesPrefix(ignoreCase, word, wordToMatchAgainst) {\n        if (!wordToMatchAgainst || wordToMatchAgainst.length === 0 || wordToMatchAgainst.length < word.length) {\n            return null;\n        }\n        if (ignoreCase) {\n            word = word.toLowerCase();\n            wordToMatchAgainst = wordToMatchAgainst.toLowerCase();\n        }\n        for (var i = 0; i < word.length; i++) {\n            if (word[i] !== wordToMatchAgainst[i]) {\n                return null;\n            }\n        }\n        return word.length > 0 ? [{ start: 0, end: word.length }] : [];\n    }\n    // Contiguous Substring\n    function matchesContiguousSubString(word, wordToMatchAgainst) {\n        var index = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n        if (index === -1) {\n            return null;\n        }\n        return [{ start: index, end: index + word.length }];\n    }\n    exports.matchesContiguousSubString = matchesContiguousSubString;\n    // Substring\n    function matchesSubString(word, wordToMatchAgainst) {\n        return _matchesSubString(word.toLowerCase(), wordToMatchAgainst.toLowerCase(), 0, 0);\n    }\n    exports.matchesSubString = matchesSubString;\n    function _matchesSubString(word, wordToMatchAgainst, i, j) {\n        if (i === word.length) {\n            return [];\n        }\n        else if (j === wordToMatchAgainst.length) {\n            return null;\n        }\n        else {\n            if (word[i] === wordToMatchAgainst[j]) {\n                var result = null;\n                if (result = _matchesSubString(word, wordToMatchAgainst, i + 1, j + 1)) {\n                    return join({ start: j, end: j + 1 }, result);\n                }\n            }\n            return _matchesSubString(word, wordToMatchAgainst, i, j + 1);\n        }\n    }\n    // CamelCase\n    function isLower(code) {\n        return 97 <= code && code <= 122;\n    }\n    function isUpper(code) {\n        return 65 <= code && code <= 90;\n    }\n    function isNumber(code) {\n        return 48 <= code && code <= 57;\n    }\n    function isWhitespace(code) {\n        return [32, 9, 10, 13].indexOf(code) > -1;\n    }\n    function isAlphanumeric(code) {\n        return isLower(code) || isUpper(code) || isNumber(code);\n    }\n    function join(head, tail) {\n        if (tail.length === 0) {\n            tail = [head];\n        }\n        else if (head.end === tail[0].start) {\n            tail[0].start = head.start;\n        }\n        else {\n            tail.unshift(head);\n        }\n        return tail;\n    }\n    function nextAnchor(camelCaseWord, start) {\n        for (var i = start; i < camelCaseWord.length; i++) {\n            var c = camelCaseWord.charCodeAt(i);\n            if (isUpper(c) || isNumber(c) || (i > 0 && !isAlphanumeric(camelCaseWord.charCodeAt(i - 1)))) {\n                return i;\n            }\n        }\n        return camelCaseWord.length;\n    }\n    function _matchesCamelCase(word, camelCaseWord, i, j) {\n        if (i === word.length) {\n            return [];\n        }\n        else if (j === camelCaseWord.length) {\n            return null;\n        }\n        else if (word[i] !== camelCaseWord[j].toLowerCase()) {\n            return null;\n        }\n        else {\n            var result = null;\n            var nextUpperIndex = j + 1;\n            result = _matchesCamelCase(word, camelCaseWord, i + 1, j + 1);\n            while (!result && (nextUpperIndex = nextAnchor(camelCaseWord, nextUpperIndex)) < camelCaseWord.length) {\n                result = _matchesCamelCase(word, camelCaseWord, i + 1, nextUpperIndex);\n                nextUpperIndex++;\n            }\n            return result === null ? null : join({ start: j, end: j + 1 }, result);\n        }\n    }\n    // Heuristic to avoid computing camel case matcher for words that don't\n    // look like camelCaseWords.\n    function isCamelCaseWord(word) {\n        if (word.length > 60) {\n            return false;\n        }\n        var upper = 0, lower = 0, alpha = 0, numeric = 0, code = 0;\n        for (var i = 0; i < word.length; i++) {\n            code = word.charCodeAt(i);\n            if (isUpper(code)) {\n                upper++;\n            }\n            if (isLower(code)) {\n                lower++;\n            }\n            if (isAlphanumeric(code)) {\n                alpha++;\n            }\n            if (isNumber(code)) {\n                numeric++;\n            }\n        }\n        var upperPercent = upper / word.length;\n        var lowerPercent = lower / word.length;\n        var alphaPercent = alpha / word.length;\n        var numericPercent = numeric / word.length;\n        return lowerPercent > 0.2 && upperPercent < 0.8 && alphaPercent > 0.6 && numericPercent < 0.2;\n    }\n    // Heuristic to avoid computing camel case matcher for words that don't\n    // look like camel case patterns.\n    function isCamelCasePattern(word) {\n        var upper = 0, lower = 0, code = 0, whitespace = 0;\n        for (var i = 0; i < word.length; i++) {\n            code = word.charCodeAt(i);\n            if (isUpper(code)) {\n                upper++;\n            }\n            if (isLower(code)) {\n                lower++;\n            }\n            if (isWhitespace(code)) {\n                whitespace++;\n            }\n        }\n        if ((upper === 0 || lower === 0) && whitespace === 0) {\n            return word.length <= 30;\n        }\n        else {\n            return upper <= 5;\n        }\n    }\n    function matchesCamelCase(word, camelCaseWord) {\n        if (!camelCaseWord || camelCaseWord.length === 0) {\n            return null;\n        }\n        if (!isCamelCasePattern(word)) {\n            return null;\n        }\n        if (!isCamelCaseWord(camelCaseWord)) {\n            return null;\n        }\n        var result = null;\n        var i = 0;\n        while (i < camelCaseWord.length && (result = _matchesCamelCase(word.toLowerCase(), camelCaseWord, 0, i)) === null) {\n            i = nextAnchor(camelCaseWord, i + 1);\n        }\n        return result;\n    }\n    exports.matchesCamelCase = matchesCamelCase;\n    // Matches beginning of words supporting non-ASCII languages\n    // E.g. \"gp\" or \"g p\" will match \"Git: Pull\"\n    // Useful in cases where the target is words (e.g. command labels)\n    function matchesWords(word, target) {\n        if (!target || target.length === 0) {\n            return null;\n        }\n        var result = null;\n        var i = 0;\n        while (i < target.length && (result = _matchesWords(word.toLowerCase(), target, 0, i)) === null) {\n            i = nextWord(target, i + 1);\n        }\n        return result;\n    }\n    exports.matchesWords = matchesWords;\n    function _matchesWords(word, target, i, j) {\n        if (i === word.length) {\n            return [];\n        }\n        else if (j === target.length) {\n            return null;\n        }\n        else if (word[i] !== target[j].toLowerCase()) {\n            return null;\n        }\n        else {\n            var result = null;\n            var nextWordIndex = j + 1;\n            result = _matchesWords(word, target, i + 1, j + 1);\n            while (!result && (nextWordIndex = nextWord(target, nextWordIndex)) < target.length) {\n                result = _matchesWords(word, target, i + 1, nextWordIndex);\n                nextWordIndex++;\n            }\n            return result === null ? null : join({ start: j, end: j + 1 }, result);\n        }\n    }\n    function nextWord(word, start) {\n        for (var i = start; i < word.length; i++) {\n            var c = word.charCodeAt(i);\n            if (isWhitespace(c) || (i > 0 && isWhitespace(word.charCodeAt(i - 1)))) {\n                return i;\n            }\n        }\n        return word.length;\n    }\n    // Fuzzy\n    (function (SubstringMatching) {\n        SubstringMatching[SubstringMatching[\"Contiguous\"] = 0] = \"Contiguous\";\n        SubstringMatching[SubstringMatching[\"Separate\"] = 1] = \"Separate\";\n    })(exports.SubstringMatching || (exports.SubstringMatching = {}));\n    var SubstringMatching = exports.SubstringMatching;\n    exports.fuzzyContiguousFilter = or(exports.matchesPrefix, matchesCamelCase, matchesContiguousSubString);\n    var fuzzySeparateFilter = or(exports.matchesPrefix, matchesCamelCase, matchesSubString);\n    var fuzzyRegExpCache = new map_1.BoundedLinkedMap(10000); // bounded to 10000 elements\n    function matchesFuzzy(word, wordToMatchAgainst, enableSeparateSubstringMatching) {\n        if (enableSeparateSubstringMatching === void 0) { enableSeparateSubstringMatching = false; }\n        if (typeof word !== 'string' || typeof wordToMatchAgainst !== 'string') {\n            return null; // return early for invalid input\n        }\n        // Form RegExp for wildcard matches\n        var regexp = fuzzyRegExpCache.get(word);\n        if (!regexp) {\n            regexp = new RegExp(strings.convertSimple2RegExpPattern(word), 'i');\n            fuzzyRegExpCache.set(word, regexp);\n        }\n        // RegExp Filter\n        var match = regexp.exec(wordToMatchAgainst);\n        if (match) {\n            return [{ start: match.index, end: match.index + match[0].length }];\n        }\n        // Default Filter\n        return enableSeparateSubstringMatching ? fuzzySeparateFilter(word, wordToMatchAgainst) : exports.fuzzyContiguousFilter(word, wordToMatchAgainst);\n    }\n    exports.matchesFuzzy = matchesFuzzy;\n});\n\ndefine(__m[37], __M([1,0,4,13,31]), function (require, exports, strings, paths, map_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var PATH_REGEX = '[/\\\\\\\\]'; // any slash or backslash\n    var NO_PATH_REGEX = '[^/\\\\\\\\]'; // any non-slash and non-backslash\n    function starsToRegExp(starCount) {\n        switch (starCount) {\n            case 0:\n                return '';\n            case 1:\n                return NO_PATH_REGEX + \"*?\"; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n            default:\n                // Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n                // Group is non capturing because we don't need to capture at all (?:...)\n                // Overall we use non-greedy matching because it could be that we match too much\n                return \"(?:\" + PATH_REGEX + \"|\" + NO_PATH_REGEX + \"+\" + PATH_REGEX + \"|\" + PATH_REGEX + NO_PATH_REGEX + \"+)*?\";\n        }\n    }\n    function splitGlobAware(pattern, splitChar) {\n        if (!pattern) {\n            return [];\n        }\n        var segments = [];\n        var inBraces = false;\n        var inBrackets = false;\n        var char;\n        var curVal = '';\n        for (var i = 0; i < pattern.length; i++) {\n            char = pattern[i];\n            switch (char) {\n                case splitChar:\n                    if (!inBraces && !inBrackets) {\n                        segments.push(curVal);\n                        curVal = '';\n                        continue;\n                    }\n                    break;\n                case '{':\n                    inBraces = true;\n                    break;\n                case '}':\n                    inBraces = false;\n                    break;\n                case '[':\n                    inBrackets = true;\n                    break;\n                case ']':\n                    inBrackets = false;\n                    break;\n            }\n            curVal += char;\n        }\n        // Tail\n        if (curVal) {\n            segments.push(curVal);\n        }\n        return segments;\n    }\n    exports.splitGlobAware = splitGlobAware;\n    function parseRegExp(pattern) {\n        if (!pattern) {\n            return '';\n        }\n        var regEx = '';\n        // Split up into segments for each slash found\n        var segments = splitGlobAware(pattern, '/');\n        // Special case where we only have globstars\n        if (segments.every(function (s) { return s === '**'; })) {\n            regEx = '.*';\n        }\n        else {\n            var previousSegmentWasGlobStar_1 = false;\n            segments.forEach(function (segment, index) {\n                // Globstar is special\n                if (segment === '**') {\n                    // if we have more than one globstar after another, just ignore it\n                    if (!previousSegmentWasGlobStar_1) {\n                        regEx += starsToRegExp(2);\n                        previousSegmentWasGlobStar_1 = true;\n                    }\n                    return;\n                }\n                // States\n                var inBraces = false;\n                var braceVal = '';\n                var inBrackets = false;\n                var bracketVal = '';\n                var char;\n                for (var i = 0; i < segment.length; i++) {\n                    char = segment[i];\n                    // Support brace expansion\n                    if (char !== '}' && inBraces) {\n                        braceVal += char;\n                        continue;\n                    }\n                    // Support brackets\n                    if (char !== ']' && inBrackets) {\n                        var res = void 0;\n                        switch (char) {\n                            case '-':\n                                res = char;\n                                break;\n                            case '^':\n                                res = char;\n                                break;\n                            default:\n                                res = strings.escapeRegExpCharacters(char);\n                        }\n                        bracketVal += res;\n                        continue;\n                    }\n                    switch (char) {\n                        case '{':\n                            inBraces = true;\n                            continue;\n                        case '[':\n                            inBrackets = true;\n                            continue;\n                        case '}':\n                            var choices = splitGlobAware(braceVal, ',');\n                            // Converts {foo,bar} => [foo|bar]\n                            var braceRegExp = \"(?:\" + choices.map(function (c) { return parseRegExp(c); }).join('|') + \")\";\n                            regEx += braceRegExp;\n                            inBraces = false;\n                            braceVal = '';\n                            break;\n                        case ']':\n                            regEx += ('[' + bracketVal + ']');\n                            inBrackets = false;\n                            bracketVal = '';\n                            break;\n                        case '?':\n                            regEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n                            continue;\n                        case '*':\n                            regEx += starsToRegExp(1);\n                            continue;\n                        default:\n                            regEx += strings.escapeRegExpCharacters(char);\n                    }\n                }\n                // Tail: Add the slash we had split on if there is more to come and the next one is not a globstar\n                if (index < segments.length - 1 && segments[index + 1] !== '**') {\n                    regEx += PATH_REGEX;\n                }\n                // reset state\n                previousSegmentWasGlobStar_1 = false;\n            });\n        }\n        return regEx;\n    }\n    // regexes to check for trival glob patterns that just check for String#endsWith\n    var T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; // **/*.something\n    var T2 = /^\\*\\*\\/[\\w\\.-]+$/; // **/something\n    var T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+)*}$/; // {**/*.something,**/*.else} or {**/package.json,**/project.json}\n    var Trivia;\n    (function (Trivia) {\n        Trivia[Trivia[\"T1\"] = 0] = \"T1\";\n        Trivia[Trivia[\"T2\"] = 1] = \"T2\";\n        Trivia[Trivia[\"T3\"] = 2] = \"T3\";\n    })(Trivia || (Trivia = {}));\n    var CACHE = new map_1.BoundedLinkedMap(10000); // bounded to 10000 elements\n    function parsePattern(pattern) {\n        if (!pattern) {\n            return null;\n        }\n        // Whitespace trimming\n        pattern = pattern.trim();\n        // Check cache\n        var parsedPattern = CACHE.get(pattern);\n        if (parsedPattern) {\n            if (parsedPattern.regexp) {\n                parsedPattern.regexp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n            }\n            return parsedPattern;\n        }\n        parsedPattern = Object.create(null);\n        // Check for Trivias\n        if (T1.test(pattern)) {\n            parsedPattern.trivia = Trivia.T1;\n        }\n        else if (T2.test(pattern)) {\n            parsedPattern.trivia = Trivia.T2;\n        }\n        else if (T3.test(pattern)) {\n            parsedPattern.trivia = Trivia.T3;\n        }\n        else {\n            parsedPattern.regexp = toRegExp(\"^\" + parseRegExp(pattern) + \"$\");\n        }\n        // Cache\n        CACHE.set(pattern, parsedPattern);\n        return parsedPattern;\n    }\n    function toRegExp(regEx) {\n        try {\n            return new RegExp(regEx);\n        }\n        catch (error) {\n            return /.^/; // create a regex that matches nothing if we cannot parse the pattern\n        }\n    }\n    function match(arg1, path, siblings) {\n        if (!arg1 || !path) {\n            return false;\n        }\n        // Glob with String\n        if (typeof arg1 === 'string') {\n            var parsedPattern = parsePattern(arg1);\n            if (!parsedPattern) {\n                return false;\n            }\n            // common pattern: **/*.txt just need endsWith check\n            if (parsedPattern.trivia === Trivia.T1) {\n                return strings.endsWith(path, arg1.substr(4)); // '**/*'.length === 4\n            }\n            // common pattern: **/some.txt just need basename check\n            if (parsedPattern.trivia === Trivia.T2) {\n                var base = arg1.substr(3); // '**/'.length === 3\n                return path === base || strings.endsWith(path, \"/\" + base) || strings.endsWith(path, \"\\\\\" + base);\n            }\n            // repetition of common patterns (see above) {**/*.txt,**/*.png}\n            if (parsedPattern.trivia === Trivia.T3) {\n                return arg1.slice(1, -1).split(',').some(function (pattern) { return match(pattern, path); });\n            }\n            return parsedPattern.regexp.test(path);\n        }\n        // Glob with Expression\n        return matchExpression(arg1, path, siblings);\n    }\n    exports.match = match;\n    function matchExpression(expression, path, siblings) {\n        var patterns = Object.getOwnPropertyNames(expression);\n        var basename;\n        var _loop_1 = function(i) {\n            var pattern = patterns[i];\n            var value = expression[pattern];\n            if (value === false) {\n                return \"continue\"; // pattern is disabled\n            }\n            // Pattern matches path\n            if (match(pattern, path)) {\n                // Expression Pattern is <boolean>\n                if (typeof value === 'boolean') {\n                    return { value: pattern };\n                }\n                // Expression Pattern is <SiblingClause>\n                if (value && typeof value.when === 'string') {\n                    if (!siblings || !siblings.length) {\n                        return \"continue\"; // pattern is malformed or we don't have siblings\n                    }\n                    if (!basename) {\n                        basename = strings.rtrim(paths.basename(path), paths.extname(path));\n                    }\n                    var clause = value;\n                    var clausePattern_1 = clause.when.replace('$(basename)', basename);\n                    if (siblings.some(function (sibling) { return sibling === clausePattern_1; })) {\n                        return { value: pattern };\n                    }\n                    else {\n                        return \"continue\"; // pattern does not match in the end because the when clause is not satisfied\n                    }\n                }\n                // Expression is Anything\n                return { value: pattern };\n            }\n        };\n        for (var i = 0; i < patterns.length; i++) {\n            var state_1 = _loop_1(i);\n            if (typeof state_1 === \"object\") return state_1.value;\n            if (state_1 === \"continue\") continue;\n        }\n        return null;\n    }\n});\n\ndefine(__m[6], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var _typeof = {\n        number: 'number',\n        string: 'string',\n        undefined: 'undefined',\n        object: 'object',\n        function: 'function'\n    };\n    /**\n     * @returns whether the provided parameter is a JavaScript Array or not.\n     */\n    function isArray(array) {\n        if (Array.isArray) {\n            return Array.isArray(array);\n        }\n        if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n            return true;\n        }\n        return false;\n    }\n    exports.isArray = isArray;\n    /**\n     * @returns whether the provided parameter is a JavaScript String or not.\n     */\n    function isString(str) {\n        if (typeof (str) === _typeof.string || str instanceof String) {\n            return true;\n        }\n        return false;\n    }\n    exports.isString = isString;\n    /**\n     * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n     */\n    function isStringArray(value) {\n        return isArray(value) && value.every(function (elem) { return isString(elem); });\n    }\n    exports.isStringArray = isStringArray;\n    /**\n     *\n     * @returns whether the provided parameter is of type `object` but **not**\n     *\t`null`, an `array`, a `regexp`, nor a `date`.\n     */\n    function isObject(obj) {\n        return typeof obj === _typeof.object\n            && obj !== null\n            && !Array.isArray(obj)\n            && !(obj instanceof RegExp)\n            && !(obj instanceof Date);\n    }\n    exports.isObject = isObject;\n    /**\n     * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n     * @returns whether the provided parameter is a JavaScript Number or not.\n     */\n    function isNumber(obj) {\n        if ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n            return true;\n        }\n        return false;\n    }\n    exports.isNumber = isNumber;\n    /**\n     * @returns whether the provided parameter is a JavaScript Boolean or not.\n     */\n    function isBoolean(obj) {\n        return obj === true || obj === false;\n    }\n    exports.isBoolean = isBoolean;\n    /**\n     * @returns whether the provided parameter is undefined.\n     */\n    function isUndefined(obj) {\n        return typeof (obj) === _typeof.undefined;\n    }\n    exports.isUndefined = isUndefined;\n    /**\n     * @returns whether the provided parameter is undefined or null.\n     */\n    function isUndefinedOrNull(obj) {\n        return isUndefined(obj) || obj === null;\n    }\n    exports.isUndefinedOrNull = isUndefinedOrNull;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    /**\n     * @returns whether the provided parameter is an empty JavaScript Object or not.\n     */\n    function isEmptyObject(obj) {\n        if (!isObject(obj)) {\n            return false;\n        }\n        for (var key in obj) {\n            if (hasOwnProperty.call(obj, key)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    exports.isEmptyObject = isEmptyObject;\n    /**\n     * @returns whether the provided parameter is a JavaScript Function or not.\n     */\n    function isFunction(obj) {\n        return typeof obj === _typeof.function;\n    }\n    exports.isFunction = isFunction;\n    /**\n     * @returns whether the provided parameters is are JavaScript Function or not.\n     */\n    function areFunctions() {\n        var objects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            objects[_i - 0] = arguments[_i];\n        }\n        return objects && objects.length > 0 && objects.every(isFunction);\n    }\n    exports.areFunctions = areFunctions;\n    function validateConstraints(args, constraints) {\n        var len = Math.min(args.length, constraints.length);\n        for (var i = 0; i < len; i++) {\n            validateConstraint(args[i], constraints[i]);\n        }\n    }\n    exports.validateConstraints = validateConstraints;\n    function validateConstraint(arg, constraint) {\n        if (isString(constraint)) {\n            if (typeof arg !== constraint) {\n                throw new Error(\"argument does not match constraint: typeof \" + constraint);\n            }\n        }\n        else if (isFunction(constraint)) {\n            if (arg instanceof constraint) {\n                return;\n            }\n            if (arg && arg.constructor === constraint) {\n                return;\n            }\n            if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n                return;\n            }\n            throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n        }\n    }\n    exports.validateConstraint = validateConstraint;\n    /**\n     * Creates a new object of the provided class and will call the constructor with\n     * any additional argument supplied.\n     */\n    function create(ctor) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var obj = Object.create(ctor.prototype);\n        ctor.apply(obj, args);\n        return obj;\n    }\n    exports.create = create;\n});\n\ndefine(__m[95], __M([1,0,6,38]), function (require, exports, types_1, collections_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    function newNode(data) {\n        return {\n            data: data,\n            incoming: Object.create(null),\n            outgoing: Object.create(null)\n        };\n    }\n    var Graph = (function () {\n        function Graph(_hashFn) {\n            this._hashFn = _hashFn;\n            this._nodes = Object.create(null);\n            // empty\n        }\n        Graph.prototype.roots = function () {\n            var ret = [];\n            collections_1.forEach(this._nodes, function (entry) {\n                if (types_1.isEmptyObject(entry.value.outgoing)) {\n                    ret.push(entry.value);\n                }\n            });\n            return ret;\n        };\n        Graph.prototype.traverse = function (start, inwards, callback) {\n            var startNode = this.lookup(start);\n            if (!startNode) {\n                return;\n            }\n            this._traverse(startNode, inwards, Object.create(null), callback);\n        };\n        Graph.prototype._traverse = function (node, inwards, seen, callback) {\n            var _this = this;\n            var key = this._hashFn(node.data);\n            if (collections_1.contains(seen, key)) {\n                return;\n            }\n            seen[key] = true;\n            callback(node.data);\n            var nodes = inwards ? node.outgoing : node.incoming;\n            collections_1.forEach(nodes, function (entry) { return _this._traverse(entry.value, inwards, seen, callback); });\n        };\n        Graph.prototype.insertEdge = function (from, to) {\n            var fromNode = this.lookupOrInsertNode(from), toNode = this.lookupOrInsertNode(to);\n            fromNode.outgoing[this._hashFn(to)] = toNode;\n            toNode.incoming[this._hashFn(from)] = fromNode;\n        };\n        Graph.prototype.removeNode = function (data) {\n            var key = this._hashFn(data);\n            delete this._nodes[key];\n            collections_1.forEach(this._nodes, function (entry) {\n                delete entry.value.outgoing[key];\n                delete entry.value.incoming[key];\n            });\n        };\n        Graph.prototype.lookupOrInsertNode = function (data) {\n            var key = this._hashFn(data), node = collections_1.lookup(this._nodes, key);\n            if (!node) {\n                node = newNode(data);\n                this._nodes[key] = node;\n            }\n            return node;\n        };\n        Graph.prototype.lookup = function (data) {\n            return collections_1.lookup(this._nodes, this._hashFn(data));\n        };\n        Object.defineProperty(Graph.prototype, \"length\", {\n            get: function () {\n                return Object.keys(this._nodes).length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Graph.prototype.toString = function () {\n            var data = [];\n            collections_1.forEach(this._nodes, function (entry) {\n                data.push(entry.key + \", (incoming)[\" + Object.keys(entry.value.incoming).join(', ') + \"], (outgoing)[\" + Object.keys(entry.value.outgoing).join(',') + \"]\");\n            });\n            return data.join('\\n');\n        };\n        return Graph;\n    }());\n    exports.Graph = Graph;\n});\n\n\n\n\n\n\ndefine(__m[12], __M([1,0,6]), function (require, exports, types_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.empty = Object.freeze({\n        dispose: function () { }\n    });\n    function dispose() {\n        var disposables = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            disposables[_i - 0] = arguments[_i];\n        }\n        var first = disposables[0];\n        if (types_1.isArray(first)) {\n            disposables = first;\n        }\n        disposables.forEach(function (d) { return d && d.dispose(); });\n        return [];\n    }\n    exports.dispose = dispose;\n    function combinedDisposable(disposables) {\n        return { dispose: function () { return dispose(disposables); } };\n    }\n    exports.combinedDisposable = combinedDisposable;\n    function toDisposable() {\n        var fns = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            fns[_i - 0] = arguments[_i];\n        }\n        return combinedDisposable(fns.map(function (fn) { return ({ dispose: fn }); }));\n    }\n    exports.toDisposable = toDisposable;\n    var Disposable = (function () {\n        function Disposable() {\n            this._toDispose = [];\n        }\n        Disposable.prototype.dispose = function () {\n            this._toDispose = dispose(this._toDispose);\n        };\n        Disposable.prototype._register = function (t) {\n            this._toDispose.push(t);\n            return t;\n        };\n        return Disposable;\n    }());\n    exports.Disposable = Disposable;\n    var Disposables = (function (_super) {\n        __extends(Disposables, _super);\n        function Disposables() {\n            _super.apply(this, arguments);\n        }\n        Disposables.prototype.add = function (arg) {\n            if (!Array.isArray(arg)) {\n                return this._register(arg);\n            }\n            else {\n                for (var _i = 0, arg_1 = arg; _i < arg_1.length; _i++) {\n                    var element = arg_1[_i];\n                    return this._register(element);\n                }\n            }\n        };\n        return Disposables;\n    }(Disposable));\n    exports.Disposables = Disposables;\n});\n\ndefine(__m[46], __M([1,0,13,6,4,37]), function (require, exports, paths, types, strings, glob_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.MIME_TEXT = 'text/plain';\n    exports.MIME_BINARY = 'application/octet-stream';\n    exports.MIME_UNKNOWN = 'application/unknown';\n    var registeredAssociations = [];\n    /**\n     * Associate a text mime to the registry.\n     */\n    function registerTextMime(association) {\n        // Register\n        registeredAssociations.push(association);\n        // Check for conflicts unless this is a user configured association\n        if (!association.userConfigured) {\n            registeredAssociations.forEach(function (a) {\n                if (a.mime === association.mime || a.userConfigured) {\n                    return; // same mime or userConfigured is ok\n                }\n                if (association.extension && a.extension === association.extension) {\n                    console.warn(\"Overwriting extension <<\" + association.extension + \">> to now point to mime <<\" + association.mime + \">>\");\n                }\n                if (association.filename && a.filename === association.filename) {\n                    console.warn(\"Overwriting filename <<\" + association.filename + \">> to now point to mime <<\" + association.mime + \">>\");\n                }\n                if (association.filepattern && a.filepattern === association.filepattern) {\n                    console.warn(\"Overwriting filepattern <<\" + association.filepattern + \">> to now point to mime <<\" + association.mime + \">>\");\n                }\n                if (association.firstline && a.firstline === association.firstline) {\n                    console.warn(\"Overwriting firstline <<\" + association.firstline + \">> to now point to mime <<\" + association.mime + \">>\");\n                }\n            });\n        }\n    }\n    exports.registerTextMime = registerTextMime;\n    /**\n     * Clear text mimes from the registry.\n     */\n    function clearTextMimes(onlyUserConfigured) {\n        if (!onlyUserConfigured) {\n            registeredAssociations = [];\n        }\n        else {\n            registeredAssociations = registeredAssociations.filter(function (a) { return !a.userConfigured; });\n        }\n    }\n    exports.clearTextMimes = clearTextMimes;\n    /**\n     * Given a file, return the best matching mime type for it\n     */\n    function guessMimeTypes(path, firstLine) {\n        if (!path) {\n            return [exports.MIME_UNKNOWN];\n        }\n        path = path.toLowerCase();\n        // 1.) User configured mappings have highest priority\n        var configuredMime = guessMimeTypeByPath(path, registeredAssociations.filter(function (a) { return a.userConfigured; }));\n        if (configuredMime) {\n            return [configuredMime, exports.MIME_TEXT];\n        }\n        // 2.) Registered mappings have middle priority\n        var registeredMime = guessMimeTypeByPath(path, registeredAssociations.filter(function (a) { return !a.userConfigured; }));\n        if (registeredMime) {\n            return [registeredMime, exports.MIME_TEXT];\n        }\n        // 3.) Firstline has lowest priority\n        if (firstLine) {\n            var firstlineMime = guessMimeTypeByFirstline(firstLine);\n            if (firstlineMime) {\n                return [firstlineMime, exports.MIME_TEXT];\n            }\n        }\n        return [exports.MIME_UNKNOWN];\n    }\n    exports.guessMimeTypes = guessMimeTypes;\n    function guessMimeTypeByPath(path, associations) {\n        var filename = paths.basename(path);\n        var filenameMatch;\n        var patternMatch;\n        var extensionMatch;\n        for (var i = 0; i < associations.length; i++) {\n            var association = associations[i];\n            // First exact name match\n            if (association.filename && filename === association.filename.toLowerCase()) {\n                filenameMatch = association;\n                break; // take it!\n            }\n            // Longest pattern match\n            if (association.filepattern) {\n                var target = association.filepattern.indexOf(paths.sep) >= 0 ? path : filename; // match on full path if pattern contains path separator\n                if (glob_1.match(association.filepattern.toLowerCase(), target)) {\n                    if (!patternMatch || association.filepattern.length > patternMatch.filepattern.length) {\n                        patternMatch = association;\n                    }\n                }\n            }\n            // Longest extension match\n            if (association.extension) {\n                if (strings.endsWith(filename, association.extension.toLowerCase())) {\n                    if (!extensionMatch || association.extension.length > extensionMatch.extension.length) {\n                        extensionMatch = association;\n                    }\n                }\n            }\n        }\n        // 1.) Exact name match has second highest prio\n        if (filenameMatch) {\n            return filenameMatch.mime;\n        }\n        // 2.) Match on pattern\n        if (patternMatch) {\n            return patternMatch.mime;\n        }\n        // 3.) Match on extension comes next\n        if (extensionMatch) {\n            return extensionMatch.mime;\n        }\n        return null;\n    }\n    function guessMimeTypeByFirstline(firstLine) {\n        if (strings.startsWithUTF8BOM(firstLine)) {\n            firstLine = firstLine.substr(1);\n        }\n        if (firstLine.length > 0) {\n            for (var i = 0; i < registeredAssociations.length; ++i) {\n                var association = registeredAssociations[i];\n                if (!association.firstline) {\n                    continue;\n                }\n                // Make sure the entire line matches, not just a subpart.\n                var matches = firstLine.match(association.firstline);\n                if (matches && matches.length > 0 && matches[0].length === firstLine.length) {\n                    return association.mime;\n                }\n            }\n        }\n        return null;\n    }\n    function isBinaryMime(mimes) {\n        if (!mimes) {\n            return false;\n        }\n        var mimeVals;\n        if (types.isArray(mimes)) {\n            mimeVals = mimes;\n        }\n        else {\n            mimeVals = mimes.split(',').map(function (mime) { return mime.trim(); });\n        }\n        return mimeVals.indexOf(exports.MIME_BINARY) >= 0;\n    }\n    exports.isBinaryMime = isBinaryMime;\n    function isUnspecific(mime) {\n        if (!mime) {\n            return true;\n        }\n        if (typeof mime === 'string') {\n            return mime === exports.MIME_BINARY || mime === exports.MIME_TEXT || mime === exports.MIME_UNKNOWN;\n        }\n        return mime.length === 1 && isUnspecific(mime[0]);\n    }\n    exports.isUnspecific = isUnspecific;\n    function suggestFilename(theMime, prefix) {\n        for (var i = 0; i < registeredAssociations.length; i++) {\n            var association = registeredAssociations[i];\n            if (association.userConfigured) {\n                continue; // only support registered ones\n            }\n            if (association.mime === theMime && association.extension) {\n                return prefix + association.extension;\n            }\n        }\n        return null;\n    }\n    exports.suggestFilename = suggestFilename;\n});\n\ndefine(__m[29], __M([1,0,6]), function (require, exports, Types) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    function clone(obj) {\n        if (!obj || typeof obj !== 'object') {\n            return obj;\n        }\n        if (obj instanceof RegExp) {\n            return obj;\n        }\n        var result = (Array.isArray(obj)) ? [] : {};\n        Object.keys(obj).forEach(function (key) {\n            if (obj[key] && typeof obj[key] === 'object') {\n                result[key] = clone(obj[key]);\n            }\n            else {\n                result[key] = obj[key];\n            }\n        });\n        return result;\n    }\n    exports.clone = clone;\n    function deepClone(obj) {\n        if (!obj || typeof obj !== 'object') {\n            return obj;\n        }\n        var result = (Array.isArray(obj)) ? [] : {};\n        Object.getOwnPropertyNames(obj).forEach(function (key) {\n            if (obj[key] && typeof obj[key] === 'object') {\n                result[key] = deepClone(obj[key]);\n            }\n            else {\n                result[key] = obj[key];\n            }\n        });\n        return result;\n    }\n    exports.deepClone = deepClone;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    function cloneAndChange(obj, changer) {\n        return _cloneAndChange(obj, changer, []);\n    }\n    exports.cloneAndChange = cloneAndChange;\n    function _cloneAndChange(obj, changer, encounteredObjects) {\n        if (Types.isUndefinedOrNull(obj)) {\n            return obj;\n        }\n        var changed = changer(obj);\n        if (typeof changed !== 'undefined') {\n            return changed;\n        }\n        if (Types.isArray(obj)) {\n            var r1 = [];\n            for (var i1 = 0; i1 < obj.length; i1++) {\n                r1.push(_cloneAndChange(obj[i1], changer, encounteredObjects));\n            }\n            return r1;\n        }\n        if (Types.isObject(obj)) {\n            if (encounteredObjects.indexOf(obj) >= 0) {\n                throw new Error('Cannot clone recursive data-structure');\n            }\n            encounteredObjects.push(obj);\n            var r2 = {};\n            for (var i2 in obj) {\n                if (hasOwnProperty.call(obj, i2)) {\n                    r2[i2] = _cloneAndChange(obj[i2], changer, encounteredObjects);\n                }\n            }\n            encounteredObjects.pop();\n            return r2;\n        }\n        return obj;\n    }\n    // DON'T USE THESE FUNCTION UNLESS YOU KNOW HOW CHROME\n    // WORKS... WE HAVE SEEN VERY WEIRD BEHAVIOUR WITH CHROME >= 37\n    ///**\n    // * Recursively call Object.freeze on object and any properties that are objects.\n    // */\n    //export function deepFreeze(obj:any):void {\n    //\tObject.freeze(obj);\n    //\tObject.keys(obj).forEach((key) => {\n    //\t\tif(!(typeof obj[key] === 'object') || Object.isFrozen(obj[key])) {\n    //\t\t\treturn;\n    //\t\t}\n    //\n    //\t\tdeepFreeze(obj[key]);\n    //\t});\n    //\tif(!Object.isFrozen(obj)) {\n    //\t\tconsole.log('too warm');\n    //\t}\n    //}\n    //\n    //export function deepSeal(obj:any):void {\n    //\tObject.seal(obj);\n    //\tObject.keys(obj).forEach((key) => {\n    //\t\tif(!(typeof obj[key] === 'object') || Object.isSealed(obj[key])) {\n    //\t\t\treturn;\n    //\t\t}\n    //\n    //\t\tdeepSeal(obj[key]);\n    //\t});\n    //\tif(!Object.isSealed(obj)) {\n    //\t\tconsole.log('NOT sealed');\n    //\t}\n    //}\n    /**\n     * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n     * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n     */\n    function mixin(destination, source, overwrite) {\n        if (overwrite === void 0) { overwrite = true; }\n        if (!Types.isObject(destination)) {\n            return source;\n        }\n        if (Types.isObject(source)) {\n            Object.keys(source).forEach(function (key) {\n                if (key in destination) {\n                    if (overwrite) {\n                        if (Types.isObject(destination[key]) && Types.isObject(source[key])) {\n                            mixin(destination[key], source[key], overwrite);\n                        }\n                        else {\n                            destination[key] = source[key];\n                        }\n                    }\n                }\n                else {\n                    destination[key] = source[key];\n                }\n            });\n        }\n        return destination;\n    }\n    exports.mixin = mixin;\n    function assign(destination) {\n        var sources = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            sources[_i - 1] = arguments[_i];\n        }\n        sources.forEach(function (source) { return Object.keys(source).forEach(function (key) { return destination[key] = source[key]; }); });\n        return destination;\n    }\n    exports.assign = assign;\n    function toObject(arr, keyMap, valueMap) {\n        if (valueMap === void 0) { valueMap = function (x) { return x; }; }\n        return arr.reduce(function (o, d) { return assign(o, (_a = {}, _a[keyMap(d)] = valueMap(d), _a)); var _a; }, Object.create(null));\n    }\n    exports.toObject = toObject;\n    function equals(one, other) {\n        if (one === other) {\n            return true;\n        }\n        if (one === null || one === undefined || other === null || other === undefined) {\n            return false;\n        }\n        if (typeof one !== typeof other) {\n            return false;\n        }\n        if (typeof one !== 'object') {\n            return false;\n        }\n        if ((Array.isArray(one)) !== (Array.isArray(other))) {\n            return false;\n        }\n        var i, key;\n        if (Array.isArray(one)) {\n            if (one.length !== other.length) {\n                return false;\n            }\n            for (i = 0; i < one.length; i++) {\n                if (!equals(one[i], other[i])) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var oneKeys = [];\n            for (key in one) {\n                oneKeys.push(key);\n            }\n            oneKeys.sort();\n            var otherKeys = [];\n            for (key in other) {\n                otherKeys.push(key);\n            }\n            otherKeys.sort();\n            if (!equals(oneKeys, otherKeys)) {\n                return false;\n            }\n            for (i = 0; i < oneKeys.length; i++) {\n                if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    exports.equals = equals;\n    function ensureProperty(obj, property, defaultValue) {\n        if (typeof obj[property] === 'undefined') {\n            obj[property] = defaultValue;\n        }\n    }\n    exports.ensureProperty = ensureProperty;\n    function arrayToHash(array) {\n        var result = {};\n        for (var i = 0; i < array.length; ++i) {\n            result[array[i]] = true;\n        }\n        return result;\n    }\n    exports.arrayToHash = arrayToHash;\n    /**\n     * Given an array of strings, returns a function which, given a string\n     * returns true or false whether the string is in that array.\n     */\n    function createKeywordMatcher(arr, caseInsensitive) {\n        if (caseInsensitive === void 0) { caseInsensitive = false; }\n        if (caseInsensitive) {\n            arr = arr.map(function (x) { return x.toLowerCase(); });\n        }\n        var hash = arrayToHash(arr);\n        if (caseInsensitive) {\n            return function (word) {\n                return hash[word.toLowerCase()] !== undefined && hash.hasOwnProperty(word.toLowerCase());\n            };\n        }\n        else {\n            return function (word) {\n                return hash[word] !== undefined && hash.hasOwnProperty(word);\n            };\n        }\n    }\n    exports.createKeywordMatcher = createKeywordMatcher;\n    /**\n     * Started from TypeScript's __extends function to make a type a subclass of a specific class.\n     * Modified to work with properties already defined on the derivedClass, since we can't get TS\n     * to call this method before the constructor definition.\n     */\n    function derive(baseClass, derivedClass) {\n        for (var prop in baseClass) {\n            if (baseClass.hasOwnProperty(prop)) {\n                derivedClass[prop] = baseClass[prop];\n            }\n        }\n        derivedClass = derivedClass || function () { };\n        var basePrototype = baseClass.prototype;\n        var derivedPrototype = derivedClass.prototype;\n        derivedClass.prototype = Object.create(basePrototype);\n        for (var prop in derivedPrototype) {\n            if (derivedPrototype.hasOwnProperty(prop)) {\n                // handle getters and setters properly\n                Object.defineProperty(derivedClass.prototype, prop, Object.getOwnPropertyDescriptor(derivedPrototype, prop));\n            }\n        }\n        // Cast to any due to Bug 16188:PropertyDescriptor set and get function should be optional.\n        Object.defineProperty(derivedClass.prototype, 'constructor', { value: derivedClass, writable: true, configurable: true, enumerable: true });\n    }\n    exports.derive = derive;\n    /**\n     * Calls JSON.Stringify with a replacer to break apart any circular references.\n     * This prevents JSON.stringify from throwing the exception\n     *  \"Uncaught TypeError: Converting circular structure to JSON\"\n     */\n    function safeStringify(obj) {\n        var seen = [];\n        return JSON.stringify(obj, function (key, value) {\n            if (Types.isObject(value) || Array.isArray(value)) {\n                if (seen.indexOf(value) !== -1) {\n                    return '[Circular]';\n                }\n                else {\n                    seen.push(value);\n                }\n            }\n            return value;\n        });\n    }\n    exports.safeStringify = safeStringify;\n    function getOrDefault(obj, fn, defaultValue) {\n        if (defaultValue === void 0) { defaultValue = null; }\n        var result = fn(obj);\n        return typeof result === 'undefined' ? defaultValue : result;\n    }\n    exports.getOrDefault = getOrDefault;\n});\n\ndefine(__m[51], __M([1,0,7]), function (require, exports, platform) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    function _encode(ch) {\n        return '%' + ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\n    function encodeURIComponent2(str) {\n        return encodeURIComponent(str).replace(/[!'()*]/g, _encode);\n    }\n    function encodeNoop(str) {\n        return str;\n    }\n    /**\n     * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n     * This class is a simple parser which creates the basic component paths\n     * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n     * and encoding.\n     *\n     *       foo://example.com:8042/over/there?name=ferret#nose\n     *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n     *        |           |            |            |        |\n     *     scheme     authority       path        query   fragment\n     *        |   _____________________|__\n     *       / \\ /                        \\\n     *       urn:example:animal:ferret:nose\n     *\n     *\n     */\n    var URI = (function () {\n        function URI() {\n            this._scheme = URI._empty;\n            this._authority = URI._empty;\n            this._path = URI._empty;\n            this._query = URI._empty;\n            this._fragment = URI._empty;\n            this._formatted = null;\n            this._fsPath = null;\n        }\n        URI.isUri = function (thing) {\n            if (thing instanceof URI) {\n                return true;\n            }\n            if (!thing) {\n                return false;\n            }\n            return typeof thing.authority === 'string'\n                && typeof thing.fragment === 'string'\n                && typeof thing.path === 'string'\n                && typeof thing.query === 'string'\n                && typeof thing.scheme === 'string';\n        };\n        Object.defineProperty(URI.prototype, \"scheme\", {\n            /**\n             * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n             * The part before the first colon.\n             */\n            get: function () {\n                return this._scheme;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(URI.prototype, \"authority\", {\n            /**\n             * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n             * The part between the first double slashes and the next slash.\n             */\n            get: function () {\n                return this._authority;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(URI.prototype, \"path\", {\n            /**\n             * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n             */\n            get: function () {\n                return this._path;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(URI.prototype, \"query\", {\n            /**\n             * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n             */\n            get: function () {\n                return this._query;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(URI.prototype, \"fragment\", {\n            /**\n             * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n             */\n            get: function () {\n                return this._fragment;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(URI.prototype, \"fsPath\", {\n            // ---- filesystem path -----------------------\n            /**\n             * Returns a string representing the corresponding file system path of this URI.\n             * Will handle UNC paths and normalize windows drive letters to lower-case. Also\n             * uses the platform specific path separator. Will *not* validate the path for\n             * invalid characters and semantics. Will *not* look at the scheme of this URI.\n             */\n            get: function () {\n                if (!this._fsPath) {\n                    var value;\n                    if (this._authority && this.scheme === 'file') {\n                        // unc path: file://shares/c$/far/boo\n                        value = \"//\" + this._authority + this._path;\n                    }\n                    else if (URI._driveLetterPath.test(this._path)) {\n                        // windows drive letter: file:///c:/far/boo\n                        value = this._path[1].toLowerCase() + this._path.substr(2);\n                    }\n                    else {\n                        // other path\n                        value = this._path;\n                    }\n                    if (platform.isWindows) {\n                        value = value.replace(/\\//g, '\\\\');\n                    }\n                    this._fsPath = value;\n                }\n                return this._fsPath;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        // ---- modify to new -------------------------\n        URI.prototype.with = function (change) {\n            if (!change) {\n                return this;\n            }\n            var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n            if (scheme === void 0) {\n                scheme = this.scheme;\n            }\n            else if (scheme === null) {\n                scheme = '';\n            }\n            if (authority === void 0) {\n                authority = this.authority;\n            }\n            else if (authority === null) {\n                authority = '';\n            }\n            if (path === void 0) {\n                path = this.path;\n            }\n            else if (path === null) {\n                path = '';\n            }\n            if (query === void 0) {\n                query = this.query;\n            }\n            else if (query === null) {\n                query = '';\n            }\n            if (fragment === void 0) {\n                fragment = this.fragment;\n            }\n            else if (fragment === null) {\n                fragment = '';\n            }\n            if (scheme === this.scheme\n                && authority === this.authority\n                && path === this.path\n                && query === this.query\n                && fragment === this.fragment) {\n                return this;\n            }\n            var ret = new URI();\n            ret._scheme = scheme;\n            ret._authority = authority;\n            ret._path = path;\n            ret._query = query;\n            ret._fragment = fragment;\n            URI._validate(ret);\n            return ret;\n        };\n        // ---- parse & validate ------------------------\n        URI.parse = function (value) {\n            var ret = new URI();\n            var data = URI._parseComponents(value);\n            ret._scheme = data.scheme;\n            ret._authority = decodeURIComponent(data.authority);\n            ret._path = decodeURIComponent(data.path);\n            ret._query = decodeURIComponent(data.query);\n            ret._fragment = decodeURIComponent(data.fragment);\n            URI._validate(ret);\n            return ret;\n        };\n        URI.file = function (path) {\n            var ret = new URI();\n            ret._scheme = 'file';\n            // normalize to fwd-slashes\n            path = path.replace(/\\\\/g, URI._slash);\n            // check for authority as used in UNC shares\n            // or use the path as given\n            if (path[0] === URI._slash && path[0] === path[1]) {\n                var idx = path.indexOf(URI._slash, 2);\n                if (idx === -1) {\n                    ret._authority = path.substring(2);\n                }\n                else {\n                    ret._authority = path.substring(2, idx);\n                    ret._path = path.substring(idx);\n                }\n            }\n            else {\n                ret._path = path;\n            }\n            // Ensure that path starts with a slash\n            // or that it is at least a slash\n            if (ret._path[0] !== URI._slash) {\n                ret._path = URI._slash + ret._path;\n            }\n            URI._validate(ret);\n            return ret;\n        };\n        URI._parseComponents = function (value) {\n            var ret = {\n                scheme: URI._empty,\n                authority: URI._empty,\n                path: URI._empty,\n                query: URI._empty,\n                fragment: URI._empty,\n            };\n            var match = URI._regexp.exec(value);\n            if (match) {\n                ret.scheme = match[2] || ret.scheme;\n                ret.authority = match[4] || ret.authority;\n                ret.path = match[5] || ret.path;\n                ret.query = match[7] || ret.query;\n                ret.fragment = match[9] || ret.fragment;\n            }\n            return ret;\n        };\n        URI.from = function (components) {\n            return new URI().with(components);\n        };\n        URI._validate = function (ret) {\n            // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n            // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n            if (ret.scheme && !URI._schemePattern.test(ret.scheme)) {\n                throw new Error('[UriError]: Scheme contains illegal characters.');\n            }\n            // path, http://tools.ietf.org/html/rfc3986#section-3.3\n            // If a URI contains an authority component, then the path component\n            // must either be empty or begin with a slash (\"/\") character.  If a URI\n            // does not contain an authority component, then the path cannot begin\n            // with two slash characters (\"//\").\n            if (ret.path) {\n                if (ret.authority) {\n                    if (!URI._singleSlashStart.test(ret.path)) {\n                        throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n                    }\n                }\n                else {\n                    if (URI._doubleSlashStart.test(ret.path)) {\n                        throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n                    }\n                }\n            }\n        };\n        // ---- printing/externalize ---------------------------\n        /**\n         *\n         * @param skipEncoding Do not encode the result, default is `false`\n         */\n        URI.prototype.toString = function (skipEncoding) {\n            if (skipEncoding === void 0) { skipEncoding = false; }\n            if (!skipEncoding) {\n                if (!this._formatted) {\n                    this._formatted = URI._asFormatted(this, false);\n                }\n                return this._formatted;\n            }\n            else {\n                // we don't cache that\n                return URI._asFormatted(this, true);\n            }\n        };\n        URI._asFormatted = function (uri, skipEncoding) {\n            var encoder = !skipEncoding\n                ? encodeURIComponent2\n                : encodeNoop;\n            var parts = [];\n            var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n            if (scheme) {\n                parts.push(scheme, ':');\n            }\n            if (authority || scheme === 'file') {\n                parts.push('//');\n            }\n            if (authority) {\n                authority = authority.toLowerCase();\n                var idx = authority.indexOf(':');\n                if (idx === -1) {\n                    parts.push(encoder(authority));\n                }\n                else {\n                    parts.push(encoder(authority.substr(0, idx)), authority.substr(idx));\n                }\n            }\n            if (path) {\n                // lower-case windows drive letters in /C:/fff or C:/fff\n                var m = URI._upperCaseDrive.exec(path);\n                if (m) {\n                    if (m[1]) {\n                        path = '/' + m[2].toLowerCase() + path.substr(3); // \"/c:\".length === 3\n                    }\n                    else {\n                        path = m[2].toLowerCase() + path.substr(2); // // \"c:\".length === 2\n                    }\n                }\n                // encode every segement but not slashes\n                // make sure that # and ? are always encoded\n                // when occurring in paths - otherwise the result\n                // cannot be parsed back again\n                var lastIdx = 0;\n                while (true) {\n                    var idx = path.indexOf(URI._slash, lastIdx);\n                    if (idx === -1) {\n                        parts.push(encoder(path.substring(lastIdx)).replace(/[#?]/, _encode));\n                        break;\n                    }\n                    parts.push(encoder(path.substring(lastIdx, idx)).replace(/[#?]/, _encode), URI._slash);\n                    lastIdx = idx + 1;\n                }\n                ;\n            }\n            if (query) {\n                parts.push('?', encoder(query));\n            }\n            if (fragment) {\n                parts.push('#', encoder(fragment));\n            }\n            return parts.join(URI._empty);\n        };\n        URI.prototype.toJSON = function () {\n            return {\n                scheme: this.scheme,\n                authority: this.authority,\n                path: this.path,\n                fsPath: this.fsPath,\n                query: this.query,\n                fragment: this.fragment,\n                external: this.toString(),\n                $mid: 1\n            };\n        };\n        URI.revive = function (data) {\n            var result = new URI();\n            result._scheme = data.scheme;\n            result._authority = data.authority;\n            result._path = data.path;\n            result._query = data.query;\n            result._fragment = data.fragment;\n            result._fsPath = data.fsPath;\n            result._formatted = data.external;\n            URI._validate(result);\n            return result;\n        };\n        URI._empty = '';\n        URI._slash = '/';\n        URI._regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n        URI._driveLetterPath = /^\\/[a-zA-z]:/;\n        URI._upperCaseDrive = /^(\\/)?([A-Z]:)/;\n        URI._schemePattern = /^\\w[\\w\\d+.-]*$/;\n        URI._singleSlashStart = /^\\//;\n        URI._doubleSlashStart = /^\\/\\//;\n        return URI;\n    }());\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = URI;\n});\n\ndefine(__m[94], __M([1,0,51]), function (require, exports, uri_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    function stringify(obj) {\n        return JSON.stringify(obj, replacer);\n    }\n    exports.stringify = stringify;\n    function parse(text) {\n        return JSON.parse(text, reviver);\n    }\n    exports.parse = parse;\n    function replacer(key, value) {\n        // URI is done via toJSON-member\n        if (value instanceof RegExp) {\n            return {\n                $mid: 2,\n                source: value.source,\n                flags: (value.global ? 'g' : '') + (value.ignoreCase ? 'i' : '') + (value.multiline ? 'm' : ''),\n            };\n        }\n        return value;\n    }\n    function reviver(key, value) {\n        var marshallingConst;\n        if (value !== void 0 && value !== null) {\n            marshallingConst = value.$mid;\n        }\n        if (marshallingConst === 1) {\n            return uri_1.default.revive(value);\n        }\n        else if (marshallingConst === 2) {\n            return new RegExp(value.source, value.flags);\n        }\n        else {\n            return value;\n        }\n    }\n});\n\n/**\n * Extracted from https://github.com/winjs/winjs\n * Version: 4.4.0(ec3258a9f3a36805a187848984e3bb938044178d)\n * Copyright (c) Microsoft Corporation.\n * All Rights Reserved.\n * Licensed under the MIT License.\n */\n(function() {\n\nvar _modules = {};\n_modules[\"WinJS/Core/_WinJS\"] = {};\n\nvar _winjs = function(moduleId, deps, factory) {\n    var exports = {};\n    var exportsPassedIn = false;\n\n    var depsValues = deps.map(function(dep) {\n        if (dep === 'exports') {\n            exportsPassedIn = true;\n            return exports;\n        }\n        return _modules[dep];\n    });\n\n    var result = factory.apply({}, depsValues);\n\n    _modules[moduleId] = exportsPassedIn ? exports : result;\n};\n\n\n_winjs(\"WinJS/Core/_Global\", [], function () {\n    \"use strict\";\n\n    // Appease jshint\n    /* global window, self, global */\n\n    var globalObject =\n        typeof window !== 'undefined' ? window :\n        typeof self !== 'undefined' ? self :\n        typeof global !== 'undefined' ? global :\n        {};\n    return globalObject;\n});\n\n_winjs(\"WinJS/Core/_BaseCoreUtils\", [\"WinJS/Core/_Global\"], function baseCoreUtilsInit(_Global) {\n    \"use strict\";\n\n    var hasWinRT = !!_Global.Windows;\n\n    function markSupportedForProcessing(func) {\n        /// <signature helpKeyword=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// <summary locid=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// Marks a function as being compatible with declarative processing, such as WinJS.UI.processAll\n        /// or WinJS.Binding.processAll.\n        /// </summary>\n        /// <param name=\"func\" type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_p:func\">\n        /// The function to be marked as compatible with declarative processing.\n        /// </param>\n        /// <returns type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_returnValue\">\n        /// The input function.\n        /// </returns>\n        /// </signature>\n        func.supportedForProcessing = true;\n        return func;\n    }\n\n    return {\n        hasWinRT: hasWinRT,\n        markSupportedForProcessing: markSupportedForProcessing,\n        _setImmediate: _Global.setImmediate ? _Global.setImmediate.bind(_Global) : function (handler) {\n            _Global.setTimeout(handler, 0);\n        }\n    };\n});\n_winjs(\"WinJS/Core/_WriteProfilerMark\", [\"WinJS/Core/_Global\"], function profilerInit(_Global) {\n    \"use strict\";\n\n    return _Global.msWriteProfilerMark || function () { };\n});\n_winjs(\"WinJS/Core/_Base\", [\"WinJS/Core/_WinJS\",\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_WriteProfilerMark\"], function baseInit(_WinJS, _Global, _BaseCoreUtils, _WriteProfilerMark) {\n    \"use strict\";\n\n    function initializeProperties(target, members, prefix) {\n        var keys = Object.keys(members);\n        var isArray = Array.isArray(target);\n        var properties;\n        var i, len;\n        for (i = 0, len = keys.length; i < len; i++) {\n            var key = keys[i];\n            var enumerable = key.charCodeAt(0) !== /*_*/95;\n            var member = members[key];\n            if (member && typeof member === 'object') {\n                if (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n                    if (member.enumerable === undefined) {\n                        member.enumerable = enumerable;\n                    }\n                    if (prefix && member.setName && typeof member.setName === 'function') {\n                        member.setName(prefix + \".\" + key);\n                    }\n                    properties = properties || {};\n                    properties[key] = member;\n                    continue;\n                }\n            }\n            if (!enumerable) {\n                properties = properties || {};\n                properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true };\n                continue;\n            }\n            if (isArray) {\n                target.forEach(function (target) {\n                    target[key] = member;\n                });\n            } else {\n                target[key] = member;\n            }\n        }\n        if (properties) {\n            if (isArray) {\n                target.forEach(function (target) {\n                    Object.defineProperties(target, properties);\n                });\n            } else {\n                Object.defineProperties(target, properties);\n            }\n        }\n    }\n\n    (function () {\n\n        var _rootNamespace = _WinJS;\n        if (!_rootNamespace.Namespace) {\n            _rootNamespace.Namespace = Object.create(Object.prototype);\n        }\n\n        function createNamespace(parentNamespace, name) {\n            var currentNamespace = parentNamespace || {};\n            if (name) {\n                var namespaceFragments = name.split(\".\");\n                if (currentNamespace === _Global && namespaceFragments[0] === \"WinJS\") {\n                    currentNamespace = _WinJS;\n                    namespaceFragments.splice(0, 1);\n                }\n                for (var i = 0, len = namespaceFragments.length; i < len; i++) {\n                    var namespaceName = namespaceFragments[i];\n                    if (!currentNamespace[namespaceName]) {\n                        Object.defineProperty(currentNamespace, namespaceName,\n                            { value: {}, writable: false, enumerable: true, configurable: true }\n                        );\n                    }\n                    currentNamespace = currentNamespace[namespaceName];\n                }\n            }\n            return currentNamespace;\n        }\n\n        function defineWithParent(parentNamespace, name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.defineWithParent\">\n            /// <summary locid=\"WinJS.Namespace.defineWithParent\">\n            /// Defines a new namespace with the specified name under the specified parent namespace.\n            /// </summary>\n            /// <param name=\"parentNamespace\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:parentNamespace\">\n            /// The parent namespace.\n            /// </param>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.defineWithParent_p:name\">\n            /// The name of the new namespace.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            var currentNamespace = createNamespace(parentNamespace, name);\n\n            if (members) {\n                initializeProperties(currentNamespace, members, name || \"<ANONYMOUS>\");\n            }\n\n            return currentNamespace;\n        }\n\n        function define(name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.define\">\n            /// <summary locid=\"WinJS.Namespace.define\">\n            /// Defines a new namespace with the specified name.\n            /// </summary>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.define_p:name\">\n            /// The name of the namespace. This could be a dot-separated name for nested namespaces.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.define_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.define_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            return defineWithParent(_Global, name, members);\n        }\n\n        var LazyStates = {\n            uninitialized: 1,\n            working: 2,\n            initialized: 3,\n        };\n\n        function lazy(f) {\n            var name;\n            var state = LazyStates.uninitialized;\n            var result;\n            return {\n                setName: function (value) {\n                    name = value;\n                },\n                get: function () {\n                    switch (state) {\n                        case LazyStates.initialized:\n                            return result;\n\n                        case LazyStates.uninitialized:\n                            state = LazyStates.working;\n                            try {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StartTM\");\n                                result = f();\n                            } finally {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StopTM\");\n                                state = LazyStates.uninitialized;\n                            }\n                            f = null;\n                            state = LazyStates.initialized;\n                            return result;\n\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            throw \"Illegal\";\n                    }\n                },\n                set: function (value) {\n                    switch (state) {\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            state = LazyStates.initialized;\n                            result = value;\n                            break;\n                    }\n                },\n                enumerable: true,\n                configurable: true,\n            };\n        }\n\n        // helper for defining AMD module members\n        function moduleDefine(exports, name, members) {\n            var target = [exports];\n            var publicNS = null;\n            if (name) {\n                publicNS = createNamespace(_Global, name);\n                target.push(publicNS);\n            }\n            initializeProperties(target, members, name || \"<ANONYMOUS>\");\n            return publicNS;\n        }\n\n        // Establish members of the \"WinJS.Namespace\" namespace\n        Object.defineProperties(_rootNamespace.Namespace, {\n\n            defineWithParent: { value: defineWithParent, writable: true, enumerable: true, configurable: true },\n\n            define: { value: define, writable: true, enumerable: true, configurable: true },\n\n            _lazy: { value: lazy, writable: true, enumerable: true, configurable: true },\n\n            _moduleDefine: { value: moduleDefine, writable: true, enumerable: true, configurable: true }\n\n        });\n\n    })();\n\n    (function () {\n\n        function define(constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.define\">\n            /// <summary locid=\"WinJS.Class.define\">\n            /// Defines a class using the given constructor and the specified instance members.\n            /// </summary>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.define_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:staticMembers\">\n            /// The set of static fields, properties, and methods made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.define_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            _BaseCoreUtils.markSupportedForProcessing(constructor);\n            if (instanceMembers) {\n                initializeProperties(constructor.prototype, instanceMembers);\n            }\n            if (staticMembers) {\n                initializeProperties(constructor, staticMembers);\n            }\n            return constructor;\n        }\n\n        function derive(baseClass, constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.derive\">\n            /// <summary locid=\"WinJS.Class.derive\">\n            /// Creates a sub-class based on the supplied baseClass parameter, using prototypal inheritance.\n            /// </summary>\n            /// <param name=\"baseClass\" type=\"Function\" locid=\"WinJS.Class.derive_p:baseClass\">\n            /// The class to inherit from.\n            /// </param>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.derive_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:staticMembers\">\n            /// The set of static fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.derive_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            if (baseClass) {\n                constructor = constructor || function () { };\n                var basePrototype = baseClass.prototype;\n                constructor.prototype = Object.create(basePrototype);\n                _BaseCoreUtils.markSupportedForProcessing(constructor);\n                Object.defineProperty(constructor.prototype, \"constructor\", { value: constructor, writable: true, configurable: true, enumerable: true });\n                if (instanceMembers) {\n                    initializeProperties(constructor.prototype, instanceMembers);\n                }\n                if (staticMembers) {\n                    initializeProperties(constructor, staticMembers);\n                }\n                return constructor;\n            } else {\n                return define(constructor, instanceMembers, staticMembers);\n            }\n        }\n\n        function mix(constructor) {\n            /// <signature helpKeyword=\"WinJS.Class.mix\">\n            /// <summary locid=\"WinJS.Class.mix\">\n            /// Defines a class using the given constructor and the union of the set of instance members\n            /// specified by all the mixin objects. The mixin parameter list is of variable length.\n            /// </summary>\n            /// <param name=\"constructor\" locid=\"WinJS.Class.mix_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.mix_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            var i, len;\n            for (i = 1, len = arguments.length; i < len; i++) {\n                initializeProperties(constructor.prototype, arguments[i]);\n            }\n            return constructor;\n        }\n\n        // Establish members of \"WinJS.Class\" namespace\n        _WinJS.Namespace.define(\"WinJS.Class\", {\n            define: define,\n            derive: derive,\n            mix: mix\n        });\n\n    })();\n\n    return {\n        Namespace: _WinJS.Namespace,\n        Class: _WinJS.Class\n    };\n\n});\n_winjs(\"WinJS/Core/_ErrorFromName\", [\"WinJS/Core/_Base\"], function errorsInit(_Base) {\n    \"use strict\";\n\n    var ErrorFromName = _Base.Class.derive(Error, function (name, message) {\n        /// <signature helpKeyword=\"WinJS.ErrorFromName\">\n        /// <summary locid=\"WinJS.ErrorFromName\">\n        /// Creates an Error object with the specified name and message properties.\n        /// </summary>\n        /// <param name=\"name\" type=\"String\" locid=\"WinJS.ErrorFromName_p:name\">The name of this error. The name is meant to be consumed programmatically and should not be localized.</param>\n        /// <param name=\"message\" type=\"String\" optional=\"true\" locid=\"WinJS.ErrorFromName_p:message\">The message for this error. The message is meant to be consumed by humans and should be localized.</param>\n        /// <returns type=\"Error\" locid=\"WinJS.ErrorFromName_returnValue\">Error instance with .name and .message properties populated</returns>\n        /// </signature>\n        this.name = name;\n        this.message = message || name;\n    }, {\n        /* empty */\n    }, {\n        supportedForProcessing: false,\n    });\n\n    _Base.Namespace.define(\"WinJS\", {\n        // ErrorFromName establishes a simple pattern for returning error codes.\n        //\n        ErrorFromName: ErrorFromName\n    });\n\n    return ErrorFromName;\n\n});\n\n\n_winjs(\"WinJS/Core/_Events\", [\"exports\",\"WinJS/Core/_Base\"], function eventsInit(exports, _Base) {\n    \"use strict\";\n\n\n    function createEventProperty(name) {\n        var eventPropStateName = \"_on\" + name + \"state\";\n\n        return {\n            get: function () {\n                var state = this[eventPropStateName];\n                return state && state.userHandler;\n            },\n            set: function (handler) {\n                var state = this[eventPropStateName];\n                if (handler) {\n                    if (!state) {\n                        state = { wrapper: function (evt) { return state.userHandler(evt); }, userHandler: handler };\n                        Object.defineProperty(this, eventPropStateName, { value: state, enumerable: false, writable:true, configurable: true });\n                        this.addEventListener(name, state.wrapper, false);\n                    }\n                    state.userHandler = handler;\n                } else if (state) {\n                    this.removeEventListener(name, state.wrapper, false);\n                    this[eventPropStateName] = null;\n                }\n            },\n            enumerable: true\n        };\n    }\n\n    function createEventProperties() {\n        /// <signature helpKeyword=\"WinJS.Utilities.createEventProperties\">\n        /// <summary locid=\"WinJS.Utilities.createEventProperties\">\n        /// Creates an object that has one property for each name passed to the function.\n        /// </summary>\n        /// <param name=\"events\" locid=\"WinJS.Utilities.createEventProperties_p:events\">\n        /// A variable list of property names.\n        /// </param>\n        /// <returns type=\"Object\" locid=\"WinJS.Utilities.createEventProperties_returnValue\">\n        /// The object with the specified properties. The names of the properties are prefixed with 'on'.\n        /// </returns>\n        /// </signature>\n        var props = {};\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            var name = arguments[i];\n            props[\"on\" + name] = createEventProperty(name);\n        }\n        return props;\n    }\n\n    var EventMixinEvent = _Base.Class.define(\n        function EventMixinEvent_ctor(type, detail, target) {\n            this.detail = detail;\n            this.target = target;\n            this.timeStamp = Date.now();\n            this.type = type;\n        },\n        {\n            bubbles: { value: false, writable: false },\n            cancelable: { value: false, writable: false },\n            currentTarget: {\n                get: function () { return this.target; }\n            },\n            defaultPrevented: {\n                get: function () { return this._preventDefaultCalled; }\n            },\n            trusted: { value: false, writable: false },\n            eventPhase: { value: 0, writable: false },\n            target: null,\n            timeStamp: null,\n            type: null,\n\n            preventDefault: function () {\n                this._preventDefaultCalled = true;\n            },\n            stopImmediatePropagation: function () {\n                this._stopImmediatePropagationCalled = true;\n            },\n            stopPropagation: function () {\n            }\n        }, {\n            supportedForProcessing: false,\n        }\n    );\n\n    var eventMixin = {\n        _listeners: null,\n\n        addEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// Adds an event listener to the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:listener\">\n            /// The listener to invoke when the event is raised.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:useCapture\">\n            /// if true initiates capture, otherwise false.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            this._listeners = this._listeners || {};\n            var eventListeners = (this._listeners[type] = this._listeners[type] || []);\n            for (var i = 0, len = eventListeners.length; i < len; i++) {\n                var l = eventListeners[i];\n                if (l.useCapture === useCapture && l.listener === listener) {\n                    return;\n                }\n            }\n            eventListeners.push({ listener: listener, useCapture: useCapture });\n        },\n        dispatchEvent: function (type, details) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// Raises an event of the specified type and with the specified additional properties.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"details\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:details\">\n            /// The set of additional properties to be attached to the event object when the event is raised.\n            /// </param>\n            /// <returns type=\"Boolean\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_returnValue\">\n            /// true if preventDefault was called on the event.\n            /// </returns>\n            /// </signature>\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                var eventValue = new EventMixinEvent(type, details, this);\n                // Need to copy the array to protect against people unregistering while we are dispatching\n                listeners = listeners.slice(0, listeners.length);\n                for (var i = 0, len = listeners.length; i < len && !eventValue._stopImmediatePropagationCalled; i++) {\n                    listeners[i].listener(eventValue);\n                }\n                return eventValue.defaultPrevented || false;\n            }\n            return false;\n        },\n        removeEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// Removes an event listener from the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:listener\">\n            /// The listener to remove.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:useCapture\">\n            /// Specifies whether to initiate capture.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                    var l = listeners[i];\n                    if (l.listener === listener && l.useCapture === useCapture) {\n                        listeners.splice(i, 1);\n                        if (listeners.length === 0) {\n                            delete this._listeners[type];\n                        }\n                        // Only want to remove one element for each call to removeEventListener\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    _Base.Namespace._moduleDefine(exports, \"WinJS.Utilities\", {\n        _createEventProperty: createEventProperty,\n        createEventProperties: createEventProperties,\n        eventMixin: eventMixin\n    });\n\n});\n\n\n_winjs(\"WinJS/Core/_Trace\", [\"WinJS/Core/_Global\"], function traceInit(_Global) {\n    \"use strict\";\n\n    function nop(v) {\n        return v;\n    }\n\n    return {\n        _traceAsyncOperationStarting: (_Global.Debug && _Global.Debug.msTraceAsyncOperationStarting && _Global.Debug.msTraceAsyncOperationStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncOperationCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncOperationCompleted && _Global.Debug.msTraceAsyncOperationCompleted.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackStarting: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackStarting && _Global.Debug.msTraceAsyncCallbackStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackCompleted && _Global.Debug.msTraceAsyncCallbackCompleted.bind(_Global.Debug)) || nop\n    };\n});\n_winjs(\"WinJS/Promise/_StateMachine\", [\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_Base\",\"WinJS/Core/_ErrorFromName\",\"WinJS/Core/_Events\",\"WinJS/Core/_Trace\"], function promiseStateMachineInit(_Global, _BaseCoreUtils, _Base, _ErrorFromName, _Events, _Trace) {\n    \"use strict\";\n\n    _Global.Debug && (_Global.Debug.setNonUserCodeExceptions = true);\n\n    var ListenerType = _Base.Class.mix(_Base.Class.define(null, { /*empty*/ }, { supportedForProcessing: false }), _Events.eventMixin);\n    var promiseEventListeners = new ListenerType();\n    // make sure there is a listeners collection so that we can do a more trivial check below\n    promiseEventListeners._listeners = {};\n    var errorET = \"error\";\n    var canceledName = \"Canceled\";\n    var tagWithStack = false;\n    var tag = {\n        promise: 0x01,\n        thenPromise: 0x02,\n        errorPromise: 0x04,\n        exceptionPromise: 0x08,\n        completePromise: 0x10,\n    };\n    tag.all = tag.promise | tag.thenPromise | tag.errorPromise | tag.exceptionPromise | tag.completePromise;\n\n    //\n    // Global error counter, for each error which enters the system we increment this once and then\n    // the error number travels with the error as it traverses the tree of potential handlers.\n    //\n    // When someone has registered to be told about errors (WinJS.Promise.callonerror) promises\n    // which are in error will get tagged with a ._errorId field. This tagged field is the\n    // contract by which nested promises with errors will be identified as chaining for the\n    // purposes of the callonerror semantics. If a nested promise in error is encountered without\n    // a ._errorId it will be assumed to be foreign and treated as an interop boundary and\n    // a new error id will be minted.\n    //\n    var error_number = 1;\n\n    //\n    // The state machine has a interesting hiccup in it with regards to notification, in order\n    // to flatten out notification and avoid recursion for synchronous completion we have an\n    // explicit set of *_notify states which are responsible for notifying their entire tree\n    // of children. They can do this because they know that immediate children are always\n    // ThenPromise instances and we can therefore reach into their state to access the\n    // _listeners collection.\n    //\n    // So, what happens is that a Promise will be fulfilled through the _completed or _error\n    // messages at which point it will enter a *_notify state and be responsible for to move\n    // its children into an (as appropriate) success or error state and also notify that child's\n    // listeners of the state transition, until leaf notes are reached.\n    //\n\n    var state_created,              // -> working\n        state_working,              // -> error | error_notify | success | success_notify | canceled | waiting\n        state_waiting,              // -> error | error_notify | success | success_notify | waiting_canceled\n        state_waiting_canceled,     // -> error | error_notify | success | success_notify | canceling\n        state_canceled,             // -> error | error_notify | success | success_notify | canceling\n        state_canceling,            // -> error_notify\n        state_success_notify,       // -> success\n        state_success,              // -> .\n        state_error_notify,         // -> error\n        state_error;                // -> .\n\n    // Noop function, used in the various states to indicate that they don't support a given\n    // message. Named with the somewhat cute name '_' because it reads really well in the states.\n\n    function _() { }\n\n    // Initial state\n    //\n    state_created = {\n        name: \"created\",\n        enter: function (promise) {\n            promise._setState(state_working);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Ready state, waiting for a message (completed/error/progress), able to be canceled\n    //\n    state_working = {\n        name: \"working\",\n        enter: _,\n        cancel: function (promise) {\n            promise._setState(state_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting state, if a promise is completed with a value which is itself a promise\n    // (has a then() method) it signs up to be informed when that child promise is\n    // fulfilled at which point it will be fulfilled with that value.\n    //\n    state_waiting = {\n        name: \"waiting\",\n        enter: function (promise) {\n            var waitedUpon = promise._value;\n            // We can special case our own intermediate promises which are not in a\n            //  terminal state by just pushing this promise as a listener without\n            //  having to create new indirection functions\n            if (waitedUpon instanceof ThenPromise &&\n                waitedUpon._state !== state_error &&\n                waitedUpon._state !== state_success) {\n                pushListener(waitedUpon, { promise: promise });\n            } else {\n                var error = function (value) {\n                    if (waitedUpon._errorId) {\n                        promise._chainedError(value, waitedUpon);\n                    } else {\n                        // Because this is an interop boundary we want to indicate that this\n                        //  error has been handled by the promise infrastructure before we\n                        //  begin a new handling chain.\n                        //\n                        callonerror(promise, value, detailsForHandledError, waitedUpon, error);\n                        promise._error(value);\n                    }\n                };\n                error.handlesOnError = true;\n                waitedUpon.then(\n                    promise._completed.bind(promise),\n                    error,\n                    promise._progress.bind(promise)\n                );\n            }\n        },\n        cancel: function (promise) {\n            promise._setState(state_waiting_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting canceled state, when a promise has been in a waiting state and receives a\n    // request to cancel its pending work it will forward that request to the child promise\n    // and then waits to be informed of the result. This promise moves itself into the\n    // canceling state but understands that the child promise may instead push it to a\n    // different state.\n    //\n    state_waiting_canceled = {\n        name: \"waiting_canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. Triggering a cancel on the promise\n            // that we are waiting upon may result in a different state transition\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            var waitedUpon = promise._value;\n            if (waitedUpon.cancel) {\n                waitedUpon.cancel();\n            }\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceled state, moves to the canceling state and then tells the promise to do\n    // whatever it might need to do on cancelation.\n    //\n    state_canceled = {\n        name: \"canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. The _cancelAction may change the state\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            promise._cancelAction();\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceling state, commits to the promise moving to an error state with an error\n    // object whose 'name' and 'message' properties contain the string \"Canceled\"\n    //\n    state_canceling = {\n        name: \"canceling\",\n        enter: function (promise) {\n            var error = new Error(canceledName);\n            error.name = error.message;\n            promise._value = error;\n            promise._setState(state_error_notify);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success notify state, moves a promise to the success state and notifies all children\n    //\n    state_success_notify = {\n        name: \"complete_notify\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_success);\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success state, moves a promise to the success state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_success = {\n        name: \"success\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error notify state, moves a promise to the error state and notifies all children\n    //\n    state_error_notify = {\n        name: \"error_notify\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_error);\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error state, moves a promise to the error state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_error = {\n        name: \"error\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    //\n    // The statemachine implementation follows a very particular pattern, the states are specified\n    // as static stateless bags of functions which are then indirected through the state machine\n    // instance (a Promise). As such all of the functions on each state have the promise instance\n    // passed to them explicitly as a parameter and the Promise instance members do a little\n    // dance where they indirect through the state and insert themselves in the argument list.\n    //\n    // We could instead call directly through the promise states however then every caller\n    // would have to remember to do things like pumping the state machine to catch state transitions.\n    //\n\n    var PromiseStateMachine = _Base.Class.define(null, {\n        _listeners: null,\n        _nextState: null,\n        _state: null,\n        _value: null,\n\n        cancel: function () {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n            /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n            /// already been fulfilled and cancellation is supported, the promise enters\n            /// the error state with a value of Error(\"Canceled\").\n            /// </summary>\n            /// </signature>\n            this._state.cancel(this);\n            this._run();\n        },\n        done: function Promise_done(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            ///\n            /// After the handlers have finished executing, this function throws any error that would have been returned\n            /// from then() as a promise in the error state.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The fulfilled value is passed as the single argument. If the value is null,\n            /// the fulfilled value is returned. The value returned\n            /// from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while executing the function, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function is the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n            /// the function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// </signature>\n            this._state.done(this, onComplete, onError, onProgress);\n        },\n        then: function Promise_then(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The value is passed as the single argument. If the value is null, the value is returned.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while this function is being executed, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n            /// The function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n            /// The promise whose value is the result of executing the complete or\n            /// error function.\n            /// </returns>\n            /// </signature>\n            return this._state.then(this, onComplete, onError, onProgress);\n        },\n\n        _chainedError: function (value, context) {\n            var result = this._state._error(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _completed: function (value) {\n            var result = this._state._completed(this, value);\n            this._run();\n            return result;\n        },\n        _error: function (value) {\n            var result = this._state._error(this, value, detailsForError);\n            this._run();\n            return result;\n        },\n        _progress: function (value) {\n            this._state._progress(this, value);\n        },\n        _setState: function (state) {\n            this._nextState = state;\n        },\n        _setCompleteValue: function (value) {\n            this._state._setCompleteValue(this, value);\n            this._run();\n        },\n        _setChainedErrorValue: function (value, context) {\n            var result = this._state._setErrorValue(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _setExceptionValue: function (value) {\n            var result = this._state._setErrorValue(this, value, detailsForException);\n            this._run();\n            return result;\n        },\n        _run: function () {\n            while (this._nextState) {\n                this._state = this._nextState;\n                this._nextState = null;\n                this._state.enter(this);\n            }\n        }\n    }, {\n        supportedForProcessing: false\n    });\n\n    //\n    // Implementations of shared state machine code.\n    //\n\n    function completed(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success_notify;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function createErrorDetails(exception, error, promise, id, parent, handler) {\n        return {\n            exception: exception,\n            error: error,\n            promise: promise,\n            handler: handler,\n            id: id,\n            parent: parent\n        };\n    }\n    function detailsForHandledError(promise, errorValue, context, handler) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context,\n            handler\n        );\n    }\n    function detailsForChainedError(promise, errorValue, context) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        setErrorInfo(promise, errorId, exception);\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context\n        );\n    }\n    function detailsForError(promise, errorValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId);\n        return createErrorDetails(\n            null,\n            errorValue,\n            promise,\n            errorId\n        );\n    }\n    function detailsForException(promise, exceptionValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId, true);\n        return createErrorDetails(\n            exceptionValue,\n            null,\n            promise,\n            errorId\n        );\n    }\n    function done(promise, onComplete, onError, onProgress) {\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.done\");\n        pushListener(promise, { c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n    }\n    function error(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error_notify);\n    }\n    function notifySuccess(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onComplete = listener.c;\n            var target = listener.promise;\n\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, _Global.Debug && _Global.Debug.MS_ASYNC_OP_STATUS_SUCCESS);\n\n            if (target) {\n                _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                try {\n                    target._setCompleteValue(onComplete ? onComplete(value) : value);\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    _Trace._traceAsyncCallbackCompleted();\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                CompletePromise.prototype.done.call(promise, onComplete);\n            }\n        }\n    }\n    function notifyError(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onError = listener.e;\n            var target = listener.promise;\n\n            var errorID = _Global.Debug && (value && value.name === canceledName ? _Global.Debug.MS_ASYNC_OP_STATUS_CANCELED : _Global.Debug.MS_ASYNC_OP_STATUS_ERROR);\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, errorID);\n\n            if (target) {\n                var asyncCallbackStarted = false;\n                try {\n                    if (onError) {\n                        _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                        asyncCallbackStarted = true;\n                        if (!onError.handlesOnError) {\n                            callonerror(target, value, detailsForHandledError, promise, onError);\n                        }\n                        target._setCompleteValue(onError(value));\n                    } else {\n                        target._setChainedErrorValue(value, promise);\n                    }\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    if (asyncCallbackStarted) {\n                        _Trace._traceAsyncCallbackCompleted();\n                    }\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                ErrorPromise.prototype.done.call(promise, null, onError);\n            }\n        }\n    }\n    function callonerror(promise, value, onerrorDetailsGenerator, context, handler) {\n        if (promiseEventListeners._listeners[errorET]) {\n            if (value instanceof Error && value.message === canceledName) {\n                return;\n            }\n            promiseEventListeners.dispatchEvent(errorET, onerrorDetailsGenerator(promise, value, context, handler));\n        }\n    }\n    function progress(promise, value) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            var i, len;\n            for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n                var listener = len === 1 ? listeners : listeners[i];\n                var onProgress = listener.p;\n                if (onProgress) {\n                    try { onProgress(value); } catch (ex) { }\n                }\n                if (!(listener.c || listener.e) && listener.promise) {\n                    listener.promise._progress(value);\n                }\n            }\n        }\n    }\n    function pushListener(promise, listener) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            // We may have either a single listener (which will never be wrapped in an array)\n            // or 2+ listeners (which will be wrapped). Since we are now adding one more listener\n            // we may have to wrap the single listener before adding the second.\n            listeners = Array.isArray(listeners) ? listeners : [listeners];\n            listeners.push(listener);\n        } else {\n            listeners = listener;\n        }\n        promise._listeners = listeners;\n    }\n    // The difference beween setCompleteValue()/setErrorValue() and complete()/error() is that setXXXValue() moves\n    // a promise directly to the success/error state without starting another notification pass (because one\n    // is already ongoing).\n    function setErrorInfo(promise, errorId, isException) {\n        promise._isException = isException || false;\n        promise._errorId = errorId;\n    }\n    function setErrorValue(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error);\n    }\n    function setCompleteValue(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function then(promise, onComplete, onError, onProgress) {\n        var result = new ThenPromise(promise);\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.then\");\n        pushListener(promise, { promise: result, c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n        return result;\n    }\n\n    //\n    // Internal implementation detail promise, ThenPromise is created when a promise needs\n    // to be returned from a then() method.\n    //\n    var ThenPromise = _Base.Class.derive(PromiseStateMachine,\n        function (creator) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.thenPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._creator = creator;\n            this._setState(state_created);\n            this._run();\n        }, {\n            _creator: null,\n\n            _cancelAction: function () { if (this._creator) { this._creator.cancel(); } },\n            _cleanupAction: function () { this._creator = null; }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Slim promise implementations for already completed promises, these are created\n    // under the hood on synchronous completion paths as well as by WinJS.Promise.wrap\n    // and WinJS.Promise.wrapError.\n    //\n\n    var ErrorPromise = _Base.Class.define(\n        function ErrorPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.errorPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForError);\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function ErrorPromise_done(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                var value = this._value;\n                if (onError) {\n                    try {\n                        if (!onError.handlesOnError) {\n                            callonerror(null, value, detailsForHandledError, this, onError);\n                        }\n                        var result = onError(value);\n                        if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                            // If a promise is returned we need to wait on it.\n                            result.done();\n                        }\n                        return;\n                    } catch (ex) {\n                        value = ex;\n                    }\n                }\n                if (value instanceof Error && value.message === canceledName) {\n                    // suppress cancel\n                    return;\n                }\n                // force the exception to be thrown asyncronously to avoid any try/catch blocks\n                //\n                Promise._doneHandler(value);\n            },\n            then: function ErrorPromise_then(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n\n                // If the promise is already in a error state and no error handler is provided\n                // we optimize by simply returning the promise instead of creating a new one.\n                //\n                if (!onError) { return this; }\n                var result;\n                var value = this._value;\n                try {\n                    if (!onError.handlesOnError) {\n                        callonerror(null, value, detailsForHandledError, this, onError);\n                    }\n                    result = new CompletePromise(onError(value));\n                } catch (ex) {\n                    // If the value throw from the error handler is the same as the value\n                    // provided to the error handler then there is no need for a new promise.\n                    //\n                    if (ex === value) {\n                        result = this;\n                    } else {\n                        result = new ExceptionPromise(ex);\n                    }\n                }\n                return result;\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var ExceptionPromise = _Base.Class.derive(ErrorPromise,\n        function ExceptionPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.exceptionPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForException);\n        }, {\n            /* empty */\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var CompletePromise = _Base.Class.define(\n        function CompletePromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.completePromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                var result = new ThenPromise(null);\n                result._setCompleteValue(value);\n                return result;\n            }\n            this._value = value;\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function CompletePromise_done(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                if (!onComplete) { return; }\n                try {\n                    var result = onComplete(this._value);\n                    if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                        result.done();\n                    }\n                } catch (ex) {\n                    // force the exception to be thrown asynchronously to avoid any try/catch blocks\n                    Promise._doneHandler(ex);\n                }\n            },\n            then: function CompletePromise_then(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n                try {\n                    // If the value returned from the completion handler is the same as the value\n                    // provided to the completion handler then there is no need for a new promise.\n                    //\n                    var newValue = onComplete ? onComplete(this._value) : this._value;\n                    return newValue === this._value ? this : new CompletePromise(newValue);\n                } catch (ex) {\n                    return new ExceptionPromise(ex);\n                }\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Promise is the user-creatable WinJS.Promise object.\n    //\n\n    function timeout(timeoutMS) {\n        var id;\n        return new Promise(\n            function (c) {\n                if (timeoutMS) {\n                    id = _Global.setTimeout(c, timeoutMS);\n                } else {\n                    _BaseCoreUtils._setImmediate(c);\n                }\n            },\n            function () {\n                if (id) {\n                    _Global.clearTimeout(id);\n                }\n            }\n        );\n    }\n\n    function timeoutWithPromise(timeout, promise) {\n        var cancelPromise = function () { promise.cancel(); };\n        var cancelTimeout = function () { timeout.cancel(); };\n        timeout.then(cancelPromise);\n        promise.then(cancelTimeout, cancelTimeout);\n        return promise;\n    }\n\n    var staticCanceledPromise;\n\n    var Promise = _Base.Class.derive(PromiseStateMachine,\n        function Promise_ctor(init, oncancel) {\n            /// <signature helpKeyword=\"WinJS.Promise\">\n            /// <summary locid=\"WinJS.Promise\">\n            /// A promise provides a mechanism to schedule work to be done on a value that\n            /// has not yet been computed. It is a convenient abstraction for managing\n            /// interactions with asynchronous APIs.\n            /// </summary>\n            /// <param name=\"init\" type=\"Function\" locid=\"WinJS.Promise_p:init\">\n            /// The function that is called during construction of the  promise. The function\n            /// is given three arguments (complete, error, progress). Inside this function\n            /// you should add event listeners for the notifications supported by this value.\n            /// </param>\n            /// <param name=\"oncancel\" optional=\"true\" locid=\"WinJS.Promise_p:oncancel\">\n            /// The function to call if a consumer of this promise wants\n            /// to cancel its undone work. Promises are not required to\n            /// support cancellation.\n            /// </param>\n            /// </signature>\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.promise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._oncancel = oncancel;\n            this._setState(state_created);\n            this._run();\n\n            try {\n                var complete = this._completed.bind(this);\n                var error = this._error.bind(this);\n                var progress = this._progress.bind(this);\n                init(complete, error, progress);\n            } catch (ex) {\n                this._setExceptionValue(ex);\n            }\n        }, {\n            _oncancel: null,\n\n            _cancelAction: function () {\n                // BEGIN monaco change\n                try {\n                    if (this._oncancel) {\n                        this._oncancel();\n                    } else {\n                        throw new Error('Promise did not implement oncancel');\n                    }\n                } catch (ex) {\n                    // Access fields to get them created\n                    var msg = ex.message;\n                    var stack = ex.stack;\n                    promiseEventListeners.dispatchEvent('error', ex);\n                }\n                // END monaco change\n            },\n            _cleanupAction: function () { this._oncancel = null; }\n        }, {\n\n            addEventListener: function Promise_addEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.addEventListener\">\n                /// <summary locid=\"WinJS.Promise.addEventListener\">\n                /// Adds an event listener to the control.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.addEventListener_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"listener\" locid=\"WinJS.Promise.addEventListener_p:listener\">\n                /// The listener to invoke when the event is raised.\n                /// </param>\n                /// <param name=\"capture\" locid=\"WinJS.Promise.addEventListener_p:capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.addEventListener(eventType, listener, capture);\n            },\n            any: function Promise_any(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.any\">\n                /// <summary locid=\"WinJS.Promise.any\">\n                /// Returns a promise that is fulfilled when one of the input promises\n                /// has been fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Array\" locid=\"WinJS.Promise.any_p:values\">\n                /// An array that contains promise objects or objects whose property\n                /// values include promise objects.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.any_returnValue\">\n                /// A promise that on fulfillment yields the value of the input (complete or error).\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error) {\n                        var keys = Object.keys(values);\n                        if (keys.length === 0) {\n                            complete();\n                        }\n                        var canceled = 0;\n                        keys.forEach(function (key) {\n                            Promise.as(values[key]).then(\n                                function () { complete({ key: key, value: values[key] }); },\n                                function (e) {\n                                    if (e instanceof Error && e.name === canceledName) {\n                                        if ((++canceled) === keys.length) {\n                                            complete(Promise.cancel);\n                                        }\n                                        return;\n                                    }\n                                    error({ key: key, value: values[key] });\n                                }\n                            );\n                        });\n                    },\n                    function () {\n                        var keys = Object.keys(values);\n                        keys.forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            as: function Promise_as(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.as\">\n                /// <summary locid=\"WinJS.Promise.as\">\n                /// Returns a promise. If the object is already a promise it is returned;\n                /// otherwise the object is wrapped in a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.as_p:value\">\n                /// The value to be treated as a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.as_returnValue\">\n                /// A promise.\n                /// </returns>\n                /// </signature>\n                if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                    return value;\n                }\n                return new CompletePromise(value);\n            },\n            /// <field type=\"WinJS.Promise\" helpKeyword=\"WinJS.Promise.cancel\" locid=\"WinJS.Promise.cancel\">\n            /// Canceled promise value, can be returned from a promise completion handler\n            /// to indicate cancelation of the promise chain.\n            /// </field>\n            cancel: {\n                get: function () {\n                    return (staticCanceledPromise = staticCanceledPromise || new ErrorPromise(new _ErrorFromName(canceledName)));\n                }\n            },\n            dispatchEvent: function Promise_dispatchEvent(eventType, details) {\n                /// <signature helpKeyword=\"WinJS.Promise.dispatchEvent\">\n                /// <summary locid=\"WinJS.Promise.dispatchEvent\">\n                /// Raises an event of the specified type and properties.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.dispatchEvent_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"details\" locid=\"WinJS.Promise.dispatchEvent_p:details\">\n                /// The set of additional properties to be attached to the event object.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.dispatchEvent_returnValue\">\n                /// Specifies whether preventDefault was called on the event.\n                /// </returns>\n                /// </signature>\n                return promiseEventListeners.dispatchEvent(eventType, details);\n            },\n            is: function Promise_is(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.is\">\n                /// <summary locid=\"WinJS.Promise.is\">\n                /// Determines whether a value fulfills the promise contract.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.is_p:value\">\n                /// A value that may be a promise.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.is_returnValue\">\n                /// true if the specified value is a promise, otherwise false.\n                /// </returns>\n                /// </signature>\n                return value && typeof value === \"object\" && typeof value.then === \"function\";\n            },\n            join: function Promise_join(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.join\">\n                /// <summary locid=\"WinJS.Promise.join\">\n                /// Creates a promise that is fulfilled when all the values are fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Object\" locid=\"WinJS.Promise.join_p:values\">\n                /// An object whose fields contain values, some of which may be promises.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.join_returnValue\">\n                /// A promise whose value is an object with the same field names as those of the object in the values parameter, where\n                /// each field value is the fulfilled value of a promise.\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error, progress) {\n                        var keys = Object.keys(values);\n                        var errors = Array.isArray(values) ? [] : {};\n                        var results = Array.isArray(values) ? [] : {};\n                        var undefineds = 0;\n                        var pending = keys.length;\n                        var argDone = function (key) {\n                            if ((--pending) === 0) {\n                                var errorCount = Object.keys(errors).length;\n                                if (errorCount === 0) {\n                                    complete(results);\n                                } else {\n                                    var canceledCount = 0;\n                                    keys.forEach(function (key) {\n                                        var e = errors[key];\n                                        if (e instanceof Error && e.name === canceledName) {\n                                            canceledCount++;\n                                        }\n                                    });\n                                    if (canceledCount === errorCount) {\n                                        complete(Promise.cancel);\n                                    } else {\n                                        error(errors);\n                                    }\n                                }\n                            } else {\n                                progress({ Key: key, Done: true });\n                            }\n                        };\n                        keys.forEach(function (key) {\n                            var value = values[key];\n                            if (value === undefined) {\n                                undefineds++;\n                            } else {\n                                Promise.then(value,\n                                    function (value) { results[key] = value; argDone(key); },\n                                    function (value) { errors[key] = value; argDone(key); }\n                                );\n                            }\n                        });\n                        pending -= undefineds;\n                        if (pending === 0) {\n                            complete(results);\n                            return;\n                        }\n                    },\n                    function () {\n                        Object.keys(values).forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            removeEventListener: function Promise_removeEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.removeEventListener\">\n                /// <summary locid=\"WinJS.Promise.removeEventListener\">\n                /// Removes an event listener from the control.\n                /// </summary>\n                /// <param name='eventType' locid=\"WinJS.Promise.removeEventListener_eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name='listener' locid=\"WinJS.Promise.removeEventListener_listener\">\n                /// The listener to remove.\n                /// </param>\n                /// <param name='capture' locid=\"WinJS.Promise.removeEventListener_capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.removeEventListener(eventType, listener, capture);\n            },\n            supportedForProcessing: false,\n            then: function Promise_then(value, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.then\">\n                /// <summary locid=\"WinJS.Promise.then\">\n                /// A static version of the promise instance method then().\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.then_p:value\">\n                /// the value to be treated as a promise.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.then_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If it is null, the promise simply\n                /// returns the value. The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.then_returnValue\">\n                /// A promise whose value is the result of executing the provided complete function.\n                /// </returns>\n                /// </signature>\n                return Promise.as(value).then(onComplete, onError, onProgress);\n            },\n            thenEach: function Promise_thenEach(values, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.thenEach\">\n                /// <summary locid=\"WinJS.Promise.thenEach\">\n                /// Performs an operation on all the input promises and returns a promise\n                /// that has the shape of the input and contains the result of the operation\n                /// that has been performed on each input.\n                /// </summary>\n                /// <param name=\"values\" locid=\"WinJS.Promise.thenEach_p:values\">\n                /// A set of values (which could be either an array or an object) of which some or all are promises.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.thenEach_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If the value is null, the promise returns the value.\n                /// The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.thenEach_returnValue\">\n                /// A promise that is the result of calling Promise.join on the values parameter.\n                /// </returns>\n                /// </signature>\n                var result = Array.isArray(values) ? [] : {};\n                Object.keys(values).forEach(function (key) {\n                    result[key] = Promise.as(values[key]).then(onComplete, onError, onProgress);\n                });\n                return Promise.join(result);\n            },\n            timeout: function Promise_timeout(time, promise) {\n                /// <signature helpKeyword=\"WinJS.Promise.timeout\">\n                /// <summary locid=\"WinJS.Promise.timeout\">\n                /// Creates a promise that is fulfilled after a timeout.\n                /// </summary>\n                /// <param name=\"timeout\" type=\"Number\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:timeout\">\n                /// The timeout period in milliseconds. If this value is zero or not specified\n                /// setImmediate is called, otherwise setTimeout is called.\n                /// </param>\n                /// <param name=\"promise\" type=\"Promise\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:promise\">\n                /// A promise that will be canceled if it doesn't complete before the\n                /// timeout has expired.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.timeout_returnValue\">\n                /// A promise that is completed asynchronously after the specified timeout.\n                /// </returns>\n                /// </signature>\n                var to = timeout(time);\n                return promise ? timeoutWithPromise(to, promise) : to;\n            },\n            wrap: function Promise_wrap(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrap\">\n                /// <summary locid=\"WinJS.Promise.wrap\">\n                /// Wraps a non-promise value in a promise. You can use this function if you need\n                /// to pass a value to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.wrap_p:value\">\n                /// Some non-promise value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrap_returnValue\">\n                /// A promise that is successfully fulfilled with the specified value\n                /// </returns>\n                /// </signature>\n                return new CompletePromise(value);\n            },\n            wrapError: function Promise_wrapError(error) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrapError\">\n                /// <summary locid=\"WinJS.Promise.wrapError\">\n                /// Wraps a non-promise error value in a promise. You can use this function if you need\n                /// to pass an error to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"error\" locid=\"WinJS.Promise.wrapError_p:error\">\n                /// A non-promise error value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrapError_returnValue\">\n                /// A promise that is in an error state with the specified value.\n                /// </returns>\n                /// </signature>\n                return new ErrorPromise(error);\n            },\n\n            _veryExpensiveTagWithStack: {\n                get: function () { return tagWithStack; },\n                set: function (value) { tagWithStack = value; }\n            },\n            _veryExpensiveTagWithStack_tag: tag,\n            _getStack: function () {\n                if (_Global.Debug && _Global.Debug.debuggerEnabled) {\n                    try { throw new Error(); } catch (e) { return e.stack; }\n                }\n            },\n\n            _cancelBlocker: function Promise__cancelBlocker(input, oncancel) {\n                //\n                // Returns a promise which on cancelation will still result in downstream cancelation while\n                //  protecting the promise 'input' from being  canceled which has the effect of allowing\n                //  'input' to be shared amoung various consumers.\n                //\n                if (!Promise.is(input)) {\n                    return Promise.wrap(input);\n                }\n                var complete;\n                var error;\n                var output = new Promise(\n                    function (c, e) {\n                        complete = c;\n                        error = e;\n                    },\n                    function () {\n                        complete = null;\n                        error = null;\n                        oncancel && oncancel();\n                    }\n                );\n                input.then(\n                    function (v) { complete && complete(v); },\n                    function (e) { error && error(e); }\n                );\n                return output;\n            },\n\n        }\n    );\n    Object.defineProperties(Promise, _Events.createEventProperties(errorET));\n\n    Promise._doneHandler = function (value) {\n        _BaseCoreUtils._setImmediate(function Promise_done_rethrow() {\n            throw value;\n        });\n    };\n\n    return {\n        PromiseStateMachine: PromiseStateMachine,\n        Promise: Promise,\n        state_created: state_created\n    };\n});\n\n_winjs(\"WinJS/Promise\", [\"WinJS/Core/_Base\",\"WinJS/Promise/_StateMachine\"], function promiseInit( _Base, _StateMachine) {\n    \"use strict\";\n\n    _Base.Namespace.define(\"WinJS\", {\n        Promise: _StateMachine.Promise\n    });\n\n    return _StateMachine.Promise;\n});\n\nvar exported = _modules[\"WinJS/Core/_WinJS\"];\n\nif (typeof exports === 'undefined' && typeof define === 'function' && define.amd) {\n    define(\"vs/base/common/winjs.base.raw\", exported);\n} else {\n    module.exports = exported;\n}\n\nif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n    _modules[\"WinJS/Core/_BaseCoreUtils\"]._setImmediate = function(handler) {\n        return process.nextTick(handler);\n    };\n}\n\n})();\ndefine(__m[92], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.MessageType = {\n        INITIALIZE: '$initialize',\n        REPLY: '$reply',\n        PRINT: '$print'\n    };\n    exports.ReplyType = {\n        COMPLETE: 'complete',\n        ERROR: 'error',\n        PROGRESS: 'progress'\n    };\n    exports.PrintType = {\n        LOG: 'log',\n        DEBUG: 'debug',\n        INFO: 'info',\n        WARN: 'warn',\n        ERROR: 'error'\n    };\n});\n\ndefine(__m[21], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var Arrays;\n    (function (Arrays) {\n        /**\n         * Given a sorted array of natural number segments, find the segment containing a natural number.\n         *    For example, the segments [0, 5), [5, 9), [9, infinity) will be represented in the following manner:\n         *       [{ startIndex: 0 }, { startIndex: 5 }, { startIndex: 9 }]\n         *    Searching for 0, 1, 2, 3 or 4 will return 0.\n         *    Searching for 5, 6, 7 or 8 will return 1.\n         *    Searching for 9, 10, 11, ... will return 2.\n         * @param arr A sorted array representing natural number segments\n         * @param desiredIndex The search\n         * @return The index of the containing segment in the array.\n         */\n        function findIndexInSegmentsArray(arr, desiredIndex) {\n            var low = 0;\n            var high = arr.length - 1;\n            if (high <= 0) {\n                return 0;\n            }\n            while (low < high) {\n                var mid = low + Math.ceil((high - low) / 2);\n                if (arr[mid].startIndex > desiredIndex) {\n                    high = mid - 1;\n                }\n                else {\n                    low = mid;\n                }\n            }\n            return low;\n        }\n        Arrays.findIndexInSegmentsArray = findIndexInSegmentsArray;\n    })(Arrays = exports.Arrays || (exports.Arrays = {}));\n});\n\ndefine(__m[19], __M([1,0,21]), function (require, exports, arrays_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var ModeTransition = (function () {\n        function ModeTransition(startIndex, mode) {\n            this.startIndex = startIndex | 0;\n            this.mode = mode;\n            this.modeId = mode.getId();\n        }\n        ModeTransition.findIndexInSegmentsArray = function (arr, desiredIndex) {\n            return arrays_1.Arrays.findIndexInSegmentsArray(arr, desiredIndex);\n        };\n        ModeTransition.create = function (modeTransitions) {\n            var result = [];\n            for (var i = 0, len = modeTransitions.length; i < len; i++) {\n                var modeTransition = modeTransitions[i];\n                result.push(new ModeTransition(modeTransition.startIndex, modeTransition.mode));\n            }\n            return result;\n        };\n        return ModeTransition;\n    }());\n    exports.ModeTransition = ModeTransition;\n});\n\ndefine(__m[20], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /**\n     * A position in the editor.\n     */\n    var Position = (function () {\n        function Position(lineNumber, column) {\n            this.lineNumber = lineNumber;\n            this.column = column;\n        }\n        /**\n         * Test if this position equals other position\n         */\n        Position.prototype.equals = function (other) {\n            return Position.equals(this, other);\n        };\n        /**\n         * Test if position `a` equals position `b`\n         */\n        Position.equals = function (a, b) {\n            if (!a && !b) {\n                return true;\n            }\n            return (!!a &&\n                !!b &&\n                a.lineNumber === b.lineNumber &&\n                a.column === b.column);\n        };\n        /**\n         * Test if this position is before other position.\n         * If the two positions are equal, the result will be false.\n         */\n        Position.prototype.isBefore = function (other) {\n            return Position.isBefore(this, other);\n        };\n        /**\n         * Test if position `a` is before position `b`.\n         * If the two positions are equal, the result will be false.\n         */\n        Position.isBefore = function (a, b) {\n            if (a.lineNumber < b.lineNumber) {\n                return true;\n            }\n            if (b.lineNumber < a.lineNumber) {\n                return false;\n            }\n            return a.column < b.column;\n        };\n        /**\n         * Test if this position is before other position.\n         * If the two positions are equal, the result will be true.\n         */\n        Position.prototype.isBeforeOrEqual = function (other) {\n            return Position.isBeforeOrEqual(this, other);\n        };\n        /**\n         * Test if position `a` is before position `b`.\n         * If the two positions are equal, the result will be true.\n         */\n        Position.isBeforeOrEqual = function (a, b) {\n            if (a.lineNumber < b.lineNumber) {\n                return true;\n            }\n            if (b.lineNumber < a.lineNumber) {\n                return false;\n            }\n            return a.column <= b.column;\n        };\n        /**\n         * Clone this position.\n         */\n        Position.prototype.clone = function () {\n            return new Position(this.lineNumber, this.column);\n        };\n        /**\n         * Convert to a human-readable representation.\n         */\n        Position.prototype.toString = function () {\n            return '(' + this.lineNumber + ',' + this.column + ')';\n        };\n        // ---\n        /**\n         * Create a `Position` from an `IPosition`.\n         */\n        Position.lift = function (pos) {\n            return new Position(pos.lineNumber, pos.column);\n        };\n        /**\n         * Test if `obj` is an `IPosition`.\n         */\n        Position.isIPosition = function (obj) {\n            return (obj\n                && (typeof obj.lineNumber === 'number')\n                && (typeof obj.column === 'number'));\n        };\n        return Position;\n    }());\n    exports.Position = Position;\n});\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[27], __M([1,0,20]), function (require, exports, position_1) {\n    'use strict';\n    /**\n     * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n     */\n    var Range = (function () {\n        function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n            if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n                this.startLineNumber = endLineNumber;\n                this.startColumn = endColumn;\n                this.endLineNumber = startLineNumber;\n                this.endColumn = startColumn;\n            }\n            else {\n                this.startLineNumber = startLineNumber;\n                this.startColumn = startColumn;\n                this.endLineNumber = endLineNumber;\n                this.endColumn = endColumn;\n            }\n        }\n        /**\n         * Test if this range is empty.\n         */\n        Range.prototype.isEmpty = function () {\n            return Range.isEmpty(this);\n        };\n        /**\n         * Test if `range` is empty.\n         */\n        Range.isEmpty = function (range) {\n            return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n        };\n        /**\n         * Test if position is in this range. If the position is at the edges, will return true.\n         */\n        Range.prototype.containsPosition = function (position) {\n            return Range.containsPosition(this, position);\n        };\n        /**\n         * Test if `position` is in `range`. If the position is at the edges, will return true.\n         */\n        Range.containsPosition = function (range, position) {\n            if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n                return false;\n            }\n            if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n                return false;\n            }\n            if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n                return false;\n            }\n            return true;\n        };\n        /**\n         * Test if range is in this range. If the range is equal to this range, will return true.\n         */\n        Range.prototype.containsRange = function (range) {\n            return Range.containsRange(this, range);\n        };\n        /**\n         * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n         */\n        Range.containsRange = function (range, otherRange) {\n            if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n                return false;\n            }\n            if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n                return false;\n            }\n            if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n                return false;\n            }\n            if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n                return false;\n            }\n            return true;\n        };\n        /**\n         * A reunion of the two ranges.\n         * The smallest position will be used as the start point, and the largest one as the end point.\n         */\n        Range.prototype.plusRange = function (range) {\n            return Range.plusRange(this, range);\n        };\n        /**\n         * A reunion of the two ranges.\n         * The smallest position will be used as the start point, and the largest one as the end point.\n         */\n        Range.plusRange = function (a, b) {\n            var startLineNumber, startColumn, endLineNumber, endColumn;\n            if (b.startLineNumber < a.startLineNumber) {\n                startLineNumber = b.startLineNumber;\n                startColumn = b.startColumn;\n            }\n            else if (b.startLineNumber === a.startLineNumber) {\n                startLineNumber = b.startLineNumber;\n                startColumn = Math.min(b.startColumn, a.startColumn);\n            }\n            else {\n                startLineNumber = a.startLineNumber;\n                startColumn = a.startColumn;\n            }\n            if (b.endLineNumber > a.endLineNumber) {\n                endLineNumber = b.endLineNumber;\n                endColumn = b.endColumn;\n            }\n            else if (b.endLineNumber === a.endLineNumber) {\n                endLineNumber = b.endLineNumber;\n                endColumn = Math.max(b.endColumn, a.endColumn);\n            }\n            else {\n                endLineNumber = a.endLineNumber;\n                endColumn = a.endColumn;\n            }\n            return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n        };\n        /**\n         * A intersection of the two ranges.\n         */\n        Range.prototype.intersectRanges = function (range) {\n            return Range.intersectRanges(this, range);\n        };\n        /**\n         * A intersection of the two ranges.\n         */\n        Range.intersectRanges = function (a, b) {\n            var resultStartLineNumber = a.startLineNumber, resultStartColumn = a.startColumn, resultEndLineNumber = a.endLineNumber, resultEndColumn = a.endColumn, otherStartLineNumber = b.startLineNumber, otherStartColumn = b.startColumn, otherEndLineNumber = b.endLineNumber, otherEndColumn = b.endColumn;\n            if (resultStartLineNumber < otherStartLineNumber) {\n                resultStartLineNumber = otherStartLineNumber;\n                resultStartColumn = otherStartColumn;\n            }\n            else if (resultStartLineNumber === otherStartLineNumber) {\n                resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n            }\n            if (resultEndLineNumber > otherEndLineNumber) {\n                resultEndLineNumber = otherEndLineNumber;\n                resultEndColumn = otherEndColumn;\n            }\n            else if (resultEndLineNumber === otherEndLineNumber) {\n                resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n            }\n            // Check if selection is now empty\n            if (resultStartLineNumber > resultEndLineNumber) {\n                return null;\n            }\n            if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n                return null;\n            }\n            return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n        };\n        /**\n         * Test if this range equals other.\n         */\n        Range.prototype.equalsRange = function (other) {\n            return Range.equalsRange(this, other);\n        };\n        /**\n         * Test if range `a` equals `b`.\n         */\n        Range.equalsRange = function (a, b) {\n            return (!!a &&\n                !!b &&\n                a.startLineNumber === b.startLineNumber &&\n                a.startColumn === b.startColumn &&\n                a.endLineNumber === b.endLineNumber &&\n                a.endColumn === b.endColumn);\n        };\n        /**\n         * Return the end position (which will be after or equal to the start position)\n         */\n        Range.prototype.getEndPosition = function () {\n            return new position_1.Position(this.endLineNumber, this.endColumn);\n        };\n        /**\n         * Return the start position (which will be before or equal to the end position)\n         */\n        Range.prototype.getStartPosition = function () {\n            return new position_1.Position(this.startLineNumber, this.startColumn);\n        };\n        /**\n         * Clone this range.\n         */\n        Range.prototype.cloneRange = function () {\n            return new Range(this.startLineNumber, this.startColumn, this.endLineNumber, this.endColumn);\n        };\n        /**\n         * Transform to a user presentable string representation.\n         */\n        Range.prototype.toString = function () {\n            return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n        };\n        /**\n         * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n         */\n        Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n            return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        };\n        /**\n         * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n         */\n        Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n            return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        };\n        /**\n         * Create a new empty range using this range's start position.\n         */\n        Range.prototype.collapseToStart = function () {\n            return Range.collapseToStart(this);\n        };\n        /**\n         * Create a new empty range using this range's start position.\n         */\n        Range.collapseToStart = function (range) {\n            return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n        };\n        // ---\n        /**\n         * Create a `Range` from an `IRange`.\n         */\n        Range.lift = function (range) {\n            if (!range) {\n                return null;\n            }\n            return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n        };\n        /**\n         * Test if `obj` is an `IRange`.\n         */\n        Range.isIRange = function (obj) {\n            return (obj\n                && (typeof obj.startLineNumber === 'number')\n                && (typeof obj.startColumn === 'number')\n                && (typeof obj.endLineNumber === 'number')\n                && (typeof obj.endColumn === 'number'));\n        };\n        /**\n         * Test if the two ranges are touching in any way.\n         */\n        Range.areIntersectingOrTouching = function (a, b) {\n            // Check if `a` is before `b`\n            if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n                return false;\n            }\n            // Check if `b` is before `a`\n            if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n                return false;\n            }\n            // These ranges must intersect\n            return true;\n        };\n        /**\n         * A function that compares ranges, useful for sorting ranges\n         * It will first compare ranges on the startPosition and then on the endPosition\n         */\n        Range.compareRangesUsingStarts = function (a, b) {\n            var aStartLineNumber = a.startLineNumber | 0;\n            var bStartLineNumber = b.startLineNumber | 0;\n            var aStartColumn = a.startColumn | 0;\n            var bStartColumn = b.startColumn | 0;\n            var aEndLineNumber = a.endLineNumber | 0;\n            var bEndLineNumber = b.endLineNumber | 0;\n            var aEndColumn = a.endColumn | 0;\n            var bEndColumn = b.endColumn | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                if (aStartColumn === bStartColumn) {\n                    if (aEndLineNumber === bEndLineNumber) {\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        };\n        /**\n         * A function that compares ranges, useful for sorting ranges\n         * It will first compare ranges on the endPosition and then on the startPosition\n         */\n        Range.compareRangesUsingEnds = function (a, b) {\n            if (a.endLineNumber === b.endLineNumber) {\n                if (a.endColumn === b.endColumn) {\n                    if (a.startLineNumber === b.startLineNumber) {\n                        return a.startColumn - b.startColumn;\n                    }\n                    return a.startLineNumber - b.startLineNumber;\n                }\n                return a.endColumn - b.endColumn;\n            }\n            return a.endLineNumber - b.endLineNumber;\n        };\n        /**\n         * Test if the range spans multiple lines.\n         */\n        Range.spansMultipleLines = function (range) {\n            return range.endLineNumber > range.startLineNumber;\n        };\n        return Range;\n    }());\n    exports.Range = Range;\n});\n\ndefine(__m[43], __M([1,0,21]), function (require, exports, arrays_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /**\n     * A token on a line.\n     */\n    var ViewLineToken = (function () {\n        function ViewLineToken(startIndex, type) {\n            this.startIndex = startIndex | 0; // @perf\n            this.type = type.replace(/[^a-z0-9\\-]/gi, ' ');\n        }\n        ViewLineToken.prototype.equals = function (other) {\n            return (this.startIndex === other.startIndex\n                && this.type === other.type);\n        };\n        ViewLineToken.findIndexInSegmentsArray = function (arr, desiredIndex) {\n            return arrays_1.Arrays.findIndexInSegmentsArray(arr, desiredIndex);\n        };\n        ViewLineToken.equalsArray = function (a, b) {\n            var aLen = a.length;\n            var bLen = b.length;\n            if (aLen !== bLen) {\n                return false;\n            }\n            for (var i = 0; i < aLen; i++) {\n                if (!a[i].equals(b[i])) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return ViewLineToken;\n    }());\n    exports.ViewLineToken = ViewLineToken;\n    var ViewLineTokens = (function () {\n        function ViewLineTokens(lineTokens, fauxIndentLength, textLength) {\n            this._lineTokens = lineTokens;\n            this._fauxIndentLength = fauxIndentLength | 0;\n            this._textLength = textLength | 0;\n        }\n        ViewLineTokens.prototype.getTokens = function () {\n            return this._lineTokens;\n        };\n        ViewLineTokens.prototype.getFauxIndentLength = function () {\n            return this._fauxIndentLength;\n        };\n        ViewLineTokens.prototype.getTextLength = function () {\n            return this._textLength;\n        };\n        ViewLineTokens.prototype.equals = function (other) {\n            return (this._fauxIndentLength === other._fauxIndentLength\n                && this._textLength === other._textLength\n                && ViewLineToken.equalsArray(this._lineTokens, other._lineTokens));\n        };\n        ViewLineTokens.prototype.findIndexOfOffset = function (offset) {\n            return ViewLineToken.findIndexInSegmentsArray(this._lineTokens, offset);\n        };\n        return ViewLineTokens;\n    }());\n    exports.ViewLineTokens = ViewLineTokens;\n});\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[91], __M([1,0]), function (require, exports) {\n    'use strict';\n    var IndentRange = (function () {\n        function IndentRange(startLineNumber, endLineNumber, indent) {\n            this.startLineNumber = startLineNumber;\n            this.endLineNumber = endLineNumber;\n            this.indent = indent;\n        }\n        IndentRange.deepCloneArr = function (indentRanges) {\n            var result = [];\n            for (var i = 0, len = indentRanges.length; i < len; i++) {\n                var r = indentRanges[i];\n                result[i] = new IndentRange(r.startLineNumber, r.endLineNumber, r.indent);\n            }\n            return result;\n        };\n        return IndentRange;\n    }());\n    exports.IndentRange = IndentRange;\n    function computeRanges(model, minimumRangeSize) {\n        if (minimumRangeSize === void 0) { minimumRangeSize = 1; }\n        var result = [];\n        var previousRegions = [];\n        previousRegions.push({ indent: -1, line: model.getLineCount() + 1 }); // sentinel, to make sure there's at least one entry\n        for (var line = model.getLineCount(); line > 0; line--) {\n            var indent = model.getIndentLevel(line);\n            if (indent === -1) {\n                continue; // only whitespace\n            }\n            var previous = previousRegions[previousRegions.length - 1];\n            if (previous.indent > indent) {\n                // discard all regions with larger indent\n                do {\n                    previousRegions.pop();\n                    previous = previousRegions[previousRegions.length - 1];\n                } while (previous.indent > indent);\n                // new folding range\n                var endLineNumber = previous.line - 1;\n                if (endLineNumber - line >= minimumRangeSize) {\n                    result.push(new IndentRange(line, endLineNumber, indent));\n                }\n            }\n            if (previous.indent === indent) {\n                previous.line = line;\n            }\n            else {\n                // new region with a bigger indent\n                previousRegions.push({ indent: indent, line: line });\n            }\n        }\n        return result.reverse();\n    }\n    exports.computeRanges = computeRanges;\n});\n\ndefine(__m[87], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var __space = ' '.charCodeAt(0);\n    var __tab = '\\t'.charCodeAt(0);\n    /**\n     * Compute the diff in spaces between two line's indentation.\n     */\n    function spacesDiff(a, aLength, b, bLength) {\n        // This can go both ways (e.g.):\n        //  - a: \"\\t\"\n        //  - b: \"\\t    \"\n        //  => This should count 1 tab and 4 spaces\n        var i;\n        for (i = 0; i < aLength && i < bLength; i++) {\n            var aCharCode = a.charCodeAt(i);\n            var bCharCode = b.charCodeAt(i);\n            if (aCharCode !== bCharCode) {\n                break;\n            }\n        }\n        var aSpacesCnt = 0, aTabsCount = 0;\n        for (var j = i; j < aLength; j++) {\n            var aCharCode = a.charCodeAt(j);\n            if (aCharCode === __space) {\n                aSpacesCnt++;\n            }\n            else {\n                aTabsCount++;\n            }\n        }\n        var bSpacesCnt = 0, bTabsCount = 0;\n        for (var j = i; j < bLength; j++) {\n            var bCharCode = b.charCodeAt(j);\n            if (bCharCode === __space) {\n                bSpacesCnt++;\n            }\n            else {\n                bTabsCount++;\n            }\n        }\n        if (aSpacesCnt > 0 && aTabsCount > 0) {\n            return 0;\n        }\n        if (bSpacesCnt > 0 && bTabsCount > 0) {\n            return 0;\n        }\n        var tabsDiff = Math.abs(aTabsCount - bTabsCount);\n        var spacesDiff = Math.abs(aSpacesCnt - bSpacesCnt);\n        if (tabsDiff === 0) {\n            return spacesDiff;\n        }\n        if (spacesDiff % tabsDiff === 0) {\n            return spacesDiff / tabsDiff;\n        }\n        return 0;\n    }\n    function guessIndentation(lines, defaultTabSize, defaultInsertSpaces) {\n        var linesIndentedWithTabsCount = 0; // number of lines that contain at least one tab in indentation\n        var linesIndentedWithSpacesCount = 0; // number of lines that contain only spaces in indentation\n        var previousLineText = ''; // content of latest line that contained non-whitespace chars\n        var previousLineIndentation = 0; // index at which latest line contained the first non-whitespace char\n        var ALLOWED_TAB_SIZE_GUESSES = [2, 4, 6, 8]; // limit guesses for `tabSize` to 2, 4, 6 or 8.\n        var MAX_ALLOWED_TAB_SIZE_GUESS = 8; // max(2,4,6,8) = 8\n        var spacesDiffCount = [0, 0, 0, 0, 0, 0, 0, 0, 0]; // `tabSize` scores\n        for (var i = 0, len = lines.length; i < len; i++) {\n            var currentLineText = lines[i];\n            var currentLineHasContent = false; // does `currentLineText` contain non-whitespace chars\n            var currentLineIndentation = 0; // index at which `currentLineText` contains the first non-whitespace char\n            var currentLineSpacesCount = 0; // count of spaces found in `currentLineText` indentation\n            var currentLineTabsCount = 0; // count of tabs found in `currentLineText` indentation\n            for (var j = 0, lenJ = currentLineText.length; j < lenJ; j++) {\n                var charCode = currentLineText.charCodeAt(j);\n                if (charCode === __tab) {\n                    currentLineTabsCount++;\n                }\n                else if (charCode === __space) {\n                    currentLineSpacesCount++;\n                }\n                else {\n                    // Hit non whitespace character on this line\n                    currentLineHasContent = true;\n                    currentLineIndentation = j;\n                    break;\n                }\n            }\n            // Ignore empty or only whitespace lines\n            if (!currentLineHasContent) {\n                continue;\n            }\n            if (currentLineTabsCount > 0) {\n                linesIndentedWithTabsCount++;\n            }\n            else if (currentLineSpacesCount > 1) {\n                linesIndentedWithSpacesCount++;\n            }\n            var currentSpacesDiff = spacesDiff(previousLineText, previousLineIndentation, currentLineText, currentLineIndentation);\n            if (currentSpacesDiff <= MAX_ALLOWED_TAB_SIZE_GUESS) {\n                spacesDiffCount[currentSpacesDiff]++;\n            }\n            previousLineText = currentLineText;\n            previousLineIndentation = currentLineIndentation;\n        }\n        // Take into account the last line as well\n        var deltaSpacesCount = spacesDiff(previousLineText, previousLineIndentation, '', 0);\n        if (deltaSpacesCount <= MAX_ALLOWED_TAB_SIZE_GUESS) {\n            spacesDiffCount[deltaSpacesCount]++;\n        }\n        var insertSpaces = defaultInsertSpaces;\n        if (linesIndentedWithTabsCount !== linesIndentedWithSpacesCount) {\n            insertSpaces = (linesIndentedWithTabsCount < linesIndentedWithSpacesCount);\n        }\n        var tabSize = defaultTabSize;\n        var tabSizeScore = (insertSpaces ? 0 : 0.1 * lines.length);\n        // console.log(\"score threshold: \" + tabSizeScore);\n        ALLOWED_TAB_SIZE_GUESSES.forEach(function (possibleTabSize) {\n            var possibleTabSizeScore = spacesDiffCount[possibleTabSize];\n            if (possibleTabSizeScore > tabSizeScore) {\n                tabSizeScore = possibleTabSizeScore;\n                tabSize = possibleTabSize;\n            }\n        });\n        // console.log('--------------------------');\n        // console.log('linesIndentedWithTabsCount: ' + linesIndentedWithTabsCount + ', linesIndentedWithSpacesCount: ' + linesIndentedWithSpacesCount);\n        // console.log('spacesDiffCount: ' + spacesDiffCount);\n        // console.log('tabSize: ' + tabSize + ', tabSizeScore: ' + tabSizeScore);\n        return {\n            insertSpaces: insertSpaces,\n            tabSize: tabSize\n        };\n    }\n    exports.guessIndentation = guessIndentation;\n});\n\ndefine(__m[86], __M([1,0,21]), function (require, exports, arrays_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /**\n     * A token on a line.\n     */\n    var LineToken = (function () {\n        function LineToken(startIndex, type) {\n            this.startIndex = startIndex | 0; // @perf\n            this.type = type;\n        }\n        LineToken.prototype.equals = function (other) {\n            return (this.startIndex === other.startIndex\n                && this.type === other.type);\n        };\n        LineToken.findIndexInSegmentsArray = function (arr, desiredIndex) {\n            return arrays_1.Arrays.findIndexInSegmentsArray(arr, desiredIndex);\n        };\n        LineToken.equalsArray = function (a, b) {\n            var aLen = a.length;\n            var bLen = b.length;\n            if (aLen !== bLen) {\n                return false;\n            }\n            for (var i = 0; i < aLen; i++) {\n                if (!a[i].equals(b[i])) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return LineToken;\n    }());\n    exports.LineToken = LineToken;\n});\n\ndefine(__m[84], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var TokenIterator = (function () {\n        function TokenIterator(model, position) {\n            this._model = model;\n            this._currentLineNumber = position.lineNumber;\n            this._currentTokenIndex = 0;\n            this._readLineTokens(this._currentLineNumber);\n            this._next = null;\n            this._prev = null;\n            // start with a position to next/prev run\n            var columnIndex = position.column - 1, tokenEndIndex = Number.MAX_VALUE;\n            for (var i = this._currentLineTokens.getTokenCount() - 1; i >= 0; i--) {\n                var tokenStartIndex = this._currentLineTokens.getTokenStartIndex(i);\n                if (tokenStartIndex <= columnIndex && columnIndex <= tokenEndIndex) {\n                    this._currentTokenIndex = i;\n                    this._next = this._current();\n                    this._prev = this._current();\n                    break;\n                }\n                tokenEndIndex = tokenStartIndex;\n            }\n        }\n        TokenIterator.prototype._readLineTokens = function (lineNumber) {\n            this._currentLineTokens = this._model.getLineTokens(lineNumber, false);\n        };\n        TokenIterator.prototype._advanceNext = function () {\n            this._prev = this._next;\n            this._next = null;\n            if (this._currentTokenIndex + 1 < this._currentLineTokens.getTokenCount()) {\n                // There are still tokens on current line\n                this._currentTokenIndex++;\n                this._next = this._current();\n            }\n            else {\n                // find the next line with tokens\n                while (this._currentLineNumber + 1 <= this._model.getLineCount()) {\n                    this._currentLineNumber++;\n                    this._readLineTokens(this._currentLineNumber);\n                    if (this._currentLineTokens.getTokenCount() > 0) {\n                        this._currentTokenIndex = 0;\n                        this._next = this._current();\n                        break;\n                    }\n                }\n                if (this._next === null) {\n                    // prepare of a previous run\n                    this._readLineTokens(this._currentLineNumber);\n                    this._currentTokenIndex = this._currentLineTokens.getTokenCount();\n                    this._advancePrev();\n                    this._next = null;\n                }\n            }\n        };\n        TokenIterator.prototype._advancePrev = function () {\n            this._next = this._prev;\n            this._prev = null;\n            if (this._currentTokenIndex > 0) {\n                // There are still tokens on current line\n                this._currentTokenIndex--;\n                this._prev = this._current();\n            }\n            else {\n                // find previous line with tokens\n                while (this._currentLineNumber > 1) {\n                    this._currentLineNumber--;\n                    this._readLineTokens(this._currentLineNumber);\n                    if (this._currentLineTokens.getTokenCount() > 0) {\n                        this._currentTokenIndex = this._currentLineTokens.getTokenCount() - 1;\n                        this._prev = this._current();\n                        break;\n                    }\n                }\n            }\n        };\n        TokenIterator.prototype._current = function () {\n            var startIndex = this._currentLineTokens.getTokenStartIndex(this._currentTokenIndex);\n            var type = this._currentLineTokens.getTokenType(this._currentTokenIndex);\n            var endIndex = this._currentLineTokens.getTokenEndIndex(this._currentTokenIndex, this._model.getLineContent(this._currentLineNumber).length);\n            return {\n                token: {\n                    startIndex: startIndex,\n                    type: type\n                },\n                lineNumber: this._currentLineNumber,\n                startColumn: startIndex + 1,\n                endColumn: endIndex + 1\n            };\n        };\n        TokenIterator.prototype.hasNext = function () {\n            return this._next !== null;\n        };\n        TokenIterator.prototype.next = function () {\n            var result = this._next;\n            this._advanceNext();\n            return result;\n        };\n        TokenIterator.prototype.hasPrev = function () {\n            return this._prev !== null;\n        };\n        TokenIterator.prototype.prev = function () {\n            var result = this._prev;\n            this._advancePrev();\n            return result;\n        };\n        TokenIterator.prototype._invalidate = function () {\n            // replace all public functions with errors\n            var errorFn = function () {\n                throw new Error('iteration isn\\'t valid anymore');\n            };\n            this.hasNext = errorFn;\n            this.next = errorFn;\n            this.hasPrev = errorFn;\n            this.prev = errorFn;\n        };\n        return TokenIterator;\n    }());\n    exports.TokenIterator = TokenIterator;\n});\n\ndefine(__m[17], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n    /**\n     * Create a word definition regular expression based on default word separators.\n     * Optionally provide allowed separators that should be included in words.\n     *\n     * The default would look like this:\n     * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n     */\n    function createWordRegExp(allowInWords) {\n        if (allowInWords === void 0) { allowInWords = ''; }\n        var usualSeparators = exports.USUAL_WORD_SEPARATORS;\n        var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n        for (var i = 0; i < usualSeparators.length; i++) {\n            if (allowInWords.indexOf(usualSeparators[i]) >= 0) {\n                continue;\n            }\n            source += '\\\\' + usualSeparators[i];\n        }\n        source += '\\\\s]+)';\n        return new RegExp(source, 'g');\n    }\n    exports.createWordRegExp = createWordRegExp;\n    // catches numbers (including floating numbers) in the first group, and alphanum in the second\n    exports.DEFAULT_WORD_REGEXP = createWordRegExp();\n    function ensureValidWordDefinition(wordDefinition) {\n        var result = exports.DEFAULT_WORD_REGEXP;\n        if (wordDefinition && (wordDefinition instanceof RegExp)) {\n            if (!wordDefinition.global) {\n                var flags = 'g';\n                if (wordDefinition.ignoreCase) {\n                    flags += 'i';\n                }\n                if (wordDefinition.multiline) {\n                    flags += 'm';\n                }\n                result = new RegExp(wordDefinition.source, flags);\n            }\n            else {\n                result = wordDefinition;\n            }\n        }\n        result.lastIndex = 0;\n        return result;\n    }\n    exports.ensureValidWordDefinition = ensureValidWordDefinition;\n    function getWordAtText(column, wordDefinition, text, textOffset) {\n        // console.log('_getWordAtText: ', column, text, textOffset);\n        var words = text.match(wordDefinition), k, startWord, endWord, startColumn, endColumn, word;\n        if (words) {\n            for (k = 0; k < words.length; k++) {\n                word = words[k].trim();\n                if (word.length > 0) {\n                    startWord = text.indexOf(word, endWord);\n                    endWord = startWord + word.length;\n                    startColumn = textOffset + startWord + 1;\n                    endColumn = textOffset + endWord + 1;\n                    if (startColumn <= column && column <= endColumn) {\n                        return {\n                            word: word,\n                            startColumn: startColumn,\n                            endColumn: endColumn\n                        };\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    exports.getWordAtText = getWordAtText;\n});\n\ndefine(__m[35], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var AbstractState = (function () {\n        function AbstractState(mode, stateData) {\n            if (stateData === void 0) { stateData = null; }\n            this.mode = mode;\n            this.stateData = stateData;\n        }\n        AbstractState.prototype.getMode = function () {\n            return this.mode;\n        };\n        AbstractState.prototype.clone = function () {\n            var result = this.makeClone();\n            result.initializeFrom(this);\n            return result;\n        };\n        AbstractState.prototype.makeClone = function () {\n            throw new Error('Abstract Method');\n        };\n        AbstractState.prototype.initializeFrom = function (other) {\n            this.stateData = other.stateData !== null ? other.stateData.clone() : null;\n        };\n        AbstractState.prototype.getStateData = function () {\n            return this.stateData;\n        };\n        AbstractState.prototype.setStateData = function (state) {\n            this.stateData = state;\n        };\n        AbstractState.prototype.equals = function (other) {\n            if (other === null || this.mode !== other.getMode()) {\n                return false;\n            }\n            if (other instanceof AbstractState) {\n                return AbstractState.safeEquals(this.stateData, other.stateData);\n            }\n            return false;\n        };\n        AbstractState.prototype.tokenize = function (stream) {\n            throw new Error('Abstract Method');\n        };\n        AbstractState.safeEquals = function (a, b) {\n            if (a === null && b === null) {\n                return true;\n            }\n            if (a === null || b === null) {\n                return false;\n            }\n            return a.equals(b);\n        };\n        AbstractState.safeClone = function (state) {\n            if (state) {\n                return state.clone();\n            }\n            return null;\n        };\n        return AbstractState;\n    }());\n    exports.AbstractState = AbstractState;\n});\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[60], __M([1,0,37]), function (require, exports, glob_1) {\n    'use strict';\n    function matches(selection, uri, language) {\n        return score(selection, uri, language) > 0;\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = matches;\n    function score(selector, uri, language) {\n        if (Array.isArray(selector)) {\n            // for each\n            var values = selector.map(function (item) { return score(item, uri, language); });\n            return Math.max.apply(Math, values);\n        }\n        else if (typeof selector === 'string') {\n            // compare language id\n            if (selector === language) {\n                return 10;\n            }\n            else if (selector === '*') {\n                return 5;\n            }\n            else {\n                return 0;\n            }\n        }\n        else if (selector) {\n            // all must match but only highest score counts\n            var filter = selector;\n            var valueLanguage = 0;\n            var valueScheme = 0;\n            var valuePattern = 0;\n            // language id\n            if (filter.language) {\n                if (filter.language === language) {\n                    valueLanguage = 10;\n                }\n                else if (filter.language === '*') {\n                    valueLanguage = 5;\n                }\n                else {\n                    return 0;\n                }\n            }\n            // scheme\n            if (filter.scheme) {\n                if (filter.scheme === uri.scheme) {\n                    valueScheme = 10;\n                }\n                else {\n                    return 0;\n                }\n            }\n            // match fsPath with pattern\n            if (filter.pattern) {\n                if (filter.pattern === uri.fsPath) {\n                    valuePattern = 10;\n                }\n                else if (glob_1.match(filter.pattern, uri.fsPath)) {\n                    valuePattern = 5;\n                }\n                else {\n                    return 0;\n                }\n            }\n            return Math.max(valueLanguage, valueScheme, valuePattern);\n        }\n    }\n    exports.score = score;\n});\n\ndefine(__m[55], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var LineStream = (function () {\n        function LineStream(source) {\n            this._source = source;\n            this.sourceLength = source.length;\n            this._pos = 0;\n            this.whitespace = '\\t \\u00a0';\n            this.whitespaceArr = this.stringToArray(this.whitespace);\n            this.separators = '';\n            this.separatorsArr = this.stringToArray(this.separators);\n            this.tokenStart = -1;\n            this.tokenEnd = -1;\n        }\n        LineStream.prototype.stringToArray = function (str) {\n            if (!LineStream.STRING_TO_ARRAY_CACHE.hasOwnProperty(str)) {\n                LineStream.STRING_TO_ARRAY_CACHE[str] = this.actualStringToArray(str);\n            }\n            return LineStream.STRING_TO_ARRAY_CACHE[str];\n        };\n        LineStream.prototype.actualStringToArray = function (str) {\n            var maxCharCode = 0;\n            for (var i = 0; i < str.length; i++) {\n                maxCharCode = Math.max(maxCharCode, str.charCodeAt(i));\n            }\n            var r = [];\n            for (var i = 0; i <= maxCharCode; i++) {\n                r[i] = false;\n            }\n            for (var i = 0; i < str.length; i++) {\n                r[str.charCodeAt(i)] = true;\n            }\n            return r;\n        };\n        LineStream.prototype.pos = function () {\n            return this._pos;\n        };\n        LineStream.prototype.eos = function () {\n            return this._pos >= this.sourceLength;\n        };\n        LineStream.prototype.peek = function () {\n            // Check EOS\n            if (this._pos >= this.sourceLength) {\n                throw new Error('Stream is at the end');\n            }\n            return this._source[this._pos];\n        };\n        LineStream.prototype.next = function () {\n            // Check EOS\n            if (this._pos >= this.sourceLength) {\n                throw new Error('Stream is at the end');\n            }\n            // Reset peeked token\n            this.tokenStart = -1;\n            this.tokenEnd = -1;\n            return this._source[this._pos++];\n        };\n        LineStream.prototype.next2 = function () {\n            // Check EOS\n            if (this._pos >= this.sourceLength) {\n                throw new Error('Stream is at the end');\n            }\n            // Reset peeked token\n            this.tokenStart = -1;\n            this.tokenEnd = -1;\n            this._pos++;\n        };\n        LineStream.prototype.advance = function (n) {\n            if (n === 0) {\n                return '';\n            }\n            var oldPos = this._pos;\n            this._pos += n;\n            // Reset peeked token\n            this.tokenStart = -1;\n            this.tokenEnd = -1;\n            return this._source.substring(oldPos, this._pos);\n        };\n        LineStream.prototype._advance2 = function (n) {\n            if (n === 0) {\n                return n;\n            }\n            this._pos += n;\n            // Reset peeked token\n            this.tokenStart = -1;\n            this.tokenEnd = -1;\n            return n;\n        };\n        LineStream.prototype.advanceToEOS = function () {\n            var oldPos = this._pos;\n            this._pos = this.sourceLength;\n            this.resetPeekedToken();\n            return this._source.substring(oldPos, this._pos);\n        };\n        LineStream.prototype.goBack = function (n) {\n            this._pos -= n;\n            this.resetPeekedToken();\n        };\n        LineStream.prototype.createPeeker = function (condition) {\n            var _this = this;\n            if (condition instanceof RegExp) {\n                return function () {\n                    var result = condition.exec(_this._source.substr(_this._pos));\n                    if (result === null) {\n                        return 0;\n                    }\n                    else if (result.index !== 0) {\n                        throw new Error('Regular expression must begin with the character \"^\"');\n                    }\n                    return result[0].length;\n                };\n            }\n            else if ((condition instanceof String || (typeof condition) === 'string') && condition) {\n                return function () {\n                    var len = condition.length, match = _this._pos + len <= _this.sourceLength;\n                    for (var i = 0; match && i < len; i++) {\n                        match = _this._source.charCodeAt(_this._pos + i) === condition.charCodeAt(i);\n                    }\n                    return match ? len : 0;\n                };\n            }\n            throw new Error('Condition must be either a regular expression, function or a non-empty string');\n        };\n        // --- BEGIN `_advanceIfStringCaseInsensitive`\n        LineStream.prototype._advanceIfStringCaseInsensitive = function (condition) {\n            var oldPos = this._pos, source = this._source, len = condition.length, i;\n            if (len < 1 || oldPos + len > this.sourceLength) {\n                return 0;\n            }\n            for (i = 0; i < len; i++) {\n                if (source.charAt(oldPos + i).toLowerCase() !== condition.charAt(i).toLowerCase()) {\n                    return 0;\n                }\n            }\n            return len;\n        };\n        LineStream.prototype.advanceIfStringCaseInsensitive = function (condition) {\n            return this.advance(this._advanceIfStringCaseInsensitive(condition));\n        };\n        LineStream.prototype.advanceIfStringCaseInsensitive2 = function (condition) {\n            return this._advance2(this._advanceIfStringCaseInsensitive(condition));\n        };\n        // --- END\n        // --- BEGIN `advanceIfString`\n        LineStream.prototype._advanceIfString = function (condition) {\n            var oldPos = this._pos, source = this._source, len = condition.length, i;\n            if (len < 1 || oldPos + len > this.sourceLength) {\n                return 0;\n            }\n            for (i = 0; i < len; i++) {\n                if (source.charCodeAt(oldPos + i) !== condition.charCodeAt(i)) {\n                    return 0;\n                }\n            }\n            return len;\n        };\n        LineStream.prototype.advanceIfString = function (condition) {\n            return this.advance(this._advanceIfString(condition));\n        };\n        LineStream.prototype.advanceIfString2 = function (condition) {\n            return this._advance2(this._advanceIfString(condition));\n        };\n        // --- END\n        // --- BEGIN `advanceIfString`\n        LineStream.prototype._advanceIfCharCode = function (charCode) {\n            if (this._pos < this.sourceLength && this._source.charCodeAt(this._pos) === charCode) {\n                return 1;\n            }\n            return 0;\n        };\n        LineStream.prototype.advanceIfCharCode = function (charCode) {\n            return this.advance(this._advanceIfCharCode(charCode));\n        };\n        LineStream.prototype.advanceIfCharCode2 = function (charCode) {\n            return this._advance2(this._advanceIfCharCode(charCode));\n        };\n        // --- END\n        // --- BEGIN `advanceIfRegExp`\n        LineStream.prototype._advanceIfRegExp = function (condition) {\n            if (this._pos >= this.sourceLength) {\n                return 0;\n            }\n            if (!condition.test(this._source.substr(this._pos))) {\n                return 0;\n            }\n            return RegExp.lastMatch.length;\n        };\n        LineStream.prototype.advanceIfRegExp = function (condition) {\n            return this.advance(this._advanceIfRegExp(condition));\n        };\n        LineStream.prototype.advanceIfRegExp2 = function (condition) {\n            return this._advance2(this._advanceIfRegExp(condition));\n        };\n        // --- END\n        LineStream.prototype.advanceLoop = function (condition, isWhile, including) {\n            if (this.eos()) {\n                return '';\n            }\n            var peeker = this.createPeeker(condition);\n            var oldPos = this._pos;\n            var n = 0;\n            var f = null;\n            if (isWhile) {\n                f = function (n) {\n                    return n > 0;\n                };\n            }\n            else {\n                f = function (n) {\n                    return n === 0;\n                };\n            }\n            while (!this.eos() && f(n = peeker())) {\n                if (n > 0) {\n                    this.advance(n);\n                }\n                else {\n                    this.next();\n                }\n            }\n            if (including && !this.eos()) {\n                this.advance(n);\n            }\n            return this._source.substring(oldPos, this._pos);\n        };\n        LineStream.prototype.advanceWhile = function (condition) {\n            return this.advanceLoop(condition, true, false);\n        };\n        LineStream.prototype.advanceUntil = function (condition, including) {\n            return this.advanceLoop(condition, false, including);\n        };\n        // --- BEGIN `advanceUntilString`\n        LineStream.prototype._advanceUntilString = function (condition, including) {\n            if (this.eos() || condition.length === 0) {\n                return 0;\n            }\n            var oldPos = this._pos;\n            var index = this._source.indexOf(condition, oldPos);\n            if (index === -1) {\n                // String was not found => advanced to `eos`\n                return (this.sourceLength - oldPos);\n            }\n            if (including) {\n                // String was found => advance to include `condition`\n                return (index + condition.length - oldPos);\n            }\n            // String was found => advance right before `condition`\n            return (index - oldPos);\n        };\n        LineStream.prototype.advanceUntilString = function (condition, including) {\n            return this.advance(this._advanceUntilString(condition, including));\n        };\n        LineStream.prototype.advanceUntilString2 = function (condition, including) {\n            return this._advance2(this._advanceUntilString(condition, including));\n        };\n        // --- END\n        LineStream.prototype.resetPeekedToken = function () {\n            this.tokenStart = -1;\n            this.tokenEnd = -1;\n        };\n        LineStream.prototype.setTokenRules = function (separators, whitespace) {\n            if (this.separators !== separators || this.whitespace !== whitespace) {\n                this.separators = separators;\n                this.separatorsArr = this.stringToArray(this.separators);\n                this.whitespace = whitespace;\n                this.whitespaceArr = this.stringToArray(this.whitespace);\n                this.resetPeekedToken();\n            }\n        };\n        // --- tokens\n        LineStream.prototype.peekToken = function () {\n            if (this.tokenStart !== -1) {\n                return this._source.substring(this.tokenStart, this.tokenEnd);\n            }\n            var source = this._source, sourceLength = this.sourceLength, whitespaceArr = this.whitespaceArr, separatorsArr = this.separatorsArr, tokenStart = this._pos;\n            // Check EOS\n            if (tokenStart >= sourceLength) {\n                throw new Error('Stream is at the end');\n            }\n            // Skip whitespace\n            while (whitespaceArr[source.charCodeAt(tokenStart)] && tokenStart < sourceLength) {\n                tokenStart++;\n            }\n            var tokenEnd = tokenStart;\n            // If a separator is hit, it is a token\n            if (separatorsArr[source.charCodeAt(tokenEnd)] && tokenEnd < sourceLength) {\n                tokenEnd++;\n            }\n            else {\n                // Advance until a separator or a whitespace is hit\n                while (!separatorsArr[source.charCodeAt(tokenEnd)] && !whitespaceArr[source.charCodeAt(tokenEnd)] && tokenEnd < sourceLength) {\n                    tokenEnd++;\n                }\n            }\n            // Cache peeked token\n            this.tokenStart = tokenStart;\n            this.tokenEnd = tokenEnd;\n            return source.substring(tokenStart, tokenEnd);\n        };\n        LineStream.prototype.nextToken = function () {\n            // Check EOS\n            if (this._pos >= this.sourceLength) {\n                throw new Error('Stream is at the end');\n            }\n            // Peek token if necessary\n            var result;\n            if (this.tokenStart === -1) {\n                result = this.peekToken();\n            }\n            else {\n                result = this._source.substring(this.tokenStart, this.tokenEnd);\n            }\n            // Advance to tokenEnd\n            this._pos = this.tokenEnd;\n            // Reset peeked token\n            this.tokenStart = -1;\n            this.tokenEnd = -1;\n            return result;\n        };\n        // -- whitespace\n        LineStream.prototype.peekWhitespace = function () {\n            var source = this._source, sourceLength = this.sourceLength, whitespaceArr = this.whitespaceArr, peek = this._pos;\n            while (whitespaceArr[source.charCodeAt(peek)] && peek < sourceLength) {\n                peek++;\n            }\n            return source.substring(this._pos, peek);\n        };\n        // --- BEGIN `advanceIfRegExp`\n        LineStream.prototype._skipWhitespace = function () {\n            var source = this._source, sourceLength = this.sourceLength, whitespaceArr = this.whitespaceArr, oldPos = this._pos, peek = this._pos;\n            while (whitespaceArr[source.charCodeAt(peek)] && peek < sourceLength) {\n                peek++;\n            }\n            return (peek - oldPos);\n        };\n        LineStream.prototype.skipWhitespace = function () {\n            return this.advance(this._skipWhitespace());\n        };\n        LineStream.prototype.skipWhitespace2 = function () {\n            return this._advance2(this._skipWhitespace());\n        };\n        LineStream.STRING_TO_ARRAY_CACHE = {};\n        return LineStream;\n    }());\n    exports.LineStream = LineStream;\n});\n\ndefine(__m[24], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /*\n     * This module exports common types and functionality shared between\n     * the Monarch compiler that compiles JSON to ILexer, and the Monarch\n     * Tokenizer (that highlights at runtime)\n     */\n    /*\n     * Type definitions to be used internally to Monarch.\n     * Inside monarch we use fully typed definitions and compiled versions of the more abstract JSON descriptions.\n     */\n    (function (MonarchBracket) {\n        MonarchBracket[MonarchBracket[\"None\"] = 0] = \"None\";\n        MonarchBracket[MonarchBracket[\"Open\"] = 1] = \"Open\";\n        MonarchBracket[MonarchBracket[\"Close\"] = -1] = \"Close\";\n    })(exports.MonarchBracket || (exports.MonarchBracket = {}));\n    var MonarchBracket = exports.MonarchBracket;\n    // Small helper functions\n    /**\n     * Is a string null, undefined, or empty?\n     */\n    function empty(s) {\n        return (s ? false : true);\n    }\n    exports.empty = empty;\n    /**\n     * Puts a string to lower case if 'ignoreCase' is set.\n     */\n    function fixCase(lexer, str) {\n        return (lexer.ignoreCase && str ? str.toLowerCase() : str);\n    }\n    exports.fixCase = fixCase;\n    /**\n     * Ensures there are no bad characters in a CSS token class.\n     */\n    function sanitize(s) {\n        return s.replace(/[&<>'\"_]/g, '-'); // used on all output token CSS classes\n    }\n    exports.sanitize = sanitize;\n    // Logging\n    /**\n     * Logs a message.\n     */\n    function log(lexer, msg) {\n        console.log(lexer.languageId + \": \" + msg);\n    }\n    exports.log = log;\n    // Throwing errors\n    /**\n     * Throws error. May actually just log the error and continue.\n     */\n    function throwError(lexer, msg) {\n        throw new Error(lexer.languageId + \": \" + msg);\n    }\n    exports.throwError = throwError;\n    // Helper functions for rule finding and substitution\n    /**\n     * substituteMatches is used on lexer strings and can substitutes predefined patterns:\n     * \t\t$$  => $\n     * \t\t$#  => id\n     * \t\t$n  => matched entry n\n     * \t\t@attr => contents of lexer[attr]\n     *\n     * See documentation for more info\n     */\n    function substituteMatches(lexer, str, id, matches, state) {\n        var re = /\\$((\\$)|(#)|(\\d\\d?)|[sS](\\d\\d?)|@(\\w+))/g;\n        var stateMatches = null;\n        return str.replace(re, function (full, sub, dollar, hash, n, s, attr, ofs, total) {\n            if (!empty(dollar)) {\n                return '$'; // $$\n            }\n            if (!empty(hash)) {\n                return fixCase(lexer, id); // default $#\n            }\n            if (!empty(n) && n < matches.length) {\n                return fixCase(lexer, matches[n]); // $n\n            }\n            if (!empty(attr) && lexer && typeof (lexer[attr]) === 'string') {\n                return lexer[attr]; //@attribute\n            }\n            if (stateMatches === null) {\n                stateMatches = state.split('.');\n                stateMatches.unshift(state);\n            }\n            if (!empty(s) && s < stateMatches.length) {\n                return fixCase(lexer, stateMatches[s]); //$Sn\n            }\n            return '';\n        });\n    }\n    exports.substituteMatches = substituteMatches;\n    /**\n     * Find the tokenizer rules for a specific state (i.e. next action)\n     */\n    function findRules(lexer, state) {\n        while (state && state.length > 0) {\n            var rules = lexer.tokenizer[state];\n            if (rules) {\n                return rules;\n            }\n            var idx = state.lastIndexOf('.');\n            if (idx < 0) {\n                state = null; // no further parent\n            }\n            else {\n                state = state.substr(0, idx);\n            }\n        }\n        return null;\n    }\n    exports.findRules = findRules;\n    /**\n     * Is a certain state defined? In contrast to 'findRules' this works on a ILexerMin.\n     * This is used during compilation where we may know the defined states\n     * but not yet whether the corresponding rules are correct.\n     */\n    function stateExists(lexer, state) {\n        while (state && state.length > 0) {\n            var exist = lexer.stateNames[state];\n            if (exist) {\n                return true;\n            }\n            var idx = state.lastIndexOf('.');\n            if (idx < 0) {\n                state = null; // no further parent\n            }\n            else {\n                state = state.substr(0, idx);\n            }\n        }\n        return false;\n    }\n    exports.stateExists = stateExists;\n});\n\ndefine(__m[81], __M([1,0,29,24]), function (require, exports, objects, monarchCommon) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /*\n     * Type helpers\n     *\n     * Note: this is just for sanity checks on the JSON description which is\n     * helpful for the programmer. No checks are done anymore once the lexer is\n     * already 'compiled and checked'.\n     *\n     */\n    function isArrayOf(elemType, obj) {\n        if (!obj) {\n            return false;\n        }\n        if (!(Array.isArray(obj))) {\n            return false;\n        }\n        var idx;\n        for (idx in obj) {\n            if (obj.hasOwnProperty(idx)) {\n                if (!(elemType(obj[idx]))) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    function bool(prop, def, onerr) {\n        if (typeof (prop) === 'boolean') {\n            return prop;\n        }\n        if (onerr && (prop || def === undefined)) {\n            onerr(); // type is wrong, or there is no default\n        }\n        return (def === undefined ? null : def);\n    }\n    function string(prop, def, onerr) {\n        if (typeof (prop) === 'string') {\n            return prop;\n        }\n        if (onerr && (prop || def === undefined)) {\n            onerr(); // type is wrong, or there is no default\n        }\n        return (def === undefined ? null : def);\n    }\n    // Lexer helpers\n    /**\n     * Compiles a regular expression string, adding the 'i' flag if 'ignoreCase' is set.\n     * Also replaces @\\w+ or sequences with the content of the specified attribute\n     */\n    function compileRegExp(lexer, str) {\n        if (typeof (str) !== 'string') {\n            return null;\n        }\n        var n = 0;\n        while (str.indexOf('@') >= 0 && n < 5) {\n            n++;\n            str = str.replace(/@(\\w+)/g, function (s, attr) {\n                var sub = '';\n                if (typeof (lexer[attr]) === 'string') {\n                    sub = lexer[attr];\n                }\n                else if (lexer[attr] && lexer[attr] instanceof RegExp) {\n                    sub = lexer[attr].source;\n                }\n                else {\n                    if (lexer[attr] === undefined) {\n                        monarchCommon.throwError(lexer, 'language definition does not contain attribute \\'' + attr + '\\', used at: ' + str);\n                    }\n                    else {\n                        monarchCommon.throwError(lexer, 'attribute reference \\'' + attr + '\\' must be a string, used at: ' + str);\n                    }\n                }\n                return (monarchCommon.empty(sub) ? '' : '(?:' + sub + ')');\n            });\n        }\n        return new RegExp(str, (lexer.ignoreCase ? 'i' : ''));\n    }\n    /**\n     * Compiles guard functions for case matches.\n     * This compiles 'cases' attributes into efficient match functions.\n     *\n     */\n    function selectScrutinee(id, matches, state, num) {\n        if (num < 0) {\n            return id;\n        }\n        if (num < matches.length) {\n            return matches[num];\n        }\n        if (num >= 100) {\n            num = num - 100;\n            var parts = state.split('.');\n            parts.unshift(state);\n            if (num < parts.length) {\n                return parts[num];\n            }\n        }\n        return null;\n    }\n    function createGuard(lexer, ruleName, tkey, val) {\n        // get the scrutinee and pattern\n        var scrut = -1; // -1: $!, 0-99: $n, 100+n: $Sn\n        var oppat = tkey;\n        var matches = tkey.match(/^\\$(([sS]?)(\\d\\d?)|#)(.*)$/);\n        if (matches) {\n            if (matches[3]) {\n                scrut = parseInt(matches[3]);\n                if (matches[2]) {\n                    scrut = scrut + 100; // if [sS] present\n                }\n            }\n            oppat = matches[4];\n        }\n        // get operator\n        var op = '~';\n        var pat = oppat;\n        if (!oppat || oppat.length === 0) {\n            op = '!=';\n            pat = '';\n        }\n        else if (/^\\w*$/.test(pat)) {\n            op = '==';\n        }\n        else {\n            matches = oppat.match(/^(@|!@|~|!~|==|!=)(.*)$/);\n            if (matches) {\n                op = matches[1];\n                pat = matches[2];\n            }\n        }\n        // set the tester function\n        var tester;\n        // special case a regexp that matches just words\n        if ((op === '~' || op === '!~') && /^(\\w|\\|)*$/.test(pat)) {\n            var inWords = objects.createKeywordMatcher(pat.split('|'), lexer.ignoreCase);\n            tester = function (s) { return (op === '~' ? inWords(s) : !inWords(s)); };\n        }\n        else if (op === '@' || op === '!@') {\n            var words = lexer[pat];\n            if (!words) {\n                monarchCommon.throwError(lexer, 'the @ match target \\'' + pat + '\\' is not defined, in rule: ' + ruleName);\n            }\n            if (!(isArrayOf(function (elem) { return (typeof (elem) === 'string'); }, words))) {\n                monarchCommon.throwError(lexer, 'the @ match target \\'' + pat + '\\' must be an array of strings, in rule: ' + ruleName);\n            }\n            var inWords = objects.createKeywordMatcher(words, lexer.ignoreCase);\n            tester = function (s) { return (op === '@' ? inWords(s) : !inWords(s)); };\n        }\n        else if (op === '~' || op === '!~') {\n            if (pat.indexOf('$') < 0) {\n                // precompile regular expression\n                var re = compileRegExp(lexer, '^' + pat + '$');\n                tester = function (s) { return (op === '~' ? re.test(s) : !re.test(s)); };\n            }\n            else {\n                tester = function (s, id, matches, state) {\n                    var re = compileRegExp(lexer, '^' + monarchCommon.substituteMatches(lexer, pat, id, matches, state) + '$');\n                    return re.test(s);\n                };\n            }\n        }\n        else {\n            if (pat.indexOf('$') < 0) {\n                var patx = monarchCommon.fixCase(lexer, pat);\n                tester = function (s) { return (op === '==' ? s === patx : s !== patx); };\n            }\n            else {\n                var patx = monarchCommon.fixCase(lexer, pat);\n                tester = function (s, id, matches, state, eos) {\n                    var patexp = monarchCommon.substituteMatches(lexer, patx, id, matches, state);\n                    return (op === '==' ? s === patexp : s !== patexp);\n                };\n            }\n        }\n        // return the branch object\n        if (scrut === -1) {\n            return {\n                name: tkey, value: val, test: function (id, matches, state, eos) {\n                    return tester(id, id, matches, state, eos);\n                }\n            };\n        }\n        else {\n            return {\n                name: tkey, value: val, test: function (id, matches, state, eos) {\n                    var scrutinee = selectScrutinee(id, matches, state, scrut);\n                    return tester(!scrutinee ? '' : scrutinee, id, matches, state, eos);\n                }\n            };\n        }\n    }\n    /**\n     * Compiles an action: i.e. optimize regular expressions and case matches\n     * and do many sanity checks.\n     *\n     * This is called only during compilation but if the lexer definition\n     * contains user functions as actions (which is usually not allowed), then this\n     * may be called during lexing. It is important therefore to compile common cases efficiently\n     */\n    function compileAction(lexer, ruleName, action) {\n        if (!action) {\n            return { token: '' };\n        }\n        else if (typeof (action) === 'string') {\n            return action; // { token: action };\n        }\n        else if (action.token || action.token === '') {\n            if (typeof (action.token) !== 'string') {\n                monarchCommon.throwError(lexer, 'a \\'token\\' attribute must be of type string, in rule: ' + ruleName);\n                return { token: '' };\n            }\n            else {\n                // only copy specific typed fields (only happens once during compile Lexer)\n                var newAction = { token: action.token };\n                if (action.token.indexOf('$') >= 0) {\n                    newAction.tokenSubst = true;\n                }\n                if (typeof (action.bracket) === 'string') {\n                    if (action.bracket === '@open') {\n                        newAction.bracket = monarchCommon.MonarchBracket.Open;\n                    }\n                    else if (action.bracket === '@close') {\n                        newAction.bracket = monarchCommon.MonarchBracket.Close;\n                    }\n                    else {\n                        monarchCommon.throwError(lexer, 'a \\'bracket\\' attribute must be either \\'@open\\' or \\'@close\\', in rule: ' + ruleName);\n                    }\n                }\n                if (action.next) {\n                    if (typeof (action.next) !== 'string') {\n                        monarchCommon.throwError(lexer, 'the next state must be a string value in rule: ' + ruleName);\n                    }\n                    else {\n                        var next = action.next;\n                        if (!/^(@pop|@push|@popall)$/.test(next)) {\n                            if (next[0] === '@') {\n                                next = next.substr(1); // peel off starting @ sign\n                            }\n                            if (next.indexOf('$') < 0) {\n                                if (!monarchCommon.stateExists(lexer, monarchCommon.substituteMatches(lexer, next, '', [], ''))) {\n                                    monarchCommon.throwError(lexer, 'the next state \\'' + action.next + '\\' is not defined in rule: ' + ruleName);\n                                }\n                            }\n                        }\n                        newAction.next = next;\n                    }\n                }\n                if (typeof (action.goBack) === 'number') {\n                    newAction.goBack = action.goBack;\n                }\n                if (typeof (action.switchTo) === 'string') {\n                    newAction.switchTo = action.switchTo;\n                }\n                if (typeof (action.log) === 'string') {\n                    newAction.log = action.log;\n                }\n                if (typeof (action.nextEmbedded) === 'string') {\n                    newAction.nextEmbedded = action.nextEmbedded;\n                    lexer.usesEmbedded = true;\n                }\n                return newAction;\n            }\n        }\n        else if (Array.isArray(action)) {\n            var results = [];\n            var idx;\n            for (idx in action) {\n                if (action.hasOwnProperty(idx)) {\n                    results[idx] = compileAction(lexer, ruleName, action[idx]);\n                }\n            }\n            return { group: results };\n        }\n        else if (action.cases) {\n            // build an array of test cases\n            var cases = [];\n            // for each case, push a test function and result value\n            var tkey;\n            for (tkey in action.cases) {\n                if (action.cases.hasOwnProperty(tkey)) {\n                    var val = compileAction(lexer, ruleName, action.cases[tkey]);\n                    // what kind of case\n                    if (tkey === '@default' || tkey === '@' || tkey === '') {\n                        cases.push({ test: null, value: val, name: tkey });\n                    }\n                    else if (tkey === '@eos') {\n                        cases.push({ test: function (id, matches, state, eos) { return eos; }, value: val, name: tkey });\n                    }\n                    else {\n                        cases.push(createGuard(lexer, ruleName, tkey, val)); // call separate function to avoid local variable capture\n                    }\n                }\n            }\n            // create a matching function\n            var def = lexer.defaultToken;\n            return {\n                test: function (id, matches, state, eos) {\n                    var idx;\n                    for (idx in cases) {\n                        if (cases.hasOwnProperty(idx)) {\n                            var didmatch = (!cases[idx].test || cases[idx].test(id, matches, state, eos));\n                            if (didmatch) {\n                                return cases[idx].value;\n                            }\n                        }\n                    }\n                    return def;\n                }\n            };\n        }\n        else {\n            monarchCommon.throwError(lexer, 'an action must be a string, an object with a \\'token\\' or \\'cases\\' attribute, or an array of actions; in rule: ' + ruleName);\n            return '';\n        }\n    }\n    /**\n     * Helper class for creating matching rules\n     */\n    var Rule = (function () {\n        function Rule(name) {\n            this.regex = new RegExp('');\n            this.action = { token: '' };\n            this.matchOnlyAtLineStart = false;\n            this.name = '';\n            this.name = name;\n        }\n        Rule.prototype.setRegex = function (lexer, re) {\n            var sregex;\n            if (typeof (re) === 'string') {\n                sregex = re;\n            }\n            else if (re instanceof RegExp) {\n                sregex = re.source;\n            }\n            else {\n                monarchCommon.throwError(lexer, 'rules must start with a match string or regular expression: ' + this.name);\n            }\n            this.matchOnlyAtLineStart = (sregex.length > 0 && sregex[0] === '^');\n            this.name = this.name + ': ' + sregex;\n            this.regex = compileRegExp(lexer, '^(?:' + (this.matchOnlyAtLineStart ? sregex.substr(1) : sregex) + ')');\n        };\n        Rule.prototype.setAction = function (lexer, act) {\n            this.action = compileAction(lexer, this.name, act);\n        };\n        return Rule;\n    }());\n    /**\n     * Compiles a json description function into json where all regular expressions,\n     * case matches etc, are compiled and all include rules are expanded.\n     * We also compile the bracket definitions, supply defaults, and do many sanity checks.\n     * If the 'jsonStrict' parameter is 'false', we allow at certain locations\n     * regular expression objects and functions that get called during lexing.\n     * (Currently we have no samples that need this so perhaps we should always have\n     * jsonStrict to true).\n     */\n    function compile(languageId, json) {\n        if (!json || typeof (json) !== 'object') {\n            throw new Error('Monarch: expecting a language definition object');\n        }\n        // Create our lexer\n        var lexer = {};\n        lexer.languageId = languageId;\n        lexer.noThrow = false; // raise exceptions during compilation\n        lexer.maxStack = 100;\n        // Set standard fields: be defensive about types\n        lexer.start = string(json.start);\n        lexer.ignoreCase = bool(json.ignoreCase, false);\n        lexer.tokenPostfix = string(json.tokenPostfix, '.' + lexer.languageId);\n        lexer.defaultToken = string(json.defaultToken, 'source', function () { monarchCommon.throwError(lexer, 'the \\'defaultToken\\' must be a string'); });\n        lexer.usesEmbedded = false; // becomes true if we find a nextEmbedded action\n        // For calling compileAction later on\n        var lexerMin = json;\n        lexerMin.languageId = languageId;\n        lexerMin.ignoreCase = lexer.ignoreCase;\n        lexerMin.noThrow = lexer.noThrow;\n        lexerMin.usesEmbedded = lexer.usesEmbedded;\n        lexerMin.stateNames = json.tokenizer;\n        lexerMin.defaultToken = lexer.defaultToken;\n        // Compile an array of rules into newrules where RegExp objects are created.\n        function addRules(state, newrules, rules) {\n            var idx;\n            for (idx in rules) {\n                if (rules.hasOwnProperty(idx)) {\n                    var rule = rules[idx];\n                    var include = rule.include;\n                    if (include) {\n                        if (typeof (include) !== 'string') {\n                            monarchCommon.throwError(lexer, 'an \\'include\\' attribute must be a string at: ' + state);\n                        }\n                        if (include[0] === '@') {\n                            include = include.substr(1); // peel off starting @\n                        }\n                        if (!json.tokenizer[include]) {\n                            monarchCommon.throwError(lexer, 'include target \\'' + include + '\\' is not defined at: ' + state);\n                        }\n                        addRules(state + '.' + include, newrules, json.tokenizer[include]);\n                    }\n                    else {\n                        var newrule = new Rule(state);\n                        // Set up new rule attributes\n                        if (Array.isArray(rule) && rule.length >= 1 && rule.length <= 3) {\n                            newrule.setRegex(lexerMin, rule[0]);\n                            if (rule.length >= 3) {\n                                if (typeof (rule[1]) === 'string') {\n                                    newrule.setAction(lexerMin, { token: rule[1], next: rule[2] });\n                                }\n                                else if (typeof (rule[1]) === 'object') {\n                                    var rule1 = rule[1];\n                                    rule1.next = rule[2];\n                                    newrule.setAction(lexerMin, rule1);\n                                }\n                                else {\n                                    monarchCommon.throwError(lexer, 'a next state as the last element of a rule can only be given if the action is either an object or a string, at: ' + state);\n                                }\n                            }\n                            else {\n                                newrule.setAction(lexerMin, rule[1]);\n                            }\n                        }\n                        else {\n                            if (!rule.regex) {\n                                monarchCommon.throwError(lexer, 'a rule must either be an array, or an object with a \\'regex\\' or \\'include\\' field at: ' + state);\n                            }\n                            if (rule.name) {\n                                newrule.name = string(rule.name);\n                            }\n                            if (rule.matchOnlyAtStart) {\n                                newrule.matchOnlyAtLineStart = bool(rule.matchOnlyAtLineStart);\n                            }\n                            newrule.setRegex(lexerMin, rule.regex);\n                            newrule.setAction(lexerMin, rule.action);\n                        }\n                        newrules.push(newrule);\n                    }\n                }\n            }\n        }\n        // compile the tokenizer rules\n        if (!json.tokenizer || typeof (json.tokenizer) !== 'object') {\n            monarchCommon.throwError(lexer, 'a language definition must define the \\'tokenizer\\' attribute as an object');\n        }\n        lexer.tokenizer = [];\n        var key;\n        for (key in json.tokenizer) {\n            if (json.tokenizer.hasOwnProperty(key)) {\n                if (!lexer.start) {\n                    lexer.start = key;\n                }\n                var rules = json.tokenizer[key];\n                lexer.tokenizer[key] = new Array();\n                addRules('tokenizer.' + key, lexer.tokenizer[key], rules);\n            }\n        }\n        lexer.usesEmbedded = lexerMin.usesEmbedded; // can be set during compileAction\n        // Set simple brackets\n        if (json.brackets) {\n            if (!(Array.isArray(json.brackets))) {\n                monarchCommon.throwError(lexer, 'the \\'brackets\\' attribute must be defined as an array');\n            }\n        }\n        else {\n            json.brackets = [\n                { open: '{', close: '}', token: 'delimiter.curly' },\n                { open: '[', close: ']', token: 'delimiter.square' },\n                { open: '(', close: ')', token: 'delimiter.parenthesis' },\n                { open: '<', close: '>', token: 'delimiter.angle' }];\n        }\n        var brackets = [];\n        for (var bracketIdx in json.brackets) {\n            if (json.brackets.hasOwnProperty(bracketIdx)) {\n                var desc = json.brackets[bracketIdx];\n                if (desc && Array.isArray(desc) && desc.length === 3) {\n                    desc = { token: desc[2], open: desc[0], close: desc[1] };\n                }\n                if (desc.open === desc.close) {\n                    monarchCommon.throwError(lexer, 'open and close brackets in a \\'brackets\\' attribute must be different: ' + desc.open +\n                        '\\n hint: use the \\'bracket\\' attribute if matching on equal brackets is required.');\n                }\n                if (typeof (desc.open) === 'string' && typeof (desc.token) === 'string') {\n                    brackets.push({\n                        token: string(desc.token) + lexer.tokenPostfix,\n                        open: monarchCommon.fixCase(lexer, string(desc.open)),\n                        close: monarchCommon.fixCase(lexer, string(desc.close))\n                    });\n                }\n                else {\n                    monarchCommon.throwError(lexer, 'every element in the \\'brackets\\' array must be a \\'{open,close,token}\\' object or array');\n                }\n            }\n        }\n        lexer.brackets = brackets;\n        // Disable throw so the syntax highlighter goes, no matter what\n        lexer.noThrow = true;\n        return lexer;\n    }\n    exports.compile = compile;\n});\n\ndefine(__m[36], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var NullState = (function () {\n        function NullState(mode, stateData) {\n            this.mode = mode;\n            this.stateData = stateData;\n        }\n        NullState.prototype.clone = function () {\n            var stateDataClone = (this.stateData ? this.stateData.clone() : null);\n            return new NullState(this.mode, stateDataClone);\n        };\n        NullState.prototype.equals = function (other) {\n            if (this.mode !== other.getMode()) {\n                return false;\n            }\n            var otherStateData = other.getStateData();\n            if (!this.stateData && !otherStateData) {\n                return true;\n            }\n            if (this.stateData && otherStateData) {\n                return this.stateData.equals(otherStateData);\n            }\n            return false;\n        };\n        NullState.prototype.getMode = function () {\n            return this.mode;\n        };\n        NullState.prototype.tokenize = function (stream) {\n            stream.advanceToEOS();\n            return { type: '' };\n        };\n        NullState.prototype.getStateData = function () {\n            return this.stateData;\n        };\n        NullState.prototype.setStateData = function (stateData) {\n            this.stateData = stateData;\n        };\n        return NullState;\n    }());\n    exports.NullState = NullState;\n    var NullMode = (function () {\n        function NullMode() {\n        }\n        NullMode.prototype.getId = function () {\n            return NullMode.ID;\n        };\n        NullMode.prototype.toSimplifiedMode = function () {\n            return this;\n        };\n        NullMode.ID = 'vs.editor.modes.nullMode';\n        return NullMode;\n    }());\n    exports.NullMode = NullMode;\n    function nullTokenize(mode, buffer, state, deltaOffset, stopAtOffset) {\n        if (deltaOffset === void 0) { deltaOffset = 0; }\n        var tokens = [\n            {\n                startIndex: deltaOffset,\n                type: ''\n            }\n        ];\n        var modeTransitions = [\n            {\n                startIndex: deltaOffset,\n                mode: mode\n            }\n        ];\n        return {\n            tokens: tokens,\n            actualStopOffset: deltaOffset + buffer.length,\n            endState: state,\n            modeTransitions: modeTransitions\n        };\n    }\n    exports.nullTokenize = nullTokenize;\n});\n\ndefine(__m[11], __M([1,0,19]), function (require, exports, modeTransition_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var Token = (function () {\n        function Token(startIndex, type) {\n            this.startIndex = startIndex;\n            this.type = type;\n        }\n        Token.prototype.toString = function () {\n            return '(' + this.startIndex + ', ' + this.type + ')';\n        };\n        return Token;\n    }());\n    exports.Token = Token;\n    var LineTokens = (function () {\n        function LineTokens(tokens, modeTransitions, actualStopOffset, endState) {\n            this.tokens = tokens;\n            this.modeTransitions = modeTransitions;\n            this.actualStopOffset = actualStopOffset;\n            this.endState = endState;\n            this.retokenize = null;\n        }\n        return LineTokens;\n    }());\n    exports.LineTokens = LineTokens;\n    function handleEvent(context, offset, runner) {\n        var modeTransitions = context.modeTransitions;\n        if (modeTransitions.length === 1) {\n            return runner(modeTransitions[0].modeId, context, offset);\n        }\n        var modeIndex = modeTransition_1.ModeTransition.findIndexInSegmentsArray(modeTransitions, offset);\n        var nestedMode = modeTransitions[modeIndex].mode;\n        var modeStartIndex = modeTransitions[modeIndex].startIndex;\n        var firstTokenInModeIndex = context.findIndexOfOffset(modeStartIndex);\n        var nextCharacterAfterModeIndex = -1;\n        var nextTokenAfterMode = -1;\n        if (modeIndex + 1 < modeTransitions.length) {\n            nextTokenAfterMode = context.findIndexOfOffset(modeTransitions[modeIndex + 1].startIndex);\n            nextCharacterAfterModeIndex = context.getTokenStartIndex(nextTokenAfterMode);\n        }\n        else {\n            nextTokenAfterMode = context.getTokenCount();\n            nextCharacterAfterModeIndex = context.getLineContent().length;\n        }\n        var firstTokenCharacterOffset = context.getTokenStartIndex(firstTokenInModeIndex);\n        var newCtx = new FilteredLineContext(context, nestedMode, firstTokenInModeIndex, nextTokenAfterMode, firstTokenCharacterOffset, nextCharacterAfterModeIndex);\n        return runner(nestedMode.getId(), newCtx, offset - firstTokenCharacterOffset);\n    }\n    exports.handleEvent = handleEvent;\n    var FilteredLineContext = (function () {\n        function FilteredLineContext(actual, mode, firstTokenInModeIndex, nextTokenAfterMode, firstTokenCharacterOffset, nextCharacterAfterModeIndex) {\n            this.modeTransitions = [new modeTransition_1.ModeTransition(0, mode)];\n            this._actual = actual;\n            this._firstTokenInModeIndex = firstTokenInModeIndex;\n            this._nextTokenAfterMode = nextTokenAfterMode;\n            this._firstTokenCharacterOffset = firstTokenCharacterOffset;\n            this._nextCharacterAfterModeIndex = nextCharacterAfterModeIndex;\n        }\n        FilteredLineContext.prototype.getLineContent = function () {\n            var actualLineContent = this._actual.getLineContent();\n            return actualLineContent.substring(this._firstTokenCharacterOffset, this._nextCharacterAfterModeIndex);\n        };\n        FilteredLineContext.prototype.getTokenCount = function () {\n            return this._nextTokenAfterMode - this._firstTokenInModeIndex;\n        };\n        FilteredLineContext.prototype.findIndexOfOffset = function (offset) {\n            return this._actual.findIndexOfOffset(offset + this._firstTokenCharacterOffset) - this._firstTokenInModeIndex;\n        };\n        FilteredLineContext.prototype.getTokenStartIndex = function (tokenIndex) {\n            return this._actual.getTokenStartIndex(tokenIndex + this._firstTokenInModeIndex) - this._firstTokenCharacterOffset;\n        };\n        FilteredLineContext.prototype.getTokenEndIndex = function (tokenIndex) {\n            return this._actual.getTokenEndIndex(tokenIndex + this._firstTokenInModeIndex) - this._firstTokenCharacterOffset;\n        };\n        FilteredLineContext.prototype.getTokenType = function (tokenIndex) {\n            return this._actual.getTokenType(tokenIndex + this._firstTokenInModeIndex);\n        };\n        FilteredLineContext.prototype.getTokenText = function (tokenIndex) {\n            return this._actual.getTokenText(tokenIndex + this._firstTokenInModeIndex);\n        };\n        return FilteredLineContext;\n    }());\n    exports.FilteredLineContext = FilteredLineContext;\n    var IGNORE_IN_TOKENS = /\\b(comment|string|regex)\\b/;\n    function ignoreBracketsInToken(tokenType) {\n        return IGNORE_IN_TOKENS.test(tokenType);\n    }\n    exports.ignoreBracketsInToken = ignoreBracketsInToken;\n});\n\ndefine(__m[79], __M([1,0,11]), function (require, exports, supports_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var CharacterPairSupport = (function () {\n        function CharacterPairSupport(registry, modeId, config) {\n            this._registry = registry;\n            this._modeId = modeId;\n            this._autoClosingPairs = config.autoClosingPairs;\n            if (!this._autoClosingPairs) {\n                this._autoClosingPairs = config.brackets ? config.brackets.map(function (b) { return ({ open: b[0], close: b[1] }); }) : [];\n            }\n            this._surroundingPairs = config.surroundingPairs || this._autoClosingPairs;\n        }\n        CharacterPairSupport.prototype.getAutoClosingPairs = function () {\n            return this._autoClosingPairs;\n        };\n        CharacterPairSupport.prototype.shouldAutoClosePair = function (character, context, offset) {\n            var _this = this;\n            return supports_1.handleEvent(context, offset, function (nestedModeId, context, offset) {\n                if (_this._modeId === nestedModeId) {\n                    // Always complete on empty line\n                    if (context.getTokenCount() === 0) {\n                        return true;\n                    }\n                    var tokenIndex = context.findIndexOfOffset(offset - 1);\n                    var tokenType = context.getTokenType(tokenIndex);\n                    for (var i = 0; i < _this._autoClosingPairs.length; ++i) {\n                        if (_this._autoClosingPairs[i].open === character) {\n                            if (_this._autoClosingPairs[i].notIn) {\n                                for (var notInIndex = 0; notInIndex < _this._autoClosingPairs[i].notIn.length; ++notInIndex) {\n                                    if (tokenType.indexOf(_this._autoClosingPairs[i].notIn[notInIndex]) > -1) {\n                                        return false;\n                                    }\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    return true;\n                }\n                var characterPairSupport = _this._registry.getCharacterPairSupport(nestedModeId);\n                if (characterPairSupport) {\n                    return characterPairSupport.shouldAutoClosePair(character, context, offset);\n                }\n                return null;\n            });\n        };\n        CharacterPairSupport.prototype.getSurroundingPairs = function () {\n            return this._surroundingPairs;\n        };\n        return CharacterPairSupport;\n    }());\n    exports.CharacterPairSupport = CharacterPairSupport;\n});\n\ndefine(__m[23], __M([1,0,4,27]), function (require, exports, strings, range_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var RichEditBrackets = (function () {\n        function RichEditBrackets(modeId, brackets) {\n            var _this = this;\n            this.brackets = brackets.map(function (b) {\n                return {\n                    modeId: modeId,\n                    open: b[0],\n                    close: b[1],\n                    forwardRegex: getRegexForBracketPair({ open: b[0], close: b[1] }),\n                    reversedRegex: getReversedRegexForBracketPair({ open: b[0], close: b[1] })\n                };\n            });\n            this.forwardRegex = getRegexForBrackets(this.brackets);\n            this.reversedRegex = getReversedRegexForBrackets(this.brackets);\n            this.textIsBracket = {};\n            this.textIsOpenBracket = {};\n            this.maxBracketLength = 0;\n            this.brackets.forEach(function (b) {\n                _this.textIsBracket[b.open] = b;\n                _this.textIsBracket[b.close] = b;\n                _this.textIsOpenBracket[b.open] = true;\n                _this.textIsOpenBracket[b.close] = false;\n                _this.maxBracketLength = Math.max(_this.maxBracketLength, b.open.length);\n                _this.maxBracketLength = Math.max(_this.maxBracketLength, b.close.length);\n            });\n        }\n        return RichEditBrackets;\n    }());\n    exports.RichEditBrackets = RichEditBrackets;\n    function once(keyFn, computeFn) {\n        var cache = {};\n        return function (input) {\n            var key = keyFn(input);\n            if (!cache.hasOwnProperty(key)) {\n                cache[key] = computeFn(input);\n            }\n            return cache[key];\n        };\n    }\n    var getRegexForBracketPair = once(function (input) { return (input.open + \";\" + input.close); }, function (input) {\n        return createOrRegex([input.open, input.close]);\n    });\n    var getReversedRegexForBracketPair = once(function (input) { return (input.open + \";\" + input.close); }, function (input) {\n        return createOrRegex([toReversedString(input.open), toReversedString(input.close)]);\n    });\n    var getRegexForBrackets = once(function (input) { return input.map(function (b) { return (b.open + \";\" + b.close); }).join(';'); }, function (input) {\n        var pieces = [];\n        input.forEach(function (b) {\n            pieces.push(b.open);\n            pieces.push(b.close);\n        });\n        return createOrRegex(pieces);\n    });\n    var getReversedRegexForBrackets = once(function (input) { return input.map(function (b) { return (b.open + \";\" + b.close); }).join(';'); }, function (input) {\n        var pieces = [];\n        input.forEach(function (b) {\n            pieces.push(toReversedString(b.open));\n            pieces.push(toReversedString(b.close));\n        });\n        return createOrRegex(pieces);\n    });\n    function createOrRegex(pieces) {\n        var regexStr = \"(\" + pieces.map(strings.escapeRegExpCharacters).join(')|(') + \")\";\n        return strings.createRegExp(regexStr, true, false, false, false);\n    }\n    function toReversedString(str) {\n        var reversedStr = '';\n        for (var i = str.length - 1; i >= 0; i--) {\n            reversedStr += str.charAt(i);\n        }\n        return reversedStr;\n    }\n    var BracketsUtils = (function () {\n        function BracketsUtils() {\n        }\n        BracketsUtils._findPrevBracketInText = function (reversedBracketRegex, lineNumber, reversedText, offset) {\n            var m = reversedText.match(reversedBracketRegex);\n            if (!m) {\n                return null;\n            }\n            var matchOffset = reversedText.length - m.index;\n            var matchLength = m[0].length;\n            var absoluteMatchOffset = offset + matchOffset;\n            return new range_1.Range(lineNumber, absoluteMatchOffset - matchLength + 1, lineNumber, absoluteMatchOffset + 1);\n        };\n        BracketsUtils.findPrevBracketInToken = function (reversedBracketRegex, lineNumber, lineText, currentTokenStart, currentTokenEnd) {\n            // Because JS does not support backwards regex search, we search forwards in a reversed string with a reversed regex ;)\n            var currentTokenReversedText = '';\n            for (var index = currentTokenEnd - 1; index >= currentTokenStart; index--) {\n                currentTokenReversedText += lineText.charAt(index);\n            }\n            return this._findPrevBracketInText(reversedBracketRegex, lineNumber, currentTokenReversedText, currentTokenStart);\n        };\n        BracketsUtils.findNextBracketInText = function (bracketRegex, lineNumber, text, offset) {\n            var m = text.match(bracketRegex);\n            if (!m) {\n                return null;\n            }\n            var matchOffset = m.index;\n            var matchLength = m[0].length;\n            var absoluteMatchOffset = offset + matchOffset;\n            return new range_1.Range(lineNumber, absoluteMatchOffset + 1, lineNumber, absoluteMatchOffset + 1 + matchLength);\n        };\n        BracketsUtils.findNextBracketInToken = function (bracketRegex, lineNumber, lineText, currentTokenStart, currentTokenEnd) {\n            var currentTokenText = lineText.substring(currentTokenStart, currentTokenEnd);\n            return this.findNextBracketInText(bracketRegex, lineNumber, currentTokenText, currentTokenStart);\n        };\n        return BracketsUtils;\n    }());\n    exports.BracketsUtils = BracketsUtils;\n});\n\ndefine(__m[77], __M([1,0,4,11,23]), function (require, exports, strings, supports_1, richEditBrackets_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var BracketElectricCharacterSupport = (function () {\n        function BracketElectricCharacterSupport(registry, modeId, brackets, autoClosePairs, contribution) {\n            this._registry = registry;\n            this._modeId = modeId;\n            this.contribution = contribution || {};\n            this.brackets = new Brackets(modeId, brackets, autoClosePairs, this.contribution.docComment);\n        }\n        BracketElectricCharacterSupport.prototype.getElectricCharacters = function () {\n            if (Array.isArray(this.contribution.embeddedElectricCharacters)) {\n                return this.contribution.embeddedElectricCharacters.concat(this.brackets.getElectricCharacters());\n            }\n            return this.brackets.getElectricCharacters();\n        };\n        BracketElectricCharacterSupport.prototype.onElectricCharacter = function (context, offset) {\n            var _this = this;\n            return supports_1.handleEvent(context, offset, function (nestedModeId, context, offset) {\n                if (_this._modeId === nestedModeId) {\n                    return _this.brackets.onElectricCharacter(context, offset);\n                }\n                var electricCharacterSupport = _this._registry.getElectricCharacterSupport(nestedModeId);\n                if (electricCharacterSupport) {\n                    return electricCharacterSupport.onElectricCharacter(context, offset);\n                }\n                return null;\n            });\n        };\n        return BracketElectricCharacterSupport;\n    }());\n    exports.BracketElectricCharacterSupport = BracketElectricCharacterSupport;\n    var Brackets = (function () {\n        function Brackets(modeId, richEditBrackets, autoClosePairs, docComment) {\n            this._modeId = modeId;\n            this._richEditBrackets = richEditBrackets;\n            this._complexAutoClosePairs = autoClosePairs.filter(function (pair) { return pair.open.length > 1 && !!pair.close; });\n            if (docComment) {\n                // IDocComment is legacy, only partially supported\n                this._complexAutoClosePairs.push({ open: docComment.open, close: docComment.close });\n            }\n        }\n        Brackets.prototype.getElectricCharacters = function () {\n            var result = [];\n            if (this._richEditBrackets) {\n                for (var i = 0, len = this._richEditBrackets.brackets.length; i < len; i++) {\n                    var bracketPair = this._richEditBrackets.brackets[i];\n                    var lastChar = bracketPair.close.charAt(bracketPair.close.length - 1);\n                    result.push(lastChar);\n                }\n            }\n            // auto close\n            for (var _i = 0, _a = this._complexAutoClosePairs; _i < _a.length; _i++) {\n                var pair = _a[_i];\n                result.push(pair.open.charAt(pair.open.length - 1));\n            }\n            // Filter duplicate entries\n            result = result.filter(function (item, pos, array) {\n                return array.indexOf(item) === pos;\n            });\n            return result;\n        };\n        Brackets.prototype.onElectricCharacter = function (context, offset) {\n            if (context.getTokenCount() === 0) {\n                return null;\n            }\n            return (this._onElectricAutoClose(context, offset) ||\n                this._onElectricAutoIndent(context, offset));\n        };\n        Brackets.prototype.containsTokenTypes = function (fullTokenSpec, tokensToLookFor) {\n            var array = tokensToLookFor.split('.');\n            for (var i = 0; i < array.length; ++i) {\n                if (fullTokenSpec.indexOf(array[i]) < 0) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        Brackets.prototype._onElectricAutoIndent = function (context, offset) {\n            if (!this._richEditBrackets || this._richEditBrackets.brackets.length === 0) {\n                return null;\n            }\n            var reversedBracketRegex = this._richEditBrackets.reversedRegex;\n            var lineText = context.getLineContent();\n            var tokenIndex = context.findIndexOfOffset(offset);\n            var tokenStart = context.getTokenStartIndex(tokenIndex);\n            var tokenEnd = offset + 1;\n            var firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(context.getLineContent());\n            if (firstNonWhitespaceIndex !== -1 && firstNonWhitespaceIndex < tokenStart) {\n                return null;\n            }\n            if (!supports_1.ignoreBracketsInToken(context.getTokenType(tokenIndex))) {\n                var r = richEditBrackets_1.BracketsUtils.findPrevBracketInToken(reversedBracketRegex, 1, lineText, tokenStart, tokenEnd);\n                if (r) {\n                    var text = lineText.substring(r.startColumn - 1, r.endColumn - 1);\n                    var isOpen = this._richEditBrackets.textIsOpenBracket[text];\n                    if (!isOpen) {\n                        return {\n                            matchOpenBracket: text\n                        };\n                    }\n                }\n            }\n            return null;\n        };\n        Brackets.prototype._onElectricAutoClose = function (context, offset) {\n            var _this = this;\n            if (!this._complexAutoClosePairs.length) {\n                return null;\n            }\n            var line = context.getLineContent();\n            var char = line[offset];\n            var _loop_1 = function(i) {\n                var pair = this_1._complexAutoClosePairs[i];\n                // See if the right electric character was pressed\n                if (char !== pair.open.charAt(pair.open.length - 1)) {\n                    return \"continue\";\n                }\n                // If this line already contains the closing tag, do nothing.\n                if (line.indexOf(pair.close, offset) >= 0) {\n                    return \"continue\";\n                }\n                // check if the full open bracket matches\n                var lastTokenIndex = context.findIndexOfOffset(offset);\n                if (line.substring(context.getTokenStartIndex(lastTokenIndex), offset + 1 /* include electric char*/) !== pair.open) {\n                    return \"continue\";\n                }\n                // If we're in a scope listen in 'notIn', do nothing\n                if (pair.notIn) {\n                    var tokenType_1 = context.getTokenType(lastTokenIndex);\n                    if (pair.notIn.some(function (scope) { return _this.containsTokenTypes(tokenType_1, scope); })) {\n                        return \"continue\";\n                    }\n                }\n                return { value: { appendText: pair.close } };\n            };\n            var this_1 = this;\n            for (var i = 0; i < this._complexAutoClosePairs.length; i++) {\n                var state_1 = _loop_1(i);\n                if (typeof state_1 === \"object\") return state_1.value;\n                if (state_1 === \"continue\") continue;\n            }\n        };\n        return Brackets;\n    }());\n    exports.Brackets = Brackets;\n});\n\ndefine(__m[41], __M([1,0,55,36,11]), function (require, exports, lineStream_1, nullMode_1, supports_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    function isFunction(something) {\n        return typeof something === 'function';\n    }\n    var TokenizationSupport = (function () {\n        function TokenizationSupport(mode, customization, supportsNestedModes) {\n            this._mode = mode;\n            this.customization = customization;\n            this.supportsNestedModes = supportsNestedModes;\n            this._embeddedModesListeners = {};\n            if (this.supportsNestedModes) {\n                if (!this._mode.setTokenizationSupport) {\n                    throw new Error('Cannot be a mode with nested modes unless I can emit a tokenizationSupport changed event!');\n                }\n            }\n            this.defaults = {\n                enterNestedMode: !isFunction(customization.enterNestedMode),\n                getNestedMode: !isFunction(customization.getNestedMode),\n                getNestedModeInitialState: !isFunction(customization.getNestedModeInitialState),\n                getLeavingNestedModeData: !isFunction(customization.getLeavingNestedModeData),\n                onReturningFromNestedMode: !isFunction(customization.onReturningFromNestedMode)\n            };\n        }\n        TokenizationSupport.prototype.dispose = function () {\n            for (var listener in this._embeddedModesListeners) {\n                this._embeddedModesListeners[listener].dispose();\n                delete this._embeddedModesListeners[listener];\n            }\n        };\n        TokenizationSupport.prototype.getInitialState = function () {\n            return this.customization.getInitialState();\n        };\n        TokenizationSupport.prototype.tokenize = function (line, state, deltaOffset, stopAtOffset) {\n            if (deltaOffset === void 0) { deltaOffset = 0; }\n            if (stopAtOffset === void 0) { stopAtOffset = deltaOffset + line.length; }\n            if (state.getMode() !== this._mode) {\n                return this._nestedTokenize(line, state, deltaOffset, stopAtOffset, [], []);\n            }\n            else {\n                return this._myTokenize(line, state, deltaOffset, stopAtOffset, [], []);\n            }\n        };\n        /**\n         * Precondition is: nestedModeState.getMode() !== this\n         * This means we are in a nested mode when parsing starts on this line.\n         */\n        TokenizationSupport.prototype._nestedTokenize = function (buffer, nestedModeState, deltaOffset, stopAtOffset, prependTokens, prependModeTransitions) {\n            var myStateBeforeNestedMode = nestedModeState.getStateData();\n            var leavingNestedModeData = this.getLeavingNestedModeData(buffer, myStateBeforeNestedMode);\n            // Be sure to give every embedded mode the\n            // opportunity to leave nested mode.\n            // i.e. Don't go straight to the most nested mode\n            var stepOnceNestedState = nestedModeState;\n            while (stepOnceNestedState.getStateData() && stepOnceNestedState.getStateData().getMode() !== this._mode) {\n                stepOnceNestedState = stepOnceNestedState.getStateData();\n            }\n            var nestedMode = stepOnceNestedState.getMode();\n            if (!leavingNestedModeData) {\n                // tokenization will not leave nested mode\n                var result;\n                if (nestedMode.tokenizationSupport) {\n                    result = nestedMode.tokenizationSupport.tokenize(buffer, nestedModeState, deltaOffset, stopAtOffset);\n                }\n                else {\n                    // The nested mode doesn't have tokenization support,\n                    // unfortunatelly this means we have to fake it\n                    result = nullMode_1.nullTokenize(nestedMode, buffer, nestedModeState, deltaOffset);\n                }\n                result.tokens = prependTokens.concat(result.tokens);\n                result.modeTransitions = prependModeTransitions.concat(result.modeTransitions);\n                return result;\n            }\n            var nestedModeBuffer = leavingNestedModeData.nestedModeBuffer;\n            if (nestedModeBuffer.length > 0) {\n                // Tokenize with the nested mode\n                var nestedModeLineTokens;\n                if (nestedMode.tokenizationSupport) {\n                    nestedModeLineTokens = nestedMode.tokenizationSupport.tokenize(nestedModeBuffer, nestedModeState, deltaOffset, stopAtOffset);\n                }\n                else {\n                    // The nested mode doesn't have tokenization support,\n                    // unfortunatelly this means we have to fake it\n                    nestedModeLineTokens = nullMode_1.nullTokenize(nestedMode, nestedModeBuffer, nestedModeState, deltaOffset);\n                }\n                // Save last state of nested mode\n                nestedModeState = nestedModeLineTokens.endState;\n                // Prepend nested mode's result to our result\n                prependTokens = prependTokens.concat(nestedModeLineTokens.tokens);\n                prependModeTransitions = prependModeTransitions.concat(nestedModeLineTokens.modeTransitions);\n            }\n            var bufferAfterNestedMode = leavingNestedModeData.bufferAfterNestedMode;\n            var myStateAfterNestedMode = leavingNestedModeData.stateAfterNestedMode;\n            myStateAfterNestedMode.setStateData(myStateBeforeNestedMode.getStateData());\n            this.onReturningFromNestedMode(myStateAfterNestedMode, nestedModeState);\n            return this._myTokenize(bufferAfterNestedMode, myStateAfterNestedMode, deltaOffset + nestedModeBuffer.length, stopAtOffset, prependTokens, prependModeTransitions);\n        };\n        /**\n         * Precondition is: state.getMode() === this\n         * This means we are in the current mode when parsing starts on this line.\n         */\n        TokenizationSupport.prototype._myTokenize = function (buffer, myState, deltaOffset, stopAtOffset, prependTokens, prependModeTransitions) {\n            var _this = this;\n            var lineStream = new lineStream_1.LineStream(buffer);\n            var tokenResult, beforeTokenizeStreamPos;\n            var previousType = null;\n            var retokenize = null;\n            myState = myState.clone();\n            if (prependModeTransitions.length <= 0 || prependModeTransitions[prependModeTransitions.length - 1].mode !== this._mode) {\n                // Avoid transitioning to the same mode (this can happen in case of empty embedded modes)\n                prependModeTransitions.push({\n                    startIndex: deltaOffset,\n                    mode: this._mode\n                });\n            }\n            var maxPos = Math.min(stopAtOffset - deltaOffset, buffer.length);\n            while (lineStream.pos() < maxPos) {\n                beforeTokenizeStreamPos = lineStream.pos();\n                do {\n                    tokenResult = myState.tokenize(lineStream);\n                    if (tokenResult === null || tokenResult === undefined ||\n                        ((tokenResult.type === undefined || tokenResult.type === null) &&\n                            (tokenResult.nextState === undefined || tokenResult.nextState === null))) {\n                        throw new Error('Tokenizer must return a valid state');\n                    }\n                    if (tokenResult.nextState) {\n                        tokenResult.nextState.setStateData(myState.getStateData());\n                        myState = tokenResult.nextState;\n                    }\n                    if (lineStream.pos() <= beforeTokenizeStreamPos) {\n                        throw new Error('Stream did not advance while tokenizing. Mode id is ' + this._mode.getId() + ' (stuck at token type: \"' + tokenResult.type + '\", prepend tokens: \"' + (prependTokens.map(function (t) { return t.type; }).join(',')) + '\").');\n                    }\n                } while (!tokenResult.type && tokenResult.type !== '');\n                if (previousType !== tokenResult.type || tokenResult.dontMergeWithPrev || previousType === null) {\n                    prependTokens.push(new supports_1.Token(beforeTokenizeStreamPos + deltaOffset, tokenResult.type));\n                }\n                previousType = tokenResult.type;\n                if (this.supportsNestedModes && this.enterNestedMode(myState)) {\n                    var currentEmbeddedLevels = this._getEmbeddedLevel(myState);\n                    if (currentEmbeddedLevels < TokenizationSupport.MAX_EMBEDDED_LEVELS) {\n                        var nestedModeState = this.getNestedModeInitialState(myState);\n                        // Re-emit tokenizationSupport change events from all modes that I ever embedded\n                        var embeddedMode = nestedModeState.state.getMode();\n                        if (typeof embeddedMode.addSupportChangedListener === 'function' && !this._embeddedModesListeners.hasOwnProperty(embeddedMode.getId())) {\n                            var emitting = false;\n                            this._embeddedModesListeners[embeddedMode.getId()] = embeddedMode.addSupportChangedListener(function (e) {\n                                if (emitting) {\n                                    return;\n                                }\n                                if (e.tokenizationSupport) {\n                                    emitting = true;\n                                    _this._mode.setTokenizationSupport(function (mode) {\n                                        return mode.tokenizationSupport;\n                                    });\n                                    emitting = false;\n                                }\n                            });\n                        }\n                        if (!lineStream.eos()) {\n                            // There is content from the embedded mode\n                            var restOfBuffer = buffer.substr(lineStream.pos());\n                            var result = this._nestedTokenize(restOfBuffer, nestedModeState.state, deltaOffset + lineStream.pos(), stopAtOffset, prependTokens, prependModeTransitions);\n                            result.retokenize = result.retokenize || nestedModeState.missingModePromise;\n                            return result;\n                        }\n                        else {\n                            // Transition to the nested mode state\n                            myState = nestedModeState.state;\n                            retokenize = nestedModeState.missingModePromise;\n                        }\n                    }\n                }\n            }\n            return {\n                tokens: prependTokens,\n                actualStopOffset: lineStream.pos() + deltaOffset,\n                modeTransitions: prependModeTransitions,\n                endState: myState,\n                retokenize: retokenize\n            };\n        };\n        TokenizationSupport.prototype._getEmbeddedLevel = function (state) {\n            var result = -1;\n            while (state) {\n                result++;\n                state = state.getStateData();\n            }\n            return result;\n        };\n        TokenizationSupport.prototype.enterNestedMode = function (state) {\n            if (this.defaults.enterNestedMode) {\n                return false;\n            }\n            return this.customization.enterNestedMode(state);\n        };\n        TokenizationSupport.prototype.getNestedMode = function (state) {\n            if (this.defaults.getNestedMode) {\n                return null;\n            }\n            return this.customization.getNestedMode(state);\n        };\n        TokenizationSupport._validatedNestedMode = function (input) {\n            var mode = new nullMode_1.NullMode(), missingModePromise = null;\n            if (input && input.mode) {\n                mode = input.mode;\n            }\n            if (input && input.missingModePromise) {\n                missingModePromise = input.missingModePromise;\n            }\n            return {\n                mode: mode,\n                missingModePromise: missingModePromise\n            };\n        };\n        TokenizationSupport.prototype.getNestedModeInitialState = function (state) {\n            if (this.defaults.getNestedModeInitialState) {\n                var nestedMode = TokenizationSupport._validatedNestedMode(this.getNestedMode(state));\n                var missingModePromise = nestedMode.missingModePromise;\n                var nestedModeState;\n                if (nestedMode.mode.tokenizationSupport) {\n                    nestedModeState = nestedMode.mode.tokenizationSupport.getInitialState();\n                }\n                else {\n                    nestedModeState = new nullMode_1.NullState(nestedMode.mode, null);\n                }\n                nestedModeState.setStateData(state);\n                return {\n                    state: nestedModeState,\n                    missingModePromise: missingModePromise\n                };\n            }\n            return this.customization.getNestedModeInitialState(state);\n        };\n        TokenizationSupport.prototype.getLeavingNestedModeData = function (line, state) {\n            if (this.defaults.getLeavingNestedModeData) {\n                return null;\n            }\n            return this.customization.getLeavingNestedModeData(line, state);\n        };\n        TokenizationSupport.prototype.onReturningFromNestedMode = function (myStateAfterNestedMode, lastNestedModeState) {\n            if (this.defaults.onReturningFromNestedMode) {\n                return null;\n            }\n            return this.customization.onReturningFromNestedMode(myStateAfterNestedMode, lastNestedModeState);\n        };\n        TokenizationSupport.MAX_EMBEDDED_LEVELS = 5;\n        return TokenizationSupport;\n    }());\n    exports.TokenizationSupport = TokenizationSupport;\n});\n\n\n\n\n\n\ndefine(__m[76], __M([1,0,35,55,24,41]), function (require, exports, abstractState_1, lineStream_1, monarchCommon, tokenizationSupport_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /**\n     * The MonarchLexer class implements a monaco lexer that highlights source code.\n     * It takes a compiled lexer to guide the tokenizer and maintains a stack of\n     * lexer states.\n     */\n    var MonarchLexer = (function (_super) {\n        __extends(MonarchLexer, _super);\n        function MonarchLexer(mode, modeService, lexer, stack, embeddedMode) {\n            _super.call(this, mode);\n            this.id = MonarchLexer.ID++; // for debugging, assigns unique id to each instance\n            this.modeService = modeService;\n            this.lexer = lexer; // (compiled) lexer description\n            this.stack = (stack ? stack : [lexer.start]); // stack of states\n            this.embeddedMode = (embeddedMode ? embeddedMode : null); // are we scanning an embedded section?\n            // did we encounter an embedded start on this line?\n            // no need for cloning or equality since it is used only within a line\n            this.embeddedEntered = false;\n            // regular expression group matching\n            // these never need cloning or equality since they are only used within a line match\n            this.groupActions = null;\n            this.groupMatches = null;\n            this.groupMatched = null;\n            this.groupRule = null;\n        }\n        MonarchLexer.prototype.makeClone = function () {\n            return new MonarchLexer(this.getMode(), this.modeService, this.lexer, this.stack.slice(0), this.embeddedMode);\n        };\n        MonarchLexer.prototype.equals = function (other) {\n            if (!_super.prototype.equals.call(this, other)) {\n                return false;\n            }\n            if (!(other instanceof MonarchLexer)) {\n                return false;\n            }\n            var otherm = other;\n            if ((this.stack.length !== otherm.stack.length) || (this.lexer.languageId !== otherm.lexer.languageId) ||\n                (this.embeddedMode !== otherm.embeddedMode)) {\n                return false;\n            }\n            var idx;\n            for (idx in this.stack) {\n                if (this.stack.hasOwnProperty(idx)) {\n                    if (this.stack[idx] !== otherm.stack[idx]) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        };\n        /**\n         * The main tokenizer: this function gets called by monaco to tokenize lines\n         * Note: we don't want to raise exceptions here and always keep going..\n         *\n         * TODO: there are many optimizations possible here for the common cases\n         * but for now I concentrated on functionality and correctness.\n         */\n        MonarchLexer.prototype.tokenize = function (stream, noConsumeIsOk) {\n            var stackLen0 = this.stack.length; // these are saved to check progress\n            var groupLen0 = 0;\n            var state = this.stack[0]; // the current state\n            this.embeddedEntered = false;\n            var matches = null;\n            var matched = null;\n            var action = null;\n            var next = null;\n            var rule = null;\n            // check if we need to process group matches first\n            if (this.groupActions) {\n                groupLen0 = this.groupActions.length;\n                matches = this.groupMatches;\n                matched = this.groupMatched.shift();\n                action = this.groupActions.shift();\n                rule = this.groupRule;\n                // cleanup if necessary\n                if (this.groupActions.length === 0) {\n                    this.groupActions = null;\n                    this.groupMatches = null;\n                    this.groupMatched = null;\n                    this.groupRule = null;\n                }\n            }\n            else {\n                // nothing to do\n                if (stream.eos()) {\n                    return { type: '' };\n                }\n                // get the entire line\n                var line = stream.advanceToEOS();\n                stream.goBack(line.length);\n                // get the rules for this state\n                var rules = this.lexer.tokenizer[state];\n                if (!rules) {\n                    rules = monarchCommon.findRules(this.lexer, state); // do parent matching\n                }\n                if (!rules) {\n                    monarchCommon.throwError(this.lexer, 'tokenizer state is not defined: ' + state);\n                }\n                else {\n                    // try each rule until we match\n                    rule = null;\n                    var pos = stream.pos();\n                    var idx;\n                    for (idx in rules) {\n                        if (rules.hasOwnProperty(idx)) {\n                            rule = rules[idx];\n                            if (pos === 0 || !rule.matchOnlyAtLineStart) {\n                                matches = line.match(rule.regex);\n                                if (matches) {\n                                    matched = matches[0];\n                                    action = rule.action;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            // We matched 'rule' with 'matches' and 'action'\n            if (!matches) {\n                matches = [''];\n                matched = '';\n            }\n            if (!action) {\n                // bad: we didn't match anything, and there is no action to take\n                // we need to advance the stream or we get progress trouble\n                if (!stream.eos()) {\n                    matches = [stream.peek()];\n                    matched = matches[0];\n                }\n                action = this.lexer.defaultToken;\n            }\n            // advance stream\n            stream.advance(matched.length);\n            // maybe call action function (used for 'cases')\n            while (action.test) {\n                var callres = action.test(matched, matches, state, stream.eos());\n                action = callres;\n            }\n            // set the result: either a string or an array of actions\n            var result = null;\n            if (typeof (action) === 'string' || Array.isArray(action)) {\n                result = action;\n            }\n            else if (action.group) {\n                result = action.group;\n            }\n            else if (action.token !== null && action.token !== undefined) {\n                result = action.token;\n                // do $n replacements?\n                if (action.tokenSubst) {\n                    result = monarchCommon.substituteMatches(this.lexer, result, matched, matches, state);\n                }\n                // enter embedded mode?\n                if (action.nextEmbedded) {\n                    if (action.nextEmbedded === '@pop') {\n                        if (!this.embeddedMode) {\n                            monarchCommon.throwError(this.lexer, 'cannot pop embedded mode if not inside one');\n                        }\n                        this.embeddedMode = null;\n                    }\n                    else if (this.embeddedMode) {\n                        monarchCommon.throwError(this.lexer, 'cannot enter embedded mode from within an embedded mode');\n                    }\n                    else {\n                        this.embeddedMode = monarchCommon.substituteMatches(this.lexer, action.nextEmbedded, matched, matches, state);\n                        // substitute language alias to known modes to support syntax highlighting\n                        var embeddedMode = this.modeService.getModeIdForLanguageName(this.embeddedMode);\n                        if (this.embeddedMode && embeddedMode) {\n                            this.embeddedMode = embeddedMode;\n                        }\n                        this.embeddedEntered = true;\n                    }\n                }\n                // state transformations\n                if (action.goBack) {\n                    stream.goBack(action.goBack);\n                }\n                if (action.switchTo && typeof action.switchTo === 'string') {\n                    var nextState = monarchCommon.substituteMatches(this.lexer, action.switchTo, matched, matches, state); // switch state without a push...\n                    if (nextState[0] === '@') {\n                        nextState = nextState.substr(1); // peel off starting '@'\n                    }\n                    if (!monarchCommon.findRules(this.lexer, nextState)) {\n                        monarchCommon.throwError(this.lexer, 'trying to switch to a state \\'' + nextState + '\\' that is undefined in rule: ' + rule.name);\n                    }\n                    else {\n                        this.stack[0] = nextState;\n                    }\n                    next = null;\n                }\n                else if (action.transform && typeof action.transform === 'function') {\n                    this.stack = action.transform(this.stack); // if you need to do really funky stuff...\n                    next = null;\n                }\n                else if (action.next) {\n                    if (action.next === '@push') {\n                        if (this.stack.length >= this.lexer.maxStack) {\n                            monarchCommon.throwError(this.lexer, 'maximum tokenizer stack size reached: [' +\n                                this.stack[0] + ',' + this.stack[1] + ',...,' +\n                                this.stack[this.stack.length - 2] + ',' + this.stack[this.stack.length - 1] + ']');\n                        }\n                        else {\n                            this.stack.unshift(state);\n                        }\n                    }\n                    else if (action.next === '@pop') {\n                        if (this.stack.length <= 1) {\n                            monarchCommon.throwError(this.lexer, 'trying to pop an empty stack in rule: ' + rule.name);\n                        }\n                        else {\n                            this.stack.shift();\n                        }\n                    }\n                    else if (action.next === '@popall') {\n                        if (this.stack.length > 1) {\n                            this.stack = [this.stack[this.stack.length - 1]];\n                        }\n                    }\n                    else {\n                        var nextState = monarchCommon.substituteMatches(this.lexer, action.next, matched, matches, state);\n                        if (nextState[0] === '@') {\n                            nextState = nextState.substr(1); // peel off starting '@'\n                        }\n                        if (!monarchCommon.findRules(this.lexer, nextState)) {\n                            monarchCommon.throwError(this.lexer, 'trying to set a next state \\'' + nextState + '\\' that is undefined in rule: ' + rule.name);\n                        }\n                        else {\n                            this.stack.unshift(nextState);\n                        }\n                    }\n                }\n                if (action.log && typeof (action.log) === 'string') {\n                    monarchCommon.log(this.lexer, this.lexer.languageId + ': ' + monarchCommon.substituteMatches(this.lexer, action.log, matched, matches, state));\n                }\n            }\n            // check result\n            if (result === null) {\n                monarchCommon.throwError(this.lexer, 'lexer rule has no well-defined action in rule: ' + rule.name);\n                result = this.lexer.defaultToken;\n            }\n            // is the result a group match?\n            if (Array.isArray(result)) {\n                if (this.groupActions && this.groupActions.length > 0) {\n                    monarchCommon.throwError(this.lexer, 'groups cannot be nested: ' + rule.name);\n                }\n                if (matches.length !== result.length + 1) {\n                    monarchCommon.throwError(this.lexer, 'matched number of groups does not match the number of actions in rule: ' + rule.name);\n                }\n                var totalLen = 0;\n                for (var i = 1; i < matches.length; i++) {\n                    totalLen += matches[i].length;\n                }\n                if (totalLen !== matched.length) {\n                    monarchCommon.throwError(this.lexer, 'with groups, all characters should be matched in consecutive groups in rule: ' + rule.name);\n                }\n                this.groupMatches = matches;\n                this.groupMatched = matches.slice(1);\n                this.groupActions = result.slice(0);\n                this.groupRule = rule;\n                stream.goBack(matched.length);\n                return this.tokenize(stream); // call recursively to initiate first result match\n            }\n            else {\n                // check for '@rematch'\n                if (result === '@rematch') {\n                    stream.goBack(matched.length);\n                    matched = ''; // better set the next state too..\n                    matches = null;\n                    result = '';\n                }\n                // check progress\n                if (matched.length === 0) {\n                    if (stackLen0 !== this.stack.length || state !== this.stack[0]\n                        || (!this.groupActions ? 0 : this.groupActions.length) !== groupLen0) {\n                        if (!noConsumeIsOk) {\n                            return this.tokenize(stream); // tokenize again in the new state\n                        }\n                    }\n                    else {\n                        monarchCommon.throwError(this.lexer, 'no progress in tokenizer in rule: ' + rule.name);\n                        stream.advanceToEOS(); // must make progress or editor loops\n                    }\n                }\n                // return the result (and check for brace matching)\n                // todo: for efficiency we could pre-sanitize tokenPostfix and substitutions\n                if (result.indexOf('@brackets') === 0) {\n                    var rest = result.substr('@brackets'.length);\n                    var bracket = findBracket(this.lexer, matched);\n                    if (!bracket) {\n                        monarchCommon.throwError(this.lexer, '@brackets token returned but no bracket defined as: ' + matched);\n                        bracket = { token: '', bracketType: monarchCommon.MonarchBracket.None };\n                    }\n                    return { type: monarchCommon.sanitize(bracket.token + rest) };\n                }\n                else {\n                    var token = (result === '' ? '' : result + this.lexer.tokenPostfix);\n                    return { type: monarchCommon.sanitize(token) };\n                }\n            }\n        };\n        MonarchLexer.ID = 0;\n        return MonarchLexer;\n    }(abstractState_1.AbstractState));\n    exports.MonarchLexer = MonarchLexer;\n    /**\n     * Searches for a bracket in the 'brackets' attribute that matches the input.\n     */\n    function findBracket(lexer, matched) {\n        if (!matched) {\n            return null;\n        }\n        matched = monarchCommon.fixCase(lexer, matched);\n        var brackets = lexer.brackets;\n        for (var i = 0; i < brackets.length; i++) {\n            var bracket = brackets[i];\n            if (bracket.open === matched) {\n                return { token: bracket.token, bracketType: monarchCommon.MonarchBracket.Open };\n            }\n            else if (bracket.close === matched) {\n                return { token: bracket.token, bracketType: monarchCommon.MonarchBracket.Close };\n            }\n        }\n        return null;\n    }\n    function createTokenizationSupport(modeService, mode, lexer) {\n        return new tokenizationSupport_1.TokenizationSupport(mode, {\n            getInitialState: function () {\n                return new MonarchLexer(mode, modeService, lexer);\n            },\n            enterNestedMode: function (state) {\n                if (state instanceof MonarchLexer) {\n                    return state.embeddedEntered;\n                }\n                return false;\n            },\n            getNestedMode: function (rawState) {\n                var mime = rawState.embeddedMode;\n                if (!modeService.isRegisteredMode(mime)) {\n                    // unknown mode\n                    return {\n                        mode: modeService.getMode('text/plain'),\n                        missingModePromise: null\n                    };\n                }\n                var mode = modeService.getMode(mime);\n                if (mode) {\n                    // mode is available\n                    return {\n                        mode: mode,\n                        missingModePromise: null\n                    };\n                }\n                // mode is not yet loaded\n                return {\n                    mode: modeService.getMode('text/plain'),\n                    missingModePromise: modeService.getOrCreateMode(mime).then(function () { return null; })\n                };\n            },\n            getLeavingNestedModeData: function (line, state) {\n                // state = state.clone();\n                var mstate = state.clone();\n                var stream = new lineStream_1.LineStream(line);\n                while (!stream.eos() && mstate.embeddedMode) {\n                    mstate.tokenize(stream, true); // allow no consumption for @rematch\n                }\n                if (mstate.embeddedMode) {\n                    return null; // don't leave yet\n                }\n                var end = stream.pos();\n                return {\n                    nestedModeBuffer: line.substring(0, end),\n                    bufferAfterNestedMode: line.substring(end),\n                    stateAfterNestedMode: mstate\n                };\n            }\n        }, lexer.usesEmbedded);\n    }\n    exports.createTokenizationSupport = createTokenizationSupport;\n});\n\ndefine(__m[75], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var PrefixSumIndexOfResult = (function () {\n        function PrefixSumIndexOfResult(index, remainder) {\n            this.index = index;\n            this.remainder = remainder;\n        }\n        return PrefixSumIndexOfResult;\n    }());\n    exports.PrefixSumIndexOfResult = PrefixSumIndexOfResult;\n    var PrefixSumComputer = (function () {\n        function PrefixSumComputer(values) {\n            this.values = values;\n            this.prefixSum = [];\n            for (var i = 0, len = this.values.length; i < len; i++) {\n                this.prefixSum[i] = 0;\n            }\n            this.prefixSumValidIndex = -1;\n        }\n        PrefixSumComputer.prototype.getCount = function () {\n            return this.values.length;\n        };\n        PrefixSumComputer.prototype.insertValue = function (insertIndex, value) {\n            insertIndex = Math.floor(insertIndex); //@perf\n            value = Math.floor(value); //@perf\n            this.values.splice(insertIndex, 0, value);\n            this.prefixSum.splice(insertIndex, 0, 0);\n            if (insertIndex - 1 < this.prefixSumValidIndex) {\n                this.prefixSumValidIndex = insertIndex - 1;\n            }\n        };\n        PrefixSumComputer.prototype.insertValues = function (insertIndex, values) {\n            insertIndex = Math.floor(insertIndex); //@perf\n            if (values.length === 0) {\n                return;\n            }\n            this.values = this.values.slice(0, insertIndex).concat(values).concat(this.values.slice(insertIndex));\n            this.prefixSum = this.prefixSum.slice(0, insertIndex).concat(PrefixSumComputer._zeroArray(values.length)).concat(this.prefixSum.slice(insertIndex));\n            if (insertIndex - 1 < this.prefixSumValidIndex) {\n                this.prefixSumValidIndex = insertIndex - 1;\n            }\n        };\n        PrefixSumComputer._zeroArray = function (count) {\n            count = Math.floor(count); //@perf\n            var r = [];\n            for (var i = 0; i < count; i++) {\n                r[i] = 0;\n            }\n            return r;\n        };\n        PrefixSumComputer.prototype.changeValue = function (index, value) {\n            index = Math.floor(index); //@perf\n            value = Math.floor(value); //@perf\n            if (this.values[index] === value) {\n                return;\n            }\n            this.values[index] = value;\n            if (index - 1 < this.prefixSumValidIndex) {\n                this.prefixSumValidIndex = index - 1;\n            }\n        };\n        PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n            startIndex = Math.floor(startIndex); //@perf\n            cnt = Math.floor(cnt); //@perf\n            this.values.splice(startIndex, cnt);\n            this.prefixSum.splice(startIndex, cnt);\n            if (startIndex - 1 < this.prefixSumValidIndex) {\n                this.prefixSumValidIndex = startIndex - 1;\n            }\n        };\n        PrefixSumComputer.prototype.getTotalValue = function () {\n            if (this.values.length === 0) {\n                return 0;\n            }\n            return this.getAccumulatedValue(this.values.length - 1);\n        };\n        PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n            index = Math.floor(index); //@perf\n            if (index < 0) {\n                return 0;\n            }\n            if (index <= this.prefixSumValidIndex) {\n                return this.prefixSum[index];\n            }\n            var startIndex = this.prefixSumValidIndex + 1;\n            if (startIndex === 0) {\n                this.prefixSum[0] = this.values[0];\n                startIndex++;\n            }\n            if (index >= this.values.length) {\n                index = this.values.length - 1;\n            }\n            for (var i = startIndex; i <= index; i++) {\n                this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n            }\n            this.prefixSumValidIndex = Math.max(this.prefixSumValidIndex, index);\n            return this.prefixSum[index];\n        };\n        PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n            accumulatedValue = Math.floor(accumulatedValue); //@perf\n            var low = 0;\n            var high = this.values.length - 1;\n            var mid;\n            var midStop;\n            var midStart;\n            while (low <= high) {\n                mid = low + ((high - low) / 2) | 0;\n                midStop = this.getAccumulatedValue(mid);\n                midStart = midStop - this.values[mid];\n                if (accumulatedValue < midStart) {\n                    high = mid - 1;\n                }\n                else if (accumulatedValue >= midStop) {\n                    low = mid + 1;\n                }\n                else {\n                    break;\n                }\n            }\n            return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n        };\n        return PrefixSumComputer;\n    }());\n    exports.PrefixSumComputer = PrefixSumComputer;\n});\n\ndefine(__m[66], __M([8,10]), function(nls, data) { return nls.create(\"vs/base/common/errors\", data); });\ndefine(__m[2], __M([1,0,66,29,7,6,49,4]), function (require, exports, nls, objects, platform, types, arrays, strings) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    // Avoid circular dependency on EventEmitter by implementing a subset of the interface.\n    var ErrorHandler = (function () {\n        function ErrorHandler() {\n            this.listeners = [];\n            this.unexpectedErrorHandler = function (e) {\n                platform.setTimeout(function () {\n                    if (e.stack) {\n                        throw new Error(e.message + '\\n\\n' + e.stack);\n                    }\n                    throw e;\n                }, 0);\n            };\n        }\n        ErrorHandler.prototype.addListener = function (listener) {\n            var _this = this;\n            this.listeners.push(listener);\n            return function () {\n                _this._removeListener(listener);\n            };\n        };\n        ErrorHandler.prototype.emit = function (e) {\n            this.listeners.forEach(function (listener) {\n                listener(e);\n            });\n        };\n        ErrorHandler.prototype._removeListener = function (listener) {\n            this.listeners.splice(this.listeners.indexOf(listener), 1);\n        };\n        ErrorHandler.prototype.setUnexpectedErrorHandler = function (newUnexpectedErrorHandler) {\n            this.unexpectedErrorHandler = newUnexpectedErrorHandler;\n        };\n        ErrorHandler.prototype.getUnexpectedErrorHandler = function () {\n            return this.unexpectedErrorHandler;\n        };\n        ErrorHandler.prototype.onUnexpectedError = function (e) {\n            this.unexpectedErrorHandler(e);\n            this.emit(e);\n        };\n        return ErrorHandler;\n    }());\n    exports.ErrorHandler = ErrorHandler;\n    exports.errorHandler = new ErrorHandler();\n    function setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n        exports.errorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n    }\n    exports.setUnexpectedErrorHandler = setUnexpectedErrorHandler;\n    function onUnexpectedError(e) {\n        // ignore errors from cancelled promises\n        if (!isPromiseCanceledError(e)) {\n            exports.errorHandler.onUnexpectedError(e);\n        }\n    }\n    exports.onUnexpectedError = onUnexpectedError;\n    function onUnexpectedPromiseError(promise) {\n        return promise.then(null, onUnexpectedError);\n    }\n    exports.onUnexpectedPromiseError = onUnexpectedPromiseError;\n    function transformErrorForSerialization(error) {\n        if (error instanceof Error) {\n            var name_1 = error.name, message = error.message;\n            var stack = error.stacktrace || error.stack;\n            return {\n                $isError: true,\n                name: name_1,\n                message: message,\n                stack: stack\n            };\n        }\n        // return as is\n        return error;\n    }\n    exports.transformErrorForSerialization = transformErrorForSerialization;\n    /**\n     * The base class for all connection errors originating from XHR requests.\n     */\n    var ConnectionError = (function () {\n        function ConnectionError(arg) {\n            this.status = arg.status;\n            this.statusText = arg.statusText;\n            this.name = 'ConnectionError';\n            try {\n                this.responseText = arg.responseText;\n            }\n            catch (e) {\n                this.responseText = '';\n            }\n            this.errorMessage = null;\n            this.errorCode = null;\n            this.errorObject = null;\n            if (this.responseText) {\n                try {\n                    var errorObj = JSON.parse(this.responseText);\n                    this.errorMessage = errorObj.message;\n                    this.errorCode = errorObj.code;\n                    this.errorObject = errorObj;\n                }\n                catch (error) {\n                }\n            }\n        }\n        Object.defineProperty(ConnectionError.prototype, \"message\", {\n            get: function () {\n                return this.connectionErrorToMessage(this, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ConnectionError.prototype, \"verboseMessage\", {\n            get: function () {\n                return this.connectionErrorToMessage(this, true);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ConnectionError.prototype.connectionErrorDetailsToMessage = function (error, verbose) {\n            var errorCode = error.errorCode;\n            var errorMessage = error.errorMessage;\n            if (errorCode !== null && errorMessage !== null) {\n                return nls.localize(0, null, strings.rtrim(errorMessage, '.'), errorCode);\n\n\n\n\n\n\n            }\n            if (errorMessage !== null) {\n                return errorMessage;\n            }\n            if (verbose && error.responseText !== null) {\n                return error.responseText;\n            }\n            return null;\n        };\n        ConnectionError.prototype.connectionErrorToMessage = function (error, verbose) {\n            var details = this.connectionErrorDetailsToMessage(error, verbose);\n            // Status Code based Error\n            if (error.status === 401) {\n                if (details !== null) {\n                    return nls.localize(1, null, details);\n\n\n\n\n\n                }\n                return nls.localize(2, null);\n            }\n            // Return error details if present\n            if (details) {\n                return details;\n            }\n            // Fallback to HTTP Status and Code\n            if (error.status > 0 && error.statusText !== null) {\n                if (verbose && error.responseText !== null && error.responseText.length > 0) {\n                    return nls.localize(3, null, error.statusText, error.status, error.responseText);\n                }\n                return nls.localize(4, null, error.statusText, error.status);\n            }\n            // Finally its an Unknown Connection Error\n            if (verbose && error.responseText !== null && error.responseText.length > 0) {\n                return nls.localize(5, null, error.responseText);\n            }\n            return nls.localize(6, null);\n        };\n        return ConnectionError;\n    }());\n    exports.ConnectionError = ConnectionError;\n    // Bug: Can not subclass a JS Type. Do it manually (as done in WinJS.Class.derive)\n    objects.derive(Error, ConnectionError);\n    function xhrToErrorMessage(xhr, verbose) {\n        var ce = new ConnectionError(xhr);\n        if (verbose) {\n            return ce.verboseMessage;\n        }\n        else {\n            return ce.message;\n        }\n    }\n    function exceptionToErrorMessage(exception, verbose) {\n        if (exception.message) {\n            if (verbose && (exception.stack || exception.stacktrace)) {\n                return nls.localize(7, null, detectSystemErrorMessage(exception), exception.stack || exception.stacktrace);\n            }\n            return detectSystemErrorMessage(exception);\n        }\n        return nls.localize(8, null);\n    }\n    function detectSystemErrorMessage(exception) {\n        // See https://nodejs.org/api/errors.html#errors_class_system_error\n        if (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n            return nls.localize(9, null, exception.message);\n        }\n        return exception.message;\n    }\n    /**\n     * Tries to generate a human readable error message out of the error. If the verbose parameter\n     * is set to true, the error message will include stacktrace details if provided.\n     * @returns A string containing the error message.\n     */\n    function toErrorMessage(error, verbose) {\n        if (error === void 0) { error = null; }\n        if (verbose === void 0) { verbose = false; }\n        if (!error) {\n            return nls.localize(10, null);\n        }\n        if (Array.isArray(error)) {\n            var errors = arrays.coalesce(error);\n            var msg = toErrorMessage(errors[0], verbose);\n            if (errors.length > 1) {\n                return nls.localize(11, null, msg, errors.length);\n            }\n            return msg;\n        }\n        if (types.isString(error)) {\n            return error;\n        }\n        if (!types.isUndefinedOrNull(error.status)) {\n            return xhrToErrorMessage(error, verbose);\n        }\n        if (error.detail) {\n            var detail = error.detail;\n            if (detail.error) {\n                if (detail.error && !types.isUndefinedOrNull(detail.error.status)) {\n                    return xhrToErrorMessage(detail.error, verbose);\n                }\n                if (types.isArray(detail.error)) {\n                    for (var i = 0; i < detail.error.length; i++) {\n                        if (detail.error[i] && !types.isUndefinedOrNull(detail.error[i].status)) {\n                            return xhrToErrorMessage(detail.error[i], verbose);\n                        }\n                    }\n                }\n                else {\n                    return exceptionToErrorMessage(detail.error, verbose);\n                }\n            }\n            if (detail.exception) {\n                if (!types.isUndefinedOrNull(detail.exception.status)) {\n                    return xhrToErrorMessage(detail.exception, verbose);\n                }\n                return exceptionToErrorMessage(detail.exception, verbose);\n            }\n        }\n        if (error.stack) {\n            return exceptionToErrorMessage(error, verbose);\n        }\n        if (error.message) {\n            return error.message;\n        }\n        return nls.localize(12, null);\n    }\n    exports.toErrorMessage = toErrorMessage;\n    var canceledName = 'Canceled';\n    /**\n     * Checks if the given error is a promise in canceled state\n     */\n    function isPromiseCanceledError(error) {\n        return error instanceof Error && error.name === canceledName && error.message === canceledName;\n    }\n    exports.isPromiseCanceledError = isPromiseCanceledError;\n    /**\n     * Returns an error that signals cancellation.\n     */\n    function canceled() {\n        var error = new Error(canceledName);\n        error.name = error.message;\n        return error;\n    }\n    exports.canceled = canceled;\n    /**\n     * Returns an error that signals something is not implemented.\n     */\n    function notImplemented() {\n        return new Error(nls.localize(13, null));\n    }\n    exports.notImplemented = notImplemented;\n    function illegalArgument(name) {\n        if (name) {\n            return new Error(nls.localize(14, null, name));\n        }\n        else {\n            return new Error(nls.localize(15, null));\n        }\n    }\n    exports.illegalArgument = illegalArgument;\n    function illegalState(name) {\n        if (name) {\n            return new Error(nls.localize(16, null, name));\n        }\n        else {\n            return new Error(nls.localize(17, null));\n        }\n    }\n    exports.illegalState = illegalState;\n    function readonly(name) {\n        return name\n            ? new Error(\"readonly property '\" + name + \" cannot be changed'\")\n            : new Error('readonly property cannot be changed');\n    }\n    exports.readonly = readonly;\n    function loaderError(err) {\n        if (platform.isWeb) {\n            return new Error(nls.localize(18, null));\n        }\n        return new Error(nls.localize(19, null, JSON.stringify(err)));\n    }\n    exports.loaderError = loaderError;\n    function create(message, options) {\n        if (options === void 0) { options = {}; }\n        var result = new Error(message);\n        if (types.isNumber(options.severity)) {\n            result.severity = options.severity;\n        }\n        if (options.actions) {\n            result.actions = options.actions;\n        }\n        return result;\n    }\n    exports.create = create;\n});\n\ndefine(__m[48], __M([1,0,2]), function (require, exports, errors_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var CallbackList = (function () {\n        function CallbackList() {\n        }\n        CallbackList.prototype.add = function (callback, context, bucket) {\n            var _this = this;\n            if (context === void 0) { context = null; }\n            if (!this._callbacks) {\n                this._callbacks = [];\n                this._contexts = [];\n            }\n            this._callbacks.push(callback);\n            this._contexts.push(context);\n            if (Array.isArray(bucket)) {\n                bucket.push({ dispose: function () { return _this.remove(callback, context); } });\n            }\n        };\n        CallbackList.prototype.remove = function (callback, context) {\n            if (context === void 0) { context = null; }\n            if (!this._callbacks) {\n                return;\n            }\n            var foundCallbackWithDifferentContext = false;\n            for (var i = 0, len = this._callbacks.length; i < len; i++) {\n                if (this._callbacks[i] === callback) {\n                    if (this._contexts[i] === context) {\n                        // callback & context match => remove it\n                        this._callbacks.splice(i, 1);\n                        this._contexts.splice(i, 1);\n                        return;\n                    }\n                    else {\n                        foundCallbackWithDifferentContext = true;\n                    }\n                }\n            }\n            if (foundCallbackWithDifferentContext) {\n                throw new Error('When adding a listener with a context, you should remove it with the same context');\n            }\n        };\n        CallbackList.prototype.invoke = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            if (!this._callbacks) {\n                return;\n            }\n            var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n            for (var i = 0, len = callbacks.length; i < len; i++) {\n                try {\n                    ret.push(callbacks[i].apply(contexts[i], args));\n                }\n                catch (e) {\n                    errors_1.onUnexpectedError(e);\n                }\n            }\n            return ret;\n        };\n        CallbackList.prototype.isEmpty = function () {\n            return !this._callbacks || this._callbacks.length === 0;\n        };\n        CallbackList.prototype.dispose = function () {\n            this._callbacks = undefined;\n            this._contexts = undefined;\n        };\n        return CallbackList;\n    }());\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = CallbackList;\n});\n\ndefine(__m[9], __M([1,0,48]), function (require, exports, callbackList_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var Event;\n    (function (Event) {\n        var _disposable = { dispose: function () { } };\n        Event.None = function () { return _disposable; };\n    })(Event || (Event = {}));\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = Event;\n    /**\n     * The Emitter can be used to expose an Event to the public\n     * to fire it from the insides.\n     * Sample:\n        class Document {\n    \n            private _onDidChange = new Emitter<(value:string)=>any>();\n    \n            public onDidChange = this._onDidChange.event;\n    \n            // getter-style\n            // get onDidChange(): Event<(value:string)=>any> {\n            // \treturn this._onDidChange.event;\n            // }\n    \n            private _doIt() {\n                //...\n                this._onDidChange.fire(value);\n            }\n        }\n     */\n    var Emitter = (function () {\n        function Emitter(_options) {\n            this._options = _options;\n        }\n        Object.defineProperty(Emitter.prototype, \"event\", {\n            /**\n             * For the public to allow to subscribe\n             * to events from this Emitter\n             */\n            get: function () {\n                var _this = this;\n                if (!this._event) {\n                    this._event = function (listener, thisArgs, disposables) {\n                        if (!_this._callbacks) {\n                            _this._callbacks = new callbackList_1.default();\n                        }\n                        if (_this._options && _this._options.onFirstListenerAdd && _this._callbacks.isEmpty()) {\n                            _this._options.onFirstListenerAdd(_this);\n                        }\n                        _this._callbacks.add(listener, thisArgs);\n                        var result;\n                        result = {\n                            dispose: function () {\n                                result.dispose = Emitter._noop;\n                                if (!_this._disposed) {\n                                    _this._callbacks.remove(listener, thisArgs);\n                                    if (_this._options && _this._options.onLastListenerRemove && _this._callbacks.isEmpty()) {\n                                        _this._options.onLastListenerRemove(_this);\n                                    }\n                                }\n                            }\n                        };\n                        if (Array.isArray(disposables)) {\n                            disposables.push(result);\n                        }\n                        return result;\n                    };\n                }\n                return this._event;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * To be kept private to fire an event to\n         * subscribers\n         */\n        Emitter.prototype.fire = function (event) {\n            if (this._callbacks) {\n                this._callbacks.invoke.call(this._callbacks, event);\n            }\n        };\n        Emitter.prototype.dispose = function () {\n            if (this._callbacks) {\n                this._callbacks.dispose();\n                this._callbacks = undefined;\n                this._disposed = true;\n            }\n        };\n        Emitter._noop = function () { };\n        return Emitter;\n    }());\n    exports.Emitter = Emitter;\n    /**\n     * Creates an Event which is backed-up by the event emitter. This allows\n     * to use the existing eventing pattern and is likely using less memory.\n     * Sample:\n     *\n     * \tclass Document {\n     *\n     *\t\tprivate _eventbus = new EventEmitter();\n     *\n     *\t\tpublic onDidChange = fromEventEmitter(this._eventbus, 'changed');\n     *\n     *\t\t// getter-style\n     *\t\t// get onDidChange(): Event<(value:string)=>any> {\n     *\t\t// \tcache fromEventEmitter result and return\n     *\t\t// }\n     *\n     *\t\tprivate _doIt() {\n     *\t\t\t// ...\n     *\t\t\tthis._eventbus.emit('changed', value)\n     *\t\t}\n     *\t}\n     */\n    function fromEventEmitter(emitter, eventType) {\n        return function (listener, thisArgs, disposables) {\n            var result = emitter.addListener2(eventType, function () {\n                listener.apply(thisArgs, arguments);\n            });\n            if (Array.isArray(disposables)) {\n                disposables.push(result);\n            }\n            return result;\n        };\n    }\n    exports.fromEventEmitter = fromEventEmitter;\n    function fromPromise(promise) {\n        var toCancel = null;\n        var listener = null;\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                toCancel = promise.then(function (event) { return listener = event(function (e) { return emitter.fire(e); }); }, function () { return null; });\n            },\n            onLastListenerRemove: function () {\n                if (toCancel) {\n                    toCancel.cancel();\n                    toCancel = null;\n                }\n                if (listener) {\n                    listener.dispose();\n                    listener = null;\n                }\n            }\n        });\n        return emitter.event;\n    }\n    exports.fromPromise = fromPromise;\n    function mapEvent(event, map) {\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\n        };\n    }\n    exports.mapEvent = mapEvent;\n    function filterEvent(event, filter) {\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\n        };\n    }\n    exports.filterEvent = filterEvent;\n    function debounceEvent(event, merger, delay) {\n        if (delay === void 0) { delay = 100; }\n        var subscription;\n        var output;\n        var handle;\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                subscription = event(function (cur) {\n                    output = merger(output, cur);\n                    clearTimeout(handle);\n                    handle = setTimeout(function () {\n                        var _output = output;\n                        output = undefined;\n                        emitter.fire(_output);\n                    }, delay);\n                });\n            },\n            onLastListenerRemove: function () {\n                subscription.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    exports.debounceEvent = debounceEvent;\n    var EventDelayerState;\n    (function (EventDelayerState) {\n        EventDelayerState[EventDelayerState[\"Idle\"] = 0] = \"Idle\";\n        EventDelayerState[EventDelayerState[\"Running\"] = 1] = \"Running\";\n    })(EventDelayerState || (EventDelayerState = {}));\n    /**\n     * The EventDelayer is useful in situations in which you want\n     * to delay firing your events during some code.\n     * You can wrap that code and be sure that the event will not\n     * be fired during that wrap.\n     *\n     * ```\n     * const emitter: Emitter;\n     * const delayer = new EventDelayer();\n     * const delayedEvent = delayer.delay(emitter.event);\n     *\n     * delayedEvent(console.log);\n     *\n     * delayer.wrap(() => {\n     *   emitter.fire(); // event will not be fired yet\n     * });\n     *\n     * // event will only be fired at this point\n     * ```\n     */\n    var EventBufferer = (function () {\n        function EventBufferer() {\n            this.buffers = [];\n        }\n        EventBufferer.prototype.wrapEvent = function (event) {\n            var _this = this;\n            return function (listener, thisArgs, disposables) {\n                return event(function (i) {\n                    var buffer = _this.buffers[_this.buffers.length - 1];\n                    if (buffer) {\n                        buffer.push(function () { return listener.call(thisArgs, i); });\n                    }\n                    else {\n                        listener.call(thisArgs, i);\n                    }\n                }, void 0, disposables);\n            };\n        };\n        EventBufferer.prototype.bufferEvents = function (fn) {\n            var buffer = [];\n            this.buffers.push(buffer);\n            fn();\n            this.buffers.pop();\n            buffer.forEach(function (flush) { return flush(); });\n        };\n        return EventBufferer;\n    }());\n    exports.EventBufferer = EventBufferer;\n});\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[50], __M([1,0,9]), function (require, exports, event_1) {\n    'use strict';\n    var shortcutEvent = Object.freeze(function (callback, context) {\n        var handle = setTimeout(callback.bind(context), 0);\n        return { dispose: function () { clearTimeout(handle); } };\n    });\n    var CancellationToken;\n    (function (CancellationToken) {\n        CancellationToken.None = Object.freeze({\n            isCancellationRequested: false,\n            onCancellationRequested: event_1.default.None\n        });\n        CancellationToken.Cancelled = Object.freeze({\n            isCancellationRequested: true,\n            onCancellationRequested: shortcutEvent\n        });\n    })(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\n    var MutableToken = (function () {\n        function MutableToken() {\n            this._isCancelled = false;\n        }\n        MutableToken.prototype.cancel = function () {\n            if (!this._isCancelled) {\n                this._isCancelled = true;\n                if (this._emitter) {\n                    this._emitter.fire(undefined);\n                    this._emitter = undefined;\n                }\n            }\n        };\n        Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n            get: function () {\n                return this._isCancelled;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n            get: function () {\n                if (this._isCancelled) {\n                    return shortcutEvent;\n                }\n                if (!this._emitter) {\n                    this._emitter = new event_1.Emitter();\n                }\n                return this._emitter.event;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return MutableToken;\n    }());\n    var CancellationTokenSource = (function () {\n        function CancellationTokenSource() {\n        }\n        Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n            get: function () {\n                if (!this._token) {\n                    // be lazy and create the token only when\n                    // actually needed\n                    this._token = new MutableToken();\n                }\n                return this._token;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        CancellationTokenSource.prototype.cancel = function () {\n            if (!this._token) {\n                // save an object by returning the default\n                // cancelled token when cancellation happens\n                // before someone asks for the token\n                this._token = CancellationToken.Cancelled;\n            }\n            else {\n                this._token.cancel();\n            }\n        };\n        CancellationTokenSource.prototype.dispose = function () {\n            this.cancel();\n        };\n        return CancellationTokenSource;\n    }());\n    exports.CancellationTokenSource = CancellationTokenSource;\n});\n\n\n\n\n\n\ndefine(__m[14], __M([1,0,2]), function (require, exports, Errors) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var EmitterEvent = (function () {\n        function EmitterEvent(eventType, data) {\n            if (eventType === void 0) { eventType = null; }\n            if (data === void 0) { data = null; }\n            this._type = eventType;\n            this._data = data;\n        }\n        EmitterEvent.prototype.getType = function () {\n            return this._type;\n        };\n        EmitterEvent.prototype.getData = function () {\n            return this._data;\n        };\n        return EmitterEvent;\n    }());\n    exports.EmitterEvent = EmitterEvent;\n    var EventEmitter = (function () {\n        function EventEmitter(allowedEventTypes) {\n            if (allowedEventTypes === void 0) { allowedEventTypes = null; }\n            this._listeners = {};\n            this._bulkListeners = [];\n            this._collectedEvents = [];\n            this._deferredCnt = 0;\n            if (allowedEventTypes) {\n                this._allowedEventTypes = {};\n                for (var i = 0; i < allowedEventTypes.length; i++) {\n                    this._allowedEventTypes[allowedEventTypes[i]] = true;\n                }\n            }\n            else {\n                this._allowedEventTypes = null;\n            }\n        }\n        EventEmitter.prototype.dispose = function () {\n            this._listeners = {};\n            this._bulkListeners = [];\n            this._collectedEvents = [];\n            this._deferredCnt = 0;\n            this._allowedEventTypes = null;\n        };\n        EventEmitter.prototype.addListener = function (eventType, listener) {\n            if (eventType === '*') {\n                throw new Error('Use addBulkListener(listener) to register your listener!');\n            }\n            if (this._allowedEventTypes && !this._allowedEventTypes.hasOwnProperty(eventType)) {\n                throw new Error('This object will never emit this event type!');\n            }\n            if (this._listeners.hasOwnProperty(eventType)) {\n                this._listeners[eventType].push(listener);\n            }\n            else {\n                this._listeners[eventType] = [listener];\n            }\n            var bound = this;\n            return {\n                dispose: function () {\n                    if (!bound) {\n                        // Already called\n                        return;\n                    }\n                    bound._removeListener(eventType, listener);\n                    // Prevent leakers from holding on to the event emitter\n                    bound = null;\n                    listener = null;\n                }\n            };\n        };\n        EventEmitter.prototype.addListener2 = function (eventType, listener) {\n            return this.addListener(eventType, listener);\n        };\n        EventEmitter.prototype.addOneTimeDisposableListener = function (eventType, listener) {\n            var disposable = this.addListener(eventType, function (value) {\n                disposable.dispose();\n                listener(value);\n            });\n            return disposable;\n        };\n        EventEmitter.prototype.addBulkListener = function (listener) {\n            var _this = this;\n            this._bulkListeners.push(listener);\n            return {\n                dispose: function () {\n                    _this._removeBulkListener(listener);\n                }\n            };\n        };\n        EventEmitter.prototype.addBulkListener2 = function (listener) {\n            return this.addBulkListener(listener);\n        };\n        EventEmitter.prototype.addEmitter = function (eventEmitter) {\n            var _this = this;\n            return eventEmitter.addBulkListener2(function (events) {\n                var newEvents = events;\n                if (_this._deferredCnt === 0) {\n                    _this._emitEvents(newEvents);\n                }\n                else {\n                    // Collect for later\n                    _this._collectedEvents.push.apply(_this._collectedEvents, newEvents);\n                }\n            });\n        };\n        EventEmitter.prototype.addEmitter2 = function (eventEmitter) {\n            return this.addEmitter(eventEmitter);\n        };\n        EventEmitter.prototype._removeListener = function (eventType, listener) {\n            if (this._listeners.hasOwnProperty(eventType)) {\n                var listeners = this._listeners[eventType];\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                    if (listeners[i] === listener) {\n                        listeners.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n        };\n        EventEmitter.prototype._removeBulkListener = function (listener) {\n            for (var i = 0, len = this._bulkListeners.length; i < len; i++) {\n                if (this._bulkListeners[i] === listener) {\n                    this._bulkListeners.splice(i, 1);\n                    break;\n                }\n            }\n        };\n        EventEmitter.prototype._emitToSpecificTypeListeners = function (eventType, data) {\n            if (this._listeners.hasOwnProperty(eventType)) {\n                var listeners = this._listeners[eventType].slice(0);\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                    safeInvoke1Arg(listeners[i], data);\n                }\n            }\n        };\n        EventEmitter.prototype._emitToBulkListeners = function (events) {\n            var bulkListeners = this._bulkListeners.slice(0);\n            for (var i = 0, len = bulkListeners.length; i < len; i++) {\n                safeInvoke1Arg(bulkListeners[i], events);\n            }\n        };\n        EventEmitter.prototype._emitEvents = function (events) {\n            if (this._bulkListeners.length > 0) {\n                this._emitToBulkListeners(events);\n            }\n            for (var i = 0, len = events.length; i < len; i++) {\n                var e = events[i];\n                this._emitToSpecificTypeListeners(e.getType(), e.getData());\n            }\n        };\n        EventEmitter.prototype.emit = function (eventType, data) {\n            if (data === void 0) { data = {}; }\n            if (this._allowedEventTypes && !this._allowedEventTypes.hasOwnProperty(eventType)) {\n                throw new Error('Cannot emit this event type because it wasn\\'t white-listed!');\n            }\n            // Early return if no listeners would get this\n            if (!this._listeners.hasOwnProperty(eventType) && this._bulkListeners.length === 0) {\n                return;\n            }\n            var emitterEvent = new EmitterEvent(eventType, data);\n            if (this._deferredCnt === 0) {\n                this._emitEvents([emitterEvent]);\n            }\n            else {\n                // Collect for later\n                this._collectedEvents.push(emitterEvent);\n            }\n        };\n        EventEmitter.prototype.deferredEmit = function (callback) {\n            this._deferredCnt = this._deferredCnt + 1;\n            var result = safeInvokeNoArg(callback);\n            this._deferredCnt = this._deferredCnt - 1;\n            if (this._deferredCnt === 0) {\n                this._emitCollected();\n            }\n            return result;\n        };\n        EventEmitter.prototype._emitCollected = function () {\n            // Flush collected events\n            var events = this._collectedEvents;\n            this._collectedEvents = [];\n            if (events.length > 0) {\n                this._emitEvents(events);\n            }\n        };\n        return EventEmitter;\n    }());\n    exports.EventEmitter = EventEmitter;\n    var EmitQueueElement = (function () {\n        function EmitQueueElement(target, arg) {\n            this.target = target;\n            this.arg = arg;\n        }\n        return EmitQueueElement;\n    }());\n    /**\n     * Same as EventEmitter, but guarantees events are delivered in order to each listener\n     */\n    var OrderGuaranteeEventEmitter = (function (_super) {\n        __extends(OrderGuaranteeEventEmitter, _super);\n        function OrderGuaranteeEventEmitter(allowedEventTypes) {\n            if (allowedEventTypes === void 0) { allowedEventTypes = null; }\n            _super.call(this, allowedEventTypes);\n            this._emitQueue = [];\n        }\n        OrderGuaranteeEventEmitter.prototype._emitToSpecificTypeListeners = function (eventType, data) {\n            if (this._listeners.hasOwnProperty(eventType)) {\n                var listeners = this._listeners[eventType];\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                    this._emitQueue.push(new EmitQueueElement(listeners[i], data));\n                }\n            }\n        };\n        OrderGuaranteeEventEmitter.prototype._emitToBulkListeners = function (events) {\n            var bulkListeners = this._bulkListeners;\n            for (var i = 0, len = bulkListeners.length; i < len; i++) {\n                this._emitQueue.push(new EmitQueueElement(bulkListeners[i], events));\n            }\n        };\n        OrderGuaranteeEventEmitter.prototype._emitEvents = function (events) {\n            _super.prototype._emitEvents.call(this, events);\n            while (this._emitQueue.length > 0) {\n                var queueElement = this._emitQueue.shift();\n                safeInvoke1Arg(queueElement.target, queueElement.arg);\n            }\n        };\n        return OrderGuaranteeEventEmitter;\n    }(EventEmitter));\n    exports.OrderGuaranteeEventEmitter = OrderGuaranteeEventEmitter;\n    function safeInvokeNoArg(func) {\n        try {\n            return func();\n        }\n        catch (e) {\n            Errors.onUnexpectedError(e);\n        }\n    }\n    function safeInvoke1Arg(func, arg1) {\n        try {\n            return func(arg1);\n        }\n        catch (e) {\n            Errors.onUnexpectedError(e);\n        }\n    }\n});\n\ndefine(__m[52], __M([1,0,7,2,42]), function (require, exports, Platform, errors, precision) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.ENABLE_TIMER = false;\n    var msWriteProfilerMark = Platform.globals['msWriteProfilerMark'];\n    (function (Topic) {\n        Topic[Topic[\"EDITOR\"] = 0] = \"EDITOR\";\n        Topic[Topic[\"LANGUAGES\"] = 1] = \"LANGUAGES\";\n        Topic[Topic[\"WORKER\"] = 2] = \"WORKER\";\n        Topic[Topic[\"WORKBENCH\"] = 3] = \"WORKBENCH\";\n        Topic[Topic[\"STARTUP\"] = 4] = \"STARTUP\";\n    })(exports.Topic || (exports.Topic = {}));\n    var Topic = exports.Topic;\n    var NullTimerEvent = (function () {\n        function NullTimerEvent() {\n        }\n        NullTimerEvent.prototype.stop = function () {\n            return;\n        };\n        NullTimerEvent.prototype.timeTaken = function () {\n            return -1;\n        };\n        return NullTimerEvent;\n    }());\n    var TimerEvent = (function () {\n        function TimerEvent(timeKeeper, name, topic, startTime, description) {\n            this.timeKeeper = timeKeeper;\n            this.name = name;\n            this.description = description;\n            this.topic = topic;\n            this.stopTime = null;\n            if (startTime) {\n                this.startTime = startTime;\n                return;\n            }\n            this.startTime = new Date();\n            this.sw = precision.StopWatch.create();\n            if (msWriteProfilerMark) {\n                var profilerName = ['Monaco', this.topic, this.name, 'start'];\n                msWriteProfilerMark(profilerName.join('|'));\n            }\n        }\n        TimerEvent.prototype.stop = function (stopTime) {\n            // already stopped\n            if (this.stopTime !== null) {\n                return;\n            }\n            if (stopTime) {\n                this.stopTime = stopTime;\n                this.sw = null;\n                this.timeKeeper._onEventStopped(this);\n                return;\n            }\n            this.stopTime = new Date();\n            if (this.sw) {\n                this.sw.stop();\n            }\n            this.timeKeeper._onEventStopped(this);\n            if (msWriteProfilerMark) {\n                var profilerName = ['Monaco', this.topic, this.name, 'stop'];\n                msWriteProfilerMark(profilerName.join('|'));\n            }\n        };\n        TimerEvent.prototype.timeTaken = function () {\n            if (this.sw) {\n                return this.sw.elapsed();\n            }\n            if (this.stopTime) {\n                return this.stopTime.getTime() - this.startTime.getTime();\n            }\n            return -1;\n        };\n        return TimerEvent;\n    }());\n    var TimeKeeper = (function () {\n        function TimeKeeper() {\n            this.cleaningIntervalId = -1;\n            this.collectedEvents = [];\n            this.listeners = [];\n        }\n        TimeKeeper.prototype.isEnabled = function () {\n            return exports.ENABLE_TIMER;\n        };\n        TimeKeeper.prototype.start = function (topic, name, start, description) {\n            if (!this.isEnabled()) {\n                return exports.nullEvent;\n            }\n            var strTopic;\n            if (typeof topic === 'string') {\n                strTopic = topic;\n            }\n            else if (topic === Topic.EDITOR) {\n                strTopic = 'Editor';\n            }\n            else if (topic === Topic.LANGUAGES) {\n                strTopic = 'Languages';\n            }\n            else if (topic === Topic.WORKER) {\n                strTopic = 'Worker';\n            }\n            else if (topic === Topic.WORKBENCH) {\n                strTopic = 'Workbench';\n            }\n            else if (topic === Topic.STARTUP) {\n                strTopic = 'Startup';\n            }\n            this.initAutoCleaning();\n            var event = new TimerEvent(this, name, strTopic, start, description);\n            this.addEvent(event);\n            return event;\n        };\n        TimeKeeper.prototype.dispose = function () {\n            if (this.cleaningIntervalId !== -1) {\n                Platform.clearInterval(this.cleaningIntervalId);\n                this.cleaningIntervalId = -1;\n            }\n        };\n        TimeKeeper.prototype.addListener = function (listener) {\n            var _this = this;\n            this.listeners.push(listener);\n            return {\n                dispose: function () {\n                    for (var i = 0; i < _this.listeners.length; i++) {\n                        if (_this.listeners[i] === listener) {\n                            _this.listeners.splice(i, 1);\n                            return;\n                        }\n                    }\n                }\n            };\n        };\n        TimeKeeper.prototype.addEvent = function (event) {\n            event.id = TimeKeeper.EVENT_ID;\n            TimeKeeper.EVENT_ID++;\n            this.collectedEvents.push(event);\n            // expire items from the front of the cache\n            if (this.collectedEvents.length > TimeKeeper._EVENT_CACHE_LIMIT) {\n                this.collectedEvents.shift();\n            }\n        };\n        TimeKeeper.prototype.initAutoCleaning = function () {\n            var _this = this;\n            if (this.cleaningIntervalId === -1) {\n                this.cleaningIntervalId = Platform.setInterval(function () {\n                    var now = Date.now();\n                    _this.collectedEvents.forEach(function (event) {\n                        if (!event.stopTime && (now - event.startTime.getTime()) >= TimeKeeper._MAX_TIMER_LENGTH) {\n                            event.stop();\n                        }\n                    });\n                }, TimeKeeper._CLEAN_UP_INTERVAL);\n            }\n        };\n        TimeKeeper.prototype.getCollectedEvents = function () {\n            return this.collectedEvents.slice(0);\n        };\n        TimeKeeper.prototype.clearCollectedEvents = function () {\n            this.collectedEvents = [];\n        };\n        TimeKeeper.prototype._onEventStopped = function (event) {\n            var emitEvents = [event];\n            var listeners = this.listeners.slice(0);\n            for (var i = 0; i < listeners.length; i++) {\n                try {\n                    listeners[i](emitEvents);\n                }\n                catch (e) {\n                    errors.onUnexpectedError(e);\n                }\n            }\n        };\n        TimeKeeper.prototype.setInitialCollectedEvents = function (events, startTime) {\n            var _this = this;\n            if (!this.isEnabled()) {\n                return;\n            }\n            if (startTime) {\n                TimeKeeper.PARSE_TIME = startTime;\n            }\n            events.forEach(function (event) {\n                var e = new TimerEvent(_this, event.name, event.topic, event.startTime, event.description);\n                e.stop(event.stopTime);\n                _this.addEvent(e);\n            });\n        };\n        /**\n         * After being started for 1 minute, all timers are automatically stopped.\n         */\n        TimeKeeper._MAX_TIMER_LENGTH = 60000; // 1 minute\n        /**\n         * Every 2 minutes, a sweep of current started timers is done.\n         */\n        TimeKeeper._CLEAN_UP_INTERVAL = 120000; // 2 minutes\n        /**\n         * Collect at most 1000 events.\n         */\n        TimeKeeper._EVENT_CACHE_LIMIT = 1000;\n        TimeKeeper.EVENT_ID = 1;\n        TimeKeeper.PARSE_TIME = new Date();\n        return TimeKeeper;\n    }());\n    exports.TimeKeeper = TimeKeeper;\n    var timeKeeper = new TimeKeeper();\n    exports.nullEvent = new NullTimerEvent();\n    function start(topic, name, start, description) {\n        return timeKeeper.start(topic, name, start, description);\n    }\n    exports.start = start;\n    function getTimeKeeper() {\n        return timeKeeper;\n    }\n    exports.getTimeKeeper = getTimeKeeper;\n});\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\ndefine(__m[5], __M([103,2]), function (winjs, __Errors__) {\n\t'use strict';\n\n\tvar outstandingPromiseErrors = {};\n\tfunction promiseErrorHandler(e) {\n\n\t\t//\n\t\t// e.detail looks like: { exception, error, promise, handler, id, parent }\n\t\t//\n\t\tvar details = e.detail;\n\t\tvar id = details.id;\n\n\t\t// If the error has a parent promise then this is not the origination of the\n\t\t//  error so we check if it has a handler, and if so we mark that the error\n\t\t//  was handled by removing it from outstandingPromiseErrors\n\t\t//\n\t\tif (details.parent) {\n\t\t\tif (details.handler && outstandingPromiseErrors) {\n\t\t\t\tdelete outstandingPromiseErrors[id];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Indicate that this error was originated and needs to be handled\n\t\toutstandingPromiseErrors[id] = details;\n\n\t\t// The first time the queue fills up this iteration, schedule a timeout to\n\t\t// check if any errors are still unhandled.\n\t\tif (Object.keys(outstandingPromiseErrors).length === 1) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tvar errors = outstandingPromiseErrors;\n\t\t\t\toutstandingPromiseErrors = {};\n\t\t\t\tObject.keys(errors).forEach(function (errorId) {\n\t\t\t\t\tvar error = errors[errorId];\n\t\t\t\t\tif(error.exception) {\n\t\t\t\t\t\t__Errors__.onUnexpectedError(error.exception);\n\t\t\t\t\t} else if(error.error) {\n\t\t\t\t\t\t__Errors__.onUnexpectedError(error.error);\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(\"WARNING: Promise with no error callback:\" + error.id);\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tif(error.exception) {\n\t\t\t\t\t\tconsole.log(error.exception.stack);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\twinjs.Promise.addEventListener(\"error\", promiseErrorHandler);\n\n\treturn {\n\t\tPromise: winjs.Promise,\n\t\tTPromise: winjs.Promise,\n\t\tPPromise: winjs.Promise\n\t};\n});\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\ndefine(__m[33], __M([1,0,2,7,5,50,12]), function (require, exports, errors, platform, winjs_base_1, cancellation_1, lifecycle_1) {\n    'use strict';\n    function isThenable(obj) {\n        return obj && typeof obj.then === 'function';\n    }\n    function toThenable(arg) {\n        if (isThenable(arg)) {\n            return arg;\n        }\n        else {\n            return winjs_base_1.TPromise.as(arg);\n        }\n    }\n    exports.toThenable = toThenable;\n    function asWinJsPromise(callback) {\n        var source = new cancellation_1.CancellationTokenSource();\n        return new winjs_base_1.TPromise(function (resolve, reject) {\n            var item = callback(source.token);\n            if (isThenable(item)) {\n                item.then(resolve, reject);\n            }\n            else {\n                resolve(item);\n            }\n        }, function () {\n            source.cancel();\n        });\n    }\n    exports.asWinJsPromise = asWinJsPromise;\n    /**\n     * Hook a cancellation token to a WinJS Promise\n     */\n    function wireCancellationToken(token, promise, resolveAsUndefinedWhenCancelled) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n        if (resolveAsUndefinedWhenCancelled) {\n            return promise.then(undefined, function (err) {\n                if (!errors.isPromiseCanceledError(err)) {\n                    return winjs_base_1.TPromise.wrapError(err);\n                }\n            });\n        }\n        return promise;\n    }\n    exports.wireCancellationToken = wireCancellationToken;\n    /**\n     * A helper to prevent accumulation of sequential async tasks.\n     *\n     * Imagine a mail man with the sole task of delivering letters. As soon as\n     * a letter submitted for delivery, he drives to the destination, delivers it\n     * and returns to his base. Imagine that during the trip, N more letters were submitted.\n     * When the mail man returns, he picks those N letters and delivers them all in a\n     * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n     *\n     * The throttler implements this via the queue() method, by providing it a task\n     * factory. Following the example:\n     *\n     * \t\tvar throttler = new Throttler();\n     * \t\tvar letters = [];\n     *\n     * \t\tfunction deliver() {\n     * \t\t\tconst lettersToDeliver = letters;\n     * \t\t\tletters = [];\n     * \t\t\treturn makeTheTrip(lettersToDeliver);\n     * \t\t}\n     *\n     * \t\tfunction onLetterReceived(l) {\n     * \t\t\tletters.push(l);\n     * \t\t\tthrottler.queue(deliver);\n     * \t\t}\n     */\n    var Throttler = (function () {\n        function Throttler() {\n            this.activePromise = null;\n            this.queuedPromise = null;\n            this.queuedPromiseFactory = null;\n        }\n        Throttler.prototype.queue = function (promiseFactory) {\n            var _this = this;\n            if (this.activePromise) {\n                this.queuedPromiseFactory = promiseFactory;\n                if (!this.queuedPromise) {\n                    var onComplete_1 = function () {\n                        _this.queuedPromise = null;\n                        var result = _this.queue(_this.queuedPromiseFactory);\n                        _this.queuedPromiseFactory = null;\n                        return result;\n                    };\n                    this.queuedPromise = new winjs_base_1.Promise(function (c, e, p) {\n                        _this.activePromise.then(onComplete_1, onComplete_1, p).done(c);\n                    }, function () {\n                        _this.activePromise.cancel();\n                    });\n                }\n                return new winjs_base_1.Promise(function (c, e, p) {\n                    _this.queuedPromise.then(c, e, p);\n                }, function () {\n                    // no-op\n                });\n            }\n            this.activePromise = promiseFactory();\n            return new winjs_base_1.Promise(function (c, e, p) {\n                _this.activePromise.done(function (result) {\n                    _this.activePromise = null;\n                    c(result);\n                }, function (err) {\n                    _this.activePromise = null;\n                    e(err);\n                }, p);\n            }, function () {\n                _this.activePromise.cancel();\n            });\n        };\n        return Throttler;\n    }());\n    exports.Throttler = Throttler;\n    // TODO@Joao: can the previous throttler be replaced with this?\n    var SimpleThrottler = (function () {\n        function SimpleThrottler() {\n            this.current = winjs_base_1.TPromise.as(null);\n        }\n        SimpleThrottler.prototype.queue = function (promiseTask) {\n            return this.current = this.current.then(function () { return promiseTask(); });\n        };\n        return SimpleThrottler;\n    }());\n    exports.SimpleThrottler = SimpleThrottler;\n    /**\n     * A helper to delay execution of a task that is being requested often.\n     *\n     * Following the throttler, now imagine the mail man wants to optimize the number of\n     * trips proactively. The trip itself can be long, so the he decides not to make the trip\n     * as soon as a letter is submitted. Instead he waits a while, in case more\n     * letters are submitted. After said waiting period, if no letters were submitted, he\n     * decides to make the trip. Imagine that N more letters were submitted after the first\n     * one, all within a short period of time between each other. Even though N+1\n     * submissions occurred, only 1 delivery was made.\n     *\n     * The delayer offers this behavior via the trigger() method, into which both the task\n     * to be executed and the waiting period (delay) must be passed in as arguments. Following\n     * the example:\n     *\n     * \t\tvar delayer = new Delayer(WAITING_PERIOD);\n     * \t\tvar letters = [];\n     *\n     * \t\tfunction letterReceived(l) {\n     * \t\t\tletters.push(l);\n     * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n     * \t\t}\n     */\n    var Delayer = (function () {\n        function Delayer(defaultDelay) {\n            this.defaultDelay = defaultDelay;\n            this.timeout = null;\n            this.completionPromise = null;\n            this.onSuccess = null;\n            this.task = null;\n        }\n        Delayer.prototype.trigger = function (task, delay) {\n            var _this = this;\n            if (delay === void 0) { delay = this.defaultDelay; }\n            this.task = task;\n            this.cancelTimeout();\n            if (!this.completionPromise) {\n                this.completionPromise = new winjs_base_1.Promise(function (c) {\n                    _this.onSuccess = c;\n                }, function () {\n                    // no-op\n                }).then(function () {\n                    _this.completionPromise = null;\n                    _this.onSuccess = null;\n                    var task = _this.task;\n                    _this.task = null;\n                    return task();\n                });\n            }\n            this.timeout = setTimeout(function () {\n                _this.timeout = null;\n                _this.onSuccess(null);\n            }, delay);\n            return this.completionPromise;\n        };\n        Delayer.prototype.isTriggered = function () {\n            return this.timeout !== null;\n        };\n        Delayer.prototype.cancel = function () {\n            this.cancelTimeout();\n            if (this.completionPromise) {\n                this.completionPromise.cancel();\n                this.completionPromise = null;\n            }\n        };\n        Delayer.prototype.cancelTimeout = function () {\n            if (this.timeout !== null) {\n                clearTimeout(this.timeout);\n                this.timeout = null;\n            }\n        };\n        return Delayer;\n    }());\n    exports.Delayer = Delayer;\n    /**\n     * A helper to delay execution of a task that is being requested often, while\n     * preventing accumulation of consecutive executions, while the task runs.\n     *\n     * Simply combine the two mail man strategies from the Throttler and Delayer\n     * helpers, for an analogy.\n     */\n    var ThrottledDelayer = (function (_super) {\n        __extends(ThrottledDelayer, _super);\n        function ThrottledDelayer(defaultDelay) {\n            _super.call(this, defaultDelay);\n            this.throttler = new Throttler();\n        }\n        ThrottledDelayer.prototype.trigger = function (promiseFactory, delay) {\n            var _this = this;\n            return _super.prototype.trigger.call(this, function () { return _this.throttler.queue(promiseFactory); }, delay);\n        };\n        return ThrottledDelayer;\n    }(Delayer));\n    exports.ThrottledDelayer = ThrottledDelayer;\n    /**\n     * Similar to the ThrottledDelayer, except it also guarantees that the promise\n     * factory doesn't get called more often than every `minimumPeriod` milliseconds.\n     */\n    var PeriodThrottledDelayer = (function (_super) {\n        __extends(PeriodThrottledDelayer, _super);\n        function PeriodThrottledDelayer(defaultDelay, minimumPeriod) {\n            if (minimumPeriod === void 0) { minimumPeriod = 0; }\n            _super.call(this, defaultDelay);\n            this.minimumPeriod = minimumPeriod;\n            this.periodThrottler = new Throttler();\n        }\n        PeriodThrottledDelayer.prototype.trigger = function (promiseFactory, delay) {\n            var _this = this;\n            return _super.prototype.trigger.call(this, function () {\n                return _this.periodThrottler.queue(function () {\n                    return winjs_base_1.Promise.join([\n                        winjs_base_1.TPromise.timeout(_this.minimumPeriod),\n                        promiseFactory()\n                    ]).then(function (r) { return r[1]; });\n                });\n            }, delay);\n        };\n        return PeriodThrottledDelayer;\n    }(ThrottledDelayer));\n    exports.PeriodThrottledDelayer = PeriodThrottledDelayer;\n    var PromiseSource = (function () {\n        function PromiseSource() {\n            var _this = this;\n            this._value = new winjs_base_1.TPromise(function (c, e) {\n                _this._completeCallback = c;\n                _this._errorCallback = e;\n            });\n        }\n        Object.defineProperty(PromiseSource.prototype, \"value\", {\n            get: function () {\n                return this._value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        PromiseSource.prototype.complete = function (value) {\n            this._completeCallback(value);\n        };\n        PromiseSource.prototype.error = function (err) {\n            this._errorCallback(err);\n        };\n        return PromiseSource;\n    }());\n    exports.PromiseSource = PromiseSource;\n    var ShallowCancelThenPromise = (function (_super) {\n        __extends(ShallowCancelThenPromise, _super);\n        function ShallowCancelThenPromise(outer) {\n            var completeCallback, errorCallback, progressCallback;\n            _super.call(this, function (c, e, p) {\n                completeCallback = c;\n                errorCallback = e;\n                progressCallback = p;\n            }, function () {\n                // cancel this promise but not the\n                // outer promise\n                errorCallback(errors.canceled());\n            });\n            outer.then(completeCallback, errorCallback, progressCallback);\n        }\n        return ShallowCancelThenPromise;\n    }(winjs_base_1.TPromise));\n    exports.ShallowCancelThenPromise = ShallowCancelThenPromise;\n    /**\n     * Returns a new promise that joins the provided promise. Upon completion of\n     * the provided promise the provided function will always be called. This\n     * method is comparable to a try-finally code block.\n     * @param promise a promise\n     * @param f a function that will be call in the success and error case.\n     */\n    function always(promise, f) {\n        return new winjs_base_1.TPromise(function (c, e, p) {\n            promise.done(function (result) {\n                try {\n                    f(result);\n                }\n                catch (e1) {\n                    errors.onUnexpectedError(e1);\n                }\n                c(result);\n            }, function (err) {\n                try {\n                    f(err);\n                }\n                catch (e1) {\n                    errors.onUnexpectedError(e1);\n                }\n                e(err);\n            }, function (progress) {\n                p(progress);\n            });\n        }, function () {\n            promise.cancel();\n        });\n    }\n    exports.always = always;\n    /**\n     * Runs the provided list of promise factories in sequential order. The returned\n     * promise will complete to an array of results from each promise.\n     */\n    function sequence(promiseFactory) {\n        var results = [];\n        // reverse since we start with last element using pop()\n        promiseFactory = promiseFactory.reverse();\n        function next() {\n            if (promiseFactory.length) {\n                return promiseFactory.pop()();\n            }\n            return null;\n        }\n        function thenHandler(result) {\n            if (result) {\n                results.push(result);\n            }\n            var n = next();\n            if (n) {\n                return n.then(thenHandler);\n            }\n            return winjs_base_1.TPromise.as(results);\n        }\n        return winjs_base_1.TPromise.as(null).then(thenHandler);\n    }\n    exports.sequence = sequence;\n    function once(fn) {\n        var _this = this;\n        var didCall = false;\n        var result;\n        return function () {\n            if (didCall) {\n                return result;\n            }\n            didCall = true;\n            result = fn.apply(_this, arguments);\n            return result;\n        };\n    }\n    exports.once = once;\n    /**\n     * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n     * ensures that at any time no more than M promises are running at the same time.\n     */\n    var Limiter = (function () {\n        function Limiter(maxDegreeOfParalellism) {\n            this.maxDegreeOfParalellism = maxDegreeOfParalellism;\n            this.outstandingPromises = [];\n            this.runningPromises = 0;\n        }\n        Limiter.prototype.queue = function (promiseFactory) {\n            var _this = this;\n            return new winjs_base_1.TPromise(function (c, e, p) {\n                _this.outstandingPromises.push({\n                    factory: promiseFactory,\n                    c: c,\n                    e: e,\n                    p: p\n                });\n                _this.consume();\n            });\n        };\n        Limiter.prototype.consume = function () {\n            var _this = this;\n            while (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n                var iLimitedTask = this.outstandingPromises.shift();\n                this.runningPromises++;\n                var promise = iLimitedTask.factory();\n                promise.done(iLimitedTask.c, iLimitedTask.e, iLimitedTask.p);\n                promise.done(function () { return _this.consumed(); }, function () { return _this.consumed(); });\n            }\n        };\n        Limiter.prototype.consumed = function () {\n            this.runningPromises--;\n            this.consume();\n        };\n        return Limiter;\n    }());\n    exports.Limiter = Limiter;\n    var TimeoutTimer = (function (_super) {\n        __extends(TimeoutTimer, _super);\n        function TimeoutTimer() {\n            _super.call(this);\n            this._token = -1;\n        }\n        TimeoutTimer.prototype.dispose = function () {\n            this.cancel();\n            _super.prototype.dispose.call(this);\n        };\n        TimeoutTimer.prototype.cancel = function () {\n            if (this._token !== -1) {\n                platform.clearTimeout(this._token);\n                this._token = -1;\n            }\n        };\n        TimeoutTimer.prototype.cancelAndSet = function (runner, timeout) {\n            var _this = this;\n            this.cancel();\n            this._token = platform.setTimeout(function () {\n                _this._token = -1;\n                runner();\n            }, timeout);\n        };\n        TimeoutTimer.prototype.setIfNotSet = function (runner, timeout) {\n            var _this = this;\n            if (this._token !== -1) {\n                // timer is already set\n                return;\n            }\n            this._token = platform.setTimeout(function () {\n                _this._token = -1;\n                runner();\n            }, timeout);\n        };\n        return TimeoutTimer;\n    }(lifecycle_1.Disposable));\n    exports.TimeoutTimer = TimeoutTimer;\n    var IntervalTimer = (function (_super) {\n        __extends(IntervalTimer, _super);\n        function IntervalTimer() {\n            _super.call(this);\n            this._token = -1;\n        }\n        IntervalTimer.prototype.dispose = function () {\n            this.cancel();\n            _super.prototype.dispose.call(this);\n        };\n        IntervalTimer.prototype.cancel = function () {\n            if (this._token !== -1) {\n                platform.clearInterval(this._token);\n                this._token = -1;\n            }\n        };\n        IntervalTimer.prototype.cancelAndSet = function (runner, interval) {\n            this.cancel();\n            this._token = platform.setInterval(function () {\n                runner();\n            }, interval);\n        };\n        return IntervalTimer;\n    }(lifecycle_1.Disposable));\n    exports.IntervalTimer = IntervalTimer;\n    var RunOnceScheduler = (function () {\n        function RunOnceScheduler(runner, timeout) {\n            this.timeoutToken = -1;\n            this.runner = runner;\n            this.timeout = timeout;\n            this.timeoutHandler = this.onTimeout.bind(this);\n        }\n        /**\n         * Dispose RunOnceScheduler\n         */\n        RunOnceScheduler.prototype.dispose = function () {\n            this.cancel();\n            this.runner = null;\n        };\n        /**\n         * Cancel current scheduled runner (if any).\n         */\n        RunOnceScheduler.prototype.cancel = function () {\n            if (this.isScheduled()) {\n                platform.clearTimeout(this.timeoutToken);\n                this.timeoutToken = -1;\n            }\n        };\n        /**\n         * Replace runner. If there is a runner already scheduled, the new runner will be called.\n         */\n        RunOnceScheduler.prototype.setRunner = function (runner) {\n            this.runner = runner;\n        };\n        /**\n         * Cancel previous runner (if any) & schedule a new runner.\n         */\n        RunOnceScheduler.prototype.schedule = function (delay) {\n            if (delay === void 0) { delay = this.timeout; }\n            this.cancel();\n            this.timeoutToken = platform.setTimeout(this.timeoutHandler, delay);\n        };\n        /**\n         * Returns true if scheduled.\n         */\n        RunOnceScheduler.prototype.isScheduled = function () {\n            return this.timeoutToken !== -1;\n        };\n        RunOnceScheduler.prototype.onTimeout = function () {\n            this.timeoutToken = -1;\n            if (this.runner) {\n                this.runner();\n            }\n        };\n        return RunOnceScheduler;\n    }());\n    exports.RunOnceScheduler = RunOnceScheduler;\n    function nfcall(fn) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return new winjs_base_1.Promise(function (c, e) { return fn.apply(void 0, args.concat([function (err, result) { return err ? e(err) : c(result); }])); });\n    }\n    exports.nfcall = nfcall;\n    function ninvoke(thisArg, fn) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        return new winjs_base_1.Promise(function (c, e) { return fn.call.apply(fn, [thisArg].concat(args, [function (err, result) { return err ? e(err) : c(result); }])); });\n    }\n    exports.ninvoke = ninvoke;\n});\n\ndefine(__m[104], __M([1,0,2,94,92]), function (require, exports, errors_1, marshalling_1, workerProtocol) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var WorkerServer = (function () {\n        function WorkerServer(postSerializedMessage) {\n            this._postSerializedMessage = postSerializedMessage;\n            this._workerId = 0;\n            this._requestHandler = null;\n            this._bindConsole();\n        }\n        WorkerServer.prototype._bindConsole = function () {\n            self.console = {\n                log: this._sendPrintMessage.bind(this, workerProtocol.PrintType.LOG),\n                debug: this._sendPrintMessage.bind(this, workerProtocol.PrintType.DEBUG),\n                info: this._sendPrintMessage.bind(this, workerProtocol.PrintType.INFO),\n                warn: this._sendPrintMessage.bind(this, workerProtocol.PrintType.WARN),\n                error: this._sendPrintMessage.bind(this, workerProtocol.PrintType.ERROR)\n            };\n            errors_1.setUnexpectedErrorHandler(function (e) {\n                self.console.error(e);\n            });\n        };\n        WorkerServer.prototype._sendPrintMessage = function (level) {\n            var objects = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                objects[_i - 1] = arguments[_i];\n            }\n            var transformedObjects = objects.map(function (obj) { return (obj instanceof Error) ? errors_1.transformErrorForSerialization(obj) : obj; });\n            var msg = {\n                monacoWorker: true,\n                from: this._workerId,\n                req: '0',\n                type: workerProtocol.MessageType.PRINT,\n                level: level,\n                payload: (transformedObjects.length === 1 ? transformedObjects[0] : transformedObjects)\n            };\n            this._postMessage(msg);\n        };\n        WorkerServer.prototype._sendReply = function (msgId, action, payload) {\n            var msg = {\n                monacoWorker: true,\n                from: this._workerId,\n                req: '0',\n                id: msgId,\n                type: workerProtocol.MessageType.REPLY,\n                action: action,\n                payload: (payload instanceof Error) ? errors_1.transformErrorForSerialization(payload) : payload\n            };\n            this._postMessage(msg);\n        };\n        WorkerServer.prototype.loadModule = function (moduleId, callback, errorback) {\n            // Use the global require to be sure to get the global config\n            self.require([moduleId], function () {\n                var result = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    result[_i - 0] = arguments[_i];\n                }\n                callback(result[0]);\n            }, errorback);\n        };\n        WorkerServer.prototype.onmessage = function (msg) {\n            this._onmessage(marshalling_1.parse(msg));\n        };\n        WorkerServer.prototype._postMessage = function (msg) {\n            this._postSerializedMessage(marshalling_1.stringify(msg));\n        };\n        WorkerServer.prototype._onmessage = function (msg) {\n            var _this = this;\n            var c = this._sendReply.bind(this, msg.id, workerProtocol.ReplyType.COMPLETE);\n            var e = this._sendReply.bind(this, msg.id, workerProtocol.ReplyType.ERROR);\n            var p = this._sendReply.bind(this, msg.id, workerProtocol.ReplyType.PROGRESS);\n            switch (msg.type) {\n                case workerProtocol.MessageType.INITIALIZE:\n                    this._workerId = msg.payload.id;\n                    var loaderConfig = msg.payload.loaderConfiguration;\n                    // TODO@Alex: share this code with simpleWorker\n                    if (loaderConfig) {\n                        // Remove 'baseUrl', handling it is beyond scope for now\n                        if (typeof loaderConfig.baseUrl !== 'undefined') {\n                            delete loaderConfig['baseUrl'];\n                        }\n                        if (typeof loaderConfig.paths !== 'undefined') {\n                            if (typeof loaderConfig.paths.vs !== 'undefined') {\n                                delete loaderConfig.paths['vs'];\n                            }\n                        }\n                        var nlsConfig_1 = loaderConfig['vs/nls'];\n                        // We need to have pseudo translation\n                        if (nlsConfig_1 && nlsConfig_1.pseudo) {\n                            require(['vs/nls'], function (nlsPlugin) {\n                                nlsPlugin.setPseudoTranslation(nlsConfig_1.pseudo);\n                            });\n                        }\n                        // Since this is in a web worker, enable catching errors\n                        loaderConfig.catchError = true;\n                        self.require.config(loaderConfig);\n                    }\n                    this.loadModule(msg.payload.moduleId, function (handlerModule) {\n                        _this._requestHandler = handlerModule.value;\n                        c();\n                    }, e);\n                    break;\n                default:\n                    this._handleMessage(msg, c, e, p);\n                    break;\n            }\n        };\n        WorkerServer.prototype._handleMessage = function (msg, c, e, p) {\n            if (!this._requestHandler) {\n                e('Request handler not loaded');\n                return;\n            }\n            var handlerMethod = this._requestHandler[msg.type];\n            if (typeof handlerMethod !== 'function') {\n                e('Handler does not have method ' + msg.type);\n                return;\n            }\n            try {\n                handlerMethod.call(this._requestHandler, this, c, e, p, msg.payload);\n            }\n            catch (handlerError) {\n                e(errors_1.transformErrorForSerialization(handlerError));\n            }\n        };\n        return WorkerServer;\n    }());\n    exports.WorkerServer = WorkerServer;\n    function create(postMessage) {\n        return new WorkerServer(postMessage);\n    }\n    exports.create = create;\n});\n\ndefine(__m[57], __M([1,0,2,4,43]), function (require, exports, errors_1, strings, viewLineToken_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var START_INDEX_MASK = 0xffffffff;\n    var TYPE_MASK = 0xffff;\n    var START_INDEX_OFFSET = 1;\n    var TYPE_OFFSET = Math.pow(2, 32);\n    var DEFAULT_VIEW_TOKEN = new viewLineToken_1.ViewLineToken(0, '');\n    var INFLATED_TOKENS_EMPTY_TEXT = [];\n    var DEFLATED_TOKENS_EMPTY_TEXT = [];\n    var INFLATED_TOKENS_NON_EMPTY_TEXT = [DEFAULT_VIEW_TOKEN];\n    var DEFLATED_TOKENS_NON_EMPTY_TEXT = [0];\n    var TokensInflatorMap = (function () {\n        function TokensInflatorMap() {\n            this._inflate = [''];\n            this._deflate = { '': 0 };\n        }\n        return TokensInflatorMap;\n    }());\n    exports.TokensInflatorMap = TokensInflatorMap;\n    var TokensBinaryEncoding = (function () {\n        function TokensBinaryEncoding() {\n        }\n        TokensBinaryEncoding.deflateArr = function (map, tokens) {\n            if (tokens.length === 0) {\n                return DEFLATED_TOKENS_EMPTY_TEXT;\n            }\n            if (tokens.length === 1 && tokens[0].startIndex === 0 && !tokens[0].type) {\n                return DEFLATED_TOKENS_NON_EMPTY_TEXT;\n            }\n            var i, len, deflatedToken, deflated, token, inflateMap = map._inflate, deflateMap = map._deflate, prevStartIndex = -1, result = new Array(tokens.length);\n            for (i = 0, len = tokens.length; i < len; i++) {\n                token = tokens[i];\n                if (token.startIndex <= prevStartIndex) {\n                    token.startIndex = prevStartIndex + 1;\n                    errors_1.onUnexpectedError({\n                        message: 'Invalid tokens detected',\n                        tokens: tokens\n                    });\n                }\n                if (deflateMap.hasOwnProperty(token.type)) {\n                    deflatedToken = deflateMap[token.type];\n                }\n                else {\n                    deflatedToken = inflateMap.length;\n                    deflateMap[token.type] = deflatedToken;\n                    inflateMap.push(token.type);\n                }\n                // http://stackoverflow.com/a/2803010\n                // All numbers in JavaScript are actually IEEE-754 compliant floating-point doubles.\n                // These have a 53-bit mantissa which should mean that any integer value with a magnitude\n                // of approximately 9 quadrillion or less -- more specifically, 9,007,199,254,740,991 --\n                // will be represented accurately.\n                // http://stackoverflow.com/a/6729252\n                // Bitwise operations cast numbers to 32bit representation in JS\n                // 32 bits for startIndex => up to 2^32 = 4,294,967,296\n                // 16 bits for token => up to 2^16 = 65,536\n                // [token][startIndex]\n                deflated = deflatedToken * TYPE_OFFSET + token.startIndex * START_INDEX_OFFSET;\n                result[i] = deflated;\n                prevStartIndex = token.startIndex;\n            }\n            return result;\n        };\n        TokensBinaryEncoding.getStartIndex = function (binaryEncodedToken) {\n            return (binaryEncodedToken / START_INDEX_OFFSET) & START_INDEX_MASK;\n        };\n        TokensBinaryEncoding.getType = function (map, binaryEncodedToken) {\n            var deflatedType = (binaryEncodedToken / TYPE_OFFSET) & TYPE_MASK;\n            if (deflatedType === 0) {\n                return strings.empty;\n            }\n            return map._inflate[deflatedType];\n        };\n        TokensBinaryEncoding.inflateArr = function (map, binaryEncodedTokens) {\n            if (binaryEncodedTokens.length === 0) {\n                return INFLATED_TOKENS_EMPTY_TEXT;\n            }\n            if (binaryEncodedTokens.length === 1 && binaryEncodedTokens[0] === 0) {\n                return INFLATED_TOKENS_NON_EMPTY_TEXT;\n            }\n            var result = [];\n            var inflateMap = map._inflate;\n            for (var i = 0, len = binaryEncodedTokens.length; i < len; i++) {\n                var deflated = binaryEncodedTokens[i];\n                var startIndex = (deflated / START_INDEX_OFFSET) & START_INDEX_MASK;\n                var deflatedType = (deflated / TYPE_OFFSET) & TYPE_MASK;\n                result.push(new viewLineToken_1.ViewLineToken(startIndex, inflateMap[deflatedType]));\n            }\n            return result;\n        };\n        TokensBinaryEncoding.findIndexOfOffset = function (binaryEncodedTokens, offset) {\n            return this.findIndexInSegmentsArray(binaryEncodedTokens, offset);\n        };\n        TokensBinaryEncoding.sliceAndInflate = function (map, binaryEncodedTokens, startOffset, endOffset, deltaStartIndex) {\n            if (binaryEncodedTokens.length === 0) {\n                return INFLATED_TOKENS_EMPTY_TEXT;\n            }\n            if (binaryEncodedTokens.length === 1 && binaryEncodedTokens[0] === 0) {\n                return INFLATED_TOKENS_NON_EMPTY_TEXT;\n            }\n            var startIndex = this.findIndexInSegmentsArray(binaryEncodedTokens, startOffset);\n            var result = [];\n            var inflateMap = map._inflate;\n            var originalToken = binaryEncodedTokens[startIndex];\n            var deflatedType = (originalToken / TYPE_OFFSET) & TYPE_MASK;\n            var newStartIndex = 0;\n            result.push(new viewLineToken_1.ViewLineToken(newStartIndex, inflateMap[deflatedType]));\n            for (var i = startIndex + 1, len = binaryEncodedTokens.length; i < len; i++) {\n                originalToken = binaryEncodedTokens[i];\n                var originalStartIndex = (originalToken / START_INDEX_OFFSET) & START_INDEX_MASK;\n                if (originalStartIndex >= endOffset) {\n                    break;\n                }\n                deflatedType = (originalToken / TYPE_OFFSET) & TYPE_MASK;\n                newStartIndex = originalStartIndex - startOffset + deltaStartIndex;\n                result.push(new viewLineToken_1.ViewLineToken(newStartIndex, inflateMap[deflatedType]));\n            }\n            return result;\n        };\n        TokensBinaryEncoding.findIndexInSegmentsArray = function (arr, desiredIndex) {\n            var low = 0, high = arr.length - 1, mid, value;\n            while (low < high) {\n                mid = low + Math.ceil((high - low) / 2);\n                value = arr[mid] & 0xffffffff;\n                if (value > desiredIndex) {\n                    high = mid - 1;\n                }\n                else {\n                    low = mid;\n                }\n            }\n            return low;\n        };\n        TokensBinaryEncoding.START_INDEX_MASK = START_INDEX_MASK;\n        TokensBinaryEncoding.TYPE_MASK = TYPE_MASK;\n        TokensBinaryEncoding.START_INDEX_OFFSET = START_INDEX_OFFSET;\n        TokensBinaryEncoding.TYPE_OFFSET = TYPE_OFFSET;\n        return TokensBinaryEncoding;\n    }());\n    exports.TokensBinaryEncoding = TokensBinaryEncoding;\n});\n\ndefine(__m[58], __M([1,0,4,57,19,43]), function (require, exports, strings, tokensBinaryEncoding_1, modeTransition_1, viewLineToken_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var START_INDEX_MASK = tokensBinaryEncoding_1.TokensBinaryEncoding.START_INDEX_MASK;\n    var TYPE_MASK = tokensBinaryEncoding_1.TokensBinaryEncoding.TYPE_MASK;\n    var START_INDEX_OFFSET = tokensBinaryEncoding_1.TokensBinaryEncoding.START_INDEX_OFFSET;\n    var TYPE_OFFSET = tokensBinaryEncoding_1.TokensBinaryEncoding.TYPE_OFFSET;\n    var NO_OP_TOKENS_ADJUSTER = {\n        adjust: function () { },\n        finish: function () { }\n    };\n    var NO_OP_MARKERS_ADJUSTER = {\n        adjustDelta: function () { },\n        adjustSet: function () { },\n        finish: function () { }\n    };\n    var MarkerMoveSemantics;\n    (function (MarkerMoveSemantics) {\n        MarkerMoveSemantics[MarkerMoveSemantics[\"MarkerDefined\"] = 0] = \"MarkerDefined\";\n        MarkerMoveSemantics[MarkerMoveSemantics[\"ForceMove\"] = 1] = \"ForceMove\";\n        MarkerMoveSemantics[MarkerMoveSemantics[\"ForceStay\"] = 2] = \"ForceStay\";\n    })(MarkerMoveSemantics || (MarkerMoveSemantics = {}));\n    /**\n     * Returns:\n     *  - 0 => the line consists of whitespace\n     *  - otherwise => the indent level is returned value - 1\n     */\n    function computePlusOneIndentLevel(line, tabSize) {\n        var indent = 0;\n        var i = 0;\n        var len = line.length;\n        while (i < len) {\n            var chCode = line.charCodeAt(i);\n            if (chCode === 32 /*space*/) {\n                indent++;\n            }\n            else if (chCode === 9 /*\\t*/) {\n                indent = indent - indent % tabSize + tabSize;\n            }\n            else {\n                break;\n            }\n            i++;\n        }\n        if (i === len) {\n            return 0; // line only consists of whitespace\n        }\n        return indent + 1;\n    }\n    var ModelLine = (function () {\n        function ModelLine(lineNumber, text, tabSize) {\n            this._lineNumber = lineNumber | 0;\n            this._metadata = 0;\n            this._setText(text, tabSize);\n            this._state = null;\n            this._modeTransitions = null;\n            this._lineTokens = null;\n            this._markers = null;\n        }\n        Object.defineProperty(ModelLine.prototype, \"lineNumber\", {\n            get: function () { return this._lineNumber; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ModelLine.prototype, \"text\", {\n            get: function () { return this._text; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ModelLine.prototype, \"isInvalid\", {\n            get: function () {\n                return (this._metadata & 0x00000001) ? true : false;\n            },\n            set: function (value) {\n                this._metadata = (this._metadata & 0xfffffffe) | (value ? 1 : 0);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Returns:\n         *  - -1 => the line consists of whitespace\n         *  - otherwise => the indent level is returned value\n         */\n        ModelLine.prototype.getIndentLevel = function () {\n            return ((this._metadata & 0xfffffffe) >> 1) - 1;\n        };\n        ModelLine.prototype._setPlusOneIndentLevel = function (value) {\n            this._metadata = (this._metadata & 0x00000001) | ((value & 0xefffffff) << 1);\n        };\n        ModelLine.prototype.updateTabSize = function (tabSize) {\n            if (tabSize === 0) {\n                // don't care mark\n                this._metadata = this._metadata & 0x00000001;\n            }\n            else {\n                this._setPlusOneIndentLevel(computePlusOneIndentLevel(this._text, tabSize));\n            }\n        };\n        // --- BEGIN STATE\n        ModelLine.prototype.setState = function (state) {\n            this._state = state;\n        };\n        ModelLine.prototype.getState = function () {\n            return this._state || null;\n        };\n        // --- END STATE\n        // --- BEGIN MODE TRANSITIONS\n        ModelLine.prototype.getModeTransitions = function (topLevelMode) {\n            if (this._modeTransitions) {\n                return this._modeTransitions;\n            }\n            else {\n                return [new modeTransition_1.ModeTransition(0, topLevelMode)];\n            }\n        };\n        // --- END MODE TRANSITIONS\n        // --- BEGIN TOKENS\n        ModelLine.prototype.setTokens = function (map, tokens, topLevelMode, modeTransitions) {\n            this._lineTokens = toLineTokensFromInflated(map, tokens, this._text.length);\n            this._modeTransitions = toModeTransitions(topLevelMode, modeTransitions);\n        };\n        ModelLine.prototype._setLineTokensFromDeflated = function (tokens) {\n            this._lineTokens = toLineTokensFromDeflated(tokens, this._text.length);\n        };\n        ModelLine.prototype.getTokens = function (map) {\n            if (this._lineTokens) {\n                return new LineTokens(map, this._lineTokens);\n            }\n            if (this._text.length === 0) {\n                return EmptyLineTokens.INSTANCE;\n            }\n            return DefaultLineTokens.INSTANCE;\n        };\n        // --- END TOKENS\n        ModelLine.prototype._createTokensAdjuster = function () {\n            if (!this._lineTokens) {\n                // This line does not have real tokens, so there is nothing to adjust\n                return NO_OP_TOKENS_ADJUSTER;\n            }\n            var tokens = this._lineTokens;\n            var tokensLength = tokens.length;\n            var tokensIndex = 0;\n            var currentTokenStartIndex = 0;\n            var adjust = function (toColumn, delta, minimumAllowedColumn) {\n                // console.log('before call: tokensIndex: ' + tokensIndex + ': ' + String(this.getTokens()));\n                // console.log('adjustTokens: ' + toColumn + ' with delta: ' + delta + ' and [' + minimumAllowedColumn + ']');\n                // console.log('currentTokenStartIndex: ' + currentTokenStartIndex);\n                var minimumAllowedIndex = minimumAllowedColumn - 1;\n                while (currentTokenStartIndex < toColumn && tokensIndex < tokensLength) {\n                    if (currentTokenStartIndex > 0 && delta !== 0) {\n                        // adjust token's `startIndex` by `delta`\n                        var deflatedType = (tokens[tokensIndex] / TYPE_OFFSET) & TYPE_MASK;\n                        var newStartIndex = Math.max(minimumAllowedIndex, currentTokenStartIndex + delta);\n                        var newToken = deflatedType * TYPE_OFFSET + newStartIndex * START_INDEX_OFFSET;\n                        if (delta < 0) {\n                            // pop all previous tokens that have become `collapsed`\n                            while (tokensIndex > 0) {\n                                var prevTokenStartIndex = (tokens[tokensIndex - 1] / START_INDEX_OFFSET) & START_INDEX_MASK;\n                                if (prevTokenStartIndex >= newStartIndex) {\n                                    // Token at `tokensIndex` - 1 is now `collapsed` => pop it\n                                    tokens.splice(tokensIndex - 1, 1);\n                                    tokensLength--;\n                                    tokensIndex--;\n                                }\n                                else {\n                                    break;\n                                }\n                            }\n                        }\n                        tokens[tokensIndex] = newToken;\n                    }\n                    tokensIndex++;\n                    if (tokensIndex < tokensLength) {\n                        currentTokenStartIndex = (tokens[tokensIndex] / START_INDEX_OFFSET) & START_INDEX_MASK;\n                    }\n                }\n                // console.log('after call: tokensIndex: ' + tokensIndex + ': ' + String(this.getTokens()));\n            };\n            var finish = function (delta, lineTextLength) {\n                adjust(Number.MAX_VALUE, delta, 1);\n            };\n            return {\n                adjust: adjust,\n                finish: finish\n            };\n        };\n        ModelLine.prototype._setText = function (text, tabSize) {\n            this._text = text;\n            if (tabSize === 0) {\n                // don't care mark\n                this._metadata = this._metadata & 0x00000001;\n            }\n            else {\n                this._setPlusOneIndentLevel(computePlusOneIndentLevel(text, tabSize));\n            }\n            var tokens = this._lineTokens;\n            if (tokens) {\n                var lineTextLength = this._text.length;\n                // Remove overflowing tokens\n                while (tokens.length > 0) {\n                    var lastTokenStartIndex = (tokens[tokens.length - 1] / START_INDEX_OFFSET) & START_INDEX_MASK;\n                    if (lastTokenStartIndex < lineTextLength) {\n                        // Valid token\n                        break;\n                    }\n                    // This token now overflows the text => remove it\n                    tokens.pop();\n                }\n                this._setLineTokensFromDeflated(tokens);\n            }\n        };\n        // private _printMarkers(): string {\n        // \tif (!this._markers) {\n        // \t\treturn '[]';\n        // \t}\n        // \tif (this._markers.length === 0) {\n        // \t\treturn '[]';\n        // \t}\n        // \tvar markers = this._markers;\n        // \tvar printMarker = (m:ILineMarker) => {\n        // \t\tif (m.stickToPreviousCharacter) {\n        // \t\t\treturn '|' + m.column;\n        // \t\t}\n        // \t\treturn m.column + '|';\n        // \t};\n        // \treturn '[' + markers.map(printMarker).join(', ') + ']';\n        // }\n        ModelLine.prototype._createMarkersAdjuster = function (changedMarkers) {\n            var _this = this;\n            if (!this._markers) {\n                return NO_OP_MARKERS_ADJUSTER;\n            }\n            if (this._markers.length === 0) {\n                return NO_OP_MARKERS_ADJUSTER;\n            }\n            this._markers.sort(ModelLine._compareMarkers);\n            var markers = this._markers;\n            var markersLength = markers.length;\n            var markersIndex = 0;\n            var marker = markers[markersIndex];\n            // console.log('------------- INITIAL MARKERS: ' + this._printMarkers());\n            var adjustMarkerBeforeColumn = function (toColumn, moveSemantics) {\n                if (marker.column < toColumn) {\n                    return true;\n                }\n                if (marker.column > toColumn) {\n                    return false;\n                }\n                if (moveSemantics === MarkerMoveSemantics.ForceMove) {\n                    return false;\n                }\n                if (moveSemantics === MarkerMoveSemantics.ForceStay) {\n                    return true;\n                }\n                return marker.stickToPreviousCharacter;\n            };\n            var adjustDelta = function (toColumn, delta, minimumAllowedColumn, moveSemantics) {\n                // console.log('------------------------------');\n                // console.log('adjustDelta called: toColumn: ' + toColumn + ', delta: ' + delta + ', minimumAllowedColumn: ' + minimumAllowedColumn + ', moveSemantics: ' + MarkerMoveSemantics[moveSemantics]);\n                // console.log('BEFORE::: markersIndex: ' + markersIndex + ' : ' + this._printMarkers());\n                while (markersIndex < markersLength && adjustMarkerBeforeColumn(toColumn, moveSemantics)) {\n                    if (delta !== 0) {\n                        var newColumn = Math.max(minimumAllowedColumn, marker.column + delta);\n                        if (marker.column !== newColumn) {\n                            changedMarkers[marker.id] = true;\n                            marker.oldLineNumber = marker.oldLineNumber || _this._lineNumber;\n                            marker.oldColumn = marker.oldColumn || marker.column;\n                            marker.column = newColumn;\n                        }\n                    }\n                    markersIndex++;\n                    if (markersIndex < markersLength) {\n                        marker = markers[markersIndex];\n                    }\n                }\n                // console.log('AFTER::: markersIndex: ' + markersIndex + ' : ' + this._printMarkers());\n            };\n            var adjustSet = function (toColumn, newColumn, moveSemantics) {\n                // console.log('------------------------------');\n                // console.log('adjustSet called: toColumn: ' + toColumn + ', newColumn: ' + newColumn + ', moveSemantics: ' + MarkerMoveSemantics[moveSemantics]);\n                // console.log('BEFORE::: markersIndex: ' + markersIndex + ' : ' + this._printMarkers());\n                while (markersIndex < markersLength && adjustMarkerBeforeColumn(toColumn, moveSemantics)) {\n                    if (marker.column !== newColumn) {\n                        changedMarkers[marker.id] = true;\n                        marker.oldLineNumber = marker.oldLineNumber || _this._lineNumber;\n                        marker.oldColumn = marker.oldColumn || marker.column;\n                        marker.column = newColumn;\n                    }\n                    markersIndex++;\n                    if (markersIndex < markersLength) {\n                        marker = markers[markersIndex];\n                    }\n                }\n                // console.log('AFTER::: markersIndex: ' + markersIndex + ' : ' + this._printMarkers());\n            };\n            var finish = function (delta, lineTextLength) {\n                adjustDelta(Number.MAX_VALUE, delta, 1, MarkerMoveSemantics.MarkerDefined);\n                // console.log('------------- FINAL MARKERS: ' + this._printMarkers());\n            };\n            return {\n                adjustDelta: adjustDelta,\n                adjustSet: adjustSet,\n                finish: finish\n            };\n        };\n        ModelLine.prototype.applyEdits = function (changedMarkers, edits, tabSize) {\n            var deltaColumn = 0;\n            var resultText = this._text;\n            var tokensAdjuster = this._createTokensAdjuster();\n            var markersAdjuster = this._createMarkersAdjuster(changedMarkers);\n            for (var i = 0, len = edits.length; i < len; i++) {\n                var edit = edits[i];\n                // console.log();\n                // console.log('=============================');\n                // console.log('EDIT #' + i + ' [ ' + edit.startColumn + ' -> ' + edit.endColumn + ' ] : <<<' + edit.text + '>>>, forceMoveMarkers: ' + edit.forceMoveMarkers);\n                // console.log('deltaColumn: ' + deltaColumn);\n                var startColumn = deltaColumn + edit.startColumn;\n                var endColumn = deltaColumn + edit.endColumn;\n                var deletingCnt = endColumn - startColumn;\n                var insertingCnt = edit.text.length;\n                // Adjust tokens & markers before this edit\n                // console.log('Adjust tokens & markers before this edit');\n                tokensAdjuster.adjust(edit.startColumn - 1, deltaColumn, 1);\n                markersAdjuster.adjustDelta(edit.startColumn, deltaColumn, 1, edit.forceMoveMarkers ? MarkerMoveSemantics.ForceMove : (deletingCnt > 0 ? MarkerMoveSemantics.ForceStay : MarkerMoveSemantics.MarkerDefined));\n                // Adjust tokens & markers for the common part of this edit\n                var commonLength = Math.min(deletingCnt, insertingCnt);\n                if (commonLength > 0) {\n                    // console.log('Adjust tokens & markers for the common part of this edit');\n                    tokensAdjuster.adjust(edit.startColumn - 1 + commonLength, deltaColumn, startColumn);\n                    if (!edit.forceMoveMarkers) {\n                        markersAdjuster.adjustDelta(edit.startColumn + commonLength, deltaColumn, startColumn, edit.forceMoveMarkers ? MarkerMoveSemantics.ForceMove : (deletingCnt > insertingCnt ? MarkerMoveSemantics.ForceStay : MarkerMoveSemantics.MarkerDefined));\n                    }\n                }\n                // Perform the edit & update `deltaColumn`\n                resultText = resultText.substring(0, startColumn - 1) + edit.text + resultText.substring(endColumn - 1);\n                deltaColumn += insertingCnt - deletingCnt;\n                // Adjust tokens & markers inside this edit\n                // console.log('Adjust tokens & markers inside this edit');\n                tokensAdjuster.adjust(edit.endColumn, deltaColumn, startColumn);\n                markersAdjuster.adjustSet(edit.endColumn, startColumn + insertingCnt, edit.forceMoveMarkers ? MarkerMoveSemantics.ForceMove : MarkerMoveSemantics.MarkerDefined);\n            }\n            // Wrap up tokens & markers; adjust remaining if needed\n            tokensAdjuster.finish(deltaColumn, resultText.length);\n            markersAdjuster.finish(deltaColumn, resultText.length);\n            // Save the resulting text\n            this._setText(resultText, tabSize);\n            return deltaColumn;\n        };\n        ModelLine.prototype.split = function (changedMarkers, splitColumn, forceMoveMarkers, tabSize) {\n            // console.log('--> split @ ' + splitColumn + '::: ' + this._printMarkers());\n            var myText = this._text.substring(0, splitColumn - 1);\n            var otherText = this._text.substring(splitColumn - 1);\n            var otherMarkers = null;\n            if (this._markers) {\n                this._markers.sort(ModelLine._compareMarkers);\n                for (var i = 0, len = this._markers.length; i < len; i++) {\n                    var marker = this._markers[i];\n                    if (marker.column > splitColumn\n                        || (marker.column === splitColumn\n                            && (forceMoveMarkers\n                                || !marker.stickToPreviousCharacter))) {\n                        var myMarkers = this._markers.slice(0, i);\n                        otherMarkers = this._markers.slice(i);\n                        this._markers = myMarkers;\n                        break;\n                    }\n                }\n                if (otherMarkers) {\n                    for (var i = 0, len = otherMarkers.length; i < len; i++) {\n                        var marker = otherMarkers[i];\n                        changedMarkers[marker.id] = true;\n                        marker.oldLineNumber = marker.oldLineNumber || this._lineNumber;\n                        marker.oldColumn = marker.oldColumn || marker.column;\n                        marker.column -= splitColumn - 1;\n                    }\n                }\n            }\n            this._setText(myText, tabSize);\n            var otherLine = new ModelLine(this._lineNumber + 1, otherText, tabSize);\n            if (otherMarkers) {\n                otherLine.addMarkers(otherMarkers);\n            }\n            return otherLine;\n        };\n        ModelLine.prototype.append = function (changedMarkers, other, tabSize) {\n            // console.log('--> append: THIS :: ' + this._printMarkers());\n            // console.log('--> append: OTHER :: ' + this._printMarkers());\n            var thisTextLength = this._text.length;\n            this._setText(this._text + other._text, tabSize);\n            var otherTokens = other._lineTokens;\n            if (otherTokens) {\n                // Other has real tokens\n                // Adjust other tokens\n                if (thisTextLength > 0) {\n                    for (var i = 0, len = otherTokens.length; i < len; i++) {\n                        var token = otherTokens[i];\n                        var deflatedStartIndex = (token / START_INDEX_OFFSET) & START_INDEX_MASK;\n                        var deflatedType = (token / TYPE_OFFSET) & TYPE_MASK;\n                        var newStartIndex = deflatedStartIndex + thisTextLength;\n                        var newToken = deflatedType * TYPE_OFFSET + newStartIndex * START_INDEX_OFFSET;\n                        otherTokens[i] = newToken;\n                    }\n                }\n                // Append other tokens\n                var myLineTokens = this._lineTokens;\n                if (myLineTokens) {\n                    // I have real tokens\n                    this._setLineTokensFromDeflated(myLineTokens.concat(otherTokens));\n                }\n                else {\n                    // I don't have real tokens\n                    this._setLineTokensFromDeflated(otherTokens);\n                }\n            }\n            if (other._markers) {\n                // Other has markers\n                var otherMarkers = other._markers;\n                // Adjust other markers\n                for (var i = 0, len = otherMarkers.length; i < len; i++) {\n                    var marker = otherMarkers[i];\n                    changedMarkers[marker.id] = true;\n                    marker.oldLineNumber = marker.oldLineNumber || other.lineNumber;\n                    marker.oldColumn = marker.oldColumn || marker.column;\n                    marker.column += thisTextLength;\n                }\n                this.addMarkers(otherMarkers);\n            }\n        };\n        ModelLine.prototype.addMarker = function (marker) {\n            marker.line = this;\n            if (!this._markers) {\n                this._markers = [marker];\n            }\n            else {\n                this._markers.push(marker);\n            }\n        };\n        ModelLine.prototype.addMarkers = function (markers) {\n            if (markers.length === 0) {\n                return;\n            }\n            var i, len;\n            for (i = 0, len = markers.length; i < len; i++) {\n                markers[i].line = this;\n            }\n            if (!this._markers) {\n                this._markers = markers.slice(0);\n            }\n            else {\n                this._markers = this._markers.concat(markers);\n            }\n        };\n        ModelLine._compareMarkers = function (a, b) {\n            if (a.column === b.column) {\n                return (a.stickToPreviousCharacter ? 0 : 1) - (b.stickToPreviousCharacter ? 0 : 1);\n            }\n            return a.column - b.column;\n        };\n        ModelLine.prototype.removeMarker = function (marker) {\n            if (!this._markers) {\n                return;\n            }\n            var index = this._indexOfMarkerId(marker.id);\n            if (index >= 0) {\n                marker.line = null;\n                this._markers.splice(index, 1);\n            }\n            if (this._markers.length === 0) {\n                this._markers = null;\n            }\n        };\n        ModelLine.prototype.removeMarkers = function (deleteMarkers) {\n            if (!this._markers) {\n                return;\n            }\n            for (var i = 0, len = this._markers.length; i < len; i++) {\n                var marker = this._markers[i];\n                if (deleteMarkers[marker.id]) {\n                    marker.line = null;\n                    this._markers.splice(i, 1);\n                    len--;\n                    i--;\n                }\n            }\n            if (this._markers.length === 0) {\n                this._markers = null;\n            }\n        };\n        ModelLine.prototype.getMarkers = function () {\n            if (!this._markers) {\n                return [];\n            }\n            return this._markers.slice(0);\n        };\n        ModelLine.prototype.updateLineNumber = function (changedMarkers, newLineNumber) {\n            if (this._markers) {\n                var markers = this._markers, i, len, marker;\n                for (i = 0, len = markers.length; i < len; i++) {\n                    marker = markers[i];\n                    changedMarkers[marker.id] = true;\n                    marker.oldLineNumber = marker.oldLineNumber || this._lineNumber;\n                }\n            }\n            this._lineNumber = newLineNumber;\n        };\n        ModelLine.prototype.deleteLine = function (changedMarkers, setMarkersColumn, setMarkersOldLineNumber) {\n            // console.log('--> deleteLine: ');\n            if (this._markers) {\n                var markers = this._markers, i, len, marker;\n                // Mark all these markers as changed\n                for (i = 0, len = markers.length; i < len; i++) {\n                    marker = markers[i];\n                    changedMarkers[marker.id] = true;\n                    marker.oldColumn = marker.oldColumn || marker.column;\n                    marker.oldLineNumber = marker.oldLineNumber || setMarkersOldLineNumber;\n                    marker.column = setMarkersColumn;\n                }\n                return markers;\n            }\n            return [];\n        };\n        ModelLine.prototype._indexOfMarkerId = function (markerId) {\n            var markers = this._markers;\n            for (var i = 0, len = markers.length; i < len; i++) {\n                if (markers[i].id === markerId) {\n                    return i;\n                }\n            }\n        };\n        return ModelLine;\n    }());\n    exports.ModelLine = ModelLine;\n    function toLineTokensFromInflated(map, tokens, textLength) {\n        if (textLength === 0) {\n            return null;\n        }\n        if (!tokens || tokens.length === 0) {\n            return null;\n        }\n        if (tokens.length === 1) {\n            if (tokens[0].startIndex === 0 && tokens[0].type === '') {\n                return null;\n            }\n        }\n        return tokensBinaryEncoding_1.TokensBinaryEncoding.deflateArr(map, tokens);\n    }\n    function toLineTokensFromDeflated(tokens, textLength) {\n        if (textLength === 0) {\n            return null;\n        }\n        if (!tokens || tokens.length === 0) {\n            return null;\n        }\n        if (tokens.length === 1) {\n            if (tokens[0] === 0) {\n                return null;\n            }\n        }\n        return tokens;\n    }\n    var LineTokens = (function () {\n        function LineTokens(map, tokens) {\n            this.map = map;\n            this._tokens = tokens;\n        }\n        LineTokens.prototype.getBinaryEncodedTokensMap = function () {\n            return this.map;\n        };\n        LineTokens.prototype.getBinaryEncodedTokens = function () {\n            return this._tokens;\n        };\n        LineTokens.prototype.getTokenCount = function () {\n            return this._tokens.length;\n        };\n        LineTokens.prototype.getTokenStartIndex = function (tokenIndex) {\n            return tokensBinaryEncoding_1.TokensBinaryEncoding.getStartIndex(this._tokens[tokenIndex]);\n        };\n        LineTokens.prototype.getTokenType = function (tokenIndex) {\n            return tokensBinaryEncoding_1.TokensBinaryEncoding.getType(this.map, this._tokens[tokenIndex]);\n        };\n        LineTokens.prototype.getTokenEndIndex = function (tokenIndex, textLength) {\n            if (tokenIndex + 1 < this._tokens.length) {\n                return tokensBinaryEncoding_1.TokensBinaryEncoding.getStartIndex(this._tokens[tokenIndex + 1]);\n            }\n            return textLength;\n        };\n        LineTokens.prototype.equals = function (other) {\n            if (other instanceof LineTokens) {\n                if (this.map !== other.map) {\n                    return false;\n                }\n                if (this._tokens.length !== other._tokens.length) {\n                    return false;\n                }\n                for (var i = 0, len = this._tokens.length; i < len; i++) {\n                    if (this._tokens[i] !== other._tokens[i]) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            if (!(other instanceof LineTokens)) {\n                return false;\n            }\n        };\n        LineTokens.prototype.findIndexOfOffset = function (offset) {\n            return tokensBinaryEncoding_1.TokensBinaryEncoding.findIndexOfOffset(this._tokens, offset);\n        };\n        LineTokens.prototype.inflate = function () {\n            return tokensBinaryEncoding_1.TokensBinaryEncoding.inflateArr(this.map, this._tokens);\n        };\n        LineTokens.prototype.sliceAndInflate = function (startOffset, endOffset, deltaStartIndex) {\n            return tokensBinaryEncoding_1.TokensBinaryEncoding.sliceAndInflate(this.map, this._tokens, startOffset, endOffset, deltaStartIndex);\n        };\n        return LineTokens;\n    }());\n    exports.LineTokens = LineTokens;\n    var EmptyLineTokens = (function () {\n        function EmptyLineTokens() {\n        }\n        EmptyLineTokens.prototype.getTokenCount = function () {\n            return 0;\n        };\n        EmptyLineTokens.prototype.getTokenStartIndex = function (tokenIndex) {\n            return 0;\n        };\n        EmptyLineTokens.prototype.getTokenType = function (tokenIndex) {\n            return strings.empty;\n        };\n        EmptyLineTokens.prototype.getTokenEndIndex = function (tokenIndex, textLength) {\n            return 0;\n        };\n        EmptyLineTokens.prototype.equals = function (other) {\n            return other === this;\n        };\n        EmptyLineTokens.prototype.findIndexOfOffset = function (offset) {\n            return 0;\n        };\n        EmptyLineTokens.prototype.inflate = function () {\n            return [];\n        };\n        EmptyLineTokens.prototype.sliceAndInflate = function (startOffset, endOffset, deltaStartIndex) {\n            return [];\n        };\n        EmptyLineTokens.INSTANCE = new EmptyLineTokens();\n        return EmptyLineTokens;\n    }());\n    var DefaultLineTokens = (function () {\n        function DefaultLineTokens() {\n        }\n        DefaultLineTokens.prototype.getTokenCount = function () {\n            return 1;\n        };\n        DefaultLineTokens.prototype.getTokenStartIndex = function (tokenIndex) {\n            return 0;\n        };\n        DefaultLineTokens.prototype.getTokenType = function (tokenIndex) {\n            return strings.empty;\n        };\n        DefaultLineTokens.prototype.getTokenEndIndex = function (tokenIndex, textLength) {\n            return textLength;\n        };\n        DefaultLineTokens.prototype.equals = function (other) {\n            return this === other;\n        };\n        DefaultLineTokens.prototype.findIndexOfOffset = function (offset) {\n            return 0;\n        };\n        DefaultLineTokens.prototype.inflate = function () {\n            return [new viewLineToken_1.ViewLineToken(0, '')];\n        };\n        DefaultLineTokens.prototype.sliceAndInflate = function (startOffset, endOffset, deltaStartIndex) {\n            return [new viewLineToken_1.ViewLineToken(0, '')];\n        };\n        DefaultLineTokens.INSTANCE = new DefaultLineTokens();\n        return DefaultLineTokens;\n    }());\n    exports.DefaultLineTokens = DefaultLineTokens;\n    function toModeTransitions(topLevelMode, modeTransitions) {\n        if (!modeTransitions || modeTransitions.length === 0) {\n            return null;\n        }\n        else if (modeTransitions.length === 1 && modeTransitions[0].startIndex === 0 && modeTransitions[0].mode === topLevelMode) {\n            return null;\n        }\n        return modeTransitions;\n    }\n});\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[61], __M([1,0,9,60]), function (require, exports, event_1, languageSelector_1) {\n    'use strict';\n    var LanguageFeatureRegistry = (function () {\n        function LanguageFeatureRegistry() {\n            this._clock = 0;\n            this._entries = [];\n            this._onDidChange = new event_1.Emitter();\n        }\n        Object.defineProperty(LanguageFeatureRegistry.prototype, \"onDidChange\", {\n            get: function () {\n                return this._onDidChange.event;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        LanguageFeatureRegistry.prototype.register = function (selector, provider, isBuiltin) {\n            var _this = this;\n            if (isBuiltin === void 0) { isBuiltin = false; }\n            var entry = {\n                selector: selector,\n                provider: provider,\n                isBuiltin: isBuiltin,\n                _score: -1,\n                _time: this._clock++\n            };\n            this._entries.push(entry);\n            this._lastCandidate = undefined;\n            this._onDidChange.fire(this._entries.length);\n            return {\n                dispose: function () {\n                    if (entry) {\n                        var idx = _this._entries.indexOf(entry);\n                        if (idx >= 0) {\n                            _this._entries.splice(idx, 1);\n                            _this._lastCandidate = undefined;\n                            _this._onDidChange.fire(_this._entries.length);\n                            entry = undefined;\n                        }\n                    }\n                }\n            };\n        };\n        LanguageFeatureRegistry.prototype.has = function (model) {\n            return this.all(model).length > 0;\n        };\n        LanguageFeatureRegistry.prototype.all = function (model) {\n            if (!model || model.isTooLargeForHavingAMode()) {\n                return [];\n            }\n            this._updateScores(model);\n            var result = [];\n            // from registry\n            for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                if (entry._score > 0) {\n                    result.push(entry.provider);\n                }\n            }\n            return result;\n        };\n        LanguageFeatureRegistry.prototype.ordered = function (model) {\n            var result = [];\n            this._orderedForEach(model, function (entry) { return result.push(entry.provider); });\n            return result;\n        };\n        LanguageFeatureRegistry.prototype.orderedGroups = function (model) {\n            var result = [];\n            var lastBucket;\n            var lastBucketScore;\n            this._orderedForEach(model, function (entry) {\n                if (lastBucket && lastBucketScore === entry._score) {\n                    lastBucket.push(entry.provider);\n                }\n                else {\n                    lastBucketScore = entry._score;\n                    lastBucket = [entry.provider];\n                    result.push(lastBucket);\n                }\n            });\n            return result;\n        };\n        LanguageFeatureRegistry.prototype._orderedForEach = function (model, callback) {\n            if (!model || model.isTooLargeForHavingAMode()) {\n                return;\n            }\n            this._updateScores(model);\n            for (var from = 0; from < this._entries.length; from++) {\n                var entry = this._entries[from];\n                if (entry._score > 0) {\n                    callback(entry);\n                }\n            }\n        };\n        LanguageFeatureRegistry.prototype._updateScores = function (model) {\n            var candidate = {\n                uri: model.uri.toString(),\n                language: model.getModeId()\n            };\n            if (this._lastCandidate\n                && this._lastCandidate.language === candidate.language\n                && this._lastCandidate.uri === candidate.uri) {\n                // nothing has changed\n                return;\n            }\n            this._lastCandidate = candidate;\n            for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                entry._score = languageSelector_1.score(entry.selector, model.uri, model.getModeId());\n                if (entry.isBuiltin && entry._score > 0) {\n                    entry._score = .5;\n                    entry._time = -1;\n                }\n            }\n            // needs sorting\n            this._entries.sort(LanguageFeatureRegistry._compareByScoreAndTime);\n        };\n        LanguageFeatureRegistry._compareByScoreAndTime = function (a, b) {\n            if (a._score < b._score) {\n                return 1;\n            }\n            else if (a._score > b._score) {\n                return -1;\n            }\n            else if (a._time < b._time) {\n                return 1;\n            }\n            else if (a._time > b._time) {\n                return -1;\n            }\n            else {\n                return 0;\n            }\n        };\n        return LanguageFeatureRegistry;\n    }());\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = LanguageFeatureRegistry;\n});\n\ndefine(__m[18], __M([1,0,61]), function (require, exports, languageFeatureRegistry_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /**\n     * A document highlight kind.\n     */\n    (function (DocumentHighlightKind) {\n        /**\n         * A textual occurrence.\n         */\n        DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n        /**\n         * Read-access of a symbol, like reading a variable.\n         */\n        DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n        /**\n         * Write-access of a symbol, like writing to a variable.\n         */\n        DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n    })(exports.DocumentHighlightKind || (exports.DocumentHighlightKind = {}));\n    var DocumentHighlightKind = exports.DocumentHighlightKind;\n    /**\n     * A symbol kind.\n     */\n    (function (SymbolKind) {\n        SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n        SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n        SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n        SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n        SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n        SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n        SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n        SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n        SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n        SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n        SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n        SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n        SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n        SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n        SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n        SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n        SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n        SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n        SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n        SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n        SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    })(exports.SymbolKind || (exports.SymbolKind = {}));\n    var SymbolKind = exports.SymbolKind;\n    /**\n     * @internal\n     */\n    var SymbolKind;\n    (function (SymbolKind) {\n        /**\n         * @internal\n         */\n        function from(kind) {\n            switch (kind) {\n                case SymbolKind.Method:\n                    return 'method';\n                case SymbolKind.Function:\n                    return 'function';\n                case SymbolKind.Constructor:\n                    return 'constructor';\n                case SymbolKind.Variable:\n                    return 'variable';\n                case SymbolKind.Class:\n                    return 'class';\n                case SymbolKind.Interface:\n                    return 'interface';\n                case SymbolKind.Namespace:\n                    return 'namespace';\n                case SymbolKind.Package:\n                    return 'package';\n                case SymbolKind.Module:\n                    return 'module';\n                case SymbolKind.Property:\n                    return 'property';\n                case SymbolKind.Enum:\n                    return 'enum';\n                case SymbolKind.String:\n                    return 'string';\n                case SymbolKind.File:\n                    return 'file';\n                case SymbolKind.Array:\n                    return 'array';\n                case SymbolKind.Number:\n                    return 'number';\n                case SymbolKind.Boolean:\n                    return 'boolean';\n                case SymbolKind.Object:\n                    return 'object';\n                case SymbolKind.Key:\n                    return 'key';\n                case SymbolKind.Null:\n                    return 'null';\n            }\n            return 'property';\n        }\n        SymbolKind.from = from;\n        /**\n         * @internal\n         */\n        function to(type) {\n            switch (type) {\n                case 'method':\n                    return SymbolKind.Method;\n                case 'function':\n                    return SymbolKind.Function;\n                case 'constructor':\n                    return SymbolKind.Constructor;\n                case 'variable':\n                    return SymbolKind.Variable;\n                case 'class':\n                    return SymbolKind.Class;\n                case 'interface':\n                    return SymbolKind.Interface;\n                case 'namespace':\n                    return SymbolKind.Namespace;\n                case 'package':\n                    return SymbolKind.Package;\n                case 'module':\n                    return SymbolKind.Module;\n                case 'property':\n                    return SymbolKind.Property;\n                case 'enum':\n                    return SymbolKind.Enum;\n                case 'string':\n                    return SymbolKind.String;\n                case 'file':\n                    return SymbolKind.File;\n                case 'array':\n                    return SymbolKind.Array;\n                case 'number':\n                    return SymbolKind.Number;\n                case 'boolean':\n                    return SymbolKind.Boolean;\n                case 'object':\n                    return SymbolKind.Object;\n                case 'key':\n                    return SymbolKind.Key;\n                case 'null':\n                    return SymbolKind.Null;\n            }\n            return SymbolKind.Property;\n        }\n        SymbolKind.to = to;\n    })(SymbolKind = exports.SymbolKind || (exports.SymbolKind = {}));\n    /**\n     * Describes what to do with the indentation when pressing Enter.\n     */\n    (function (IndentAction) {\n        /**\n         * Insert new line and copy the previous line's indentation.\n         */\n        IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n        /**\n         * Insert new line and indent once (relative to the previous line's indentation).\n         */\n        IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n        /**\n         * Insert two new lines:\n         *  - the first one indented which will hold the cursor\n         *  - the second one at the same indentation level\n         */\n        IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n        /**\n         * Insert new line and outdent once (relative to the previous line's indentation).\n         */\n        IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n    })(exports.IndentAction || (exports.IndentAction = {}));\n    var IndentAction = exports.IndentAction;\n    // --- feature registries ------\n    /**\n     * @internal\n     */\n    exports.ReferenceProviderRegistry = new languageFeatureRegistry_1.default();\n    /**\n     * @internal\n     */\n    exports.RenameProviderRegistry = new languageFeatureRegistry_1.default();\n    /**\n     * @internal\n     */\n    exports.SuggestRegistry = new languageFeatureRegistry_1.default();\n    /**\n     * @internal\n     */\n    exports.SignatureHelpProviderRegistry = new languageFeatureRegistry_1.default();\n    /**\n     * @internal\n     */\n    exports.HoverProviderRegistry = new languageFeatureRegistry_1.default();\n    /**\n     * @internal\n     */\n    exports.DocumentSymbolProviderRegistry = new languageFeatureRegistry_1.default();\n    /**\n     * @internal\n     */\n    exports.DocumentHighlightProviderRegistry = new languageFeatureRegistry_1.default();\n    /**\n     * @internal\n     */\n    exports.DefinitionProviderRegistry = new languageFeatureRegistry_1.default();\n    /**\n     * @internal\n     */\n    exports.CodeLensProviderRegistry = new languageFeatureRegistry_1.default();\n    /**\n     * @internal\n     */\n    exports.CodeActionProviderRegistry = new languageFeatureRegistry_1.default();\n    /**\n     * @internal\n     */\n    exports.DocumentFormattingEditProviderRegistry = new languageFeatureRegistry_1.default();\n    /**\n     * @internal\n     */\n    exports.DocumentRangeFormattingEditProviderRegistry = new languageFeatureRegistry_1.default();\n    /**\n     * @internal\n     */\n    exports.OnTypeFormattingEditProviderRegistry = new languageFeatureRegistry_1.default();\n    /**\n     * @internal\n     */\n    exports.LinkProviderRegistry = new languageFeatureRegistry_1.default();\n});\n\ndefine(__m[83], __M([1,0,2,4,18,11]), function (require, exports, errors_1, strings, modes_1, supports_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var OnEnterSupport = (function () {\n        function OnEnterSupport(registry, modeId, opts) {\n            this._registry = registry;\n            opts = opts || {};\n            opts.brackets = opts.brackets || [\n                ['(', ')'],\n                ['{', '}'],\n                ['[', ']']\n            ];\n            this._modeId = modeId;\n            this._brackets = opts.brackets.map(function (bracket) {\n                return {\n                    open: bracket[0],\n                    openRegExp: OnEnterSupport._createOpenBracketRegExp(bracket[0]),\n                    close: bracket[1],\n                    closeRegExp: OnEnterSupport._createCloseBracketRegExp(bracket[1]),\n                };\n            });\n            this._regExpRules = opts.regExpRules || [];\n            this._indentationRules = opts.indentationRules;\n        }\n        OnEnterSupport.prototype.onEnter = function (model, position) {\n            var _this = this;\n            var context = model.getLineContext(position.lineNumber);\n            return supports_1.handleEvent(context, position.column - 1, function (nestedModeId, context, offset) {\n                if (_this._modeId === nestedModeId) {\n                    return _this._onEnter(model, position);\n                }\n                var onEnterSupport = _this._registry.getOnEnterSupport(nestedModeId);\n                if (onEnterSupport) {\n                    return onEnterSupport.onEnter(model, position);\n                }\n                return null;\n            });\n        };\n        OnEnterSupport.prototype._onEnter = function (model, position) {\n            var lineText = model.getLineContent(position.lineNumber);\n            var beforeEnterText = lineText.substr(0, position.column - 1);\n            var afterEnterText = lineText.substr(position.column - 1);\n            var oneLineAboveText = position.lineNumber === 1 ? '' : model.getLineContent(position.lineNumber - 1);\n            return this._actualOnEnter(oneLineAboveText, beforeEnterText, afterEnterText);\n        };\n        OnEnterSupport.prototype._actualOnEnter = function (oneLineAboveText, beforeEnterText, afterEnterText) {\n            // (1): `regExpRules`\n            for (var i = 0, len = this._regExpRules.length; i < len; i++) {\n                var rule = this._regExpRules[i];\n                if (rule.beforeText.test(beforeEnterText)) {\n                    if (rule.afterText) {\n                        if (rule.afterText.test(afterEnterText)) {\n                            return rule.action;\n                        }\n                    }\n                    else {\n                        return rule.action;\n                    }\n                }\n            }\n            // (2): Special indent-outdent\n            if (beforeEnterText.length > 0 && afterEnterText.length > 0) {\n                for (var i = 0, len = this._brackets.length; i < len; i++) {\n                    var bracket = this._brackets[i];\n                    if (bracket.openRegExp.test(beforeEnterText) && bracket.closeRegExp.test(afterEnterText)) {\n                        return OnEnterSupport._INDENT_OUTDENT;\n                    }\n                }\n            }\n            // (3): Indentation Support\n            if (this._indentationRules) {\n                if (this._indentationRules.increaseIndentPattern && this._indentationRules.increaseIndentPattern.test(beforeEnterText)) {\n                    return OnEnterSupport._INDENT;\n                }\n                if (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(beforeEnterText)) {\n                    return OnEnterSupport._INDENT;\n                }\n                if (/^\\s/.test(beforeEnterText)) {\n                    // No reason to run regular expressions if there is nothing to outdent from\n                    if (this._indentationRules.decreaseIndentPattern && this._indentationRules.decreaseIndentPattern.test(afterEnterText)) {\n                        return OnEnterSupport._OUTDENT;\n                    }\n                    if (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(oneLineAboveText)) {\n                        return OnEnterSupport._OUTDENT;\n                    }\n                }\n            }\n            // (4): Open bracket based logic\n            if (beforeEnterText.length > 0) {\n                for (var i = 0, len = this._brackets.length; i < len; i++) {\n                    var bracket = this._brackets[i];\n                    if (bracket.openRegExp.test(beforeEnterText)) {\n                        return OnEnterSupport._INDENT;\n                    }\n                }\n            }\n            return null;\n        };\n        OnEnterSupport._createOpenBracketRegExp = function (bracket) {\n            var str = strings.escapeRegExpCharacters(bracket);\n            if (!/\\B/.test(str.charAt(0))) {\n                str = '\\\\b' + str;\n            }\n            str += '\\\\s*$';\n            return OnEnterSupport._safeRegExp(str);\n        };\n        OnEnterSupport._createCloseBracketRegExp = function (bracket) {\n            var str = strings.escapeRegExpCharacters(bracket);\n            if (!/\\B/.test(str.charAt(str.length - 1))) {\n                str = str + '\\\\b';\n            }\n            str = '^\\\\s*' + str;\n            return OnEnterSupport._safeRegExp(str);\n        };\n        OnEnterSupport._safeRegExp = function (def) {\n            try {\n                return new RegExp(def);\n            }\n            catch (err) {\n                errors_1.onUnexpectedError(err);\n                return null;\n            }\n        };\n        OnEnterSupport._INDENT = { indentAction: modes_1.IndentAction.Indent };\n        OnEnterSupport._INDENT_OUTDENT = { indentAction: modes_1.IndentAction.IndentOutdent };\n        OnEnterSupport._OUTDENT = { indentAction: modes_1.IndentAction.Outdent };\n        return OnEnterSupport;\n    }());\n    exports.OnEnterSupport = OnEnterSupport;\n});\n\ndefine(__m[34], __M([1,0,18,79,77,83,23,9,2,20,4,17]), function (require, exports, modes_1, characterPair_1, electricCharacter_1, onEnter_1, richEditBrackets_1, event_1, errors_1, position_1, strings, wordHelper_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var RichEditSupport = (function () {\n        function RichEditSupport(modeId, previous, rawConf) {\n            var prev = null;\n            if (previous) {\n                prev = previous._conf;\n            }\n            this._conf = RichEditSupport._mergeConf(prev, rawConf);\n            if (this._conf.brackets) {\n                this.brackets = new richEditBrackets_1.RichEditBrackets(modeId, this._conf.brackets);\n            }\n            this._handleOnEnter(modeId, this._conf);\n            this._handleComments(modeId, this._conf);\n            this.characterPair = new characterPair_1.CharacterPairSupport(exports.LanguageConfigurationRegistry, modeId, this._conf);\n            this.electricCharacter = new electricCharacter_1.BracketElectricCharacterSupport(exports.LanguageConfigurationRegistry, modeId, this.brackets, this.characterPair.getAutoClosingPairs(), this._conf.__electricCharacterSupport);\n            this.wordDefinition = this._conf.wordPattern || wordHelper_1.DEFAULT_WORD_REGEXP;\n        }\n        RichEditSupport._mergeConf = function (prev, current) {\n            return {\n                comments: (prev ? current.comments || prev.comments : current.comments),\n                brackets: (prev ? current.brackets || prev.brackets : current.brackets),\n                wordPattern: (prev ? current.wordPattern || prev.wordPattern : current.wordPattern),\n                indentationRules: (prev ? current.indentationRules || prev.indentationRules : current.indentationRules),\n                onEnterRules: (prev ? current.onEnterRules || prev.onEnterRules : current.onEnterRules),\n                autoClosingPairs: (prev ? current.autoClosingPairs || prev.autoClosingPairs : current.autoClosingPairs),\n                surroundingPairs: (prev ? current.surroundingPairs || prev.surroundingPairs : current.surroundingPairs),\n                __electricCharacterSupport: (prev ? current.__electricCharacterSupport || prev.__electricCharacterSupport : current.__electricCharacterSupport),\n            };\n        };\n        RichEditSupport.prototype._handleOnEnter = function (modeId, conf) {\n            // on enter\n            var onEnter = {};\n            var empty = true;\n            if (conf.brackets) {\n                empty = false;\n                onEnter.brackets = conf.brackets;\n            }\n            if (conf.indentationRules) {\n                empty = false;\n                onEnter.indentationRules = conf.indentationRules;\n            }\n            if (conf.onEnterRules) {\n                empty = false;\n                onEnter.regExpRules = conf.onEnterRules;\n            }\n            if (!empty) {\n                this.onEnter = new onEnter_1.OnEnterSupport(exports.LanguageConfigurationRegistry, modeId, onEnter);\n            }\n        };\n        RichEditSupport.prototype._handleComments = function (modeId, conf) {\n            var commentRule = conf.comments;\n            // comment configuration\n            if (commentRule) {\n                this.comments = {};\n                if (commentRule.lineComment) {\n                    this.comments.lineCommentToken = commentRule.lineComment;\n                }\n                if (commentRule.blockComment) {\n                    var _a = commentRule.blockComment, blockStart = _a[0], blockEnd = _a[1];\n                    this.comments.blockCommentStartToken = blockStart;\n                    this.comments.blockCommentEndToken = blockEnd;\n                }\n            }\n        };\n        return RichEditSupport;\n    }());\n    exports.RichEditSupport = RichEditSupport;\n    var LanguageConfigurationRegistryImpl = (function () {\n        function LanguageConfigurationRegistryImpl() {\n            this._onDidChange = new event_1.Emitter();\n            this.onDidChange = this._onDidChange.event;\n            this._entries = Object.create(null);\n        }\n        LanguageConfigurationRegistryImpl.prototype.register = function (languageId, configuration) {\n            var previous = this._entries[languageId] || null;\n            this._entries[languageId] = new RichEditSupport(languageId, previous, configuration);\n            this._onDidChange.fire(void 0);\n            return {\n                dispose: function () { }\n            };\n        };\n        LanguageConfigurationRegistryImpl.prototype._getRichEditSupport = function (modeId) {\n            return this._entries[modeId];\n        };\n        LanguageConfigurationRegistryImpl.prototype.getElectricCharacterSupport = function (modeId) {\n            var value = this._getRichEditSupport(modeId);\n            if (!value) {\n                return null;\n            }\n            return value.electricCharacter || null;\n        };\n        LanguageConfigurationRegistryImpl.prototype.getComments = function (modeId) {\n            var value = this._getRichEditSupport(modeId);\n            if (!value) {\n                return null;\n            }\n            return value.comments || null;\n        };\n        LanguageConfigurationRegistryImpl.prototype.getCharacterPairSupport = function (modeId) {\n            var value = this._getRichEditSupport(modeId);\n            if (!value) {\n                return null;\n            }\n            return value.characterPair || null;\n        };\n        LanguageConfigurationRegistryImpl.prototype.getWordDefinition = function (modeId) {\n            var value = this._getRichEditSupport(modeId);\n            if (!value) {\n                return null;\n            }\n            return value.wordDefinition || null;\n        };\n        LanguageConfigurationRegistryImpl.prototype.getOnEnterSupport = function (modeId) {\n            var value = this._getRichEditSupport(modeId);\n            if (!value) {\n                return null;\n            }\n            return value.onEnter || null;\n        };\n        LanguageConfigurationRegistryImpl.prototype.getRawEnterActionAtPosition = function (model, lineNumber, column) {\n            var result;\n            var onEnterSupport = this.getOnEnterSupport(model.getMode().getId());\n            if (onEnterSupport) {\n                try {\n                    result = onEnterSupport.onEnter(model, new position_1.Position(lineNumber, column));\n                }\n                catch (e) {\n                    errors_1.onUnexpectedError(e);\n                }\n            }\n            return result;\n        };\n        LanguageConfigurationRegistryImpl.prototype.getEnterActionAtPosition = function (model, lineNumber, column) {\n            var lineText = model.getLineContent(lineNumber);\n            var indentation = strings.getLeadingWhitespace(lineText);\n            if (indentation.length > column - 1) {\n                indentation = indentation.substring(0, column - 1);\n            }\n            var enterAction = this.getRawEnterActionAtPosition(model, lineNumber, column);\n            if (!enterAction) {\n                enterAction = {\n                    indentAction: modes_1.IndentAction.None,\n                    appendText: '',\n                };\n            }\n            else {\n                if (!enterAction.appendText) {\n                    if ((enterAction.indentAction === modes_1.IndentAction.Indent) ||\n                        (enterAction.indentAction === modes_1.IndentAction.IndentOutdent)) {\n                        enterAction.appendText = '\\t';\n                    }\n                    else {\n                        enterAction.appendText = '';\n                    }\n                }\n            }\n            if (enterAction.removeText) {\n                indentation = indentation.substring(0, indentation.length - 1);\n            }\n            return {\n                enterAction: enterAction,\n                indentation: indentation\n            };\n        };\n        LanguageConfigurationRegistryImpl.prototype.getBracketsSupport = function (modeId) {\n            var value = this._getRichEditSupport(modeId);\n            if (!value) {\n                return null;\n            }\n            return value.brackets || null;\n        };\n        return LanguageConfigurationRegistryImpl;\n    }());\n    exports.LanguageConfigurationRegistryImpl = LanguageConfigurationRegistryImpl;\n    exports.LanguageConfigurationRegistry = new LanguageConfigurationRegistryImpl();\n});\n\ndefine(__m[63], __M([1,0,19,34,17]), function (require, exports, modeTransition_1, languageConfigurationRegistry_1, wordHelper_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var WordHelper = (function () {\n        function WordHelper() {\n        }\n        WordHelper._safeGetWordDefinition = function (mode) {\n            return languageConfigurationRegistry_1.LanguageConfigurationRegistry.getWordDefinition(mode.getId());\n        };\n        WordHelper.massageWordDefinitionOf = function (mode) {\n            return wordHelper_1.ensureValidWordDefinition(WordHelper._safeGetWordDefinition(mode));\n        };\n        WordHelper._getWordAtColumn = function (txt, column, modeIndex, modeTransitions) {\n            var modeStartIndex = modeTransitions[modeIndex].startIndex, modeEndIndex = (modeIndex + 1 < modeTransitions.length ? modeTransitions[modeIndex + 1].startIndex : txt.length), mode = modeTransitions[modeIndex].mode;\n            return wordHelper_1.getWordAtText(column, WordHelper.massageWordDefinitionOf(mode), txt.substring(modeStartIndex, modeEndIndex), modeStartIndex);\n        };\n        WordHelper.getWordAtPosition = function (textSource, position) {\n            if (!textSource._lineIsTokenized(position.lineNumber)) {\n                return wordHelper_1.getWordAtText(position.column, WordHelper.massageWordDefinitionOf(textSource.getMode()), textSource.getLineContent(position.lineNumber), 0);\n            }\n            var result = null;\n            var txt = textSource.getLineContent(position.lineNumber), modeTransitions = textSource._getLineModeTransitions(position.lineNumber), columnIndex = position.column - 1, modeIndex = modeTransition_1.ModeTransition.findIndexInSegmentsArray(modeTransitions, columnIndex);\n            result = WordHelper._getWordAtColumn(txt, position.column, modeIndex, modeTransitions);\n            if (!result && modeIndex > 0 && modeTransitions[modeIndex].startIndex === columnIndex) {\n                // The position is right at the beginning of `modeIndex`, so try looking at `modeIndex` - 1 too\n                result = WordHelper._getWordAtColumn(txt, position.column, modeIndex - 1, modeTransitions);\n            }\n            return result;\n        };\n        return WordHelper;\n    }());\n    exports.WordHelper = WordHelper;\n});\n\ndefine(__m[54], __M([1,0,98,33]), function (require, exports, filters_1, async_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var TextualSuggestSupport = (function () {\n        function TextualSuggestSupport(editorWorkerService, configurationService) {\n            this._editorWorkerService = editorWorkerService;\n            this._configurationService = configurationService;\n        }\n        Object.defineProperty(TextualSuggestSupport.prototype, \"triggerCharacters\", {\n            get: function () {\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TextualSuggestSupport.prototype, \"filter\", {\n            get: function () {\n                return filters_1.matchesPrefix;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        TextualSuggestSupport.prototype.provideCompletionItems = function (model, position, token) {\n            var config = this._configurationService.getConfiguration('editor');\n            if (!config || config.wordBasedSuggestions) {\n                return async_1.wireCancellationToken(token, this._editorWorkerService.textualSuggest(model.uri, position));\n            }\n        };\n        return TextualSuggestSupport;\n    }());\n    exports.TextualSuggestSupport = TextualSuggestSupport;\n    function filterSuggestions(value) {\n        if (!value) {\n            return;\n        }\n        return {\n            currentWord: value.currentWord,\n            suggestions: value.suggestions.filter(function (element) { return !!filters_1.fuzzyContiguousFilter(value.currentWord, element.label); }),\n            incomplete: value.incomplete\n        };\n    }\n    exports.filterSuggestions = filterSuggestions;\n});\n\ndefine(__m[65], __M([8,10]), function(nls, data) { return nls.create(\"vs/base/common/severity\", data); });\ndefine(__m[26], __M([1,0,65,4]), function (require, exports, nls, strings) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var Severity;\n    (function (Severity) {\n        Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n        Severity[Severity[\"Info\"] = 1] = \"Info\";\n        Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n        Severity[Severity[\"Error\"] = 3] = \"Error\";\n    })(Severity || (Severity = {}));\n    var Severity;\n    (function (Severity) {\n        var _error = 'error', _warning = 'warning', _warn = 'warn', _info = 'info';\n        var _displayStrings = Object.create(null);\n        _displayStrings[Severity.Error] = nls.localize(0, null);\n        _displayStrings[Severity.Warning] = nls.localize(1, null);\n        _displayStrings[Severity.Info] = nls.localize(2, null);\n        /**\n         * Parses 'error', 'warning', 'warn', 'info' in call casings\n         * and falls back to ignore.\n         */\n        function fromValue(value) {\n            if (!value) {\n                return Severity.Ignore;\n            }\n            if (strings.equalsIgnoreCase(_error, value)) {\n                return Severity.Error;\n            }\n            if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n                return Severity.Warning;\n            }\n            if (strings.equalsIgnoreCase(_info, value)) {\n                return Severity.Info;\n            }\n            return Severity.Ignore;\n        }\n        Severity.fromValue = fromValue;\n        function toString(value) {\n            return _displayStrings[value] || strings.empty;\n        }\n        Severity.toString = toString;\n        function compare(a, b) {\n            return b - a;\n        }\n        Severity.compare = compare;\n    })(Severity || (Severity = {}));\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = Severity;\n});\n\ndefine(__m[67], __M([8,10]), function(nls, data) { return nls.create(\"vs/editor/common/config/defaultConfig\", data); });\ndefine(__m[68], __M([1,0,67,7,17]), function (require, exports, nls, platform, wordHelper_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.DEFAULT_INDENTATION = {\n        tabSize: 4,\n        insertSpaces: true,\n        detectIndentation: true\n    };\n    exports.DEFAULT_TRIM_AUTO_WHITESPACE = true;\n    var DEFAULT_WINDOWS_FONT_FAMILY = 'Consolas, \\'Courier New\\', monospace';\n    var DEFAULT_MAC_FONT_FAMILY = 'Menlo, Monaco, \\'Courier New\\', monospace';\n    var DEFAULT_LINUX_FONT_FAMILY = '\\'Droid Sans Mono\\', \\'Courier New\\', monospace, \\'Droid Sans Fallback\\'';\n    /**\n     * Determined from empirical observations.\n     */\n    exports.GOLDEN_LINE_HEIGHT_RATIO = platform.isMacintosh ? 1.5 : 1.35;\n    var ConfigClass = (function () {\n        function ConfigClass() {\n            this.editor = {\n                experimentalScreenReader: true,\n                rulers: [],\n                wordSeparators: wordHelper_1.USUAL_WORD_SEPARATORS,\n                selectionClipboard: true,\n                ariaLabel: nls.localize(0, null),\n                lineNumbers: true,\n                selectOnLineNumbers: true,\n                lineNumbersMinChars: 5,\n                glyphMargin: false,\n                lineDecorationsWidth: 10,\n                revealHorizontalRightPadding: 30,\n                roundedSelection: true,\n                theme: 'vs',\n                readOnly: false,\n                scrollbar: {\n                    verticalScrollbarSize: 14,\n                    horizontal: 'auto',\n                    useShadows: true,\n                    verticalHasArrows: false,\n                    horizontalHasArrows: false\n                },\n                overviewRulerLanes: 2,\n                cursorBlinking: 'blink',\n                mouseWheelZoom: false,\n                cursorStyle: 'line',\n                fontLigatures: false,\n                disableTranslate3d: false,\n                hideCursorInOverviewRuler: false,\n                scrollBeyondLastLine: true,\n                automaticLayout: false,\n                wrappingColumn: 300,\n                wrappingIndent: 'same',\n                wordWrapBreakBeforeCharacters: '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋',\n                wordWrapBreakAfterCharacters: ' \\t})]?|&,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ’”〉》」』】〕）］｝｣',\n                wordWrapBreakObtrusiveCharacters: '.',\n                // Features\n                hover: true,\n                contextmenu: true,\n                mouseWheelScrollSensitivity: 1,\n                quickSuggestions: true,\n                quickSuggestionsDelay: 10,\n                parameterHints: true,\n                iconsInSuggestions: true,\n                autoClosingBrackets: true,\n                formatOnType: false,\n                suggestOnTriggerCharacters: true,\n                acceptSuggestionOnEnter: true,\n                snippetSuggestions: 'inline',\n                tabCompletion: false,\n                wordBasedSuggestions: true,\n                selectionHighlight: true,\n                codeLens: true,\n                referenceInfos: true,\n                folding: true,\n                renderWhitespace: false,\n                renderControlCharacters: false,\n                renderIndentGuides: false,\n                useTabStops: true,\n                fontFamily: (platform.isMacintosh ? DEFAULT_MAC_FONT_FAMILY : (platform.isLinux ? DEFAULT_LINUX_FONT_FAMILY : DEFAULT_WINDOWS_FONT_FAMILY)),\n                fontSize: (platform.isMacintosh ? 12 : 14),\n                lineHeight: 0\n            };\n        }\n        return ConfigClass;\n    }());\n    exports.DefaultConfig = new ConfigClass();\n});\n\ndefine(__m[69], __M([8,10]), function(nls, data) { return nls.create(\"vs/editor/common/model/textModelWithTokens\", data); });\ndefine(__m[70], __M([8,10]), function(nls, data) { return nls.create(\"vs/editor/common/modes/modesRegistry\", data); });\ndefine(__m[71], __M([8,10]), function(nls, data) { return nls.create(\"vs/editor/common/services/modeServiceImpl\", data); });\ndefine(__m[72], __M([8,10]), function(nls, data) { return nls.create(\"vs/platform/extensions/common/abstractExtensionService\", data); });\ndefine(__m[73], __M([8,10]), function(nls, data) { return nls.create(\"vs/platform/extensions/common/extensionsRegistry\", data); });\n\n\n\n\n\ndefine(__m[74], __M([1,0,14]), function (require, exports, eventEmitter_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    // --- implementation ------------------------------------------\n    var EventService = (function (_super) {\n        __extends(EventService, _super);\n        function EventService() {\n            _super.call(this);\n        }\n        return EventService;\n    }(eventEmitter_1.EventEmitter));\n    exports.EventService = EventService;\n});\n\n\n\n\n\n\ndefine(__m[25], __M([1,0,2]), function (require, exports, errors_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var AbstractDescriptor = (function () {\n        function AbstractDescriptor(_staticArguments) {\n            this._staticArguments = _staticArguments;\n            // empty\n        }\n        AbstractDescriptor.prototype.appendStaticArguments = function (more) {\n            this._staticArguments.push.apply(this._staticArguments, more);\n        };\n        AbstractDescriptor.prototype.staticArguments = function (nth) {\n            if (isNaN(nth)) {\n                return this._staticArguments.slice(0);\n            }\n            else {\n                return this._staticArguments[nth];\n            }\n        };\n        AbstractDescriptor.prototype._validate = function (type) {\n            if (!type) {\n                throw errors_1.illegalArgument('can not be falsy');\n            }\n        };\n        return AbstractDescriptor;\n    }());\n    exports.AbstractDescriptor = AbstractDescriptor;\n    var SyncDescriptor = (function (_super) {\n        __extends(SyncDescriptor, _super);\n        function SyncDescriptor(_ctor) {\n            var staticArguments = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                staticArguments[_i - 1] = arguments[_i];\n            }\n            _super.call(this, staticArguments);\n            this._ctor = _ctor;\n        }\n        Object.defineProperty(SyncDescriptor.prototype, \"ctor\", {\n            get: function () {\n                return this._ctor;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        SyncDescriptor.prototype.bind = function () {\n            var moreStaticArguments = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                moreStaticArguments[_i - 0] = arguments[_i];\n            }\n            var allArgs = [];\n            allArgs = allArgs.concat(this.staticArguments());\n            allArgs = allArgs.concat(moreStaticArguments);\n            return new (SyncDescriptor.bind.apply(SyncDescriptor, [void 0].concat([this._ctor], allArgs)))();\n        };\n        return SyncDescriptor;\n    }(AbstractDescriptor));\n    exports.SyncDescriptor = SyncDescriptor;\n    exports.createSyncDescriptor = function (ctor) {\n        var staticArguments = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            staticArguments[_i - 1] = arguments[_i];\n        }\n        return new (SyncDescriptor.bind.apply(SyncDescriptor, [void 0].concat([ctor], staticArguments)))();\n    };\n    var AsyncDescriptor = (function (_super) {\n        __extends(AsyncDescriptor, _super);\n        function AsyncDescriptor(_moduleName, _ctorName) {\n            var staticArguments = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                staticArguments[_i - 2] = arguments[_i];\n            }\n            _super.call(this, staticArguments);\n            this._moduleName = _moduleName;\n            this._ctorName = _ctorName;\n            if (typeof _moduleName !== 'string') {\n                throw new Error('Invalid AsyncDescriptor arguments, expected `moduleName` to be a string!');\n            }\n        }\n        AsyncDescriptor.create = function (moduleName, ctorName) {\n            return new AsyncDescriptor(moduleName, ctorName);\n        };\n        Object.defineProperty(AsyncDescriptor.prototype, \"moduleName\", {\n            get: function () {\n                return this._moduleName;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AsyncDescriptor.prototype, \"ctorName\", {\n            get: function () {\n                return this._ctorName;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        AsyncDescriptor.prototype.bind = function () {\n            var moreStaticArguments = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                moreStaticArguments[_i - 0] = arguments[_i];\n            }\n            var allArgs = [];\n            allArgs = allArgs.concat(this.staticArguments());\n            allArgs = allArgs.concat(moreStaticArguments);\n            return new (AsyncDescriptor.bind.apply(AsyncDescriptor, [void 0].concat([this.moduleName, this.ctorName], allArgs)))();\n        };\n        return AsyncDescriptor;\n    }(AbstractDescriptor));\n    exports.AsyncDescriptor = AsyncDescriptor;\n    var _createAsyncDescriptor = function (moduleName, ctorName) {\n        var staticArguments = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            staticArguments[_i - 2] = arguments[_i];\n        }\n        return new (AsyncDescriptor.bind.apply(AsyncDescriptor, [void 0].concat([moduleName, ctorName], staticArguments)))();\n    };\n    exports.createAsyncDescriptor0 = _createAsyncDescriptor;\n    exports.createAsyncDescriptor1 = _createAsyncDescriptor;\n    exports.createAsyncDescriptor2 = _createAsyncDescriptor;\n    exports.createAsyncDescriptor3 = _createAsyncDescriptor;\n    exports.createAsyncDescriptor4 = _createAsyncDescriptor;\n    exports.createAsyncDescriptor5 = _createAsyncDescriptor;\n    exports.createAsyncDescriptor6 = _createAsyncDescriptor;\n    exports.createAsyncDescriptor7 = _createAsyncDescriptor;\n});\n\ndefine(__m[3], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    // ------ internal util\n    var _util;\n    (function (_util) {\n        _util.DI_TARGET = '$di$target';\n        _util.DI_DEPENDENCIES = '$di$dependencies';\n        function getServiceDependencies(ctor) {\n            return ctor[_util.DI_DEPENDENCIES] || [];\n        }\n        _util.getServiceDependencies = getServiceDependencies;\n    })(_util = exports._util || (exports._util = {}));\n    exports.IInstantiationService = createDecorator('instantiationService');\n    function storeServiceDependency(id, target, index, optional) {\n        if (target[_util.DI_TARGET] === target) {\n            target[_util.DI_DEPENDENCIES].push({ id: id, index: index, optional: optional });\n        }\n        else {\n            target[_util.DI_DEPENDENCIES] = [{ id: id, index: index, optional: optional }];\n            target[_util.DI_TARGET] = target;\n        }\n    }\n    /**\n     * A *only* valid way to create a {{ServiceIdentifier}}.\n     */\n    function createDecorator(serviceId) {\n        var id = function (target, key, index) {\n            if (arguments.length !== 3) {\n                throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n            }\n            storeServiceDependency(id, target, index, false);\n        };\n        id.toString = function () { return serviceId; };\n        return id;\n    }\n    exports.createDecorator = createDecorator;\n    /**\n     * Mark a service dependency as optional.\n     */\n    function optional(serviceIdentifier) {\n        return function (target, key, index) {\n            if (arguments.length !== 3) {\n                throw new Error('@optional-decorator can only be used to decorate a parameter');\n            }\n            storeServiceDependency(serviceIdentifier, target, index, true);\n        };\n    }\n    exports.optional = optional;\n});\n\ndefine(__m[40], __M([1,0,3]), function (require, exports, instantiation_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.ICompatWorkerService = instantiation_1.createDecorator('compatWorkerService');\n    function findMember(proto, target) {\n        for (var i in proto) {\n            if (proto[i] === target) {\n                return i;\n            }\n        }\n        throw new Error('Member not found in prototype');\n    }\n    function CompatWorkerAttr(type, target) {\n        var methodName = findMember(type.prototype, target);\n        type.prototype[methodName] = function () {\n            var param = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                param[_i - 0] = arguments[_i];\n            }\n            var obj = this;\n            return obj.compatWorkerService.CompatWorker(obj, methodName, target, param);\n        };\n    }\n    exports.CompatWorkerAttr = CompatWorkerAttr;\n});\n\ndefine(__m[78], __M([1,0,3]), function (require, exports, instantiation_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.ID_EDITOR_WORKER_SERVICE = 'editorWorkerService';\n    exports.IEditorWorkerService = instantiation_1.createDecorator(exports.ID_EDITOR_WORKER_SERVICE);\n});\n\ndefine(__m[28], __M([1,0,3]), function (require, exports, instantiation_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.IModeService = instantiation_1.createDecorator('modeService');\n});\n\ndefine(__m[80], __M([1,0,3]), function (require, exports, instantiation_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.IModelService = instantiation_1.createDecorator('modelService');\n});\n\ndefine(__m[22], __M([1,0,3]), function (require, exports, instantiation_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    // Resource Service\n    exports.ResourceEvents = {\n        ADDED: 'resource.added',\n        REMOVED: 'resource.removed',\n        CHANGED: 'resource.changed'\n    };\n    exports.IResourceService = instantiation_1.createDecorator('resourceService');\n});\n\n\n\n\n\n\ndefine(__m[82], __M([1,0,14,12,22]), function (require, exports, eventEmitter_1, lifecycle_1, resourceService_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var ResourceService = (function (_super) {\n        __extends(ResourceService, _super);\n        function ResourceService() {\n            _super.call(this);\n            this.data = {};\n            this.unbinds = {};\n        }\n        ResourceService.prototype.addListener2_ = function (eventType, listener) {\n            return _super.prototype.addListener2.call(this, eventType, listener);\n        };\n        ResourceService.prototype._anonymousModelId = function (input) {\n            var r = '';\n            for (var i = 0; i < input.length; i++) {\n                var ch = input[i];\n                if (ch >= '0' && ch <= '9') {\n                    r += '0';\n                    continue;\n                }\n                if (ch >= 'a' && ch <= 'z') {\n                    r += 'a';\n                    continue;\n                }\n                if (ch >= 'A' && ch <= 'Z') {\n                    r += 'A';\n                    continue;\n                }\n                r += ch;\n            }\n            return r;\n        };\n        ResourceService.prototype.insert = function (url, element) {\n            var _this = this;\n            // console.log('INSERT: ' + url.toString());\n            if (this.contains(url)) {\n                // There already exists a model with this id => this is a programmer error\n                throw new Error('ResourceService: Cannot add model ' + this._anonymousModelId(url.toString()) + ' because it already exists!');\n            }\n            // add resource\n            var key = url.toString();\n            this.data[key] = element;\n            this.unbinds[key] = [];\n            this.unbinds[key].push(element.addBulkListener2(function (value) {\n                _this.emit(resourceService_1.ResourceEvents.CHANGED, { url: url, originalEvents: value });\n            }));\n            // event\n            this.emit(resourceService_1.ResourceEvents.ADDED, { url: url, addedElement: element });\n        };\n        ResourceService.prototype.get = function (url) {\n            if (!this.data[url.toString()]) {\n                return null;\n            }\n            return this.data[url.toString()];\n        };\n        ResourceService.prototype.all = function () {\n            var _this = this;\n            return Object.keys(this.data).map(function (key) {\n                return _this.data[key];\n            });\n        };\n        ResourceService.prototype.contains = function (url) {\n            return !!this.data[url.toString()];\n        };\n        ResourceService.prototype.remove = function (url) {\n            // console.log('REMOVE: ' + url.toString());\n            if (!this.contains(url)) {\n                return;\n            }\n            var key = url.toString(), element = this.data[key];\n            // stop listen\n            this.unbinds[key] = lifecycle_1.dispose(this.unbinds[key]);\n            // removal\n            delete this.unbinds[key];\n            delete this.data[key];\n            // event\n            this.emit(resourceService_1.ResourceEvents.REMOVED, { url: url, removedElement: element });\n        };\n        return ResourceService;\n    }(eventEmitter_1.EventEmitter));\n    exports.ResourceService = ResourceService;\n});\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[53], __M([1,0,3]), function (require, exports, instantiation_1) {\n    \"use strict\";\n    exports.IConfigurationService = instantiation_1.createDecorator('configurationService');\n    function getConfigurationValue(config, settingPath, defaultValue) {\n        function accessSetting(config, path) {\n            var current = config;\n            for (var i = 0; i < path.length; i++) {\n                current = current[path[i]];\n                if (!current) {\n                    return undefined;\n                }\n            }\n            return current;\n        }\n        var path = settingPath.split('.');\n        var result = accessSetting(config, path);\n        return typeof result === 'undefined'\n            ? defaultValue\n            : result;\n    }\n    exports.getConfigurationValue = getConfigurationValue;\n});\n\n\n\n\n\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine(__m[47], __M([1,0,14,5,25,3,53,18,54,78,17]), function (require, exports, eventEmitter_1, winjs_base_1, descriptors_1, instantiation_1, configuration_1, modes, suggestSupport_1, editorWorkerService_1, wordHelper) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    function createWordRegExp(allowInWords) {\n        if (allowInWords === void 0) { allowInWords = ''; }\n        return wordHelper.createWordRegExp(allowInWords);\n    }\n    exports.createWordRegExp = createWordRegExp;\n    var ModeWorkerManager = (function () {\n        function ModeWorkerManager(descriptor, workerModuleId, workerClassName, superWorkerModuleId, instantiationService) {\n            this._descriptor = descriptor;\n            this._workerDescriptor = descriptors_1.createAsyncDescriptor1(workerModuleId, workerClassName);\n            this._superWorkerModuleId = superWorkerModuleId;\n            this._instantiationService = instantiationService;\n            this._workerPiecePromise = null;\n        }\n        ModeWorkerManager.prototype.worker = function (runner) {\n            return this._getOrCreateWorker().then(runner);\n        };\n        ModeWorkerManager.prototype._getOrCreateWorker = function () {\n            var _this = this;\n            if (!this._workerPiecePromise) {\n                // TODO@Alex: workaround for missing `bundles` config\n                // First, load the code of the worker super class\n                var superWorkerCodePromise = (this._superWorkerModuleId ? ModeWorkerManager._loadModule(this._superWorkerModuleId) : winjs_base_1.TPromise.as(null));\n                this._workerPiecePromise = superWorkerCodePromise.then(function () {\n                    // Second, load the code of the worker (without instantiating it)\n                    return ModeWorkerManager._loadModule(_this._workerDescriptor.moduleName);\n                }).then(function () {\n                    // Finally, create the mode worker instance\n                    return _this._instantiationService.createInstance(_this._workerDescriptor, _this._descriptor.id);\n                });\n            }\n            return this._workerPiecePromise;\n        };\n        ModeWorkerManager._loadModule = function (moduleName) {\n            return new winjs_base_1.TPromise(function (c, e, p) {\n                // Use the global require to be sure to get the global config\n                self.require([moduleName], c, e);\n            }, function () {\n                // Cannot cancel loading code\n            });\n        };\n        return ModeWorkerManager;\n    }());\n    exports.ModeWorkerManager = ModeWorkerManager;\n    var AbstractMode = (function () {\n        function AbstractMode(modeId) {\n            this._modeId = modeId;\n            this._eventEmitter = new eventEmitter_1.EventEmitter();\n            this._simplifiedMode = null;\n        }\n        AbstractMode.prototype.getId = function () {\n            return this._modeId;\n        };\n        AbstractMode.prototype.toSimplifiedMode = function () {\n            if (!this._simplifiedMode) {\n                this._simplifiedMode = new SimplifiedMode(this);\n            }\n            return this._simplifiedMode;\n        };\n        AbstractMode.prototype.addSupportChangedListener = function (callback) {\n            return this._eventEmitter.addListener2('modeSupportChanged', callback);\n        };\n        AbstractMode.prototype.setTokenizationSupport = function (callback) {\n            var _this = this;\n            var supportImpl = callback(this);\n            this['tokenizationSupport'] = supportImpl;\n            this._eventEmitter.emit('modeSupportChanged', _createModeSupportChangedEvent());\n            return {\n                dispose: function () {\n                    if (_this['tokenizationSupport'] === supportImpl) {\n                        delete _this['tokenizationSupport'];\n                        _this._eventEmitter.emit('modeSupportChanged', _createModeSupportChangedEvent());\n                    }\n                }\n            };\n        };\n        return AbstractMode;\n    }());\n    exports.AbstractMode = AbstractMode;\n    var CompatMode = (function (_super) {\n        __extends(CompatMode, _super);\n        function CompatMode(modeId, compatWorkerService) {\n            _super.call(this, modeId);\n            this.compatWorkerService = compatWorkerService;\n            if (this.compatWorkerService) {\n                this.compatWorkerService.registerCompatMode(this);\n            }\n        }\n        return CompatMode;\n    }(AbstractMode));\n    exports.CompatMode = CompatMode;\n    var SimplifiedMode = (function () {\n        function SimplifiedMode(sourceMode) {\n            var _this = this;\n            this._sourceMode = sourceMode;\n            this._eventEmitter = new eventEmitter_1.EventEmitter();\n            this._id = 'vs.editor.modes.simplifiedMode:' + sourceMode.getId();\n            this._assignSupports();\n            if (this._sourceMode.addSupportChangedListener) {\n                this._sourceMode.addSupportChangedListener(function (e) {\n                    _this._assignSupports();\n                    _this._eventEmitter.emit('modeSupportChanged', e);\n                });\n            }\n        }\n        SimplifiedMode.prototype.getId = function () {\n            return this._id;\n        };\n        SimplifiedMode.prototype.toSimplifiedMode = function () {\n            return this;\n        };\n        SimplifiedMode.prototype._assignSupports = function () {\n            this.tokenizationSupport = this._sourceMode.tokenizationSupport;\n        };\n        return SimplifiedMode;\n    }());\n    exports.isDigit = (function () {\n        var _0 = '0'.charCodeAt(0), _1 = '1'.charCodeAt(0), _2 = '2'.charCodeAt(0), _3 = '3'.charCodeAt(0), _4 = '4'.charCodeAt(0), _5 = '5'.charCodeAt(0), _6 = '6'.charCodeAt(0), _7 = '7'.charCodeAt(0), _8 = '8'.charCodeAt(0), _9 = '9'.charCodeAt(0), _a = 'a'.charCodeAt(0), _b = 'b'.charCodeAt(0), _c = 'c'.charCodeAt(0), _d = 'd'.charCodeAt(0), _e = 'e'.charCodeAt(0), _f = 'f'.charCodeAt(0), _A = 'A'.charCodeAt(0), _B = 'B'.charCodeAt(0), _C = 'C'.charCodeAt(0), _D = 'D'.charCodeAt(0), _E = 'E'.charCodeAt(0), _F = 'F'.charCodeAt(0);\n        return function isDigit(character, base) {\n            var c = character.charCodeAt(0);\n            switch (base) {\n                case 1:\n                    return c === _0;\n                case 2:\n                    return c >= _0 && c <= _1;\n                case 3:\n                    return c >= _0 && c <= _2;\n                case 4:\n                    return c >= _0 && c <= _3;\n                case 5:\n                    return c >= _0 && c <= _4;\n                case 6:\n                    return c >= _0 && c <= _5;\n                case 7:\n                    return c >= _0 && c <= _6;\n                case 8:\n                    return c >= _0 && c <= _7;\n                case 9:\n                    return c >= _0 && c <= _8;\n                case 10:\n                    return c >= _0 && c <= _9;\n                case 11:\n                    return (c >= _0 && c <= _9) || (c === _a) || (c === _A);\n                case 12:\n                    return (c >= _0 && c <= _9) || (c >= _a && c <= _b) || (c >= _A && c <= _B);\n                case 13:\n                    return (c >= _0 && c <= _9) || (c >= _a && c <= _c) || (c >= _A && c <= _C);\n                case 14:\n                    return (c >= _0 && c <= _9) || (c >= _a && c <= _d) || (c >= _A && c <= _D);\n                case 15:\n                    return (c >= _0 && c <= _9) || (c >= _a && c <= _e) || (c >= _A && c <= _E);\n                default:\n                    return (c >= _0 && c <= _9) || (c >= _a && c <= _f) || (c >= _A && c <= _F);\n            }\n        };\n    })();\n    var FrankensteinMode = (function (_super) {\n        __extends(FrankensteinMode, _super);\n        function FrankensteinMode(descriptor, configurationService, editorWorkerService) {\n            _super.call(this, descriptor.id);\n            if (editorWorkerService) {\n                modes.SuggestRegistry.register(this.getId(), new suggestSupport_1.TextualSuggestSupport(editorWorkerService, configurationService), true);\n            }\n        }\n        FrankensteinMode = __decorate([\n            __param(1, configuration_1.IConfigurationService),\n            __param(2, instantiation_1.optional(editorWorkerService_1.IEditorWorkerService))\n        ], FrankensteinMode);\n        return FrankensteinMode;\n    }(AbstractMode));\n    exports.FrankensteinMode = FrankensteinMode;\n    function _createModeSupportChangedEvent() {\n        return {\n            tokenizationSupport: true\n        };\n    }\n});\n\n\n\n\n\n\ndefine(__m[85], __M([1,0,3]), function (require, exports, instantiation_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    (function (ContextKeyExprType) {\n        ContextKeyExprType[ContextKeyExprType[\"Defined\"] = 1] = \"Defined\";\n        ContextKeyExprType[ContextKeyExprType[\"Not\"] = 2] = \"Not\";\n        ContextKeyExprType[ContextKeyExprType[\"Equals\"] = 3] = \"Equals\";\n        ContextKeyExprType[ContextKeyExprType[\"NotEquals\"] = 4] = \"NotEquals\";\n        ContextKeyExprType[ContextKeyExprType[\"And\"] = 5] = \"And\";\n    })(exports.ContextKeyExprType || (exports.ContextKeyExprType = {}));\n    var ContextKeyExprType = exports.ContextKeyExprType;\n    var ContextKeyExpr = (function () {\n        function ContextKeyExpr() {\n        }\n        ContextKeyExpr.has = function (key) {\n            return new ContextKeyDefinedExpr(key);\n        };\n        ContextKeyExpr.equals = function (key, value) {\n            return new ContextKeyEqualsExpr(key, value);\n        };\n        ContextKeyExpr.notEquals = function (key, value) {\n            return new ContextKeyNotEqualsExpr(key, value);\n        };\n        ContextKeyExpr.not = function (key) {\n            return new ContextKeyNotExpr(key);\n        };\n        ContextKeyExpr.and = function () {\n            var expr = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                expr[_i - 0] = arguments[_i];\n            }\n            return new ContextKeyAndExpr(expr);\n        };\n        ContextKeyExpr.deserialize = function (serialized) {\n            var _this = this;\n            if (!serialized) {\n                return null;\n            }\n            var pieces = serialized.split('&&');\n            var result = new ContextKeyAndExpr(pieces.map(function (p) { return _this._deserializeOne(p); }));\n            return result.normalize();\n        };\n        ContextKeyExpr._deserializeOne = function (serializedOne) {\n            serializedOne = serializedOne.trim();\n            if (serializedOne.indexOf('!=') >= 0) {\n                var pieces = serializedOne.split('!=');\n                return new ContextKeyNotEqualsExpr(pieces[0].trim(), this._deserializeValue(pieces[1]));\n            }\n            if (serializedOne.indexOf('==') >= 0) {\n                var pieces = serializedOne.split('==');\n                return new ContextKeyEqualsExpr(pieces[0].trim(), this._deserializeValue(pieces[1]));\n            }\n            if (/^\\!\\s*/.test(serializedOne)) {\n                return new ContextKeyNotExpr(serializedOne.substr(1).trim());\n            }\n            return new ContextKeyDefinedExpr(serializedOne);\n        };\n        ContextKeyExpr._deserializeValue = function (serializedValue) {\n            serializedValue = serializedValue.trim();\n            if (serializedValue === 'true') {\n                return true;\n            }\n            if (serializedValue === 'false') {\n                return false;\n            }\n            var m = /^'([^']*)'$/.exec(serializedValue);\n            if (m) {\n                return m[1].trim();\n            }\n            return serializedValue;\n        };\n        return ContextKeyExpr;\n    }());\n    exports.ContextKeyExpr = ContextKeyExpr;\n    function cmp(a, b) {\n        var aType = a.getType();\n        var bType = b.getType();\n        if (aType !== bType) {\n            return aType - bType;\n        }\n        switch (aType) {\n            case ContextKeyExprType.Defined:\n                return a.cmp(b);\n            case ContextKeyExprType.Not:\n                return a.cmp(b);\n            case ContextKeyExprType.Equals:\n                return a.cmp(b);\n            case ContextKeyExprType.NotEquals:\n                return a.cmp(b);\n            default:\n                throw new Error('Unknown ContextKeyExpr!');\n        }\n    }\n    var ContextKeyDefinedExpr = (function () {\n        function ContextKeyDefinedExpr(key) {\n            this.key = key;\n        }\n        ContextKeyDefinedExpr.prototype.getType = function () {\n            return ContextKeyExprType.Defined;\n        };\n        ContextKeyDefinedExpr.prototype.cmp = function (other) {\n            if (this.key < other.key) {\n                return -1;\n            }\n            if (this.key > other.key) {\n                return 1;\n            }\n            return 0;\n        };\n        ContextKeyDefinedExpr.prototype.equals = function (other) {\n            if (other instanceof ContextKeyDefinedExpr) {\n                return (this.key === other.key);\n            }\n            return false;\n        };\n        ContextKeyDefinedExpr.prototype.evaluate = function (context) {\n            return (!!context[this.key]);\n        };\n        ContextKeyDefinedExpr.prototype.normalize = function () {\n            return this;\n        };\n        ContextKeyDefinedExpr.prototype.serialize = function () {\n            return this.key;\n        };\n        ContextKeyDefinedExpr.prototype.keys = function () {\n            return [this.key];\n        };\n        return ContextKeyDefinedExpr;\n    }());\n    exports.ContextKeyDefinedExpr = ContextKeyDefinedExpr;\n    var ContextKeyEqualsExpr = (function () {\n        function ContextKeyEqualsExpr(key, value) {\n            this.key = key;\n            this.value = value;\n        }\n        ContextKeyEqualsExpr.prototype.getType = function () {\n            return ContextKeyExprType.Equals;\n        };\n        ContextKeyEqualsExpr.prototype.cmp = function (other) {\n            if (this.key < other.key) {\n                return -1;\n            }\n            if (this.key > other.key) {\n                return 1;\n            }\n            if (this.value < other.value) {\n                return -1;\n            }\n            if (this.value > other.value) {\n                return 1;\n            }\n            return 0;\n        };\n        ContextKeyEqualsExpr.prototype.equals = function (other) {\n            if (other instanceof ContextKeyEqualsExpr) {\n                return (this.key === other.key && this.value === other.value);\n            }\n            return false;\n        };\n        ContextKeyEqualsExpr.prototype.evaluate = function (context) {\n            /* tslint:disable:triple-equals */\n            // Intentional ==\n            return (context[this.key] == this.value);\n            /* tslint:enable:triple-equals */\n        };\n        ContextKeyEqualsExpr.prototype.normalize = function () {\n            if (typeof this.value === 'boolean') {\n                if (this.value) {\n                    return new ContextKeyDefinedExpr(this.key);\n                }\n                return new ContextKeyNotExpr(this.key);\n            }\n            return this;\n        };\n        ContextKeyEqualsExpr.prototype.serialize = function () {\n            if (typeof this.value === 'boolean') {\n                return this.normalize().serialize();\n            }\n            return this.key + ' == \\'' + this.value + '\\'';\n        };\n        ContextKeyEqualsExpr.prototype.keys = function () {\n            return [this.key];\n        };\n        return ContextKeyEqualsExpr;\n    }());\n    exports.ContextKeyEqualsExpr = ContextKeyEqualsExpr;\n    var ContextKeyNotEqualsExpr = (function () {\n        function ContextKeyNotEqualsExpr(key, value) {\n            this.key = key;\n            this.value = value;\n        }\n        ContextKeyNotEqualsExpr.prototype.getType = function () {\n            return ContextKeyExprType.NotEquals;\n        };\n        ContextKeyNotEqualsExpr.prototype.cmp = function (other) {\n            if (this.key < other.key) {\n                return -1;\n            }\n            if (this.key > other.key) {\n                return 1;\n            }\n            if (this.value < other.value) {\n                return -1;\n            }\n            if (this.value > other.value) {\n                return 1;\n            }\n            return 0;\n        };\n        ContextKeyNotEqualsExpr.prototype.equals = function (other) {\n            if (other instanceof ContextKeyNotEqualsExpr) {\n                return (this.key === other.key && this.value === other.value);\n            }\n            return false;\n        };\n        ContextKeyNotEqualsExpr.prototype.evaluate = function (context) {\n            /* tslint:disable:triple-equals */\n            // Intentional !=\n            return (context[this.key] != this.value);\n            /* tslint:enable:triple-equals */\n        };\n        ContextKeyNotEqualsExpr.prototype.normalize = function () {\n            if (typeof this.value === 'boolean') {\n                if (this.value) {\n                    return new ContextKeyNotExpr(this.key);\n                }\n                return new ContextKeyDefinedExpr(this.key);\n            }\n            return this;\n        };\n        ContextKeyNotEqualsExpr.prototype.serialize = function () {\n            if (typeof this.value === 'boolean') {\n                return this.normalize().serialize();\n            }\n            return this.key + ' != \\'' + this.value + '\\'';\n        };\n        ContextKeyNotEqualsExpr.prototype.keys = function () {\n            return [this.key];\n        };\n        return ContextKeyNotEqualsExpr;\n    }());\n    exports.ContextKeyNotEqualsExpr = ContextKeyNotEqualsExpr;\n    var ContextKeyNotExpr = (function () {\n        function ContextKeyNotExpr(key) {\n            this.key = key;\n        }\n        ContextKeyNotExpr.prototype.getType = function () {\n            return ContextKeyExprType.Not;\n        };\n        ContextKeyNotExpr.prototype.cmp = function (other) {\n            if (this.key < other.key) {\n                return -1;\n            }\n            if (this.key > other.key) {\n                return 1;\n            }\n            return 0;\n        };\n        ContextKeyNotExpr.prototype.equals = function (other) {\n            if (other instanceof ContextKeyNotExpr) {\n                return (this.key === other.key);\n            }\n            return false;\n        };\n        ContextKeyNotExpr.prototype.evaluate = function (context) {\n            return (!context[this.key]);\n        };\n        ContextKeyNotExpr.prototype.normalize = function () {\n            return this;\n        };\n        ContextKeyNotExpr.prototype.serialize = function () {\n            return '!' + this.key;\n        };\n        ContextKeyNotExpr.prototype.keys = function () {\n            return [this.key];\n        };\n        return ContextKeyNotExpr;\n    }());\n    exports.ContextKeyNotExpr = ContextKeyNotExpr;\n    var ContextKeyAndExpr = (function () {\n        function ContextKeyAndExpr(expr) {\n            this.expr = ContextKeyAndExpr._normalizeArr(expr);\n        }\n        ContextKeyAndExpr.prototype.getType = function () {\n            return ContextKeyExprType.And;\n        };\n        ContextKeyAndExpr.prototype.equals = function (other) {\n            if (other instanceof ContextKeyAndExpr) {\n                if (this.expr.length !== other.expr.length) {\n                    return false;\n                }\n                for (var i = 0, len = this.expr.length; i < len; i++) {\n                    if (!this.expr[i].equals(other.expr[i])) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        };\n        ContextKeyAndExpr.prototype.evaluate = function (context) {\n            for (var i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].evaluate(context)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        ContextKeyAndExpr._normalizeArr = function (arr) {\n            var expr = [];\n            if (arr) {\n                for (var i = 0, len = arr.length; i < len; i++) {\n                    var e = arr[i];\n                    if (!e) {\n                        continue;\n                    }\n                    e = e.normalize();\n                    if (!e) {\n                        continue;\n                    }\n                    if (e instanceof ContextKeyAndExpr) {\n                        expr = expr.concat(e.expr);\n                        continue;\n                    }\n                    expr.push(e);\n                }\n                expr.sort(cmp);\n            }\n            return expr;\n        };\n        ContextKeyAndExpr.prototype.normalize = function () {\n            if (this.expr.length === 0) {\n                return null;\n            }\n            if (this.expr.length === 1) {\n                return this.expr[0];\n            }\n            return this;\n        };\n        ContextKeyAndExpr.prototype.serialize = function () {\n            if (this.expr.length === 0) {\n                return '';\n            }\n            if (this.expr.length === 1) {\n                return this.normalize().serialize();\n            }\n            return this.expr.map(function (e) { return e.serialize(); }).join(' && ');\n        };\n        ContextKeyAndExpr.prototype.keys = function () {\n            var result = [];\n            for (var _i = 0, _a = this.expr; _i < _a.length; _i++) {\n                var expr = _a[_i];\n                result.push.apply(result, expr.keys());\n            }\n            return result;\n        };\n        return ContextKeyAndExpr;\n    }());\n    exports.ContextKeyAndExpr = ContextKeyAndExpr;\n    var RawContextKey = (function (_super) {\n        __extends(RawContextKey, _super);\n        function RawContextKey(key, defaultValue) {\n            _super.call(this, key);\n            this._defaultValue = defaultValue;\n        }\n        RawContextKey.prototype.bindTo = function (target) {\n            return target.createKey(this.key, this._defaultValue);\n        };\n        RawContextKey.prototype.getValue = function (target) {\n            return target.getContextKeyValue(this.key);\n        };\n        RawContextKey.prototype.toNegated = function () {\n            return ContextKeyExpr.not(this.key);\n        };\n        RawContextKey.prototype.isEqualTo = function (value) {\n            return ContextKeyExpr.equals(this.key, value);\n        };\n        return RawContextKey;\n    }(ContextKeyDefinedExpr));\n    exports.RawContextKey = RawContextKey;\n    exports.IContextKeyService = instantiation_1.createDecorator('contextKeyService');\n    exports.SET_CONTEXT_COMMAND_ID = 'setContext';\n});\n\n\n\n\n\n\ndefine(__m[16], __M([1,0,6,85]), function (require, exports, types, contextkey_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /**\n     * Describes how to indent wrapped lines.\n     */\n    (function (WrappingIndent) {\n        /**\n         * No indentation => wrapped lines begin at column 1.\n         */\n        WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n        /**\n         * Same => wrapped lines get the same indentation as the parent.\n         */\n        WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n        /**\n         * Indent => wrapped lines get +1 indentation as the parent.\n         */\n        WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    })(exports.WrappingIndent || (exports.WrappingIndent = {}));\n    var WrappingIndent = exports.WrappingIndent;\n    var InternalEditorScrollbarOptions = (function () {\n        /**\n         * @internal\n         */\n        function InternalEditorScrollbarOptions(source) {\n            this.arrowSize = source.arrowSize | 0;\n            this.vertical = source.vertical | 0;\n            this.horizontal = source.horizontal | 0;\n            this.useShadows = Boolean(source.useShadows);\n            this.verticalHasArrows = Boolean(source.verticalHasArrows);\n            this.horizontalHasArrows = Boolean(source.horizontalHasArrows);\n            this.handleMouseWheel = Boolean(source.handleMouseWheel);\n            this.horizontalScrollbarSize = source.horizontalScrollbarSize | 0;\n            this.horizontalSliderSize = source.horizontalSliderSize | 0;\n            this.verticalScrollbarSize = source.verticalScrollbarSize | 0;\n            this.verticalSliderSize = source.verticalSliderSize | 0;\n            this.mouseWheelScrollSensitivity = Number(source.mouseWheelScrollSensitivity);\n        }\n        /**\n         * @internal\n         */\n        InternalEditorScrollbarOptions.prototype.equals = function (other) {\n            return (this.arrowSize === other.arrowSize\n                && this.vertical === other.vertical\n                && this.horizontal === other.horizontal\n                && this.useShadows === other.useShadows\n                && this.verticalHasArrows === other.verticalHasArrows\n                && this.horizontalHasArrows === other.horizontalHasArrows\n                && this.handleMouseWheel === other.handleMouseWheel\n                && this.horizontalScrollbarSize === other.horizontalScrollbarSize\n                && this.horizontalSliderSize === other.horizontalSliderSize\n                && this.verticalScrollbarSize === other.verticalScrollbarSize\n                && this.verticalSliderSize === other.verticalSliderSize\n                && this.mouseWheelScrollSensitivity === other.mouseWheelScrollSensitivity);\n        };\n        /**\n         * @internal\n         */\n        InternalEditorScrollbarOptions.prototype.clone = function () {\n            return new InternalEditorScrollbarOptions(this);\n        };\n        return InternalEditorScrollbarOptions;\n    }());\n    exports.InternalEditorScrollbarOptions = InternalEditorScrollbarOptions;\n    var EditorWrappingInfo = (function () {\n        /**\n         * @internal\n         */\n        function EditorWrappingInfo(source) {\n            this.isViewportWrapping = Boolean(source.isViewportWrapping);\n            this.wrappingColumn = source.wrappingColumn | 0;\n            this.wrappingIndent = source.wrappingIndent | 0;\n            this.wordWrapBreakBeforeCharacters = String(source.wordWrapBreakBeforeCharacters);\n            this.wordWrapBreakAfterCharacters = String(source.wordWrapBreakAfterCharacters);\n            this.wordWrapBreakObtrusiveCharacters = String(source.wordWrapBreakObtrusiveCharacters);\n        }\n        /**\n         * @internal\n         */\n        EditorWrappingInfo.prototype.equals = function (other) {\n            return (this.isViewportWrapping === other.isViewportWrapping\n                && this.wrappingColumn === other.wrappingColumn\n                && this.wrappingIndent === other.wrappingIndent\n                && this.wordWrapBreakBeforeCharacters === other.wordWrapBreakBeforeCharacters\n                && this.wordWrapBreakAfterCharacters === other.wordWrapBreakAfterCharacters\n                && this.wordWrapBreakObtrusiveCharacters === other.wordWrapBreakObtrusiveCharacters);\n        };\n        /**\n         * @internal\n         */\n        EditorWrappingInfo.prototype.clone = function () {\n            return new EditorWrappingInfo(this);\n        };\n        return EditorWrappingInfo;\n    }());\n    exports.EditorWrappingInfo = EditorWrappingInfo;\n    var InternalEditorViewOptions = (function () {\n        /**\n         * @internal\n         */\n        function InternalEditorViewOptions(source) {\n            this.theme = String(source.theme);\n            this.canUseTranslate3d = Boolean(source.canUseTranslate3d);\n            this.experimentalScreenReader = Boolean(source.experimentalScreenReader);\n            this.rulers = InternalEditorViewOptions._toSortedIntegerArray(source.rulers);\n            this.ariaLabel = String(source.ariaLabel);\n            this.lineNumbers = source.lineNumbers;\n            this.selectOnLineNumbers = Boolean(source.selectOnLineNumbers);\n            this.glyphMargin = Boolean(source.glyphMargin);\n            this.revealHorizontalRightPadding = source.revealHorizontalRightPadding | 0;\n            this.roundedSelection = Boolean(source.roundedSelection);\n            this.overviewRulerLanes = source.overviewRulerLanes | 0;\n            this.cursorBlinking = source.cursorBlinking | 0;\n            this.mouseWheelZoom = Boolean(source.mouseWheelZoom);\n            this.cursorStyle = source.cursorStyle | 0;\n            this.hideCursorInOverviewRuler = Boolean(source.hideCursorInOverviewRuler);\n            this.scrollBeyondLastLine = Boolean(source.scrollBeyondLastLine);\n            this.editorClassName = String(source.editorClassName);\n            this.stopRenderingLineAfter = source.stopRenderingLineAfter | 0;\n            this.renderWhitespace = Boolean(source.renderWhitespace);\n            this.renderControlCharacters = Boolean(source.renderControlCharacters);\n            this.renderIndentGuides = Boolean(source.renderIndentGuides);\n            this.scrollbar = source.scrollbar.clone();\n        }\n        InternalEditorViewOptions._toSortedIntegerArray = function (source) {\n            if (!Array.isArray(source)) {\n                return [];\n            }\n            var arrSource = source;\n            var result = arrSource.map(function (el) {\n                var r = parseInt(el, 10);\n                if (isNaN(r)) {\n                    return 0;\n                }\n                return r;\n            });\n            result.sort();\n            return result;\n        };\n        InternalEditorViewOptions._numberArraysEqual = function (a, b) {\n            if (a.length !== b.length) {\n                return false;\n            }\n            for (var i = 0; i < a.length; i++) {\n                if (a[i] !== b[i]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        /**\n         * @internal\n         */\n        InternalEditorViewOptions.prototype.equals = function (other) {\n            return (this.theme === other.theme\n                && this.canUseTranslate3d === other.canUseTranslate3d\n                && this.experimentalScreenReader === other.experimentalScreenReader\n                && InternalEditorViewOptions._numberArraysEqual(this.rulers, other.rulers)\n                && this.ariaLabel === other.ariaLabel\n                && this.lineNumbers === other.lineNumbers\n                && this.selectOnLineNumbers === other.selectOnLineNumbers\n                && this.glyphMargin === other.glyphMargin\n                && this.revealHorizontalRightPadding === other.revealHorizontalRightPadding\n                && this.roundedSelection === other.roundedSelection\n                && this.overviewRulerLanes === other.overviewRulerLanes\n                && this.cursorBlinking === other.cursorBlinking\n                && this.mouseWheelZoom === other.mouseWheelZoom\n                && this.cursorStyle === other.cursorStyle\n                && this.hideCursorInOverviewRuler === other.hideCursorInOverviewRuler\n                && this.scrollBeyondLastLine === other.scrollBeyondLastLine\n                && this.editorClassName === other.editorClassName\n                && this.stopRenderingLineAfter === other.stopRenderingLineAfter\n                && this.renderWhitespace === other.renderWhitespace\n                && this.renderControlCharacters === other.renderControlCharacters\n                && this.renderIndentGuides === other.renderIndentGuides\n                && this.scrollbar.equals(other.scrollbar));\n        };\n        /**\n         * @internal\n         */\n        InternalEditorViewOptions.prototype.createChangeEvent = function (newOpts) {\n            return {\n                theme: this.theme !== newOpts.theme,\n                canUseTranslate3d: this.canUseTranslate3d !== newOpts.canUseTranslate3d,\n                experimentalScreenReader: this.experimentalScreenReader !== newOpts.experimentalScreenReader,\n                rulers: (!InternalEditorViewOptions._numberArraysEqual(this.rulers, newOpts.rulers)),\n                ariaLabel: this.ariaLabel !== newOpts.ariaLabel,\n                lineNumbers: this.lineNumbers !== newOpts.lineNumbers,\n                selectOnLineNumbers: this.selectOnLineNumbers !== newOpts.selectOnLineNumbers,\n                glyphMargin: this.glyphMargin !== newOpts.glyphMargin,\n                revealHorizontalRightPadding: this.revealHorizontalRightPadding !== newOpts.revealHorizontalRightPadding,\n                roundedSelection: this.roundedSelection !== newOpts.roundedSelection,\n                overviewRulerLanes: this.overviewRulerLanes !== newOpts.overviewRulerLanes,\n                cursorBlinking: this.cursorBlinking !== newOpts.cursorBlinking,\n                mouseWheelZoom: this.mouseWheelZoom !== newOpts.mouseWheelZoom,\n                cursorStyle: this.cursorStyle !== newOpts.cursorStyle,\n                hideCursorInOverviewRuler: this.hideCursorInOverviewRuler !== newOpts.hideCursorInOverviewRuler,\n                scrollBeyondLastLine: this.scrollBeyondLastLine !== newOpts.scrollBeyondLastLine,\n                editorClassName: this.editorClassName !== newOpts.editorClassName,\n                stopRenderingLineAfter: this.stopRenderingLineAfter !== newOpts.stopRenderingLineAfter,\n                renderWhitespace: this.renderWhitespace !== newOpts.renderWhitespace,\n                renderControlCharacters: this.renderControlCharacters !== newOpts.renderControlCharacters,\n                renderIndentGuides: this.renderIndentGuides !== newOpts.renderIndentGuides,\n                scrollbar: (!this.scrollbar.equals(newOpts.scrollbar)),\n            };\n        };\n        /**\n         * @internal\n         */\n        InternalEditorViewOptions.prototype.clone = function () {\n            return new InternalEditorViewOptions(this);\n        };\n        return InternalEditorViewOptions;\n    }());\n    exports.InternalEditorViewOptions = InternalEditorViewOptions;\n    var EditorContribOptions = (function () {\n        /**\n         * @internal\n         */\n        function EditorContribOptions(source) {\n            this.selectionClipboard = Boolean(source.selectionClipboard);\n            this.hover = Boolean(source.hover);\n            this.contextmenu = Boolean(source.contextmenu);\n            this.quickSuggestions = Boolean(source.quickSuggestions);\n            this.quickSuggestionsDelay = source.quickSuggestionsDelay || 0;\n            this.parameterHints = Boolean(source.parameterHints);\n            this.iconsInSuggestions = Boolean(source.iconsInSuggestions);\n            this.formatOnType = Boolean(source.formatOnType);\n            this.suggestOnTriggerCharacters = Boolean(source.suggestOnTriggerCharacters);\n            this.acceptSuggestionOnEnter = Boolean(source.acceptSuggestionOnEnter);\n            this.snippetSuggestions = source.snippetSuggestions;\n            this.tabCompletion = source.tabCompletion;\n            this.wordBasedSuggestions = source.wordBasedSuggestions;\n            this.selectionHighlight = Boolean(source.selectionHighlight);\n            this.codeLens = Boolean(source.codeLens);\n            this.folding = Boolean(source.folding);\n        }\n        /**\n         * @internal\n         */\n        EditorContribOptions.prototype.equals = function (other) {\n            return (this.selectionClipboard === other.selectionClipboard\n                && this.hover === other.hover\n                && this.contextmenu === other.contextmenu\n                && this.quickSuggestions === other.quickSuggestions\n                && this.quickSuggestionsDelay === other.quickSuggestionsDelay\n                && this.parameterHints === other.parameterHints\n                && this.iconsInSuggestions === other.iconsInSuggestions\n                && this.formatOnType === other.formatOnType\n                && this.suggestOnTriggerCharacters === other.suggestOnTriggerCharacters\n                && this.acceptSuggestionOnEnter === other.acceptSuggestionOnEnter\n                && this.snippetSuggestions === other.snippetSuggestions\n                && this.tabCompletion === other.tabCompletion\n                && this.wordBasedSuggestions === other.wordBasedSuggestions\n                && this.selectionHighlight === other.selectionHighlight\n                && this.codeLens === other.codeLens\n                && this.folding === other.folding);\n        };\n        /**\n         * @internal\n         */\n        EditorContribOptions.prototype.clone = function () {\n            return new EditorContribOptions(this);\n        };\n        return EditorContribOptions;\n    }());\n    exports.EditorContribOptions = EditorContribOptions;\n    /**\n     * Internal configuration options (transformed or computed) for the editor.\n     */\n    var InternalEditorOptions = (function () {\n        /**\n         * @internal\n         */\n        function InternalEditorOptions(source) {\n            this.lineHeight = source.lineHeight | 0;\n            this.readOnly = Boolean(source.readOnly);\n            this.wordSeparators = String(source.wordSeparators);\n            this.autoClosingBrackets = Boolean(source.autoClosingBrackets);\n            this.useTabStops = Boolean(source.useTabStops);\n            this.tabFocusMode = Boolean(source.tabFocusMode);\n            this.layoutInfo = source.layoutInfo.clone();\n            this.fontInfo = source.fontInfo.clone();\n            this.viewInfo = source.viewInfo.clone();\n            this.wrappingInfo = source.wrappingInfo.clone();\n            this.contribInfo = source.contribInfo.clone();\n        }\n        /**\n         * @internal\n         */\n        InternalEditorOptions.prototype.equals = function (other) {\n            return (this.lineHeight === other.lineHeight\n                && this.readOnly === other.readOnly\n                && this.wordSeparators === other.wordSeparators\n                && this.autoClosingBrackets === other.autoClosingBrackets\n                && this.useTabStops === other.useTabStops\n                && this.tabFocusMode === other.tabFocusMode\n                && this.layoutInfo.equals(other.layoutInfo)\n                && this.fontInfo.equals(other.fontInfo)\n                && this.viewInfo.equals(other.viewInfo)\n                && this.wrappingInfo.equals(other.wrappingInfo)\n                && this.contribInfo.equals(other.contribInfo));\n        };\n        /**\n         * @internal\n         */\n        InternalEditorOptions.prototype.createChangeEvent = function (newOpts) {\n            return {\n                lineHeight: (this.lineHeight !== newOpts.lineHeight),\n                readOnly: (this.readOnly !== newOpts.readOnly),\n                wordSeparators: (this.wordSeparators !== newOpts.wordSeparators),\n                autoClosingBrackets: (this.autoClosingBrackets !== newOpts.autoClosingBrackets),\n                useTabStops: (this.useTabStops !== newOpts.useTabStops),\n                tabFocusMode: (this.tabFocusMode !== newOpts.tabFocusMode),\n                layoutInfo: (!this.layoutInfo.equals(newOpts.layoutInfo)),\n                fontInfo: (!this.fontInfo.equals(newOpts.fontInfo)),\n                viewInfo: this.viewInfo.createChangeEvent(newOpts.viewInfo),\n                wrappingInfo: (!this.wrappingInfo.equals(newOpts.wrappingInfo)),\n                contribInfo: (!this.contribInfo.equals(newOpts.contribInfo)),\n            };\n        };\n        /**\n         * @internal\n         */\n        InternalEditorOptions.prototype.clone = function () {\n            return new InternalEditorOptions(this);\n        };\n        return InternalEditorOptions;\n    }());\n    exports.InternalEditorOptions = InternalEditorOptions;\n    /**\n     * Vertical Lane in the overview ruler of the editor.\n     */\n    (function (OverviewRulerLane) {\n        OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n        OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n        OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n        OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n    })(exports.OverviewRulerLane || (exports.OverviewRulerLane = {}));\n    var OverviewRulerLane = exports.OverviewRulerLane;\n    /**\n     * End of line character preference.\n     */\n    (function (EndOfLinePreference) {\n        /**\n         * Use the end of line character identified in the text buffer.\n         */\n        EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n        /**\n         * Use line feed (\\n) as the end of line character.\n         */\n        EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n        /**\n         * Use carriage return and line feed (\\r\\n) as the end of line character.\n         */\n        EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n    })(exports.EndOfLinePreference || (exports.EndOfLinePreference = {}));\n    var EndOfLinePreference = exports.EndOfLinePreference;\n    /**\n     * The default end of line to use when instantiating models.\n     */\n    (function (DefaultEndOfLine) {\n        /**\n         * Use line feed (\\n) as the end of line character.\n         */\n        DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n        /**\n         * Use carriage return and line feed (\\r\\n) as the end of line character.\n         */\n        DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n    })(exports.DefaultEndOfLine || (exports.DefaultEndOfLine = {}));\n    var DefaultEndOfLine = exports.DefaultEndOfLine;\n    /**\n     * End of line character preference.\n     */\n    (function (EndOfLineSequence) {\n        /**\n         * Use line feed (\\n) as the end of line character.\n         */\n        EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n        /**\n         * Use carriage return and line feed (\\r\\n) as the end of line character.\n         */\n        EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n    })(exports.EndOfLineSequence || (exports.EndOfLineSequence = {}));\n    var EndOfLineSequence = exports.EndOfLineSequence;\n    /**\n     * Describes the behaviour of decorations when typing/editing near their edges.\n     */\n    (function (TrackedRangeStickiness) {\n        TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n        TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n        TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n        TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n    })(exports.TrackedRangeStickiness || (exports.TrackedRangeStickiness = {}));\n    var TrackedRangeStickiness = exports.TrackedRangeStickiness;\n    /**\n     * Describes the reason the cursor has changed its position.\n     */\n    (function (CursorChangeReason) {\n        /**\n         * Unknown or not set.\n         */\n        CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n        /**\n         * A `model.setValue()` was called.\n         */\n        CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n        /**\n         * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n         */\n        CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n        /**\n         * There was an explicit user gesture.\n         */\n        CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n        /**\n         * There was a Paste.\n         */\n        CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n        /**\n         * There was an Undo.\n         */\n        CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n        /**\n         * There was a Redo.\n         */\n        CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n    })(exports.CursorChangeReason || (exports.CursorChangeReason = {}));\n    var CursorChangeReason = exports.CursorChangeReason;\n    /**\n     * @internal\n     */\n    (function (VerticalRevealType) {\n        VerticalRevealType[VerticalRevealType[\"Simple\"] = 0] = \"Simple\";\n        VerticalRevealType[VerticalRevealType[\"Center\"] = 1] = \"Center\";\n        VerticalRevealType[VerticalRevealType[\"CenterIfOutsideViewport\"] = 2] = \"CenterIfOutsideViewport\";\n    })(exports.VerticalRevealType || (exports.VerticalRevealType = {}));\n    var VerticalRevealType = exports.VerticalRevealType;\n    /**\n     * A description for the overview ruler position.\n     */\n    var OverviewRulerPosition = (function () {\n        /**\n         * @internal\n         */\n        function OverviewRulerPosition(source) {\n            this.width = source.width | 0;\n            this.height = source.height | 0;\n            this.top = source.top | 0;\n            this.right = source.right | 0;\n        }\n        /**\n         * @internal\n         */\n        OverviewRulerPosition.prototype.equals = function (other) {\n            return (this.width === other.width\n                && this.height === other.height\n                && this.top === other.top\n                && this.right === other.right);\n        };\n        /**\n         * @internal\n         */\n        OverviewRulerPosition.prototype.clone = function () {\n            return new OverviewRulerPosition(this);\n        };\n        return OverviewRulerPosition;\n    }());\n    exports.OverviewRulerPosition = OverviewRulerPosition;\n    /**\n     * The internal layout details of the editor.\n     */\n    var EditorLayoutInfo = (function () {\n        /**\n         * @internal\n         */\n        function EditorLayoutInfo(source) {\n            this.width = source.width | 0;\n            this.height = source.height | 0;\n            this.glyphMarginLeft = source.glyphMarginLeft | 0;\n            this.glyphMarginWidth = source.glyphMarginWidth | 0;\n            this.glyphMarginHeight = source.glyphMarginHeight | 0;\n            this.lineNumbersLeft = source.lineNumbersLeft | 0;\n            this.lineNumbersWidth = source.lineNumbersWidth | 0;\n            this.lineNumbersHeight = source.lineNumbersHeight | 0;\n            this.decorationsLeft = source.decorationsLeft | 0;\n            this.decorationsWidth = source.decorationsWidth | 0;\n            this.decorationsHeight = source.decorationsHeight | 0;\n            this.contentLeft = source.contentLeft | 0;\n            this.contentWidth = source.contentWidth | 0;\n            this.contentHeight = source.contentHeight | 0;\n            this.verticalScrollbarWidth = source.verticalScrollbarWidth | 0;\n            this.horizontalScrollbarHeight = source.horizontalScrollbarHeight | 0;\n            this.overviewRuler = source.overviewRuler.clone();\n        }\n        /**\n         * @internal\n         */\n        EditorLayoutInfo.prototype.equals = function (other) {\n            return (this.width === other.width\n                && this.height === other.height\n                && this.glyphMarginLeft === other.glyphMarginLeft\n                && this.glyphMarginWidth === other.glyphMarginWidth\n                && this.glyphMarginHeight === other.glyphMarginHeight\n                && this.lineNumbersLeft === other.lineNumbersLeft\n                && this.lineNumbersWidth === other.lineNumbersWidth\n                && this.lineNumbersHeight === other.lineNumbersHeight\n                && this.decorationsLeft === other.decorationsLeft\n                && this.decorationsWidth === other.decorationsWidth\n                && this.decorationsHeight === other.decorationsHeight\n                && this.contentLeft === other.contentLeft\n                && this.contentWidth === other.contentWidth\n                && this.contentHeight === other.contentHeight\n                && this.verticalScrollbarWidth === other.verticalScrollbarWidth\n                && this.horizontalScrollbarHeight === other.horizontalScrollbarHeight\n                && this.overviewRuler.equals(other.overviewRuler));\n        };\n        /**\n         * @internal\n         */\n        EditorLayoutInfo.prototype.clone = function () {\n            return new EditorLayoutInfo(this);\n        };\n        return EditorLayoutInfo;\n    }());\n    exports.EditorLayoutInfo = EditorLayoutInfo;\n    /**\n     * Type of hit element with the mouse in the editor.\n     */\n    (function (MouseTargetType) {\n        /**\n         * Mouse is on top of an unknown element.\n         */\n        MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n        /**\n         * Mouse is on top of the textarea used for input.\n         */\n        MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n        /**\n         * Mouse is on top of the glyph margin\n         */\n        MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n        /**\n         * Mouse is on top of the line numbers\n         */\n        MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n        /**\n         * Mouse is on top of the line decorations\n         */\n        MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n        /**\n         * Mouse is on top of the whitespace left in the gutter by a view zone.\n         */\n        MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n        /**\n         * Mouse is on top of text in the content.\n         */\n        MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n        /**\n         * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n         */\n        MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n        /**\n         * Mouse is on top of a view zone in the content.\n         */\n        MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n        /**\n         * Mouse is on top of a content widget.\n         */\n        MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n        /**\n         * Mouse is on top of the decorations overview ruler.\n         */\n        MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n        /**\n         * Mouse is on top of a scrollbar.\n         */\n        MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n        /**\n         * Mouse is on top of an overlay widget.\n         */\n        MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    })(exports.MouseTargetType || (exports.MouseTargetType = {}));\n    var MouseTargetType = exports.MouseTargetType;\n    /**\n     * @internal\n     */\n    var EditorContextKeys;\n    (function (EditorContextKeys) {\n        /**\n         * A context key that is set when the editor's text has focus (cursor is blinking).\n         * @internal\n         */\n        EditorContextKeys.TextFocus = new contextkey_1.RawContextKey('editorTextFocus', false);\n        /**\n         * A context key that is set when the editor's text or an editor's widget has focus.\n         * @internal\n         */\n        EditorContextKeys.Focus = new contextkey_1.RawContextKey('editorFocus', false);\n        /**\n         * A context key that is set when the editor's text is readonly.\n         * @internal\n         */\n        EditorContextKeys.ReadOnly = new contextkey_1.RawContextKey('editorReadonly', false);\n        /**\n         * @internal\n         */\n        EditorContextKeys.Writable = EditorContextKeys.ReadOnly.toNegated();\n        /**\n         * A context key that is set when the editor has a non-collapsed selection.\n         * @internal\n         */\n        EditorContextKeys.HasNonEmptySelection = new contextkey_1.RawContextKey('editorHasSelection', false);\n        /**\n         * @internal\n         */\n        EditorContextKeys.HasOnlyEmptySelection = EditorContextKeys.HasNonEmptySelection.toNegated();\n        /**\n         * A context key that is set when the editor has multiple selections (multiple cursors).\n         * @internal\n         */\n        EditorContextKeys.HasMultipleSelections = new contextkey_1.RawContextKey('editorHasMultipleSelections', false);\n        /**\n         * @internal\n         */\n        EditorContextKeys.HasSingleSelection = EditorContextKeys.HasMultipleSelections.toNegated();\n        /**\n         * @internal\n         */\n        EditorContextKeys.TabMovesFocus = new contextkey_1.RawContextKey('editorTabMovesFocus', false);\n        /**\n         * @internal\n         */\n        EditorContextKeys.TabDoesNotMoveFocus = EditorContextKeys.TabMovesFocus.toNegated();\n        /**\n         * A context key that is set to the language associated with the model associated with the editor.\n         * @internal\n         */\n        EditorContextKeys.LanguageId = new contextkey_1.RawContextKey('editorLangId', undefined);\n    })(EditorContextKeys = exports.EditorContextKeys || (exports.EditorContextKeys = {}));\n    ;\n    /**\n     * @internal\n     */\n    var ModeContextKeys;\n    (function (ModeContextKeys) {\n        /**\n         * @internal\n         */\n        ModeContextKeys.hasCompletionItemProvider = new contextkey_1.RawContextKey('editorHasCompletionItemProvider', undefined);\n        /**\n         * @internal\n         */\n        ModeContextKeys.hasCodeActionsProvider = new contextkey_1.RawContextKey('editorHasCodeActionsProvider', undefined);\n        /**\n         * @internal\n         */\n        ModeContextKeys.hasCodeLensProvider = new contextkey_1.RawContextKey('editorHasCodeLensProvider', undefined);\n        /**\n         * @internal\n         */\n        ModeContextKeys.hasDefinitionProvider = new contextkey_1.RawContextKey('editorHasDefinitionProvider', undefined);\n        /**\n         * @internal\n         */\n        ModeContextKeys.hasHoverProvider = new contextkey_1.RawContextKey('editorHasHoverProvider', undefined);\n        /**\n         * @internal\n         */\n        ModeContextKeys.hasDocumentHighlightProvider = new contextkey_1.RawContextKey('editorHasDocumentHighlightProvider', undefined);\n        /**\n         * @internal\n         */\n        ModeContextKeys.hasDocumentSymbolProvider = new contextkey_1.RawContextKey('editorHasDocumentSymbolProvider', undefined);\n        /**\n         * @internal\n         */\n        ModeContextKeys.hasReferenceProvider = new contextkey_1.RawContextKey('editorHasReferenceProvider', undefined);\n        /**\n         * @internal\n         */\n        ModeContextKeys.hasRenameProvider = new contextkey_1.RawContextKey('editorHasRenameProvider', undefined);\n        /**\n         * @internal\n         */\n        ModeContextKeys.hasFormattingProvider = new contextkey_1.RawContextKey('editorHasFormattingProvider', undefined);\n        /**\n         * @internal\n         */\n        ModeContextKeys.hasSignatureHelpProvider = new contextkey_1.RawContextKey('editorHasSignatureHelpProvider', undefined);\n    })(ModeContextKeys = exports.ModeContextKeys || (exports.ModeContextKeys = {}));\n    var BareFontInfo = (function () {\n        /**\n         * @internal\n         */\n        function BareFontInfo(opts) {\n            this.fontFamily = String(opts.fontFamily);\n            this.fontSize = opts.fontSize;\n            this.lineHeight = opts.lineHeight | 0;\n        }\n        /**\n         * @internal\n         */\n        BareFontInfo.prototype.getId = function () {\n            return this.fontFamily + '-' + this.fontSize + '-' + this.lineHeight;\n        };\n        return BareFontInfo;\n    }());\n    exports.BareFontInfo = BareFontInfo;\n    var FontInfo = (function (_super) {\n        __extends(FontInfo, _super);\n        /**\n         * @internal\n         */\n        function FontInfo(opts) {\n            _super.call(this, opts);\n            this.typicalHalfwidthCharacterWidth = opts.typicalHalfwidthCharacterWidth;\n            this.typicalFullwidthCharacterWidth = opts.typicalFullwidthCharacterWidth;\n            this.spaceWidth = opts.spaceWidth;\n            this.maxDigitWidth = opts.maxDigitWidth;\n        }\n        /**\n         * @internal\n         */\n        FontInfo.prototype.equals = function (other) {\n            return (this.fontFamily === other.fontFamily\n                && this.fontSize === other.fontSize\n                && this.lineHeight === other.lineHeight\n                && this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\n                && this.typicalFullwidthCharacterWidth === other.typicalFullwidthCharacterWidth\n                && this.spaceWidth === other.spaceWidth\n                && this.maxDigitWidth === other.maxDigitWidth);\n        };\n        /**\n         * @internal\n         */\n        FontInfo.prototype.clone = function () {\n            return new FontInfo(this);\n        };\n        return FontInfo;\n    }(BareFontInfo));\n    exports.FontInfo = FontInfo;\n    /**\n     * @internal\n     */\n    exports.ViewEventNames = {\n        ModelFlushedEvent: 'modelFlushedEvent',\n        LinesDeletedEvent: 'linesDeletedEvent',\n        LinesInsertedEvent: 'linesInsertedEvent',\n        LineChangedEvent: 'lineChangedEvent',\n        TokensChangedEvent: 'tokensChangedEvent',\n        DecorationsChangedEvent: 'decorationsChangedEvent',\n        CursorPositionChangedEvent: 'cursorPositionChangedEvent',\n        CursorSelectionChangedEvent: 'cursorSelectionChangedEvent',\n        RevealRangeEvent: 'revealRangeEvent',\n        LineMappingChangedEvent: 'lineMappingChangedEvent',\n        ScrollRequestEvent: 'scrollRequestEvent'\n    };\n    /**\n     * @internal\n     */\n    var Viewport = (function () {\n        function Viewport(top, left, width, height) {\n            this.top = top | 0;\n            this.left = left | 0;\n            this.width = width | 0;\n            this.height = height | 0;\n        }\n        return Viewport;\n    }());\n    exports.Viewport = Viewport;\n    /**\n     * @internal\n     */\n    (function (CodeEditorStateFlag) {\n        CodeEditorStateFlag[CodeEditorStateFlag[\"Value\"] = 0] = \"Value\";\n        CodeEditorStateFlag[CodeEditorStateFlag[\"Selection\"] = 1] = \"Selection\";\n        CodeEditorStateFlag[CodeEditorStateFlag[\"Position\"] = 2] = \"Position\";\n        CodeEditorStateFlag[CodeEditorStateFlag[\"Scroll\"] = 3] = \"Scroll\";\n    })(exports.CodeEditorStateFlag || (exports.CodeEditorStateFlag = {}));\n    var CodeEditorStateFlag = exports.CodeEditorStateFlag;\n    /**\n     * The type of the `IEditor`.\n     */\n    exports.EditorType = {\n        ICodeEditor: 'vs.editor.ICodeEditor',\n        IDiffEditor: 'vs.editor.IDiffEditor'\n    };\n    /**\n     * @internal\n     */\n    exports.ClassName = {\n        EditorWarningDecoration: 'greensquiggly',\n        EditorErrorDecoration: 'redsquiggly'\n    };\n    /**\n     * @internal\n     */\n    exports.EventType = {\n        Disposed: 'disposed',\n        ConfigurationChanged: 'configurationChanged',\n        ModelDispose: 'modelDispose',\n        ModelChanged: 'modelChanged',\n        ModelTokensChanged: 'modelTokensChanged',\n        ModelModeChanged: 'modelsModeChanged',\n        ModelModeSupportChanged: 'modelsModeSupportChanged',\n        ModelOptionsChanged: 'modelOptionsChanged',\n        ModelRawContentChanged: 'contentChanged',\n        ModelContentChanged2: 'contentChanged2',\n        ModelRawContentChangedFlush: 'flush',\n        ModelRawContentChangedLinesDeleted: 'linesDeleted',\n        ModelRawContentChangedLinesInserted: 'linesInserted',\n        ModelRawContentChangedLineChanged: 'lineChanged',\n        EditorTextBlur: 'blur',\n        EditorTextFocus: 'focus',\n        EditorFocus: 'widgetFocus',\n        EditorBlur: 'widgetBlur',\n        ModelDecorationsChanged: 'decorationsChanged',\n        CursorPositionChanged: 'positionChanged',\n        CursorSelectionChanged: 'selectionChanged',\n        CursorRevealRange: 'revealRange',\n        CursorScrollRequest: 'scrollRequest',\n        ViewFocusGained: 'focusGained',\n        ViewFocusLost: 'focusLost',\n        ViewFocusChanged: 'focusChanged',\n        ViewScrollChanged: 'scrollChanged',\n        ViewZonesChanged: 'zonesChanged',\n        ViewLayoutChanged: 'viewLayoutChanged',\n        ContextMenu: 'contextMenu',\n        MouseDown: 'mousedown',\n        MouseUp: 'mouseup',\n        MouseMove: 'mousemove',\n        MouseLeave: 'mouseleave',\n        KeyDown: 'keydown',\n        KeyUp: 'keyup',\n        EditorLayout: 'editorLayout',\n        DiffUpdated: 'diffUpdated'\n    };\n    /**\n     * Positions in the view for cursor move command.\n     */\n    exports.CursorMovePosition = {\n        Left: 'left',\n        Right: 'right',\n        Up: 'up',\n        Down: 'down',\n        WrappedLineStart: 'wrappedLineStart',\n        WrappedLineFirstNonWhitespaceCharacter: 'wrappedLineFirstNonWhitespaceCharacter',\n        WrappedLineColumnCenter: 'wrappedLineColumnCenter',\n        WrappedLineEnd: 'wrappedLineEnd',\n        WrappedLineLastNonWhitespaceCharacter: 'wrappedLineLastNonWhitespaceCharacter',\n        ViewPortTop: 'viewPortTop',\n        ViewPortCenter: 'viewPortCenter',\n        ViewPortBottom: 'viewPortBottom',\n    };\n    /**\n     * Units for Cursor move 'by' argument\n     */\n    exports.CursorMoveByUnit = {\n        Line: 'line',\n        WrappedLine: 'wrappedLine',\n        Character: 'character',\n        HalfLine: 'halfLine'\n    };\n    ;\n    /**\n     * @internal\n     */\n    var isCursorMoveArgs = function (arg) {\n        if (!types.isObject(arg)) {\n            return false;\n        }\n        var cursorMoveArg = arg;\n        if (!types.isString(cursorMoveArg.to)) {\n            return false;\n        }\n        if (!types.isUndefined(cursorMoveArg.select) && !types.isBoolean(cursorMoveArg.select)) {\n            return false;\n        }\n        if (!types.isUndefined(cursorMoveArg.by) && !types.isString(cursorMoveArg.by)) {\n            return false;\n        }\n        if (!types.isUndefined(cursorMoveArg.value) && !types.isNumber(cursorMoveArg.value)) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Directions in the view for editor scroll command.\n     */\n    exports.EditorScrollDirection = {\n        Up: 'up',\n        Down: 'down',\n    };\n    /**\n     * Units for editor scroll 'by' argument\n     */\n    exports.EditorScrollByUnit = {\n        Line: 'line',\n        WrappedLine: 'wrappedLine',\n        Page: 'page',\n        HalfPage: 'halfPage'\n    };\n    ;\n    /**\n     * @internal\n     */\n    var isEditorScrollArgs = function (arg) {\n        if (!types.isObject(arg)) {\n            return false;\n        }\n        var scrollArg = arg;\n        if (!types.isString(scrollArg.to)) {\n            return false;\n        }\n        if (!types.isUndefined(scrollArg.by) && !types.isString(scrollArg.by)) {\n            return false;\n        }\n        if (!types.isUndefined(scrollArg.value) && !types.isNumber(scrollArg.value)) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @internal\n     */\n    exports.CommandDescription = {\n        CursorMove: {\n            description: 'Move cursor to a logical position in the view',\n            args: [\n                {\n                    name: 'Cursor move argument object',\n                    description: \"Property-value pairs that can be passed through this argument:\\n\\t\\t\\t\\t\\t'to': A mandatory logical position value providing where to move the cursor.\\n\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t\\t'left', 'right', 'up', 'down',\\n\\t\\t\\t\\t\\t\\t'wrappedLineStart', 'wrappedLineFirstNonWhitespaceCharacter', 'wrappedLineColumnCenter', 'wrappedLineEnd' ,'wrappedLineLastNonWhitespaceCharacter',\\n\\t\\t\\t\\t\\t\\t'viewPortTop', 'viewPortCenter', 'viewPortBottom'\\n\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t'by': Unit to move. Default is computed based on 'to' value.\\n\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t\\t'line', 'wrappedLine', 'character', 'halfLine'\\n\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t'value': Number of units to move. Default is '1'.\\n\\t\\t\\t\\t\\t'select': If 'true' makes the selection. Default is 'false'.\\n\\t\\t\\t\\t\",\n                    constraint: isCursorMoveArgs\n                }\n            ]\n        },\n        EditorScroll: {\n            description: 'Scroll editor in the given direction',\n            args: [\n                {\n                    name: 'Editor scroll argument object',\n                    description: \"Property-value pairs that can be passed through this argument:\\n\\t\\t\\t\\t\\t'to': A mandatory direction value.\\n\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t\\t'up', 'down'\\n\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t'by': Unit to move. Default is computed based on 'to' value.\\n\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t\\t'line', 'wrappedLine', page', 'halfPage'\\n\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t'value': Number of units to move. Default is '1'.\\n\\t\\t\\t\\t\",\n                    constraint: isEditorScrollArgs\n                }\n            ]\n        }\n    };\n    /**\n     * Built-in commands.\n     */\n    exports.Handler = {\n        ExecuteCommand: 'executeCommand',\n        ExecuteCommands: 'executeCommands',\n        CursorLeft: 'cursorLeft',\n        CursorLeftSelect: 'cursorLeftSelect',\n        CursorWordLeft: 'cursorWordLeft',\n        CursorWordStartLeft: 'cursorWordStartLeft',\n        CursorWordEndLeft: 'cursorWordEndLeft',\n        CursorWordLeftSelect: 'cursorWordLeftSelect',\n        CursorWordStartLeftSelect: 'cursorWordStartLeftSelect',\n        CursorWordEndLeftSelect: 'cursorWordEndLeftSelect',\n        CursorRight: 'cursorRight',\n        CursorRightSelect: 'cursorRightSelect',\n        CursorWordRight: 'cursorWordRight',\n        CursorWordStartRight: 'cursorWordStartRight',\n        CursorWordEndRight: 'cursorWordEndRight',\n        CursorWordRightSelect: 'cursorWordRightSelect',\n        CursorWordStartRightSelect: 'cursorWordStartRightSelect',\n        CursorWordEndRightSelect: 'cursorWordEndRightSelect',\n        CursorUp: 'cursorUp',\n        CursorUpSelect: 'cursorUpSelect',\n        CursorDown: 'cursorDown',\n        CursorDownSelect: 'cursorDownSelect',\n        CursorPageUp: 'cursorPageUp',\n        CursorPageUpSelect: 'cursorPageUpSelect',\n        CursorPageDown: 'cursorPageDown',\n        CursorPageDownSelect: 'cursorPageDownSelect',\n        CursorHome: 'cursorHome',\n        CursorHomeSelect: 'cursorHomeSelect',\n        CursorEnd: 'cursorEnd',\n        CursorEndSelect: 'cursorEndSelect',\n        ExpandLineSelection: 'expandLineSelection',\n        CursorTop: 'cursorTop',\n        CursorTopSelect: 'cursorTopSelect',\n        CursorBottom: 'cursorBottom',\n        CursorBottomSelect: 'cursorBottomSelect',\n        CursorColumnSelectLeft: 'cursorColumnSelectLeft',\n        CursorColumnSelectRight: 'cursorColumnSelectRight',\n        CursorColumnSelectUp: 'cursorColumnSelectUp',\n        CursorColumnSelectPageUp: 'cursorColumnSelectPageUp',\n        CursorColumnSelectDown: 'cursorColumnSelectDown',\n        CursorColumnSelectPageDown: 'cursorColumnSelectPageDown',\n        CursorMove: 'cursorMove',\n        AddCursorDown: 'addCursorDown',\n        AddCursorUp: 'addCursorUp',\n        CursorUndo: 'cursorUndo',\n        MoveTo: 'moveTo',\n        MoveToSelect: 'moveToSelect',\n        ColumnSelect: 'columnSelect',\n        CreateCursor: 'createCursor',\n        LastCursorMoveToSelect: 'lastCursorMoveToSelect',\n        JumpToBracket: 'jumpToBracket',\n        Type: 'type',\n        ReplacePreviousChar: 'replacePreviousChar',\n        CompositionStart: 'compositionStart',\n        CompositionEnd: 'compositionEnd',\n        Paste: 'paste',\n        Tab: 'tab',\n        Indent: 'indent',\n        Outdent: 'outdent',\n        DeleteLeft: 'deleteLeft',\n        DeleteRight: 'deleteRight',\n        DeleteWordLeft: 'deleteWordLeft',\n        DeleteWordStartLeft: 'deleteWordStartLeft',\n        DeleteWordEndLeft: 'deleteWordEndLeft',\n        DeleteWordRight: 'deleteWordRight',\n        DeleteWordStartRight: 'deleteWordStartRight',\n        DeleteWordEndRight: 'deleteWordEndRight',\n        DeleteAllLeft: 'deleteAllLeft',\n        DeleteAllRight: 'deleteAllRight',\n        RemoveSecondaryCursors: 'removeSecondaryCursors',\n        CancelSelection: 'cancelSelection',\n        Cut: 'cut',\n        Undo: 'undo',\n        Redo: 'redo',\n        WordSelect: 'wordSelect',\n        WordSelectDrag: 'wordSelectDrag',\n        LastCursorWordSelect: 'lastCursorWordSelect',\n        LineSelect: 'lineSelect',\n        LineSelectDrag: 'lineSelectDrag',\n        LastCursorLineSelect: 'lastCursorLineSelect',\n        LastCursorLineSelectDrag: 'lastCursorLineSelectDrag',\n        LineInsertBefore: 'lineInsertBefore',\n        LineInsertAfter: 'lineInsertAfter',\n        LineBreakInsert: 'lineBreakInsert',\n        SelectAll: 'selectAll',\n        EditorScroll: 'editorScroll',\n        ScrollLineUp: 'scrollLineUp',\n        ScrollLineDown: 'scrollLineDown',\n        ScrollPageUp: 'scrollPageUp',\n        ScrollPageDown: 'scrollPageDown'\n    };\n    /**\n     * The style in which the editor's cursor should be rendered.\n     */\n    (function (TextEditorCursorStyle) {\n        /**\n         * As a vertical line (sitting between two characters).\n         */\n        TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n        /**\n         * As a block (sitting on top of a character).\n         */\n        TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n        /**\n         * As a horizontal line (sitting under a character).\n         */\n        TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    })(exports.TextEditorCursorStyle || (exports.TextEditorCursorStyle = {}));\n    var TextEditorCursorStyle = exports.TextEditorCursorStyle;\n    /**\n     * The kind of animation in which the editor's cursor should be rendered.\n     */\n    (function (TextEditorCursorBlinkingStyle) {\n        /**\n         * Hidden\n         */\n        TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n        /**\n         * Blinking\n         */\n        TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n        /**\n         * Blinking with smooth fading\n         */\n        TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n        /**\n         * Blinking with prolonged filled state and smooth fading\n         */\n        TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n        /**\n         * Expand collapse animation on the y axis\n         */\n        TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n        /**\n         * No-Blinking\n         */\n        TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n    })(exports.TextEditorCursorBlinkingStyle || (exports.TextEditorCursorBlinkingStyle = {}));\n    var TextEditorCursorBlinkingStyle = exports.TextEditorCursorBlinkingStyle;\n    /**\n     * @internal\n     */\n    function cursorStyleToString(cursorStyle) {\n        if (cursorStyle === TextEditorCursorStyle.Line) {\n            return 'line';\n        }\n        else if (cursorStyle === TextEditorCursorStyle.Block) {\n            return 'block';\n        }\n        else if (cursorStyle === TextEditorCursorStyle.Underline) {\n            return 'underline';\n        }\n        else {\n            throw new Error('cursorStyleToString: Unknown cursorStyle');\n        }\n    }\n    exports.cursorStyleToString = cursorStyleToString;\n    /**\n     * @internal\n     */\n    var ColorZone = (function () {\n        function ColorZone(from, to, colorId, position) {\n            this.from = from | 0;\n            this.to = to | 0;\n            this.colorId = colorId | 0;\n            this.position = position | 0;\n        }\n        return ColorZone;\n    }());\n    exports.ColorZone = ColorZone;\n    /**\n     * A zone in the overview ruler\n     * @internal\n     */\n    var OverviewRulerZone = (function () {\n        function OverviewRulerZone(startLineNumber, endLineNumber, position, forceHeight, color, darkColor) {\n            this.startLineNumber = startLineNumber;\n            this.endLineNumber = endLineNumber;\n            this.position = position;\n            this.forceHeight = forceHeight;\n            this._color = color;\n            this._darkColor = darkColor;\n            this._colorZones = null;\n        }\n        OverviewRulerZone.prototype.getColor = function (useDarkColor) {\n            if (useDarkColor) {\n                return this._darkColor;\n            }\n            return this._color;\n        };\n        OverviewRulerZone.prototype.equals = function (other) {\n            return (this.startLineNumber === other.startLineNumber\n                && this.endLineNumber === other.endLineNumber\n                && this.position === other.position\n                && this.forceHeight === other.forceHeight\n                && this._color === other._color\n                && this._darkColor === other._darkColor);\n        };\n        OverviewRulerZone.prototype.compareTo = function (other) {\n            if (this.startLineNumber === other.startLineNumber) {\n                if (this.endLineNumber === other.endLineNumber) {\n                    if (this.forceHeight === other.forceHeight) {\n                        if (this.position === other.position) {\n                            if (this._darkColor === other._darkColor) {\n                                if (this._color === other._color) {\n                                    return 0;\n                                }\n                                return this._color < other._color ? -1 : 1;\n                            }\n                            return this._darkColor < other._darkColor ? -1 : 1;\n                        }\n                        return this.position - other.position;\n                    }\n                    return this.forceHeight - other.forceHeight;\n                }\n                return this.endLineNumber - other.endLineNumber;\n            }\n            return this.startLineNumber - other.startLineNumber;\n        };\n        OverviewRulerZone.prototype.setColorZones = function (colorZones) {\n            this._colorZones = colorZones;\n        };\n        OverviewRulerZone.prototype.getColorZones = function () {\n            return this._colorZones;\n        };\n        return OverviewRulerZone;\n    }());\n    exports.OverviewRulerZone = OverviewRulerZone;\n});\n\n\n\n\n\n\ndefine(__m[45], __M([1,0,14,4,20,27,16,58,87,68,75,91]), function (require, exports, eventEmitter_1, strings, position_1, range_1, editorCommon, modelLine_1, indentationGuesser_1, defaultConfig_1, prefixSumComputer_1, indentRanges_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var LIMIT_FIND_COUNT = 999;\n    exports.LONG_LINE_BOUNDARY = 1000;\n    var TextModel = (function (_super) {\n        __extends(TextModel, _super);\n        function TextModel(allowedEventTypes, rawText) {\n            allowedEventTypes.push(editorCommon.EventType.ModelRawContentChanged, editorCommon.EventType.ModelOptionsChanged);\n            _super.call(this, allowedEventTypes);\n            this._shouldSimplifyMode = (rawText.length > TextModel.MODEL_SYNC_LIMIT);\n            this._shouldDenyMode = (rawText.length > TextModel.MODEL_TOKENIZATION_LIMIT);\n            this._options = rawText.options;\n            this._constructLines(rawText);\n            this._setVersionId(1);\n            this._isDisposed = false;\n            this._isDisposing = false;\n        }\n        TextModel.prototype.isTooLargeForHavingAMode = function () {\n            return this._shouldDenyMode;\n        };\n        TextModel.prototype.isTooLargeForHavingARichMode = function () {\n            return this._shouldSimplifyMode;\n        };\n        TextModel.prototype.getOptions = function () {\n            return this._options;\n        };\n        TextModel.prototype.updateOptions = function (newOpts) {\n            var somethingChanged = false;\n            var changed = {\n                tabSize: false,\n                insertSpaces: false,\n                trimAutoWhitespace: false\n            };\n            if (typeof newOpts.insertSpaces !== 'undefined') {\n                if (this._options.insertSpaces !== newOpts.insertSpaces) {\n                    somethingChanged = true;\n                    changed.insertSpaces = true;\n                    this._options.insertSpaces = newOpts.insertSpaces;\n                }\n            }\n            if (typeof newOpts.tabSize !== 'undefined') {\n                var newTabSize = newOpts.tabSize | 0;\n                if (this._options.tabSize !== newTabSize) {\n                    somethingChanged = true;\n                    changed.tabSize = true;\n                    this._options.tabSize = newTabSize;\n                    for (var i = 0, len = this._lines.length; i < len; i++) {\n                        this._lines[i].updateTabSize(newTabSize);\n                    }\n                }\n            }\n            if (typeof newOpts.trimAutoWhitespace !== 'undefined') {\n                if (this._options.trimAutoWhitespace !== newOpts.trimAutoWhitespace) {\n                    somethingChanged = true;\n                    changed.trimAutoWhitespace = true;\n                    this._options.trimAutoWhitespace = newOpts.trimAutoWhitespace;\n                }\n            }\n            if (somethingChanged) {\n                this.emit(editorCommon.EventType.ModelOptionsChanged, changed);\n            }\n        };\n        TextModel.prototype.detectIndentation = function (defaultInsertSpaces, defaultTabSize) {\n            var lines = this._lines.map(function (line) { return line.text; });\n            var guessedIndentation = indentationGuesser_1.guessIndentation(lines, defaultTabSize, defaultInsertSpaces);\n            this.updateOptions({\n                insertSpaces: guessedIndentation.insertSpaces,\n                tabSize: guessedIndentation.tabSize\n            });\n        };\n        TextModel.prototype._normalizeIndentationFromWhitespace = function (str) {\n            var tabSize = this._options.tabSize;\n            var insertSpaces = this._options.insertSpaces;\n            var spacesCnt = 0;\n            for (var i = 0; i < str.length; i++) {\n                if (str.charAt(i) === '\\t') {\n                    spacesCnt += tabSize;\n                }\n                else {\n                    spacesCnt++;\n                }\n            }\n            var result = '';\n            if (!insertSpaces) {\n                var tabsCnt = Math.floor(spacesCnt / tabSize);\n                spacesCnt = spacesCnt % tabSize;\n                for (var i = 0; i < tabsCnt; i++) {\n                    result += '\\t';\n                }\n            }\n            for (var i = 0; i < spacesCnt; i++) {\n                result += ' ';\n            }\n            return result;\n        };\n        TextModel.prototype.normalizeIndentation = function (str) {\n            var firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(str);\n            if (firstNonWhitespaceIndex === -1) {\n                firstNonWhitespaceIndex = str.length;\n            }\n            return this._normalizeIndentationFromWhitespace(str.substring(0, firstNonWhitespaceIndex)) + str.substring(firstNonWhitespaceIndex);\n        };\n        TextModel.prototype.getOneIndent = function () {\n            var tabSize = this._options.tabSize;\n            var insertSpaces = this._options.insertSpaces;\n            if (insertSpaces) {\n                var result = '';\n                for (var i = 0; i < tabSize; i++) {\n                    result += ' ';\n                }\n                return result;\n            }\n            else {\n                return '\\t';\n            }\n        };\n        TextModel.prototype.getVersionId = function () {\n            return this._versionId;\n        };\n        TextModel.prototype.getAlternativeVersionId = function () {\n            return this._alternativeVersionId;\n        };\n        TextModel.prototype._ensureLineStarts = function () {\n            if (!this._lineStarts) {\n                var lineStartValues = [];\n                var eolLength = this._EOL.length;\n                for (var i = 0, len = this._lines.length; i < len; i++) {\n                    lineStartValues.push(this._lines[i].text.length + eolLength);\n                }\n                this._lineStarts = new prefixSumComputer_1.PrefixSumComputer(lineStartValues);\n            }\n        };\n        TextModel.prototype.getOffsetAt = function (rawPosition) {\n            var position = this.validatePosition(rawPosition);\n            this._ensureLineStarts();\n            return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + position.column - 1;\n        };\n        TextModel.prototype.getPositionAt = function (offset) {\n            offset = Math.floor(offset);\n            offset = Math.max(0, offset);\n            this._ensureLineStarts();\n            var out = this._lineStarts.getIndexOf(offset);\n            var lineLength = this._lines[out.index].text.length;\n            // Ensure we return a valid position\n            return new position_1.Position(out.index + 1, Math.min(out.remainder + 1, lineLength + 1));\n        };\n        TextModel.prototype._increaseVersionId = function () {\n            this._setVersionId(this._versionId + 1);\n        };\n        TextModel.prototype._setVersionId = function (newVersionId) {\n            this._versionId = newVersionId;\n            this._alternativeVersionId = this._versionId;\n        };\n        TextModel.prototype._overwriteAlternativeVersionId = function (newAlternativeVersionId) {\n            this._alternativeVersionId = newAlternativeVersionId;\n        };\n        TextModel.prototype.isDisposed = function () {\n            return this._isDisposed;\n        };\n        TextModel.prototype.dispose = function () {\n            this._isDisposed = true;\n            // Null out members, such that any use of a disposed model will throw exceptions sooner rather than later\n            this._lines = null;\n            this._EOL = null;\n            this._BOM = null;\n            _super.prototype.dispose.call(this);\n        };\n        TextModel.prototype._createContentChangedFlushEvent = function () {\n            return {\n                changeType: editorCommon.EventType.ModelRawContentChangedFlush,\n                detail: null,\n                // TODO@Alex -> remove these fields from here\n                versionId: -1,\n                isUndoing: false,\n                isRedoing: false\n            };\n        };\n        TextModel.prototype._emitContentChanged2 = function (startLineNumber, startColumn, endLineNumber, endColumn, rangeLength, text, isUndoing, isRedoing) {\n            var e = {\n                range: new range_1.Range(startLineNumber, startColumn, endLineNumber, endColumn),\n                rangeLength: rangeLength,\n                text: text,\n                eol: this._EOL,\n                versionId: this.getVersionId(),\n                isUndoing: isUndoing,\n                isRedoing: isRedoing\n            };\n            if (!this._isDisposing) {\n                this.emit(editorCommon.EventType.ModelContentChanged2, e);\n            }\n        };\n        TextModel.prototype._resetValue = function (e, newValue) {\n            this._constructLines(newValue);\n            this._increaseVersionId();\n            e.detail = this.toRawText();\n            e.versionId = this._versionId;\n        };\n        TextModel.prototype.toRawText = function () {\n            return {\n                BOM: this._BOM,\n                EOL: this._EOL,\n                lines: this.getLinesContent(),\n                length: this.getValueLength(),\n                options: this._options\n            };\n        };\n        TextModel.prototype.equals = function (other) {\n            if (this._BOM !== other.BOM) {\n                return false;\n            }\n            if (this._EOL !== other.EOL) {\n                return false;\n            }\n            if (this._lines.length !== other.lines.length) {\n                return false;\n            }\n            for (var i = 0, len = this._lines.length; i < len; i++) {\n                if (this._lines[i].text !== other.lines[i]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        TextModel.prototype.setValue = function (value) {\n            if (value === null) {\n                // There's nothing to do\n                return;\n            }\n            var rawText = null;\n            rawText = TextModel.toRawText(value, {\n                tabSize: this._options.tabSize,\n                insertSpaces: this._options.insertSpaces,\n                trimAutoWhitespace: this._options.trimAutoWhitespace,\n                detectIndentation: false,\n                defaultEOL: this._options.defaultEOL\n            });\n            this.setValueFromRawText(rawText);\n        };\n        TextModel.prototype.setValueFromRawText = function (newValue) {\n            if (newValue === null) {\n                // There's nothing to do\n                return;\n            }\n            var oldFullModelRange = this.getFullModelRange();\n            var oldModelValueLength = this.getValueLengthInRange(oldFullModelRange);\n            var endLineNumber = this.getLineCount();\n            var endColumn = this.getLineMaxColumn(endLineNumber);\n            var e = this._createContentChangedFlushEvent();\n            this._resetValue(e, newValue);\n            this._emitModelContentChangedFlushEvent(e);\n            this._emitContentChanged2(1, 1, endLineNumber, endColumn, oldModelValueLength, this.getValue(), false, false);\n        };\n        TextModel.prototype.getValue = function (eol, preserveBOM) {\n            if (preserveBOM === void 0) { preserveBOM = false; }\n            var fullModelRange = this.getFullModelRange();\n            var fullModelValue = this.getValueInRange(fullModelRange, eol);\n            if (preserveBOM) {\n                return this._BOM + fullModelValue;\n            }\n            return fullModelValue;\n        };\n        TextModel.prototype.getValueLength = function (eol, preserveBOM) {\n            if (preserveBOM === void 0) { preserveBOM = false; }\n            var fullModelRange = this.getFullModelRange();\n            var fullModelValue = this.getValueLengthInRange(fullModelRange, eol);\n            if (preserveBOM) {\n                return this._BOM.length + fullModelValue;\n            }\n            return fullModelValue;\n        };\n        TextModel.prototype.getEmptiedValueInRange = function (rawRange, fillCharacter, eol) {\n            if (fillCharacter === void 0) { fillCharacter = ''; }\n            if (eol === void 0) { eol = editorCommon.EndOfLinePreference.TextDefined; }\n            var range = this.validateRange(rawRange);\n            if (range.isEmpty()) {\n                return '';\n            }\n            if (range.startLineNumber === range.endLineNumber) {\n                return this._repeatCharacter(fillCharacter, range.endColumn - range.startColumn);\n            }\n            var lineEnding = this._getEndOfLine(eol), startLineIndex = range.startLineNumber - 1, endLineIndex = range.endLineNumber - 1, resultLines = [];\n            resultLines.push(this._repeatCharacter(fillCharacter, this._lines[startLineIndex].text.length - range.startColumn + 1));\n            for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n                resultLines.push(this._repeatCharacter(fillCharacter, this._lines[i].text.length));\n            }\n            resultLines.push(this._repeatCharacter(fillCharacter, range.endColumn - 1));\n            return resultLines.join(lineEnding);\n        };\n        TextModel.prototype._repeatCharacter = function (fillCharacter, count) {\n            var r = '';\n            for (var i = 0; i < count; i++) {\n                r += fillCharacter;\n            }\n            return r;\n        };\n        TextModel.prototype.getValueInRange = function (rawRange, eol) {\n            if (eol === void 0) { eol = editorCommon.EndOfLinePreference.TextDefined; }\n            var range = this.validateRange(rawRange);\n            if (range.isEmpty()) {\n                return '';\n            }\n            if (range.startLineNumber === range.endLineNumber) {\n                return this._lines[range.startLineNumber - 1].text.substring(range.startColumn - 1, range.endColumn - 1);\n            }\n            var lineEnding = this._getEndOfLine(eol), startLineIndex = range.startLineNumber - 1, endLineIndex = range.endLineNumber - 1, resultLines = [];\n            resultLines.push(this._lines[startLineIndex].text.substring(range.startColumn - 1));\n            for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n                resultLines.push(this._lines[i].text);\n            }\n            resultLines.push(this._lines[endLineIndex].text.substring(0, range.endColumn - 1));\n            return resultLines.join(lineEnding);\n        };\n        TextModel.prototype.getValueLengthInRange = function (rawRange, eol) {\n            if (eol === void 0) { eol = editorCommon.EndOfLinePreference.TextDefined; }\n            var range = this.validateRange(rawRange);\n            if (range.isEmpty()) {\n                return 0;\n            }\n            if (range.startLineNumber === range.endLineNumber) {\n                return (range.endColumn - range.startColumn);\n            }\n            var startOffset = this.getOffsetAt(new position_1.Position(range.startLineNumber, range.startColumn));\n            var endOffset = this.getOffsetAt(new position_1.Position(range.endLineNumber, range.endColumn));\n            return endOffset - startOffset;\n        };\n        TextModel.prototype.isDominatedByLongLines = function () {\n            var smallLineCharCount = 0, longLineCharCount = 0, i, len, lines = this._lines, lineLength;\n            for (i = 0, len = this._lines.length; i < len; i++) {\n                lineLength = lines[i].text.length;\n                if (lineLength >= exports.LONG_LINE_BOUNDARY) {\n                    longLineCharCount += lineLength;\n                }\n                else {\n                    smallLineCharCount += lineLength;\n                }\n            }\n            return (longLineCharCount > smallLineCharCount);\n        };\n        TextModel.prototype.getLineCount = function () {\n            return this._lines.length;\n        };\n        TextModel.prototype.getLineContent = function (lineNumber) {\n            if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n                throw new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n            }\n            return this._lines[lineNumber - 1].text;\n        };\n        TextModel.prototype.getIndentLevel = function (lineNumber) {\n            if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n                throw new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n            }\n            return this._lines[lineNumber - 1].getIndentLevel();\n        };\n        TextModel.prototype._resetIndentRanges = function () {\n            this._indentRanges = null;\n        };\n        TextModel.prototype._getIndentRanges = function () {\n            if (!this._indentRanges) {\n                this._indentRanges = indentRanges_1.computeRanges(this);\n            }\n            return this._indentRanges;\n        };\n        TextModel.prototype.getIndentRanges = function () {\n            var indentRanges = this._getIndentRanges();\n            return indentRanges_1.IndentRange.deepCloneArr(indentRanges);\n        };\n        TextModel.prototype.getLineIndentGuide = function (lineNumber) {\n            if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n                throw new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n            }\n            var indentRanges = this._getIndentRanges();\n            for (var i = indentRanges.length - 1; i >= 0; i--) {\n                var rng = indentRanges[i];\n                if (rng.startLineNumber === lineNumber) {\n                    return Math.ceil(rng.indent / this._options.tabSize);\n                }\n                if (rng.startLineNumber < lineNumber && lineNumber <= rng.endLineNumber) {\n                    return 1 + Math.floor(rng.indent / this._options.tabSize);\n                }\n                if (rng.endLineNumber + 1 === lineNumber) {\n                    if (i === 0 || indentRanges[i - 1].endLineNumber + 1 !== lineNumber) {\n                        // For endLineNumber matches, we need to find the outermost indent range\n                        return Math.ceil(rng.indent / this._options.tabSize);\n                    }\n                }\n            }\n            return 0;\n        };\n        TextModel.prototype.getLinesContent = function () {\n            var r = [];\n            for (var i = 0, len = this._lines.length; i < len; i++) {\n                r[i] = this._lines[i].text;\n            }\n            return r;\n        };\n        TextModel.prototype.getEOL = function () {\n            return this._EOL;\n        };\n        TextModel.prototype.setEOL = function (eol) {\n            var newEOL = (eol === editorCommon.EndOfLineSequence.CRLF ? '\\r\\n' : '\\n');\n            if (this._EOL === newEOL) {\n                // Nothing to do\n                return;\n            }\n            var oldFullModelRange = this.getFullModelRange();\n            var oldModelValueLength = this.getValueLengthInRange(oldFullModelRange);\n            var endLineNumber = this.getLineCount();\n            var endColumn = this.getLineMaxColumn(endLineNumber);\n            this._EOL = newEOL;\n            this._lineStarts = null;\n            this._increaseVersionId();\n            var e = this._createContentChangedFlushEvent();\n            e.detail = this.toRawText();\n            e.versionId = this._versionId;\n            this._emitModelContentChangedFlushEvent(e);\n            this._emitContentChanged2(1, 1, endLineNumber, endColumn, oldModelValueLength, this.getValue(), false, false);\n        };\n        TextModel.prototype.getLineMinColumn = function (lineNumber) {\n            return 1;\n        };\n        TextModel.prototype.getLineMaxColumn = function (lineNumber) {\n            if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n                throw new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n            }\n            return this._lines[lineNumber - 1].text.length + 1;\n        };\n        TextModel.prototype.getLineFirstNonWhitespaceColumn = function (lineNumber) {\n            if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n                throw new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n            }\n            var result = strings.firstNonWhitespaceIndex(this._lines[lineNumber - 1].text);\n            if (result === -1) {\n                return 0;\n            }\n            return result + 1;\n        };\n        TextModel.prototype.getLineLastNonWhitespaceColumn = function (lineNumber) {\n            if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n                throw new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n            }\n            var result = strings.lastNonWhitespaceIndex(this._lines[lineNumber - 1].text);\n            if (result === -1) {\n                return 0;\n            }\n            return result + 2;\n        };\n        TextModel.prototype.validateLineNumber = function (lineNumber) {\n            if (lineNumber < 1) {\n                lineNumber = 1;\n            }\n            if (lineNumber > this._lines.length) {\n                lineNumber = this._lines.length;\n            }\n            return lineNumber;\n        };\n        TextModel.prototype.validatePosition = function (position) {\n            var lineNumber = position.lineNumber ? position.lineNumber : 1;\n            var column = position.column ? position.column : 1;\n            if (lineNumber < 1) {\n                lineNumber = 1;\n                column = 1;\n            }\n            else if (lineNumber > this._lines.length) {\n                lineNumber = this._lines.length;\n                column = this.getLineMaxColumn(lineNumber);\n            }\n            else {\n                var maxColumn = this.getLineMaxColumn(lineNumber);\n                if (column < 1) {\n                    column = 1;\n                }\n                else if (column > maxColumn) {\n                    column = maxColumn;\n                }\n            }\n            return new position_1.Position(lineNumber, column);\n        };\n        TextModel.prototype.validateRange = function (range) {\n            var start = this.validatePosition(new position_1.Position(range.startLineNumber, range.startColumn));\n            var end = this.validatePosition(new position_1.Position(range.endLineNumber, range.endColumn));\n            return new range_1.Range(start.lineNumber, start.column, end.lineNumber, end.column);\n        };\n        TextModel.prototype.modifyPosition = function (rawPosition, offset) {\n            return this.getPositionAt(this.getOffsetAt(rawPosition) + offset);\n        };\n        TextModel.prototype.getFullModelRange = function () {\n            var lineCount = this.getLineCount();\n            return new range_1.Range(1, 1, lineCount, this.getLineMaxColumn(lineCount));\n        };\n        TextModel.prototype._emitModelContentChangedFlushEvent = function (e) {\n            if (!this._isDisposing) {\n                this.emit(editorCommon.EventType.ModelRawContentChanged, e);\n            }\n        };\n        TextModel.toRawText = function (rawText, opts) {\n            // Count the number of lines that end with \\r\\n\n            var carriageReturnCnt = 0, lastCarriageReturnIndex = -1;\n            while ((lastCarriageReturnIndex = rawText.indexOf('\\r', lastCarriageReturnIndex + 1)) !== -1) {\n                carriageReturnCnt++;\n            }\n            // Split the text into lines\n            var lines = rawText.split(/\\r\\n|\\r|\\n/);\n            // Remove the BOM (if present)\n            var BOM = '';\n            if (strings.startsWithUTF8BOM(lines[0])) {\n                BOM = strings.UTF8_BOM_CHARACTER;\n                lines[0] = lines[0].substr(1);\n            }\n            var lineFeedCnt = lines.length - 1;\n            var EOL = '';\n            if (lineFeedCnt === 0) {\n                // This is an empty file or a file with precisely one line\n                EOL = (opts.defaultEOL === editorCommon.DefaultEndOfLine.LF ? '\\n' : '\\r\\n');\n            }\n            else if (carriageReturnCnt > lineFeedCnt / 2) {\n                // More than half of the file contains \\r\\n ending lines\n                EOL = '\\r\\n';\n            }\n            else {\n                // At least one line more ends in \\n\n                EOL = '\\n';\n            }\n            var resolvedOpts;\n            if (opts.detectIndentation) {\n                var guessedIndentation = indentationGuesser_1.guessIndentation(lines, opts.tabSize, opts.insertSpaces);\n                resolvedOpts = {\n                    tabSize: guessedIndentation.tabSize,\n                    insertSpaces: guessedIndentation.insertSpaces,\n                    trimAutoWhitespace: opts.trimAutoWhitespace,\n                    defaultEOL: opts.defaultEOL\n                };\n            }\n            else {\n                resolvedOpts = {\n                    tabSize: opts.tabSize,\n                    insertSpaces: opts.insertSpaces,\n                    trimAutoWhitespace: opts.trimAutoWhitespace,\n                    defaultEOL: opts.defaultEOL\n                };\n            }\n            return {\n                BOM: BOM,\n                EOL: EOL,\n                lines: lines,\n                length: rawText.length,\n                options: resolvedOpts\n            };\n        };\n        TextModel.prototype._constructLines = function (rawText) {\n            var tabSize = rawText.options.tabSize;\n            var rawLines = rawText.lines;\n            var modelLines = [];\n            for (var i = 0, len = rawLines.length; i < len; i++) {\n                modelLines[i] = new modelLine_1.ModelLine(i + 1, rawLines[i], tabSize);\n            }\n            this._BOM = rawText.BOM;\n            this._EOL = rawText.EOL;\n            this._lines = modelLines;\n            this._lineStarts = null;\n            this._resetIndentRanges();\n        };\n        TextModel.prototype._getEndOfLine = function (eol) {\n            switch (eol) {\n                case editorCommon.EndOfLinePreference.LF:\n                    return '\\n';\n                case editorCommon.EndOfLinePreference.CRLF:\n                    return '\\r\\n';\n                case editorCommon.EndOfLinePreference.TextDefined:\n                    return this.getEOL();\n            }\n            throw new Error('Unknown EOL preference');\n        };\n        TextModel._isMultiline = function (searchString) {\n            var BACKSLASH_CHAR_CODE = '\\\\'.charCodeAt(0);\n            var n_CHAR_CODE = 'n'.charCodeAt(0);\n            var r_CHAR_CODE = 'r'.charCodeAt(0);\n            if (!searchString || searchString.length === 0) {\n                return false;\n            }\n            for (var i = 0, len = searchString.length; i < len; i++) {\n                var chCode = searchString.charCodeAt(i);\n                if (chCode === BACKSLASH_CHAR_CODE) {\n                    // move to next char\n                    i++;\n                    if (i >= len) {\n                        // string ends with a \\\n                        break;\n                    }\n                    var nextChCode = searchString.charCodeAt(i);\n                    if (nextChCode === n_CHAR_CODE || nextChCode === r_CHAR_CODE) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        TextModel.parseSearchRequest = function (searchString, isRegex, matchCase, wholeWord) {\n            if (searchString === '') {\n                return null;\n            }\n            // Try to create a RegExp out of the params\n            var regex = null;\n            try {\n                regex = strings.createRegExp(searchString, isRegex, matchCase, wholeWord, true);\n            }\n            catch (err) {\n                return null;\n            }\n            if (!regex) {\n                return null;\n            }\n            return {\n                regex: regex,\n                isMultiline: isRegex && TextModel._isMultiline(searchString)\n            };\n        };\n        TextModel.prototype.findMatches = function (searchString, rawSearchScope, isRegex, matchCase, wholeWord, limitResultCount) {\n            if (limitResultCount === void 0) { limitResultCount = LIMIT_FIND_COUNT; }\n            var r = TextModel.parseSearchRequest(searchString, isRegex, matchCase, wholeWord);\n            if (!r) {\n                return [];\n            }\n            var searchRange;\n            if (range_1.Range.isIRange(rawSearchScope)) {\n                searchRange = rawSearchScope;\n            }\n            else {\n                searchRange = this.getFullModelRange();\n            }\n            if (r.isMultiline) {\n                return this._doFindMatchesMultiline(searchRange, r.regex, limitResultCount);\n            }\n            return this._doFindMatchesLineByLine(searchRange, r.regex, limitResultCount);\n        };\n        TextModel.prototype._doFindMatchesMultiline = function (searchRange, searchRegex, limitResultCount) {\n            var deltaOffset = this.getOffsetAt(searchRange.getStartPosition());\n            var text = this.getValueInRange(searchRange);\n            var result = [];\n            var prevStartOffset = 0;\n            var prevEndOffset = 0;\n            var counter = 0;\n            var m;\n            while ((m = searchRegex.exec(text))) {\n                var startOffset = deltaOffset + m.index;\n                var endOffset = startOffset + m[0].length;\n                if (prevStartOffset === startOffset && prevEndOffset === endOffset) {\n                    // Exit early if the regex matches the same range\n                    return result;\n                }\n                var startPosition = this.getPositionAt(startOffset);\n                var endPosition = this.getPositionAt(endOffset);\n                result[counter++] = new range_1.Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n                if (counter >= limitResultCount) {\n                    return result;\n                }\n                prevStartOffset = startOffset;\n                prevEndOffset = endOffset;\n            }\n            return result;\n        };\n        TextModel.prototype._doFindMatchesLineByLine = function (searchRange, searchRegex, limitResultCount) {\n            var result = [];\n            var text;\n            var counter = 0;\n            // Early case for a search range that starts & stops on the same line number\n            if (searchRange.startLineNumber === searchRange.endLineNumber) {\n                text = this._lines[searchRange.startLineNumber - 1].text.substring(searchRange.startColumn - 1, searchRange.endColumn - 1);\n                counter = this._findMatchesInLine(searchRegex, text, searchRange.startLineNumber, searchRange.startColumn - 1, counter, result, limitResultCount);\n                return result;\n            }\n            // Collect results from first line\n            text = this._lines[searchRange.startLineNumber - 1].text.substring(searchRange.startColumn - 1);\n            counter = this._findMatchesInLine(searchRegex, text, searchRange.startLineNumber, searchRange.startColumn - 1, counter, result, limitResultCount);\n            // Collect results from middle lines\n            for (var lineNumber = searchRange.startLineNumber + 1; lineNumber < searchRange.endLineNumber && counter < limitResultCount; lineNumber++) {\n                counter = this._findMatchesInLine(searchRegex, this._lines[lineNumber - 1].text, lineNumber, 0, counter, result, limitResultCount);\n            }\n            // Collect results from last line\n            if (counter < limitResultCount) {\n                text = this._lines[searchRange.endLineNumber - 1].text.substring(0, searchRange.endColumn - 1);\n                counter = this._findMatchesInLine(searchRegex, text, searchRange.endLineNumber, 0, counter, result, limitResultCount);\n            }\n            return result;\n        };\n        TextModel.prototype.findNextMatch = function (searchString, rawSearchStart, isRegex, matchCase, wholeWord) {\n            var r = TextModel.parseSearchRequest(searchString, isRegex, matchCase, wholeWord);\n            if (!r) {\n                return null;\n            }\n            var searchStart = this.validatePosition(rawSearchStart);\n            if (r.isMultiline) {\n                return this._doFindNextMatchMultiline(searchStart, r.regex);\n            }\n            return this._doFindNextMatchLineByLine(searchStart, r.regex);\n        };\n        TextModel.prototype._doFindNextMatchMultiline = function (searchStart, searchRegex) {\n            var deltaOffset = this.getOffsetAt(searchStart);\n            var text = this.getValueInRange(new range_1.Range(searchStart.lineNumber, searchStart.column, this.getLineCount(), this.getLineMaxColumn(this.getLineCount())));\n            var m = searchRegex.exec(text);\n            if (m) {\n                var startOffset = deltaOffset + m.index;\n                var endOffset = startOffset + m[0].length;\n                var startPosition = this.getPositionAt(startOffset);\n                var endPosition = this.getPositionAt(endOffset);\n                return new range_1.Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n            }\n            if (searchStart.lineNumber !== 1 || searchStart.column !== -1) {\n                // Try again from the top\n                return this._doFindNextMatchMultiline(new position_1.Position(1, 1), searchRegex);\n            }\n            return null;\n        };\n        TextModel.prototype._doFindNextMatchLineByLine = function (searchStart, searchRegex) {\n            var lineCount = this.getLineCount();\n            var startLineNumber = searchStart.lineNumber;\n            var text;\n            var r;\n            // Look in first line\n            text = this._lines[startLineNumber - 1].text.substring(searchStart.column - 1);\n            r = this._findFirstMatchInLine(searchRegex, text, startLineNumber, searchStart.column - 1);\n            if (r) {\n                return r;\n            }\n            for (var i = 1; i <= lineCount; i++) {\n                var lineIndex = (startLineNumber + i - 1) % lineCount;\n                text = this._lines[lineIndex].text;\n                r = this._findFirstMatchInLine(searchRegex, text, lineIndex + 1, 0);\n                if (r) {\n                    return r;\n                }\n            }\n            return null;\n        };\n        TextModel.prototype.findPreviousMatch = function (searchString, rawSearchStart, isRegex, matchCase, wholeWord) {\n            var r = TextModel.parseSearchRequest(searchString, isRegex, matchCase, wholeWord);\n            if (!r) {\n                return null;\n            }\n            var searchStart = this.validatePosition(rawSearchStart);\n            if (r.isMultiline) {\n                return this._doFindPreviousMatchMultiline(searchStart, r.regex);\n            }\n            return this._doFindPreviousMatchLineByLine(searchStart, r.regex);\n        };\n        TextModel.prototype._doFindPreviousMatchMultiline = function (searchStart, searchRegex) {\n            var matches = this._doFindMatchesMultiline(new range_1.Range(1, 1, searchStart.lineNumber, searchStart.column), searchRegex, 10 * LIMIT_FIND_COUNT);\n            if (matches.length > 0) {\n                return matches[matches.length - 1];\n            }\n            if (searchStart.lineNumber !== this.getLineCount() || searchStart.column !== this.getLineMaxColumn(this.getLineCount())) {\n                // Try again with all content\n                return this._doFindPreviousMatchMultiline(new position_1.Position(this.getLineCount(), this.getLineMaxColumn(this.getLineCount())), searchRegex);\n            }\n            return null;\n        };\n        TextModel.prototype._doFindPreviousMatchLineByLine = function (searchStart, searchRegex) {\n            var lineCount = this.getLineCount();\n            var startLineNumber = searchStart.lineNumber;\n            var text;\n            var r;\n            // Look in first line\n            text = this._lines[startLineNumber - 1].text.substring(0, searchStart.column - 1);\n            r = this._findLastMatchInLine(searchRegex, text, startLineNumber);\n            if (r) {\n                return r;\n            }\n            for (var i = 1; i <= lineCount; i++) {\n                var lineIndex = (lineCount + startLineNumber - i - 1) % lineCount;\n                text = this._lines[lineIndex].text;\n                r = this._findLastMatchInLine(searchRegex, text, lineIndex + 1);\n                if (r) {\n                    return r;\n                }\n            }\n            return null;\n        };\n        TextModel.prototype._findFirstMatchInLine = function (searchRegex, text, lineNumber, deltaOffset) {\n            var m = searchRegex.exec(text);\n            if (!m) {\n                return null;\n            }\n            return new range_1.Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset);\n        };\n        TextModel.prototype._findLastMatchInLine = function (searchRegex, text, lineNumber) {\n            var bestResult = null;\n            var m;\n            while ((m = searchRegex.exec(text))) {\n                var result = new range_1.Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length);\n                if (result.equalsRange(bestResult)) {\n                    break;\n                }\n                bestResult = result;\n                if (m.index + m[0].length === text.length) {\n                    // Reached the end of the line\n                    break;\n                }\n            }\n            return bestResult;\n        };\n        TextModel.prototype._findMatchesInLine = function (searchRegex, text, lineNumber, deltaOffset, counter, result, limitResultCount) {\n            var m;\n            // Reset regex to search from the beginning\n            searchRegex.lastIndex = 0;\n            do {\n                m = searchRegex.exec(text);\n                if (m) {\n                    var range = new range_1.Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset);\n                    if (range.equalsRange(result[result.length - 1])) {\n                        // Exit early if the regex matches the same range\n                        return counter;\n                    }\n                    result.push(range);\n                    counter++;\n                    if (counter >= limitResultCount) {\n                        return counter;\n                    }\n                    if (m.index + m[0].length === text.length) {\n                        // Reached the end of the line\n                        return counter;\n                    }\n                }\n            } while (m);\n            return counter;\n        };\n        TextModel.MODEL_SYNC_LIMIT = 5 * 1024 * 1024; // 5 MB\n        TextModel.MODEL_TOKENIZATION_LIMIT = 20 * 1024 * 1024; // 20 MB\n        TextModel.DEFAULT_CREATION_OPTIONS = {\n            tabSize: defaultConfig_1.DEFAULT_INDENTATION.tabSize,\n            insertSpaces: defaultConfig_1.DEFAULT_INDENTATION.insertSpaces,\n            detectIndentation: false,\n            defaultEOL: editorCommon.DefaultEndOfLine.LF,\n            trimAutoWhitespace: defaultConfig_1.DEFAULT_TRIM_AUTO_WHITESPACE,\n        };\n        return TextModel;\n    }(eventEmitter_1.OrderGuaranteeEventEmitter));\n    exports.TextModel = TextModel;\n    var RawText = (function () {\n        function RawText() {\n        }\n        RawText.fromString = function (rawText, opts) {\n            return TextModel.toRawText(rawText, opts);\n        };\n        RawText.fromStringWithModelOptions = function (rawText, model) {\n            var opts = model.getOptions();\n            return TextModel.toRawText(rawText, {\n                tabSize: opts.tabSize,\n                insertSpaces: opts.insertSpaces,\n                trimAutoWhitespace: opts.trimAutoWhitespace,\n                detectIndentation: false,\n                defaultEOL: opts.defaultEOL\n            });\n        };\n        return RawText;\n    }());\n    exports.RawText = RawText;\n});\n\n\n\n\n\n\ndefine(__m[88], __M([1,0,69,33,2,12,42,52,5,16,45,63,84,36,11,23,19,86,57,34]), function (require, exports, nls, async_1, errors_1, lifecycle_1, stopwatch_1, timer, winjs_base_1, editorCommon, textModel_1, textModelWithTokensHelpers_1, tokenIterator_1, nullMode_1, supports_1, richEditBrackets_1, modeTransition_1, lineToken_1, tokensBinaryEncoding_1, languageConfigurationRegistry_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var ModeToModelBinder = (function () {\n        function ModeToModelBinder(modePromise, model) {\n            var _this = this;\n            this._modePromise = modePromise;\n            // Create an external mode promise that fires after the mode is set to the model\n            this._externalModePromise = new winjs_base_1.TPromise(function (c, e, p) {\n                _this._externalModePromise_c = c;\n                _this._externalModePromise_e = e;\n            }, function () {\n                // this promise cannot be canceled\n            });\n            this._model = model;\n            this._isDisposed = false;\n            // Ensure asynchronicity\n            winjs_base_1.TPromise.timeout(0).then(function () {\n                return _this._modePromise;\n            }).then(function (mode) {\n                if (_this._isDisposed) {\n                    _this._externalModePromise_c(false);\n                    return;\n                }\n                var model = _this._model;\n                _this.dispose();\n                model.setMode(mode);\n                model._warmUpTokens();\n                _this._externalModePromise_c(true);\n            }).done(null, function (err) {\n                _this._externalModePromise_e(err);\n                errors_1.onUnexpectedError(err);\n            });\n        }\n        ModeToModelBinder.prototype.getModePromise = function () {\n            return this._externalModePromise;\n        };\n        ModeToModelBinder.prototype.dispose = function () {\n            this._modePromise = null;\n            this._model = null;\n            this._isDisposed = true;\n        };\n        return ModeToModelBinder;\n    }());\n    var FullModelRetokenizer = (function () {\n        function FullModelRetokenizer(retokenizePromise, model) {\n            var _this = this;\n            this._retokenizePromise = retokenizePromise;\n            this._model = model;\n            this._isDisposed = false;\n            this.isFulfilled = false;\n            // Ensure asynchronicity\n            winjs_base_1.TPromise.timeout(0).then(function () {\n                return _this._retokenizePromise;\n            }).then(function () {\n                if (_this._isDisposed) {\n                    return;\n                }\n                _this.isFulfilled = true;\n                _this._model.onRetokenizerFulfilled();\n            }).done(null, errors_1.onUnexpectedError);\n        }\n        FullModelRetokenizer.prototype.getRange = function () {\n            return null;\n        };\n        FullModelRetokenizer.prototype.dispose = function () {\n            this._retokenizePromise = null;\n            this._model = null;\n            this._isDisposed = true;\n        };\n        return FullModelRetokenizer;\n    }());\n    exports.FullModelRetokenizer = FullModelRetokenizer;\n    var LineContext = (function () {\n        function LineContext(topLevelMode, line, map) {\n            this.modeTransitions = line.getModeTransitions(topLevelMode);\n            this._text = line.text;\n            this._lineTokens = line.getTokens(map);\n        }\n        LineContext.prototype.getLineContent = function () {\n            return this._text;\n        };\n        LineContext.prototype.getTokenCount = function () {\n            return this._lineTokens.getTokenCount();\n        };\n        LineContext.prototype.getTokenStartIndex = function (tokenIndex) {\n            return this._lineTokens.getTokenStartIndex(tokenIndex);\n        };\n        LineContext.prototype.getTokenEndIndex = function (tokenIndex) {\n            return this._lineTokens.getTokenEndIndex(tokenIndex, this._text.length);\n        };\n        LineContext.prototype.getTokenType = function (tokenIndex) {\n            return this._lineTokens.getTokenType(tokenIndex);\n        };\n        LineContext.prototype.getTokenText = function (tokenIndex) {\n            var startIndex = this._lineTokens.getTokenStartIndex(tokenIndex);\n            var endIndex = this._lineTokens.getTokenEndIndex(tokenIndex, this._text.length);\n            return this._text.substring(startIndex, endIndex);\n        };\n        LineContext.prototype.findIndexOfOffset = function (offset) {\n            return this._lineTokens.findIndexOfOffset(offset);\n        };\n        return LineContext;\n    }());\n    var TextModelWithTokens = (function (_super) {\n        __extends(TextModelWithTokens, _super);\n        function TextModelWithTokens(allowedEventTypes, rawText, modeOrPromise) {\n            var _this = this;\n            allowedEventTypes.push(editorCommon.EventType.ModelTokensChanged);\n            allowedEventTypes.push(editorCommon.EventType.ModelModeChanged);\n            allowedEventTypes.push(editorCommon.EventType.ModelModeSupportChanged);\n            _super.call(this, allowedEventTypes, rawText);\n            this._mode = null;\n            this._modeListener = null;\n            this._modeToModelBinder = null;\n            this._tokensInflatorMap = null;\n            this._invalidLineStartIndex = 0;\n            this._lastState = null;\n            this._revalidateTokensTimeout = -1;\n            this._scheduleRetokenizeNow = null;\n            this._retokenizers = null;\n            if (!modeOrPromise) {\n                this._mode = new nullMode_1.NullMode();\n            }\n            else if (winjs_base_1.TPromise.is(modeOrPromise)) {\n                // TODO@Alex: To avoid mode id changes, we check if this promise is resolved\n                var promiseValue = modeOrPromise._value;\n                if (promiseValue && typeof promiseValue.getId === 'function') {\n                    // The promise is already resolved\n                    this._mode = this._massageMode(promiseValue);\n                    this._resetModeListener(this._mode);\n                }\n                else {\n                    var modePromise = modeOrPromise;\n                    this._modeToModelBinder = new ModeToModelBinder(modePromise, this);\n                    this._mode = new nullMode_1.NullMode();\n                }\n            }\n            else {\n                this._mode = this._massageMode(modeOrPromise);\n                this._resetModeListener(this._mode);\n            }\n            this._revalidateTokensTimeout = -1;\n            this._scheduleRetokenizeNow = new async_1.RunOnceScheduler(function () { return _this._retokenizeNow(); }, 200);\n            this._retokenizers = [];\n            this._resetTokenizationState();\n        }\n        TextModelWithTokens.prototype.dispose = function () {\n            if (this._modeToModelBinder) {\n                this._modeToModelBinder.dispose();\n                this._modeToModelBinder = null;\n            }\n            this._resetModeListener(null);\n            this._clearTimers();\n            this._mode = null;\n            this._lastState = null;\n            this._tokensInflatorMap = null;\n            this._retokenizers = lifecycle_1.dispose(this._retokenizers);\n            this._scheduleRetokenizeNow.dispose();\n            _super.prototype.dispose.call(this);\n        };\n        TextModelWithTokens.prototype._shouldAutoTokenize = function () {\n            return false;\n        };\n        TextModelWithTokens.prototype._massageMode = function (mode) {\n            if (this.isTooLargeForHavingAMode()) {\n                return new nullMode_1.NullMode();\n            }\n            if (this.isTooLargeForHavingARichMode()) {\n                return mode.toSimplifiedMode();\n            }\n            return mode;\n        };\n        TextModelWithTokens.prototype.whenModeIsReady = function () {\n            var _this = this;\n            if (this._modeToModelBinder) {\n                // Still waiting for some mode to load\n                return this._modeToModelBinder.getModePromise().then(function () { return _this._mode; });\n            }\n            return winjs_base_1.TPromise.as(this._mode);\n        };\n        TextModelWithTokens.prototype.onRetokenizerFulfilled = function () {\n            this._scheduleRetokenizeNow.schedule();\n        };\n        TextModelWithTokens.prototype._retokenizeNow = function () {\n            var fulfilled = this._retokenizers.filter(function (r) { return r.isFulfilled; });\n            this._retokenizers = this._retokenizers.filter(function (r) { return !r.isFulfilled; });\n            var hasFullModel = false;\n            for (var i = 0; i < fulfilled.length; i++) {\n                if (!fulfilled[i].getRange()) {\n                    hasFullModel = true;\n                }\n            }\n            if (hasFullModel) {\n                // Just invalidate all the lines\n                for (var i = 0, len = this._lines.length; i < len; i++) {\n                    this._lines[i].isInvalid = true;\n                }\n                this._invalidLineStartIndex = 0;\n            }\n            else {\n                var minLineNumber = Number.MAX_VALUE;\n                for (var i = 0; i < fulfilled.length; i++) {\n                    var range = fulfilled[i].getRange();\n                    minLineNumber = Math.min(minLineNumber, range.startLineNumber);\n                    for (var lineNumber = range.startLineNumber; lineNumber <= range.endLineNumber; lineNumber++) {\n                        this._lines[lineNumber - 1].isInvalid = true;\n                    }\n                }\n                if (minLineNumber - 1 < this._invalidLineStartIndex) {\n                    if (this._invalidLineStartIndex < this._lines.length) {\n                        this._lines[this._invalidLineStartIndex].isInvalid = true;\n                    }\n                    this._invalidLineStartIndex = minLineNumber - 1;\n                }\n            }\n            this._beginBackgroundTokenization();\n            for (var i = 0; i < fulfilled.length; i++) {\n                fulfilled[i].dispose();\n            }\n        };\n        TextModelWithTokens.prototype._createRetokenizer = function (retokenizePromise, lineNumber) {\n            return new FullModelRetokenizer(retokenizePromise, this);\n        };\n        TextModelWithTokens.prototype._resetValue = function (e, newValue) {\n            _super.prototype._resetValue.call(this, e, newValue);\n            // Cancel tokenization, clear all tokens and begin tokenizing\n            this._resetTokenizationState();\n        };\n        TextModelWithTokens.prototype._resetMode = function (e, newMode) {\n            // Cancel tokenization, clear all tokens and begin tokenizing\n            this._mode = newMode;\n            this._resetModeListener(newMode);\n            this._resetTokenizationState();\n            this.emitModelTokensChangedEvent(1, this.getLineCount());\n        };\n        TextModelWithTokens.prototype._resetModeListener = function (newMode) {\n            var _this = this;\n            if (this._modeListener) {\n                this._modeListener.dispose();\n                this._modeListener = null;\n            }\n            if (newMode && typeof newMode.addSupportChangedListener === 'function') {\n                this._modeListener = newMode.addSupportChangedListener(function (e) { return _this._onModeSupportChanged(e); });\n            }\n        };\n        TextModelWithTokens.prototype._onModeSupportChanged = function (e) {\n            this._emitModelModeSupportChangedEvent(e);\n            if (e.tokenizationSupport) {\n                this._resetTokenizationState();\n                this.emitModelTokensChangedEvent(1, this.getLineCount());\n            }\n        };\n        TextModelWithTokens.prototype._resetTokenizationState = function () {\n            this._retokenizers = lifecycle_1.dispose(this._retokenizers);\n            this._scheduleRetokenizeNow.cancel();\n            this._clearTimers();\n            for (var i = 0; i < this._lines.length; i++) {\n                this._lines[i].setState(null);\n            }\n            this._initializeTokenizationState();\n        };\n        TextModelWithTokens.prototype._clearTimers = function () {\n            if (this._revalidateTokensTimeout !== -1) {\n                clearTimeout(this._revalidateTokensTimeout);\n                this._revalidateTokensTimeout = -1;\n            }\n        };\n        TextModelWithTokens.prototype._initializeTokenizationState = function () {\n            // Initialize tokenization states\n            var initialState = null;\n            if (this._mode.tokenizationSupport) {\n                try {\n                    initialState = this._mode.tokenizationSupport.getInitialState();\n                }\n                catch (e) {\n                    e.friendlyMessage = TextModelWithTokens.MODE_TOKENIZATION_FAILED_MSG;\n                    errors_1.onUnexpectedError(e);\n                    this._mode = new nullMode_1.NullMode();\n                }\n            }\n            if (!initialState) {\n                initialState = new nullMode_1.NullState(this._mode, null);\n            }\n            this._lines[0].setState(initialState);\n            this._lastState = null;\n            this._tokensInflatorMap = new tokensBinaryEncoding_1.TokensInflatorMap();\n            this._invalidLineStartIndex = 0;\n            this._beginBackgroundTokenization();\n        };\n        TextModelWithTokens.prototype.getLineTokens = function (lineNumber, inaccurateTokensAcceptable) {\n            if (inaccurateTokensAcceptable === void 0) { inaccurateTokensAcceptable = false; }\n            if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n                throw new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n            }\n            if (!inaccurateTokensAcceptable) {\n                this._updateTokensUntilLine(lineNumber, true);\n            }\n            return this._lines[lineNumber - 1].getTokens(this._tokensInflatorMap);\n        };\n        TextModelWithTokens.prototype.getLineContext = function (lineNumber) {\n            if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n                throw new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n            }\n            this._updateTokensUntilLine(lineNumber, true);\n            return new LineContext(this._mode, this._lines[lineNumber - 1], this._tokensInflatorMap);\n        };\n        TextModelWithTokens.prototype._getInternalTokens = function (lineNumber) {\n            this._updateTokensUntilLine(lineNumber, true);\n            return this._lines[lineNumber - 1].getTokens(this._tokensInflatorMap);\n        };\n        TextModelWithTokens.prototype.getMode = function () {\n            return this._mode;\n        };\n        TextModelWithTokens.prototype.setMode = function (newModeOrPromise) {\n            if (!newModeOrPromise) {\n                // There's nothing to do\n                return;\n            }\n            if (this._modeToModelBinder) {\n                this._modeToModelBinder.dispose();\n                this._modeToModelBinder = null;\n            }\n            if (winjs_base_1.TPromise.is(newModeOrPromise)) {\n                this._modeToModelBinder = new ModeToModelBinder(newModeOrPromise, this);\n            }\n            else {\n                var actualNewMode = this._massageMode(newModeOrPromise);\n                if (this._mode !== actualNewMode) {\n                    var e2 = {\n                        oldMode: this._mode,\n                        newMode: actualNewMode\n                    };\n                    this._resetMode(e2, actualNewMode);\n                    this._emitModelModeChangedEvent(e2);\n                }\n            }\n        };\n        TextModelWithTokens.prototype.getModeIdAtPosition = function (_lineNumber, _column) {\n            var validPosition = this.validatePosition({\n                lineNumber: _lineNumber,\n                column: _column\n            });\n            var lineNumber = validPosition.lineNumber;\n            var column = validPosition.column;\n            if (column === 1) {\n                return this.getStateBeforeLine(lineNumber).getMode().getId();\n            }\n            else if (column === this.getLineMaxColumn(lineNumber)) {\n                return this.getStateAfterLine(lineNumber).getMode().getId();\n            }\n            else {\n                var modeTransitions = this._getLineModeTransitions(lineNumber);\n                var modeTransitionIndex = modeTransition_1.ModeTransition.findIndexInSegmentsArray(modeTransitions, column - 1);\n                return modeTransitions[modeTransitionIndex].modeId;\n            }\n        };\n        TextModelWithTokens.prototype._invalidateLine = function (lineIndex) {\n            this._lines[lineIndex].isInvalid = true;\n            if (lineIndex < this._invalidLineStartIndex) {\n                if (this._invalidLineStartIndex < this._lines.length) {\n                    this._lines[this._invalidLineStartIndex].isInvalid = true;\n                }\n                this._invalidLineStartIndex = lineIndex;\n                this._beginBackgroundTokenization();\n            }\n        };\n        TextModelWithTokens._toLineTokens = function (tokens) {\n            if (!tokens || tokens.length === 0) {\n                return [];\n            }\n            if (tokens[0] instanceof lineToken_1.LineToken) {\n                return tokens;\n            }\n            var result = [];\n            for (var i = 0, len = tokens.length; i < len; i++) {\n                result[i] = new lineToken_1.LineToken(tokens[i].startIndex, tokens[i].type);\n            }\n            return result;\n        };\n        TextModelWithTokens._toModeTransitions = function (modeTransitions) {\n            if (!modeTransitions || modeTransitions.length === 0) {\n                return [];\n            }\n            if (modeTransitions[0] instanceof modeTransition_1.ModeTransition) {\n                return modeTransitions;\n            }\n            var result = [];\n            for (var i = 0, len = modeTransitions.length; i < len; i++) {\n                result[i] = new modeTransition_1.ModeTransition(modeTransitions[i].startIndex, modeTransitions[i].mode);\n            }\n            return result;\n        };\n        TextModelWithTokens.prototype._updateLineTokens = function (lineIndex, map, topLevelMode, r) {\n            this._lines[lineIndex].setTokens(map, TextModelWithTokens._toLineTokens(r.tokens), topLevelMode, TextModelWithTokens._toModeTransitions(r.modeTransitions));\n        };\n        TextModelWithTokens.prototype._beginBackgroundTokenization = function () {\n            var _this = this;\n            if (this._shouldAutoTokenize() && this._revalidateTokensTimeout === -1) {\n                this._revalidateTokensTimeout = setTimeout(function () {\n                    _this._revalidateTokensTimeout = -1;\n                    _this._revalidateTokensNow();\n                }, 0);\n            }\n        };\n        TextModelWithTokens.prototype._warmUpTokens = function () {\n            // Warm up first 100 lines (if it takes less than 50ms)\n            var maxLineNumber = Math.min(100, this.getLineCount());\n            var toLineNumber = maxLineNumber;\n            for (var lineNumber = 1; lineNumber <= maxLineNumber; lineNumber++) {\n                var text = this._lines[lineNumber - 1].text;\n                if (text.length >= 200) {\n                    // This line is over 200 chars long, so warm up without it\n                    toLineNumber = lineNumber - 1;\n                    break;\n                }\n            }\n            this._revalidateTokensNow(toLineNumber);\n            if (this._invalidLineStartIndex < this._lines.length) {\n                this._beginBackgroundTokenization();\n            }\n        };\n        TextModelWithTokens.prototype._revalidateTokensNow = function (toLineNumber) {\n            if (toLineNumber === void 0) { toLineNumber = this._invalidLineStartIndex + 1000000; }\n            var t1 = timer.start(timer.Topic.EDITOR, 'backgroundTokenization');\n            toLineNumber = Math.min(this._lines.length, toLineNumber);\n            var MAX_ALLOWED_TIME = 20, fromLineNumber = this._invalidLineStartIndex + 1, tokenizedChars = 0, currentCharsToTokenize = 0, currentEstimatedTimeToTokenize = 0, sw = stopwatch_1.StopWatch.create(false), elapsedTime;\n            // Tokenize at most 1000 lines. Estimate the tokenization speed per character and stop when:\n            // - MAX_ALLOWED_TIME is reached\n            // - tokenizing the next line would go above MAX_ALLOWED_TIME\n            for (var lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n                elapsedTime = sw.elapsed();\n                if (elapsedTime > MAX_ALLOWED_TIME) {\n                    // Stop if MAX_ALLOWED_TIME is reached\n                    toLineNumber = lineNumber - 1;\n                    break;\n                }\n                // Compute how many characters will be tokenized for this line\n                currentCharsToTokenize = this._lines[lineNumber - 1].text.length;\n                if (tokenizedChars > 0) {\n                    // If we have enough history, estimate how long tokenizing this line would take\n                    currentEstimatedTimeToTokenize = (elapsedTime / tokenizedChars) * currentCharsToTokenize;\n                    if (elapsedTime + currentEstimatedTimeToTokenize > MAX_ALLOWED_TIME) {\n                        // Tokenizing this line will go above MAX_ALLOWED_TIME\n                        toLineNumber = lineNumber - 1;\n                        break;\n                    }\n                }\n                this._updateTokensUntilLine(lineNumber, false);\n                tokenizedChars += currentCharsToTokenize;\n            }\n            elapsedTime = sw.elapsed();\n            if (fromLineNumber <= toLineNumber) {\n                this.emitModelTokensChangedEvent(fromLineNumber, toLineNumber);\n            }\n            if (this._invalidLineStartIndex < this._lines.length) {\n                this._beginBackgroundTokenization();\n            }\n            t1.stop();\n        };\n        TextModelWithTokens.prototype.getStateBeforeLine = function (lineNumber) {\n            this._updateTokensUntilLine(lineNumber - 1, true);\n            return this._lines[lineNumber - 1].getState();\n        };\n        TextModelWithTokens.prototype.getStateAfterLine = function (lineNumber) {\n            this._updateTokensUntilLine(lineNumber, true);\n            return lineNumber < this._lines.length ? this._lines[lineNumber].getState() : this._lastState;\n        };\n        TextModelWithTokens.prototype._getLineModeTransitions = function (lineNumber) {\n            if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n                throw new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n            }\n            this._updateTokensUntilLine(lineNumber, true);\n            return this._lines[lineNumber - 1].getModeTransitions(this._mode);\n        };\n        TextModelWithTokens.prototype._updateTokensUntilLine = function (lineNumber, emitEvents) {\n            var linesLength = this._lines.length;\n            var endLineIndex = lineNumber - 1;\n            var stopLineTokenizationAfter = 1000000000; // 1 billion, if a line is so long, you have other trouble :).\n            var fromLineNumber = this._invalidLineStartIndex + 1, toLineNumber = lineNumber;\n            // Validate all states up to and including endLineIndex\n            for (var lineIndex = this._invalidLineStartIndex; lineIndex <= endLineIndex; lineIndex++) {\n                var endStateIndex = lineIndex + 1;\n                var r = null;\n                var text = this._lines[lineIndex].text;\n                if (this._mode.tokenizationSupport) {\n                    try {\n                        // Tokenize only the first X characters\n                        r = this._mode.tokenizationSupport.tokenize(this._lines[lineIndex].text, this._lines[lineIndex].getState(), 0, stopLineTokenizationAfter);\n                    }\n                    catch (e) {\n                        e.friendlyMessage = TextModelWithTokens.MODE_TOKENIZATION_FAILED_MSG;\n                        errors_1.onUnexpectedError(e);\n                    }\n                    if (r && r.retokenize) {\n                        this._retokenizers.push(this._createRetokenizer(r.retokenize, lineIndex + 1));\n                    }\n                    if (r && r.tokens && r.tokens.length > 0) {\n                        // Cannot have a stop offset before the last token\n                        r.actualStopOffset = Math.max(r.actualStopOffset, r.tokens[r.tokens.length - 1].startIndex + 1);\n                    }\n                    if (r && r.actualStopOffset < text.length) {\n                        // Treat the rest of the line (if above limit) as one default token\n                        r.tokens.push({\n                            startIndex: r.actualStopOffset,\n                            type: ''\n                        });\n                        // Use as end state the starting state\n                        r.endState = this._lines[lineIndex].getState();\n                    }\n                }\n                if (!r) {\n                    r = nullMode_1.nullTokenize(this._mode, text, this._lines[lineIndex].getState());\n                }\n                if (!r.modeTransitions) {\n                    r.modeTransitions = [];\n                }\n                if (r.modeTransitions.length === 0) {\n                    // Make sure there is at least the transition to the top-most mode\n                    r.modeTransitions.push({\n                        startIndex: 0,\n                        mode: this._mode\n                    });\n                }\n                this._updateLineTokens(lineIndex, this._tokensInflatorMap, this._mode, r);\n                if (this._lines[lineIndex].isInvalid) {\n                    this._lines[lineIndex].isInvalid = false;\n                }\n                if (endStateIndex < linesLength) {\n                    if (this._lines[endStateIndex].getState() !== null && r.endState.equals(this._lines[endStateIndex].getState())) {\n                        // The end state of this line remains the same\n                        var nextInvalidLineIndex = lineIndex + 1;\n                        while (nextInvalidLineIndex < linesLength) {\n                            if (this._lines[nextInvalidLineIndex].isInvalid) {\n                                break;\n                            }\n                            if (nextInvalidLineIndex + 1 < linesLength) {\n                                if (this._lines[nextInvalidLineIndex + 1].getState() === null) {\n                                    break;\n                                }\n                            }\n                            else {\n                                if (this._lastState === null) {\n                                    break;\n                                }\n                            }\n                            nextInvalidLineIndex++;\n                        }\n                        this._invalidLineStartIndex = Math.max(this._invalidLineStartIndex, nextInvalidLineIndex);\n                        lineIndex = nextInvalidLineIndex - 1; // -1 because the outer loop increments it\n                    }\n                    else {\n                        this._lines[endStateIndex].setState(r.endState);\n                    }\n                }\n                else {\n                    this._lastState = r.endState;\n                }\n            }\n            this._invalidLineStartIndex = Math.max(this._invalidLineStartIndex, endLineIndex + 1);\n            if (emitEvents && fromLineNumber <= toLineNumber) {\n                this.emitModelTokensChangedEvent(fromLineNumber, toLineNumber);\n            }\n        };\n        TextModelWithTokens.prototype.emitModelTokensChangedEvent = function (fromLineNumber, toLineNumber) {\n            var e = {\n                fromLineNumber: fromLineNumber,\n                toLineNumber: toLineNumber\n            };\n            if (!this._isDisposing) {\n                this.emit(editorCommon.EventType.ModelTokensChanged, e);\n            }\n        };\n        TextModelWithTokens.prototype._emitModelModeChangedEvent = function (e) {\n            if (!this._isDisposing) {\n                this.emit(editorCommon.EventType.ModelModeChanged, e);\n            }\n        };\n        TextModelWithTokens.prototype._emitModelModeSupportChangedEvent = function (e) {\n            if (!this._isDisposing) {\n                this.emit(editorCommon.EventType.ModelModeSupportChanged, e);\n            }\n        };\n        // Having tokens allows implementing additional helper methods\n        TextModelWithTokens.prototype._lineIsTokenized = function (lineNumber) {\n            return this._invalidLineStartIndex > lineNumber - 1;\n        };\n        TextModelWithTokens.prototype._getWordDefinition = function () {\n            return textModelWithTokensHelpers_1.WordHelper.massageWordDefinitionOf(this._mode);\n        };\n        TextModelWithTokens.prototype.getWordAtPosition = function (position) {\n            return textModelWithTokensHelpers_1.WordHelper.getWordAtPosition(this, this.validatePosition(position));\n        };\n        TextModelWithTokens.prototype.getWordUntilPosition = function (position) {\n            var wordAtPosition = this.getWordAtPosition(position);\n            if (!wordAtPosition) {\n                return {\n                    word: '',\n                    startColumn: position.column,\n                    endColumn: position.column\n                };\n            }\n            return {\n                word: wordAtPosition.word.substr(0, position.column - wordAtPosition.startColumn),\n                startColumn: wordAtPosition.startColumn,\n                endColumn: position.column\n            };\n        };\n        TextModelWithTokens.prototype.tokenIterator = function (position, callback) {\n            var iter = new tokenIterator_1.TokenIterator(this, this.validatePosition(position));\n            var result = callback(iter);\n            iter._invalidate();\n            return result;\n        };\n        TextModelWithTokens.prototype.findMatchingBracketUp = function (bracket, _position) {\n            var position = this.validatePosition(_position);\n            var modeTransitions = this._lines[position.lineNumber - 1].getModeTransitions(this._mode);\n            var currentModeIndex = modeTransition_1.ModeTransition.findIndexInSegmentsArray(modeTransitions, position.column - 1);\n            var currentMode = modeTransitions[currentModeIndex];\n            var currentModeBrackets = languageConfigurationRegistry_1.LanguageConfigurationRegistry.getBracketsSupport(currentMode.modeId);\n            if (!currentModeBrackets) {\n                return null;\n            }\n            var data = currentModeBrackets.textIsBracket[bracket];\n            if (!data) {\n                return null;\n            }\n            return this._findMatchingBracketUp(data, position);\n        };\n        TextModelWithTokens.prototype.matchBracket = function (position) {\n            return this._matchBracket(this.validatePosition(position));\n        };\n        TextModelWithTokens.prototype._matchBracket = function (position) {\n            var lineNumber = position.lineNumber;\n            var lineText = this._lines[lineNumber - 1].text;\n            var lineTokens = this._lines[lineNumber - 1].getTokens(this._tokensInflatorMap);\n            var currentTokenIndex = lineTokens.findIndexOfOffset(position.column - 1);\n            var currentTokenStart = lineTokens.getTokenStartIndex(currentTokenIndex);\n            var modeTransitions = this._lines[lineNumber - 1].getModeTransitions(this._mode);\n            var currentModeIndex = modeTransition_1.ModeTransition.findIndexInSegmentsArray(modeTransitions, position.column - 1);\n            var currentMode = modeTransitions[currentModeIndex];\n            var currentModeBrackets = languageConfigurationRegistry_1.LanguageConfigurationRegistry.getBracketsSupport(currentMode.modeId);\n            // If position is in between two tokens, try first looking in the previous token\n            if (currentTokenIndex > 0 && currentTokenStart === position.column - 1) {\n                var prevTokenIndex = currentTokenIndex - 1;\n                var prevTokenType = lineTokens.getTokenType(prevTokenIndex);\n                // check that previous token is not to be ignored\n                if (!supports_1.ignoreBracketsInToken(prevTokenType)) {\n                    var prevTokenStart = lineTokens.getTokenStartIndex(prevTokenIndex);\n                    var prevMode = currentMode;\n                    var prevModeBrackets = currentModeBrackets;\n                    // check if previous token is in a different mode\n                    if (currentModeIndex > 0 && currentMode.startIndex === position.column - 1) {\n                        prevMode = modeTransitions[currentModeIndex - 1];\n                        prevModeBrackets = languageConfigurationRegistry_1.LanguageConfigurationRegistry.getBracketsSupport(prevMode.modeId);\n                    }\n                    if (prevModeBrackets) {\n                        // limit search in case previous token is very large, there's no need to go beyond `maxBracketLength`\n                        prevTokenStart = Math.max(prevTokenStart, position.column - 1 - prevModeBrackets.maxBracketLength);\n                        var foundBracket = richEditBrackets_1.BracketsUtils.findPrevBracketInToken(prevModeBrackets.reversedRegex, lineNumber, lineText, prevTokenStart, currentTokenStart);\n                        // check that we didn't hit a bracket too far away from position\n                        if (foundBracket && foundBracket.startColumn <= position.column && position.column <= foundBracket.endColumn) {\n                            var foundBracketText = lineText.substring(foundBracket.startColumn - 1, foundBracket.endColumn - 1);\n                            var r = this._matchFoundBracket(foundBracket, prevModeBrackets.textIsBracket[foundBracketText], prevModeBrackets.textIsOpenBracket[foundBracketText]);\n                            // check that we can actually match this bracket\n                            if (r) {\n                                return r;\n                            }\n                        }\n                    }\n                }\n            }\n            // check that the token is not to be ignored\n            if (!supports_1.ignoreBracketsInToken(lineTokens.getTokenType(currentTokenIndex))) {\n                if (currentModeBrackets) {\n                    // limit search to not go before `maxBracketLength`\n                    currentTokenStart = Math.max(currentTokenStart, position.column - 1 - currentModeBrackets.maxBracketLength);\n                    // limit search to not go after `maxBracketLength`\n                    var currentTokenEnd = lineTokens.getTokenEndIndex(currentTokenIndex, lineText.length);\n                    currentTokenEnd = Math.min(currentTokenEnd, position.column - 1 + currentModeBrackets.maxBracketLength);\n                    // it might still be the case that [currentTokenStart -> currentTokenEnd] contains multiple brackets\n                    while (true) {\n                        var foundBracket = richEditBrackets_1.BracketsUtils.findNextBracketInText(currentModeBrackets.forwardRegex, lineNumber, lineText.substring(currentTokenStart, currentTokenEnd), currentTokenStart);\n                        if (!foundBracket) {\n                            // there are no brackets in this text\n                            break;\n                        }\n                        // check that we didn't hit a bracket too far away from position\n                        if (foundBracket.startColumn <= position.column && position.column <= foundBracket.endColumn) {\n                            var foundBracketText = lineText.substring(foundBracket.startColumn - 1, foundBracket.endColumn - 1);\n                            var r = this._matchFoundBracket(foundBracket, currentModeBrackets.textIsBracket[foundBracketText], currentModeBrackets.textIsOpenBracket[foundBracketText]);\n                            // check that we can actually match this bracket\n                            if (r) {\n                                return r;\n                            }\n                        }\n                        currentTokenStart = foundBracket.endColumn - 1;\n                    }\n                }\n            }\n            return null;\n        };\n        TextModelWithTokens.prototype._matchFoundBracket = function (foundBracket, data, isOpen) {\n            if (isOpen) {\n                var matched = this._findMatchingBracketDown(data, foundBracket.getEndPosition());\n                if (matched) {\n                    return [foundBracket, matched];\n                }\n            }\n            else {\n                var matched = this._findMatchingBracketUp(data, foundBracket.getStartPosition());\n                if (matched) {\n                    return [foundBracket, matched];\n                }\n            }\n            return null;\n        };\n        TextModelWithTokens.prototype._findMatchingBracketUp = function (bracket, position) {\n            // console.log('_findMatchingBracketUp: ', 'bracket: ', JSON.stringify(bracket), 'startPosition: ', String(position));\n            var modeId = bracket.modeId;\n            var reversedBracketRegex = bracket.reversedRegex;\n            var count = -1;\n            for (var lineNumber = position.lineNumber; lineNumber >= 1; lineNumber--) {\n                var lineTokens = this._lines[lineNumber - 1].getTokens(this._tokensInflatorMap);\n                var lineText = this._lines[lineNumber - 1].text;\n                var modeTransitions = this._lines[lineNumber - 1].getModeTransitions(this._mode);\n                var currentModeIndex = modeTransitions.length - 1;\n                var currentModeStart = modeTransitions[currentModeIndex].startIndex;\n                var currentModeId = modeTransitions[currentModeIndex].modeId;\n                var tokensLength = lineTokens.getTokenCount() - 1;\n                var currentTokenEnd = lineText.length;\n                if (lineNumber === position.lineNumber) {\n                    tokensLength = lineTokens.findIndexOfOffset(position.column - 1);\n                    currentTokenEnd = position.column - 1;\n                    currentModeIndex = modeTransition_1.ModeTransition.findIndexInSegmentsArray(modeTransitions, position.column - 1);\n                    currentModeStart = modeTransitions[currentModeIndex].startIndex;\n                    currentModeId = modeTransitions[currentModeIndex].modeId;\n                }\n                for (var tokenIndex = tokensLength; tokenIndex >= 0; tokenIndex--) {\n                    var currentTokenType = lineTokens.getTokenType(tokenIndex);\n                    var currentTokenStart = lineTokens.getTokenStartIndex(tokenIndex);\n                    if (currentTokenStart < currentModeStart) {\n                        currentModeIndex--;\n                        currentModeStart = modeTransitions[currentModeIndex].startIndex;\n                        currentModeId = modeTransitions[currentModeIndex].modeId;\n                    }\n                    if (currentModeId === modeId && !supports_1.ignoreBracketsInToken(currentTokenType)) {\n                        while (true) {\n                            var r = richEditBrackets_1.BracketsUtils.findPrevBracketInToken(reversedBracketRegex, lineNumber, lineText, currentTokenStart, currentTokenEnd);\n                            if (!r) {\n                                break;\n                            }\n                            var hitText = lineText.substring(r.startColumn - 1, r.endColumn - 1);\n                            if (hitText === bracket.open) {\n                                count++;\n                            }\n                            else if (hitText === bracket.close) {\n                                count--;\n                            }\n                            if (count === 0) {\n                                return r;\n                            }\n                            currentTokenEnd = r.startColumn - 1;\n                        }\n                    }\n                    currentTokenEnd = currentTokenStart;\n                }\n            }\n            return null;\n        };\n        TextModelWithTokens.prototype._findMatchingBracketDown = function (bracket, position) {\n            // console.log('_findMatchingBracketDown: ', 'bracket: ', JSON.stringify(bracket), 'startPosition: ', String(position));\n            var modeId = bracket.modeId;\n            var bracketRegex = bracket.forwardRegex;\n            var count = 1;\n            for (var lineNumber = position.lineNumber, lineCount = this.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n                var lineTokens = this._lines[lineNumber - 1].getTokens(this._tokensInflatorMap);\n                var lineText = this._lines[lineNumber - 1].text;\n                var modeTransitions = this._lines[lineNumber - 1].getModeTransitions(this._mode);\n                var currentModeIndex = 0;\n                var nextModeStart = (currentModeIndex + 1 < modeTransitions.length ? modeTransitions[currentModeIndex + 1].startIndex : lineText.length + 1);\n                var currentModeId = modeTransitions[currentModeIndex].modeId;\n                var startTokenIndex = 0;\n                var currentTokenStart = lineTokens.getTokenStartIndex(startTokenIndex);\n                if (lineNumber === position.lineNumber) {\n                    startTokenIndex = lineTokens.findIndexOfOffset(position.column - 1);\n                    currentTokenStart = Math.max(currentTokenStart, position.column - 1);\n                    currentModeIndex = modeTransition_1.ModeTransition.findIndexInSegmentsArray(modeTransitions, position.column - 1);\n                    nextModeStart = (currentModeIndex + 1 < modeTransitions.length ? modeTransitions[currentModeIndex + 1].startIndex : lineText.length + 1);\n                    currentModeId = modeTransitions[currentModeIndex].modeId;\n                }\n                for (var tokenIndex = startTokenIndex, tokensLength = lineTokens.getTokenCount(); tokenIndex < tokensLength; tokenIndex++) {\n                    var currentTokenType = lineTokens.getTokenType(tokenIndex);\n                    var currentTokenEnd = lineTokens.getTokenEndIndex(tokenIndex, lineText.length);\n                    if (currentTokenStart >= nextModeStart) {\n                        currentModeIndex++;\n                        nextModeStart = (currentModeIndex + 1 < modeTransitions.length ? modeTransitions[currentModeIndex + 1].startIndex : lineText.length + 1);\n                        currentModeId = modeTransitions[currentModeIndex].modeId;\n                    }\n                    if (currentModeId === modeId && !supports_1.ignoreBracketsInToken(currentTokenType)) {\n                        while (true) {\n                            var r = richEditBrackets_1.BracketsUtils.findNextBracketInToken(bracketRegex, lineNumber, lineText, currentTokenStart, currentTokenEnd);\n                            if (!r) {\n                                break;\n                            }\n                            var hitText = lineText.substring(r.startColumn - 1, r.endColumn - 1);\n                            if (hitText === bracket.open) {\n                                count++;\n                            }\n                            else if (hitText === bracket.close) {\n                                count--;\n                            }\n                            if (count === 0) {\n                                return r;\n                            }\n                            currentTokenStart = r.endColumn - 1;\n                        }\n                    }\n                    currentTokenStart = currentTokenEnd;\n                }\n            }\n            return null;\n        };\n        TextModelWithTokens.prototype.findPrevBracket = function (_position) {\n            var position = this.validatePosition(_position);\n            var reversedBracketRegex = /[\\(\\)\\[\\]\\{\\}]/; // TODO@Alex: use mode's brackets\n            for (var lineNumber = position.lineNumber; lineNumber >= 1; lineNumber--) {\n                var lineTokens = this._lines[lineNumber - 1].getTokens(this._tokensInflatorMap);\n                var lineText = this._lines[lineNumber - 1].text;\n                var tokensLength = lineTokens.getTokenCount() - 1;\n                var currentTokenEnd = lineText.length;\n                if (lineNumber === position.lineNumber) {\n                    tokensLength = lineTokens.findIndexOfOffset(position.column - 1);\n                    currentTokenEnd = position.column - 1;\n                }\n                for (var tokenIndex = tokensLength; tokenIndex >= 0; tokenIndex--) {\n                    var currentTokenType = lineTokens.getTokenType(tokenIndex);\n                    var currentTokenStart = lineTokens.getTokenStartIndex(tokenIndex);\n                    if (!supports_1.ignoreBracketsInToken(currentTokenType)) {\n                        var r = richEditBrackets_1.BracketsUtils.findPrevBracketInToken(reversedBracketRegex, lineNumber, lineText, currentTokenStart, currentTokenEnd);\n                        if (r) {\n                            return this._toFoundBracket(r);\n                        }\n                    }\n                    currentTokenEnd = currentTokenStart;\n                }\n            }\n            return null;\n        };\n        TextModelWithTokens.prototype.findNextBracket = function (_position) {\n            var position = this.validatePosition(_position);\n            var bracketRegex = /[\\(\\)\\[\\]\\{\\}]/; // TODO@Alex: use mode's brackets\n            for (var lineNumber = position.lineNumber, lineCount = this.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n                var lineTokens = this._lines[lineNumber - 1].getTokens(this._tokensInflatorMap);\n                var lineText = this._lines[lineNumber - 1].text;\n                var startTokenIndex = 0;\n                var currentTokenStart = lineTokens.getTokenStartIndex(startTokenIndex);\n                if (lineNumber === position.lineNumber) {\n                    startTokenIndex = lineTokens.findIndexOfOffset(position.column - 1);\n                    currentTokenStart = Math.max(currentTokenStart, position.column - 1);\n                }\n                for (var tokenIndex = startTokenIndex, tokensLength = lineTokens.getTokenCount(); tokenIndex < tokensLength; tokenIndex++) {\n                    var currentTokenType = lineTokens.getTokenType(tokenIndex);\n                    var currentTokenEnd = lineTokens.getTokenEndIndex(tokenIndex, lineText.length);\n                    if (!supports_1.ignoreBracketsInToken(currentTokenType)) {\n                        var r = richEditBrackets_1.BracketsUtils.findNextBracketInToken(bracketRegex, lineNumber, lineText, currentTokenStart, currentTokenEnd);\n                        if (r) {\n                            return this._toFoundBracket(r);\n                        }\n                    }\n                    currentTokenStart = currentTokenEnd;\n                }\n            }\n            return null;\n        };\n        TextModelWithTokens.prototype._toFoundBracket = function (r) {\n            if (!r) {\n                return null;\n            }\n            var text = this.getValueInRange(r);\n            // TODO@Alex: use mode's brackets\n            switch (text) {\n                case '(': return { range: r, open: '(', close: ')', isOpen: true };\n                case ')': return { range: r, open: '(', close: ')', isOpen: false };\n                case '[': return { range: r, open: '[', close: ']', isOpen: true };\n                case ']': return { range: r, open: '[', close: ']', isOpen: false };\n                case '{': return { range: r, open: '{', close: '}', isOpen: true };\n                case '}': return { range: r, open: '{', close: '}', isOpen: false };\n            }\n            return null;\n        };\n        TextModelWithTokens.MODE_TOKENIZATION_FAILED_MSG = nls.localize(0, null);\n        return TextModelWithTokens;\n    }(textModel_1.TextModel));\n    exports.TextModelWithTokens = TextModelWithTokens;\n});\n\n\n\n\n\n\ndefine(__m[89], __M([1,0,16,58,45,88,27,20]), function (require, exports, editorCommon, modelLine_1, textModel_1, textModelWithTokens_1, range_1, position_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var NO_TAB_SIZE = 0;\n    var AbstractMirrorModel = (function (_super) {\n        __extends(AbstractMirrorModel, _super);\n        function AbstractMirrorModel(allowedEventTypes, versionId, value, mode, associatedResource) {\n            _super.call(this, allowedEventTypes.concat([editorCommon.EventType.ModelDispose]), value, mode);\n            this._setVersionId(versionId);\n            this._associatedResource = associatedResource;\n        }\n        AbstractMirrorModel.prototype.getModeId = function () {\n            return this.getMode().getId();\n        };\n        AbstractMirrorModel.prototype._constructLines = function (rawText) {\n            _super.prototype._constructLines.call(this, rawText);\n            // Force EOL to be \\n\n            this._EOL = '\\n';\n        };\n        AbstractMirrorModel.prototype.destroy = function () {\n            this.dispose();\n        };\n        AbstractMirrorModel.prototype.dispose = function () {\n            this.emit(editorCommon.EventType.ModelDispose);\n            _super.prototype.dispose.call(this);\n        };\n        Object.defineProperty(AbstractMirrorModel.prototype, \"uri\", {\n            get: function () {\n                return this._associatedResource;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        AbstractMirrorModel.prototype.getRangeFromOffsetAndLength = function (offset, length) {\n            var startPosition = this.getPositionAt(offset);\n            var endPosition = this.getPositionAt(offset + length);\n            return new range_1.Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n        };\n        AbstractMirrorModel.prototype.getOffsetAndLengthFromRange = function (range) {\n            var startOffset = this.getOffsetAt(new position_1.Position(range.startLineNumber, range.startColumn));\n            var endOffset = this.getOffsetAt(new position_1.Position(range.endLineNumber, range.endColumn));\n            return {\n                offset: startOffset,\n                length: endOffset - startOffset\n            };\n        };\n        AbstractMirrorModel.prototype.getPositionFromOffset = function (offset) {\n            return this.getPositionAt(offset);\n        };\n        AbstractMirrorModel.prototype.getOffsetFromPosition = function (position) {\n            return this.getOffsetAt(position);\n        };\n        AbstractMirrorModel.prototype.getLineStart = function (lineNumber) {\n            if (lineNumber < 1) {\n                lineNumber = 1;\n            }\n            if (lineNumber > this.getLineCount()) {\n                lineNumber = this.getLineCount();\n            }\n            return this.getOffsetAt(new position_1.Position(lineNumber, 1));\n        };\n        AbstractMirrorModel.prototype.getAllWordsWithRange = function () {\n            if (this._lines.length > 10000) {\n                // This is a very heavy method, unavailable for very heavy models\n                return [];\n            }\n            var result = [], i;\n            var toTextRange = function (info) {\n                var s = line.text.substring(info.start, info.end);\n                var r = { startLineNumber: i + 1, startColumn: info.start + 1, endLineNumber: i + 1, endColumn: info.end + 1 };\n                result.push({ text: s, range: r });\n            };\n            for (i = 0; i < this._lines.length; i++) {\n                var line = this._lines[i];\n                this.wordenize(line.text).forEach(toTextRange);\n            }\n            return result;\n        };\n        AbstractMirrorModel.prototype.getAllWords = function () {\n            var _this = this;\n            var result = [];\n            this._lines.forEach(function (line) {\n                _this.wordenize(line.text).forEach(function (info) {\n                    result.push(line.text.substring(info.start, info.end));\n                });\n            });\n            return result;\n        };\n        AbstractMirrorModel.prototype.getAllUniqueWords = function (skipWordOnce) {\n            var foundSkipWord = false;\n            var uniqueWords = {};\n            return this.getAllWords().filter(function (word) {\n                if (skipWordOnce && !foundSkipWord && skipWordOnce === word) {\n                    foundSkipWord = true;\n                    return false;\n                }\n                else if (uniqueWords[word]) {\n                    return false;\n                }\n                else {\n                    uniqueWords[word] = true;\n                    return true;\n                }\n            });\n        };\n        //\t// TODO@Joh, TODO@Alex - remove these and make sure the super-things work\n        AbstractMirrorModel.prototype.wordenize = function (content) {\n            var result = [];\n            var match;\n            var wordsRegexp = this._getWordDefinition();\n            while (match = wordsRegexp.exec(content)) {\n                result.push({ start: match.index, end: match.index + match[0].length });\n            }\n            return result;\n        };\n        return AbstractMirrorModel;\n    }(textModelWithTokens_1.TextModelWithTokens));\n    exports.AbstractMirrorModel = AbstractMirrorModel;\n    function createTestMirrorModelFromString(value, mode, associatedResource) {\n        if (mode === void 0) { mode = null; }\n        return new MirrorModel(0, textModel_1.TextModel.toRawText(value, textModel_1.TextModel.DEFAULT_CREATION_OPTIONS), mode, associatedResource);\n    }\n    exports.createTestMirrorModelFromString = createTestMirrorModelFromString;\n    var MirrorModel = (function (_super) {\n        __extends(MirrorModel, _super);\n        function MirrorModel(versionId, value, mode, associatedResource) {\n            _super.call(this, ['changed'], versionId, value, mode, associatedResource);\n        }\n        MirrorModel.prototype.onEvents = function (events) {\n            var changed = false;\n            for (var i = 0, len = events.contentChanged.length; i < len; i++) {\n                var contentChangedEvent = events.contentChanged[i];\n                this._setVersionId(contentChangedEvent.versionId);\n                switch (contentChangedEvent.changeType) {\n                    case editorCommon.EventType.ModelRawContentChangedFlush:\n                        this._onLinesFlushed(contentChangedEvent);\n                        changed = true;\n                        break;\n                    case editorCommon.EventType.ModelRawContentChangedLinesDeleted:\n                        this._onLinesDeleted(contentChangedEvent);\n                        changed = true;\n                        break;\n                    case editorCommon.EventType.ModelRawContentChangedLinesInserted:\n                        this._onLinesInserted(contentChangedEvent);\n                        changed = true;\n                        break;\n                    case editorCommon.EventType.ModelRawContentChangedLineChanged:\n                        this._onLineChanged(contentChangedEvent);\n                        changed = true;\n                        break;\n                }\n            }\n            if (changed) {\n                this.emit('changed', {});\n            }\n        };\n        MirrorModel.prototype._onLinesFlushed = function (e) {\n            // Flush my lines\n            this._constructLines(e.detail);\n            this._resetTokenizationState();\n        };\n        MirrorModel.prototype._onLineChanged = function (e) {\n            this._lines[e.lineNumber - 1].applyEdits({}, [{\n                    startColumn: 1,\n                    endColumn: Number.MAX_VALUE,\n                    text: e.detail,\n                    forceMoveMarkers: false\n                }], NO_TAB_SIZE);\n            if (this._lineStarts) {\n                // update prefix sum\n                this._lineStarts.changeValue(e.lineNumber - 1, this._lines[e.lineNumber - 1].text.length + this._EOL.length);\n            }\n            this._invalidateLine(e.lineNumber - 1);\n        };\n        MirrorModel.prototype._onLinesDeleted = function (e) {\n            var fromLineIndex = e.fromLineNumber - 1, toLineIndex = e.toLineNumber - 1;\n            // Save first line's state\n            var firstLineState = this._lines[fromLineIndex].getState();\n            this._lines.splice(fromLineIndex, toLineIndex - fromLineIndex + 1);\n            if (this._lineStarts) {\n                // update prefix sum\n                this._lineStarts.removeValues(fromLineIndex, toLineIndex - fromLineIndex + 1);\n            }\n            if (fromLineIndex < this._lines.length) {\n                // This check is always true in real world, but the tests forced this\n                // Restore first line's state\n                this._lines[fromLineIndex].setState(firstLineState);\n                // Invalidate line\n                this._invalidateLine(fromLineIndex);\n            }\n        };\n        MirrorModel.prototype._onLinesInserted = function (e) {\n            var lineIndex, i, splitLines = e.detail.split('\\n');\n            var newLengths = [];\n            for (lineIndex = e.fromLineNumber - 1, i = 0; lineIndex < e.toLineNumber; lineIndex++, i++) {\n                this._lines.splice(lineIndex, 0, new modelLine_1.ModelLine(0, splitLines[i], NO_TAB_SIZE));\n                newLengths.push(splitLines[i].length + this._EOL.length);\n            }\n            if (this._lineStarts) {\n                // update prefix sum\n                this._lineStarts.insertValues(e.fromLineNumber - 1, newLengths);\n            }\n            if (e.fromLineNumber >= 2) {\n                // This check is always true in real world, but the tests forced this\n                this._invalidateLine(e.fromLineNumber - 2);\n            }\n        };\n        return MirrorModel;\n    }(AbstractMirrorModel));\n    exports.MirrorModel = MirrorModel;\n});\n\ndefine(__m[90], __M([1,0,3]), function (require, exports, instantiation_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.IEventService = instantiation_1.createDecorator('eventService');\n});\n\ndefine(__m[44], __M([1,0,3]), function (require, exports, instantiation_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.IExtensionService = instantiation_1.createDecorator('extensionService');\n});\n\ndefine(__m[59], __M([1,0,49]), function (require, exports, arrays_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var ServiceCollection = (function () {\n        function ServiceCollection() {\n            var entries = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                entries[_i - 0] = arguments[_i];\n            }\n            this._entries = [];\n            for (var _c = 0, entries_1 = entries; _c < entries_1.length; _c++) {\n                var entry = entries_1[_c];\n                this.set(entry[0], entry[1]);\n            }\n        }\n        ServiceCollection.prototype.set = function (id, instanceOrDescriptor) {\n            var entry = [id, instanceOrDescriptor];\n            var idx = arrays_1.binarySearch(this._entries, entry, ServiceCollection._entryCompare);\n            if (idx < 0) {\n                // new element\n                this._entries.splice(~idx, 0, entry);\n            }\n            else {\n                var old = this._entries[idx];\n                this._entries[idx] = entry;\n                return old[1];\n            }\n        };\n        ServiceCollection.prototype.forEach = function (callback) {\n            for (var _i = 0, _c = this._entries; _i < _c.length; _i++) {\n                var entry = _c[_i];\n                var id = entry[0], instanceOrDescriptor = entry[1];\n                callback(id, instanceOrDescriptor);\n            }\n        };\n        ServiceCollection.prototype.has = function (id) {\n            return arrays_1.binarySearch(this._entries, ServiceCollection._searchEntry(id), ServiceCollection._entryCompare) >= 0;\n        };\n        ServiceCollection.prototype.get = function (id) {\n            var idx = arrays_1.binarySearch(this._entries, ServiceCollection._searchEntry(id), ServiceCollection._entryCompare);\n            if (idx >= 0) {\n                return this._entries[idx][1];\n            }\n        };\n        ServiceCollection._searchEntry = function (id) {\n            ServiceCollection._dummy[0] = id;\n            return ServiceCollection._dummy;\n        };\n        ServiceCollection._entryCompare = function (a, b) {\n            var _a = a[0].toString();\n            var _b = b[0].toString();\n            if (_a < _b) {\n                return -1;\n            }\n            else if (_a > _b) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        };\n        ServiceCollection._dummy = [undefined, undefined];\n        return ServiceCollection;\n    }());\n    exports.ServiceCollection = ServiceCollection;\n});\n\ndefine(__m[93], __M([1,0,5,2,6,32,95,25,3,59]), function (require, exports, winjs_base_1, errors_1, types_1, assert, graph_1, descriptors_1, instantiation_1, serviceCollection_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var InstantiationService = (function () {\n        function InstantiationService(services, strict) {\n            if (services === void 0) { services = new serviceCollection_1.ServiceCollection(); }\n            if (strict === void 0) { strict = false; }\n            this._services = services;\n            this._strict = strict;\n            this._services.set(instantiation_1.IInstantiationService, this);\n        }\n        InstantiationService.prototype.createChild = function (services) {\n            var _this = this;\n            this._services.forEach(function (id, thing) {\n                if (services.has(id)) {\n                    return;\n                }\n                // If we copy descriptors we might end up with\n                // multiple instances of the same service\n                if (thing instanceof descriptors_1.SyncDescriptor) {\n                    thing = _this._createAndCacheServiceInstance(id, thing);\n                }\n                services.set(id, thing);\n            });\n            return new InstantiationService(services, this._strict);\n        };\n        InstantiationService.prototype.invokeFunction = function (signature) {\n            var _this = this;\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            var accessor;\n            try {\n                accessor = {\n                    get: function (id, isOptional) {\n                        var result = _this._getOrCreateServiceInstance(id);\n                        if (!result && isOptional !== instantiation_1.optional) {\n                            throw new Error(\"[invokeFunction] unkown service '\" + id + \"'\");\n                        }\n                        return result;\n                    }\n                };\n                return signature.apply(undefined, [accessor].concat(args));\n            }\n            finally {\n                accessor.get = function () {\n                    throw errors_1.illegalState('service accessor is only valid during the invocation of its target method');\n                };\n            }\n        };\n        InstantiationService.prototype.createInstance = function (param) {\n            var rest = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                rest[_i - 1] = arguments[_i];\n            }\n            if (param instanceof descriptors_1.AsyncDescriptor) {\n                // async\n                return this._createInstanceAsync(param, rest);\n            }\n            else if (param instanceof descriptors_1.SyncDescriptor) {\n                // sync\n                return this._createInstance(param, rest);\n            }\n            else {\n                // sync, just ctor\n                return this._createInstance(new descriptors_1.SyncDescriptor(param), rest);\n            }\n        };\n        InstantiationService.prototype._createInstanceAsync = function (descriptor, args) {\n            var _this = this;\n            var canceledError;\n            return new winjs_base_1.TPromise(function (c, e, p) {\n                require([descriptor.moduleName], function (_module) {\n                    if (canceledError) {\n                        e(canceledError);\n                    }\n                    if (!_module) {\n                        return e(errors_1.illegalArgument('module not found: ' + descriptor.moduleName));\n                    }\n                    var ctor;\n                    if (!descriptor.ctorName) {\n                        ctor = _module;\n                    }\n                    else {\n                        ctor = _module[descriptor.ctorName];\n                    }\n                    if (typeof ctor !== 'function') {\n                        return e(errors_1.illegalArgument('not a function: ' + descriptor.ctorName || descriptor.moduleName));\n                    }\n                    try {\n                        args.unshift.apply(args, descriptor.staticArguments()); // instead of spread in ctor call\n                        c(_this._createInstance(new descriptors_1.SyncDescriptor(ctor), args));\n                    }\n                    catch (error) {\n                        return e(error);\n                    }\n                }, e);\n            }, function () {\n                canceledError = errors_1.canceled();\n            });\n        };\n        InstantiationService.prototype._createInstance = function (desc, args) {\n            var _this = this;\n            // arguments given by createInstance-call and/or the descriptor\n            var staticArgs = desc.staticArguments().concat(args);\n            // arguments defined by service decorators\n            var serviceDependencies = instantiation_1._util.getServiceDependencies(desc.ctor).sort(function (a, b) { return a.index - b.index; });\n            var serviceArgs = serviceDependencies.map(function (dependency) {\n                var service = _this._getOrCreateServiceInstance(dependency.id);\n                if (!service && _this._strict && !dependency.optional) {\n                    throw new Error(\"[createInstance] \" + desc.ctor.name + \" depends on UNKNOWN service \" + dependency.id + \".\");\n                }\n                return service;\n            });\n            var firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : staticArgs.length;\n            // check for argument mismatches, adjust static args if needed\n            if (staticArgs.length !== firstServiceArgPos) {\n                console.warn(\"[createInstance] First service dependency of \" + desc.ctor.name + \" at position \" + (firstServiceArgPos + 1) + \" conflicts with \" + staticArgs.length + \" static arguments\");\n                var delta = firstServiceArgPos - staticArgs.length;\n                if (delta > 0) {\n                    staticArgs = staticArgs.concat(new Array(delta));\n                }\n                else {\n                    staticArgs = staticArgs.slice(0, firstServiceArgPos);\n                }\n            }\n            // // check for missing args\n            // for (let i = 0; i < serviceArgs.length; i++) {\n            // \tif (!serviceArgs[i]) {\n            // \t\tconsole.warn(`${desc.ctor.name} MISSES service dependency ${serviceDependencies[i].id}`, new Error().stack);\n            // \t}\n            // }\n            // now create the instance\n            var argArray = [desc.ctor];\n            argArray.push.apply(argArray, staticArgs);\n            argArray.push.apply(argArray, serviceArgs);\n            var instance = types_1.create.apply(null, argArray);\n            desc._validate(instance);\n            return instance;\n        };\n        InstantiationService.prototype._getOrCreateServiceInstance = function (id) {\n            var thing = this._services.get(id);\n            if (thing instanceof descriptors_1.SyncDescriptor) {\n                return this._createAndCacheServiceInstance(id, thing);\n            }\n            else {\n                return thing;\n            }\n        };\n        InstantiationService.prototype._createAndCacheServiceInstance = function (id, desc) {\n            assert.ok(this._services.get(id) instanceof descriptors_1.SyncDescriptor);\n            var graph = new graph_1.Graph(function (data) { return data.id.toString(); });\n            function throwCycleError() {\n                var err = new Error('[createInstance] cyclic dependency between services');\n                err.message = graph.toString();\n                throw err;\n            }\n            var count = 0;\n            var stack = [{ id: id, desc: desc }];\n            while (stack.length) {\n                var item = stack.pop();\n                graph.lookupOrInsertNode(item);\n                // TODO@joh use the graph to find a cycle\n                // a weak heuristic for cycle checks\n                if (count++ > 100) {\n                    throwCycleError();\n                }\n                // check all dependencies for existence and if the need to be created first\n                var dependencies = instantiation_1._util.getServiceDependencies(item.desc.ctor);\n                for (var _i = 0, dependencies_1 = dependencies; _i < dependencies_1.length; _i++) {\n                    var dependency = dependencies_1[_i];\n                    var instanceOrDesc = this._services.get(dependency.id);\n                    if (!instanceOrDesc) {\n                        console.warn(\"[createInstance] \" + id + \" depends on \" + dependency.id + \" which is NOT registered.\");\n                    }\n                    if (instanceOrDesc instanceof descriptors_1.SyncDescriptor) {\n                        var d = { id: dependency.id, desc: instanceOrDesc };\n                        graph.insertEdge(item, d);\n                        stack.push(d);\n                    }\n                }\n            }\n            while (true) {\n                var roots = graph.roots();\n                // if there is no more roots but still\n                // nodes in the graph we have a cycle\n                if (roots.length === 0) {\n                    if (graph.length !== 0) {\n                        throwCycleError();\n                    }\n                    break;\n                }\n                for (var _a = 0, roots_1 = roots; _a < roots_1.length; _a++) {\n                    var root = roots_1[_a];\n                    // create instance and overwrite the service collections\n                    var instance = this._createInstance(root.data.desc, []);\n                    this._services.set(root.data.id, instance);\n                    graph.removeNode(root.data);\n                }\n            }\n            return this._services.get(id);\n        };\n        return InstantiationService;\n    }());\n    exports.InstantiationService = InstantiationService;\n});\n\ndefine(__m[15], __M([1,0,6,32]), function (require, exports, Types, Assert) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var RegistryImpl = (function () {\n        function RegistryImpl() {\n            this.data = {};\n        }\n        RegistryImpl.prototype.add = function (id, data) {\n            Assert.ok(Types.isString(id));\n            Assert.ok(Types.isObject(data));\n            Assert.ok(!this.data.hasOwnProperty(id), 'There is already an extension with this id');\n            this.data[id] = data;\n        };\n        RegistryImpl.prototype.knows = function (id) {\n            return this.data.hasOwnProperty(id);\n        };\n        RegistryImpl.prototype.as = function (id) {\n            return this.data[id] || null;\n        };\n        return RegistryImpl;\n    }());\n    exports.Registry = new RegistryImpl();\n    /**\n     * A base class for registries that leverage the instantiation service to create instances.\n     */\n    var BaseRegistry = (function () {\n        function BaseRegistry() {\n            this.toBeInstantiated = [];\n            this.instances = [];\n        }\n        BaseRegistry.prototype.setInstantiationService = function (service) {\n            this.instantiationService = service;\n            while (this.toBeInstantiated.length > 0) {\n                var entry = this.toBeInstantiated.shift();\n                this.instantiate(entry);\n            }\n        };\n        BaseRegistry.prototype.instantiate = function (ctor) {\n            var instance = this.instantiationService.createInstance(ctor);\n            this.instances.push(instance);\n        };\n        BaseRegistry.prototype._register = function (ctor) {\n            if (this.instantiationService) {\n                this.instantiate(ctor);\n            }\n            else {\n                this.toBeInstantiated.push(ctor);\n            }\n        };\n        BaseRegistry.prototype._getInstances = function () {\n            return this.instances.slice(0);\n        };\n        BaseRegistry.prototype._setInstances = function (instances) {\n            this.instances = instances;\n        };\n        return BaseRegistry;\n    }());\n    exports.BaseRegistry = BaseRegistry;\n});\n\ndefine(__m[30], __M([1,0,70,9,15]), function (require, exports, nls, event_1, platform_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    // Define extension point ids\n    exports.Extensions = {\n        ModesRegistry: 'editor.modesRegistry'\n    };\n    var EditorModesRegistry = (function () {\n        function EditorModesRegistry() {\n            this._onDidAddCompatModes = new event_1.Emitter();\n            this.onDidAddCompatModes = this._onDidAddCompatModes.event;\n            this._onDidAddLanguages = new event_1.Emitter();\n            this.onDidAddLanguages = this._onDidAddLanguages.event;\n            this._compatModes = [];\n            this._languages = [];\n        }\n        // --- compat modes\n        EditorModesRegistry.prototype.registerCompatModes = function (def) {\n            this._compatModes = this._compatModes.concat(def);\n            this._onDidAddCompatModes.fire(def);\n        };\n        EditorModesRegistry.prototype.registerCompatMode = function (def) {\n            this._compatModes.push(def);\n            this._onDidAddCompatModes.fire([def]);\n        };\n        EditorModesRegistry.prototype.getCompatModes = function () {\n            return this._compatModes.slice(0);\n        };\n        // --- languages\n        EditorModesRegistry.prototype.registerLanguage = function (def) {\n            this._languages.push(def);\n            this._onDidAddLanguages.fire([def]);\n        };\n        EditorModesRegistry.prototype.registerLanguages = function (def) {\n            this._languages = this._languages.concat(def);\n            this._onDidAddLanguages.fire(def);\n        };\n        EditorModesRegistry.prototype.getLanguages = function () {\n            return this._languages.slice(0);\n        };\n        return EditorModesRegistry;\n    }());\n    exports.EditorModesRegistry = EditorModesRegistry;\n    exports.ModesRegistry = new EditorModesRegistry();\n    platform_1.Registry.add(exports.Extensions.ModesRegistry, exports.ModesRegistry);\n    exports.ModesRegistry.registerLanguage({\n        id: 'plaintext',\n        extensions: ['.txt', '.gitignore'],\n        aliases: [nls.localize(0, null), 'text'],\n        mimetypes: ['text/plain']\n    });\n});\n\n\n\n\n\n\n\n\n\n\ndefine(__m[96], __M([1,0,5,22,28,89,2,30]), function (require, exports, winjs_base_1, resourceService_1, modeService_1, mirrorModel_1, errors_1, modesRegistry_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var CompatWorkerServiceWorker = (function () {\n        function CompatWorkerServiceWorker(resourceService, modeService, modesRegistryData) {\n            this.resourceService = resourceService;\n            this.modeService = modeService;\n            this.isInMainThread = false;\n            modesRegistry_1.ModesRegistry.registerCompatModes(modesRegistryData.compatModes);\n            modesRegistry_1.ModesRegistry.registerLanguages(modesRegistryData.languages);\n            this._compatModes = Object.create(null);\n        }\n        CompatWorkerServiceWorker.prototype.registerCompatMode = function (compatMode) {\n            this._compatModes[compatMode.getId()] = compatMode;\n        };\n        CompatWorkerServiceWorker.prototype.handleMainRequest = function (rpcId, methodName, args) {\n            if (rpcId === '$') {\n                switch (methodName) {\n                    case 'acceptNewModel':\n                        return this._acceptNewModel(args[0]);\n                    case 'acceptDidDisposeModel':\n                        return this._acceptDidDisposeModel(args[0]);\n                    case 'acceptModelEvents':\n                        return this._acceptModelEvents(args[0], args[1]);\n                    case 'acceptCompatModes':\n                        return this._acceptCompatModes(args[0]);\n                    case 'acceptLanguages':\n                        return this._acceptLanguages(args[0]);\n                    case 'instantiateCompatMode':\n                        return this._instantiateCompatMode(args[0]);\n                }\n            }\n            var obj = this._compatModes[rpcId];\n            return winjs_base_1.TPromise.as(obj[methodName].apply(obj, args));\n        };\n        CompatWorkerServiceWorker.prototype.CompatWorker = function (obj, methodName, target, param) {\n            return target.apply(obj, param);\n        };\n        CompatWorkerServiceWorker.prototype._acceptNewModel = function (data) {\n            var _this = this;\n            // Create & insert the mirror model eagerly in the resource service\n            var mirrorModel = new mirrorModel_1.MirrorModel(data.versionId, data.value, null, data.url);\n            this.resourceService.insert(mirrorModel.uri, mirrorModel);\n            // Block worker execution until the mode is instantiated\n            return this.modeService.getOrCreateMode(data.modeId).then(function (mode) {\n                // Changing mode should trigger a remove & an add, therefore:\n                // (1) Remove from resource service\n                _this.resourceService.remove(mirrorModel.uri);\n                // (2) Change mode\n                mirrorModel.setMode(mode);\n                // (3) Insert again to resource service (it will have the new mode)\n                _this.resourceService.insert(mirrorModel.uri, mirrorModel);\n            });\n        };\n        CompatWorkerServiceWorker.prototype._acceptDidDisposeModel = function (uri) {\n            var model = this.resourceService.get(uri);\n            this.resourceService.remove(uri);\n            model.dispose();\n        };\n        CompatWorkerServiceWorker.prototype._acceptModelEvents = function (uri, events) {\n            var model = this.resourceService.get(uri);\n            try {\n                model.onEvents(events);\n            }\n            catch (err) {\n                errors_1.onUnexpectedError(err);\n            }\n        };\n        CompatWorkerServiceWorker.prototype._acceptCompatModes = function (modes) {\n            modesRegistry_1.ModesRegistry.registerCompatModes(modes);\n        };\n        CompatWorkerServiceWorker.prototype._acceptLanguages = function (languages) {\n            modesRegistry_1.ModesRegistry.registerLanguages(languages);\n        };\n        CompatWorkerServiceWorker.prototype._instantiateCompatMode = function (modeId) {\n            return this.modeService.getOrCreateMode(modeId).then(function (_) { return void 0; });\n        };\n        CompatWorkerServiceWorker = __decorate([\n            __param(0, resourceService_1.IResourceService),\n            __param(1, modeService_1.IModeService)\n        ], CompatWorkerServiceWorker);\n        return CompatWorkerServiceWorker;\n    }());\n    exports.CompatWorkerServiceWorker = CompatWorkerServiceWorker;\n});\n\ndefine(__m[97], __M([1,0,2,9,46,4,30]), function (require, exports, errors_1, event_1, mime, strings, modesRegistry_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var LanguagesRegistry = (function () {\n        function LanguagesRegistry(useModesRegistry) {\n            var _this = this;\n            if (useModesRegistry === void 0) { useModesRegistry = true; }\n            this._onDidAddModes = new event_1.Emitter();\n            this.onDidAddModes = this._onDidAddModes.event;\n            this.knownModeIds = {};\n            this.mime2LanguageId = {};\n            this.name2LanguageId = {};\n            this.id2Name = {};\n            this.id2Extensions = {};\n            this.compatModes = {};\n            this.lowerName2Id = {};\n            this.id2ConfigurationFiles = {};\n            if (useModesRegistry) {\n                this._registerCompatModes(modesRegistry_1.ModesRegistry.getCompatModes());\n                modesRegistry_1.ModesRegistry.onDidAddCompatModes(function (m) { return _this._registerCompatModes(m); });\n                this._registerLanguages(modesRegistry_1.ModesRegistry.getLanguages());\n                modesRegistry_1.ModesRegistry.onDidAddLanguages(function (m) { return _this._registerLanguages(m); });\n            }\n        }\n        LanguagesRegistry.prototype._registerCompatModes = function (defs) {\n            var addedModes = [];\n            for (var i = 0; i < defs.length; i++) {\n                var def = defs[i];\n                this._registerLanguage({\n                    id: def.id,\n                    extensions: def.extensions,\n                    filenames: def.filenames,\n                    firstLine: def.firstLine,\n                    aliases: def.aliases,\n                    mimetypes: def.mimetypes\n                });\n                this.compatModes[def.id] = {\n                    moduleId: def.moduleId,\n                    ctorName: def.ctorName,\n                    deps: def.deps\n                };\n                addedModes.push(def.id);\n            }\n            this._onDidAddModes.fire(addedModes);\n        };\n        LanguagesRegistry.prototype._registerLanguages = function (desc) {\n            var addedModes = [];\n            for (var i = 0; i < desc.length; i++) {\n                this._registerLanguage(desc[i]);\n                addedModes.push(desc[i].id);\n            }\n            this._onDidAddModes.fire(addedModes);\n        };\n        LanguagesRegistry.prototype._setLanguageName = function (languageId, languageName, force) {\n            var prevName = this.id2Name[languageId];\n            if (prevName) {\n                if (!force) {\n                    return;\n                }\n                delete this.name2LanguageId[prevName];\n            }\n            this.name2LanguageId[languageName] = languageId;\n            this.id2Name[languageId] = languageName;\n        };\n        LanguagesRegistry.prototype._registerLanguage = function (lang) {\n            this.knownModeIds[lang.id] = true;\n            var primaryMime = null;\n            if (typeof lang.mimetypes !== 'undefined' && Array.isArray(lang.mimetypes)) {\n                for (var i = 0; i < lang.mimetypes.length; i++) {\n                    if (!primaryMime) {\n                        primaryMime = lang.mimetypes[i];\n                    }\n                    this.mime2LanguageId[lang.mimetypes[i]] = lang.id;\n                }\n            }\n            if (!primaryMime) {\n                primaryMime = 'text/x-' + lang.id;\n                this.mime2LanguageId[primaryMime] = lang.id;\n            }\n            if (Array.isArray(lang.extensions)) {\n                this.id2Extensions[lang.id] = this.id2Extensions[lang.id] || [];\n                for (var _i = 0, _a = lang.extensions; _i < _a.length; _i++) {\n                    var extension = _a[_i];\n                    mime.registerTextMime({ mime: primaryMime, extension: extension });\n                    this.id2Extensions[lang.id].push(extension);\n                }\n            }\n            if (Array.isArray(lang.filenames)) {\n                for (var _b = 0, _c = lang.filenames; _b < _c.length; _b++) {\n                    var filename = _c[_b];\n                    mime.registerTextMime({ mime: primaryMime, filename: filename });\n                }\n            }\n            if (Array.isArray(lang.filenamePatterns)) {\n                for (var _d = 0, _e = lang.filenamePatterns; _d < _e.length; _d++) {\n                    var filenamePattern = _e[_d];\n                    mime.registerTextMime({ mime: primaryMime, filepattern: filenamePattern });\n                }\n            }\n            if (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\n                var firstLineRegexStr = lang.firstLine;\n                if (firstLineRegexStr.charAt(0) !== '^') {\n                    firstLineRegexStr = '^' + firstLineRegexStr;\n                }\n                try {\n                    var firstLineRegex = new RegExp(firstLineRegexStr);\n                    if (!strings.regExpLeadsToEndlessLoop(firstLineRegex)) {\n                        mime.registerTextMime({ mime: primaryMime, firstline: firstLineRegex });\n                    }\n                }\n                catch (err) {\n                    // Most likely, the regex was bad\n                    errors_1.onUnexpectedError(err);\n                }\n            }\n            this.lowerName2Id[lang.id.toLowerCase()] = lang.id;\n            if (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\n                for (var i = 0; i < lang.aliases.length; i++) {\n                    if (!lang.aliases[i] || lang.aliases[i].length === 0) {\n                        continue;\n                    }\n                    this.lowerName2Id[lang.aliases[i].toLowerCase()] = lang.id;\n                }\n            }\n            var containsAliases = (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases) && lang.aliases.length > 0);\n            if (containsAliases && lang.aliases[0] === null) {\n            }\n            else {\n                var bestName = (containsAliases ? lang.aliases[0] : null) || lang.id;\n                this._setLanguageName(lang.id, bestName, containsAliases);\n            }\n            if (typeof lang.configuration === 'string') {\n                this.id2ConfigurationFiles[lang.id] = this.id2ConfigurationFiles[lang.id] || [];\n                this.id2ConfigurationFiles[lang.id].push(lang.configuration);\n            }\n        };\n        LanguagesRegistry.prototype.isRegisteredMode = function (mimetypeOrModeId) {\n            // Is this a known mime type ?\n            if (hasOwnProperty.call(this.mime2LanguageId, mimetypeOrModeId)) {\n                return true;\n            }\n            // Is this a known mode id ?\n            return hasOwnProperty.call(this.knownModeIds, mimetypeOrModeId);\n        };\n        LanguagesRegistry.prototype.getRegisteredModes = function () {\n            return Object.keys(this.knownModeIds);\n        };\n        LanguagesRegistry.prototype.getRegisteredLanguageNames = function () {\n            return Object.keys(this.name2LanguageId);\n        };\n        LanguagesRegistry.prototype.getLanguageName = function (modeId) {\n            return this.id2Name[modeId] || null;\n        };\n        LanguagesRegistry.prototype.getModeIdForLanguageNameLowercase = function (languageNameLower) {\n            return this.lowerName2Id[languageNameLower] || null;\n        };\n        LanguagesRegistry.prototype.getConfigurationFiles = function (modeId) {\n            return this.id2ConfigurationFiles[modeId] || [];\n        };\n        LanguagesRegistry.prototype.getMimeForMode = function (theModeId) {\n            var keys = Object.keys(this.mime2LanguageId);\n            for (var i = 0, len = keys.length; i < len; i++) {\n                var _mime = keys[i];\n                var modeId = this.mime2LanguageId[_mime];\n                if (modeId === theModeId) {\n                    return _mime;\n                }\n            }\n            return null;\n        };\n        LanguagesRegistry.prototype.extractModeIds = function (commaSeparatedMimetypesOrCommaSeparatedIdsOrName) {\n            var _this = this;\n            if (!commaSeparatedMimetypesOrCommaSeparatedIdsOrName) {\n                return [];\n            }\n            return (commaSeparatedMimetypesOrCommaSeparatedIdsOrName.\n                split(',').\n                map(function (mimeTypeOrIdOrName) { return mimeTypeOrIdOrName.trim(); }).\n                map(function (mimeTypeOrIdOrName) {\n                return _this.mime2LanguageId[mimeTypeOrIdOrName] || mimeTypeOrIdOrName;\n            }).\n                filter(function (modeId) {\n                return _this.knownModeIds[modeId];\n            }));\n        };\n        LanguagesRegistry.prototype.getModeIdsFromLanguageName = function (languageName) {\n            if (!languageName) {\n                return [];\n            }\n            if (hasOwnProperty.call(this.name2LanguageId, languageName)) {\n                return [this.name2LanguageId[languageName]];\n            }\n            return [];\n        };\n        LanguagesRegistry.prototype.getModeIdsFromFilenameOrFirstLine = function (filename, firstLine) {\n            if (!filename && !firstLine) {\n                return [];\n            }\n            var mimeTypes = mime.guessMimeTypes(filename, firstLine);\n            return this.extractModeIds(mimeTypes.join(','));\n        };\n        LanguagesRegistry.prototype.getCompatMode = function (modeId) {\n            return this.compatModes[modeId] || null;\n        };\n        LanguagesRegistry.prototype.getExtensions = function (languageName) {\n            var languageId = this.name2LanguageId[languageName];\n            if (!languageId) {\n                return [];\n            }\n            return this.id2Extensions[languageId];\n        };\n        return LanguagesRegistry;\n    }());\n    exports.LanguagesRegistry = LanguagesRegistry;\n});\n\ndefine(__m[56], __M([1,0,15,14]), function (require, exports, platform, eventEmitter_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.Extensions = {\n        JSONContribution: 'base.contributions.json'\n    };\n    function normalizeId(id) {\n        if (id.length > 0 && id.charAt(id.length - 1) === '#') {\n            return id.substring(0, id.length - 1);\n        }\n        return id;\n    }\n    var JSONContributionRegistry = (function () {\n        function JSONContributionRegistry() {\n            this.schemasById = {};\n            this.eventEmitter = new eventEmitter_1.EventEmitter();\n        }\n        JSONContributionRegistry.prototype.addRegistryChangedListener = function (callback) {\n            return this.eventEmitter.addListener2('registryChanged', callback);\n        };\n        JSONContributionRegistry.prototype.registerSchema = function (uri, unresolvedSchemaContent) {\n            this.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n            this.eventEmitter.emit('registryChanged', {});\n        };\n        JSONContributionRegistry.prototype.getSchemaContributions = function () {\n            return {\n                schemas: this.schemasById,\n            };\n        };\n        return JSONContributionRegistry;\n    }());\n    var jsonContributionRegistry = new JSONContributionRegistry();\n    platform.Registry.add(exports.Extensions.JSONContribution, jsonContributionRegistry);\n});\n\ndefine(__m[39], __M([1,0,73,2,13,26,56,15]), function (require, exports, nls, errors_1, paths, severity_1, jsonContributionRegistry_1, platform_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var ExtensionMessageCollector = (function () {\n        function ExtensionMessageCollector(messageHandler, source) {\n            this._messageHandler = messageHandler;\n            this._source = source;\n        }\n        ExtensionMessageCollector.prototype._msg = function (type, message) {\n            this._messageHandler({\n                type: type,\n                message: message,\n                source: this._source\n            });\n        };\n        ExtensionMessageCollector.prototype.error = function (message) {\n            this._msg(severity_1.default.Error, message);\n        };\n        ExtensionMessageCollector.prototype.warn = function (message) {\n            this._msg(severity_1.default.Warning, message);\n        };\n        ExtensionMessageCollector.prototype.info = function (message) {\n            this._msg(severity_1.default.Info, message);\n        };\n        return ExtensionMessageCollector;\n    }());\n    function isValidExtensionDescription(extensionFolderPath, extensionDescription, notices) {\n        if (!extensionDescription) {\n            notices.push(nls.localize(0, null));\n            return false;\n        }\n        if (typeof extensionDescription.publisher !== 'string') {\n            notices.push(nls.localize(1, null, 'publisher'));\n            return false;\n        }\n        if (typeof extensionDescription.name !== 'string') {\n            notices.push(nls.localize(2, null, 'name'));\n            return false;\n        }\n        if (typeof extensionDescription.version !== 'string') {\n            notices.push(nls.localize(3, null, 'version'));\n            return false;\n        }\n        if (!extensionDescription.engines) {\n            notices.push(nls.localize(4, null, 'engines'));\n            return false;\n        }\n        if (typeof extensionDescription.engines.vscode !== 'string') {\n            notices.push(nls.localize(5, null, 'engines.vscode'));\n            return false;\n        }\n        if (typeof extensionDescription.extensionDependencies !== 'undefined') {\n            if (!_isStringArray(extensionDescription.extensionDependencies)) {\n                notices.push(nls.localize(6, null, 'extensionDependencies'));\n                return false;\n            }\n        }\n        if (typeof extensionDescription.activationEvents !== 'undefined') {\n            if (!_isStringArray(extensionDescription.activationEvents)) {\n                notices.push(nls.localize(7, null, 'activationEvents'));\n                return false;\n            }\n            if (typeof extensionDescription.main === 'undefined') {\n                notices.push(nls.localize(8, null, 'activationEvents', 'main'));\n                return false;\n            }\n        }\n        if (typeof extensionDescription.main !== 'undefined') {\n            if (typeof extensionDescription.main !== 'string') {\n                notices.push(nls.localize(9, null, 'main'));\n                return false;\n            }\n            else {\n                var normalizedAbsolutePath = paths.normalize(paths.join(extensionFolderPath, extensionDescription.main));\n                if (normalizedAbsolutePath.indexOf(extensionFolderPath)) {\n                    notices.push(nls.localize(10, null, normalizedAbsolutePath, extensionFolderPath));\n                }\n            }\n            if (typeof extensionDescription.activationEvents === 'undefined') {\n                notices.push(nls.localize(11, null, 'activationEvents', 'main'));\n                return false;\n            }\n        }\n        return true;\n    }\n    exports.isValidExtensionDescription = isValidExtensionDescription;\n    var hasOwnProperty = Object.hasOwnProperty;\n    var schemaRegistry = platform_1.Registry.as(jsonContributionRegistry_1.Extensions.JSONContribution);\n    var ExtensionPoint = (function () {\n        function ExtensionPoint(name, registry) {\n            this.name = name;\n            this._registry = registry;\n            this._handler = null;\n            this._messageHandler = null;\n        }\n        ExtensionPoint.prototype.setHandler = function (handler) {\n            if (this._handler) {\n                throw new Error('Handler already set!');\n            }\n            this._handler = handler;\n            this._handle();\n        };\n        ExtensionPoint.prototype.handle = function (messageHandler) {\n            this._messageHandler = messageHandler;\n            this._handle();\n        };\n        ExtensionPoint.prototype._handle = function () {\n            var _this = this;\n            if (!this._handler || !this._messageHandler) {\n                return;\n            }\n            this._registry.registerPointListener(this.name, function (descriptions) {\n                var users = descriptions.map(function (desc) {\n                    return {\n                        description: desc,\n                        value: desc.contributes[_this.name],\n                        collector: new ExtensionMessageCollector(_this._messageHandler, desc.extensionFolderPath)\n                    };\n                });\n                _this._handler(users);\n            });\n        };\n        return ExtensionPoint;\n    }());\n    var schemaId = 'vscode://schemas/vscode-extensions';\n    var schema = {\n        default: {\n            'name': '{{name}}',\n            'description': '{{description}}',\n            'author': '{{author}}',\n            'version': '{{1.0.0}}',\n            'main': '{{pathToMain}}',\n            'dependencies': {}\n        },\n        properties: {\n            // engines: {\n            // \trequired: [ 'vscode' ],\n            // \tproperties: {\n            // \t\t'vscode': {\n            // \t\t\ttype: 'string',\n            // \t\t\tdescription: nls.localize('vscode.extension.engines.vscode', 'Specifies that this package only runs inside VSCode of the given version.'),\n            // \t\t}\n            // \t}\n            // },\n            displayName: {\n                description: nls.localize(12, null),\n                type: 'string'\n            },\n            categories: {\n                description: nls.localize(13, null),\n                type: 'array',\n                items: {\n                    type: 'string',\n                    enum: ['Languages', 'Snippets', 'Linters', 'Themes', 'Debuggers', 'Productivity', 'Other']\n                }\n            },\n            galleryBanner: {\n                type: 'object',\n                description: nls.localize(14, null),\n                properties: {\n                    color: {\n                        description: nls.localize(15, null),\n                        type: 'string'\n                    },\n                    theme: {\n                        description: nls.localize(16, null),\n                        type: 'string',\n                        enum: ['dark', 'light']\n                    }\n                }\n            },\n            publisher: {\n                description: nls.localize(17, null),\n                type: 'string'\n            },\n            activationEvents: {\n                description: nls.localize(18, null),\n                type: 'array',\n                items: {\n                    type: 'string',\n                    defaultSnippets: [{ label: 'onLanguage', body: 'onLanguage:{{languageId}}' }, { label: 'onCommand', body: 'onCommand:{{commandId}}' }, { label: 'onDebug', body: 'onDebug:{{type}}' }, { label: 'workspaceContains', body: 'workspaceContains:{{fileName}}' }],\n                }\n            },\n            extensionDependencies: {\n                description: nls.localize(19, null),\n                type: 'array',\n                items: {\n                    type: 'string'\n                }\n            },\n            scripts: {\n                type: 'object',\n                properties: {\n                    'vscode:prepublish': {\n                        description: nls.localize(20, null),\n                        type: 'string'\n                    }\n                }\n            },\n            contributes: {\n                description: nls.localize(21, null),\n                type: 'object',\n                properties: {},\n                default: {}\n            }\n        }\n    };\n    var ExtensionsRegistryImpl = (function () {\n        function ExtensionsRegistryImpl() {\n            this._extensionsMap = {};\n            this._extensionsArr = [];\n            this._activationMap = {};\n            this._pointListeners = [];\n            this._extensionPoints = {};\n            this._oneTimeActivationEventListeners = {};\n        }\n        ExtensionsRegistryImpl.prototype.registerPointListener = function (point, handler) {\n            var entry = {\n                extensionPoint: point,\n                listener: handler\n            };\n            this._pointListeners.push(entry);\n            this._triggerPointListener(entry, ExtensionsRegistryImpl._filterWithExtPoint(this.getAllExtensionDescriptions(), point));\n        };\n        ExtensionsRegistryImpl.prototype.registerExtensionPoint = function (extensionPoint, jsonSchema) {\n            if (hasOwnProperty.call(this._extensionPoints, extensionPoint)) {\n                throw new Error('Duplicate extension point: ' + extensionPoint);\n            }\n            var result = new ExtensionPoint(extensionPoint, this);\n            this._extensionPoints[extensionPoint] = result;\n            schema.properties['contributes'].properties[extensionPoint] = jsonSchema;\n            schemaRegistry.registerSchema(schemaId, schema);\n            return result;\n        };\n        ExtensionsRegistryImpl.prototype.handleExtensionPoints = function (messageHandler) {\n            var _this = this;\n            Object.keys(this._extensionPoints).forEach(function (extensionPointName) {\n                _this._extensionPoints[extensionPointName].handle(messageHandler);\n            });\n        };\n        ExtensionsRegistryImpl.prototype._triggerPointListener = function (handler, desc) {\n            // console.log('_triggerPointListeners: ' + desc.length + ' OF ' + handler.extensionPoint);\n            if (!desc || desc.length === 0) {\n                return;\n            }\n            try {\n                handler.listener(desc);\n            }\n            catch (e) {\n                errors_1.onUnexpectedError(e);\n            }\n        };\n        ExtensionsRegistryImpl.prototype.registerExtensions = function (extensionDescriptions) {\n            for (var i = 0, len = extensionDescriptions.length; i < len; i++) {\n                var extensionDescription = extensionDescriptions[i];\n                if (hasOwnProperty.call(this._extensionsMap, extensionDescription.id)) {\n                    // No overwriting allowed!\n                    console.error('Extension `' + extensionDescription.id + '` is already registered');\n                    continue;\n                }\n                this._extensionsMap[extensionDescription.id] = extensionDescription;\n                this._extensionsArr.push(extensionDescription);\n                if (Array.isArray(extensionDescription.activationEvents)) {\n                    for (var j = 0, lenJ = extensionDescription.activationEvents.length; j < lenJ; j++) {\n                        var activationEvent = extensionDescription.activationEvents[j];\n                        this._activationMap[activationEvent] = this._activationMap[activationEvent] || [];\n                        this._activationMap[activationEvent].push(extensionDescription);\n                    }\n                }\n            }\n            for (var i = 0, len = this._pointListeners.length; i < len; i++) {\n                var listenerEntry = this._pointListeners[i];\n                var descriptions = ExtensionsRegistryImpl._filterWithExtPoint(extensionDescriptions, listenerEntry.extensionPoint);\n                this._triggerPointListener(listenerEntry, descriptions);\n            }\n        };\n        ExtensionsRegistryImpl._filterWithExtPoint = function (input, point) {\n            return input.filter(function (desc) {\n                return (desc.contributes && hasOwnProperty.call(desc.contributes, point));\n            });\n        };\n        ExtensionsRegistryImpl.prototype.getExtensionDescriptionsForActivationEvent = function (activationEvent) {\n            if (!hasOwnProperty.call(this._activationMap, activationEvent)) {\n                return [];\n            }\n            return this._activationMap[activationEvent].slice(0);\n        };\n        ExtensionsRegistryImpl.prototype.getAllExtensionDescriptions = function () {\n            return this._extensionsArr.slice(0);\n        };\n        ExtensionsRegistryImpl.prototype.getExtensionDescription = function (extensionId) {\n            if (!hasOwnProperty.call(this._extensionsMap, extensionId)) {\n                return null;\n            }\n            return this._extensionsMap[extensionId];\n        };\n        ExtensionsRegistryImpl.prototype.registerOneTimeActivationEventListener = function (activationEvent, listener) {\n            if (!hasOwnProperty.call(this._oneTimeActivationEventListeners, activationEvent)) {\n                this._oneTimeActivationEventListeners[activationEvent] = [];\n            }\n            this._oneTimeActivationEventListeners[activationEvent].push(listener);\n        };\n        ExtensionsRegistryImpl.prototype.triggerActivationEventListeners = function (activationEvent) {\n            if (hasOwnProperty.call(this._oneTimeActivationEventListeners, activationEvent)) {\n                var listeners = this._oneTimeActivationEventListeners[activationEvent];\n                delete this._oneTimeActivationEventListeners[activationEvent];\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                    var listener = listeners[i];\n                    try {\n                        listener();\n                    }\n                    catch (e) {\n                        errors_1.onUnexpectedError(e);\n                    }\n                }\n            }\n        };\n        return ExtensionsRegistryImpl;\n    }());\n    function _isStringArray(arr) {\n        if (!Array.isArray(arr)) {\n            return false;\n        }\n        for (var i = 0, len = arr.length; i < len; i++) {\n            if (typeof arr[i] !== 'string') {\n                return false;\n            }\n        }\n        return true;\n    }\n    var PRExtensions = {\n        ExtensionsRegistry: 'ExtensionsRegistry'\n    };\n    platform_1.Registry.add(PRExtensions.ExtensionsRegistry, new ExtensionsRegistryImpl());\n    exports.ExtensionsRegistry = platform_1.Registry.as(PRExtensions.ExtensionsRegistry);\n    schemaRegistry.registerSchema(schemaId, schema);\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndefine(__m[100], __M([1,0,71,2,9,12,29,13,5,46,25,44,39,3,47,30,97,53,35,11]), function (require, exports, nls, errors_1, event_1, lifecycle_1, objects, paths, winjs_base_1, mime, descriptors_1, extensions_1, extensionsRegistry_1, instantiation_1, abstractMode_1, modesRegistry_1, languagesRegistry_1, configuration_1, abstractState_1, supports_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var languagesExtPoint = extensionsRegistry_1.ExtensionsRegistry.registerExtensionPoint('languages', {\n        description: nls.localize(0, null),\n        type: 'array',\n        items: {\n            type: 'object',\n            defaultSnippets: [{ body: { id: '{{languageId}}', aliases: ['{{label}}'], extensions: ['{{extension}}'], configuration: './language-configuration.json' } }],\n            properties: {\n                id: {\n                    description: nls.localize(1, null),\n                    type: 'string'\n                },\n                aliases: {\n                    description: nls.localize(2, null),\n                    type: 'array',\n                    items: {\n                        type: 'string'\n                    }\n                },\n                extensions: {\n                    description: nls.localize(3, null),\n                    default: ['.foo'],\n                    type: 'array',\n                    items: {\n                        type: 'string'\n                    }\n                },\n                filenames: {\n                    description: nls.localize(4, null),\n                    type: 'array',\n                    items: {\n                        type: 'string'\n                    }\n                },\n                filenamePatterns: {\n                    description: nls.localize(5, null),\n                    type: 'array',\n                    items: {\n                        type: 'string'\n                    }\n                },\n                mimetypes: {\n                    description: nls.localize(6, null),\n                    type: 'array',\n                    items: {\n                        type: 'string'\n                    }\n                },\n                firstLine: {\n                    description: nls.localize(7, null),\n                    type: 'string'\n                },\n                configuration: {\n                    description: nls.localize(8, null),\n                    type: 'string',\n                    default: './language-configuration.json'\n                }\n            }\n        }\n    });\n    function isUndefinedOrStringArray(value) {\n        if (typeof value === 'undefined') {\n            return true;\n        }\n        if (!Array.isArray(value)) {\n            return false;\n        }\n        return value.every(function (item) { return typeof item === 'string'; });\n    }\n    function isValidLanguageExtensionPoint(value, collector) {\n        if (!value) {\n            collector.error(nls.localize(9, null, languagesExtPoint.name));\n            return false;\n        }\n        if (typeof value.id !== 'string') {\n            collector.error(nls.localize(10, null, 'id'));\n            return false;\n        }\n        if (!isUndefinedOrStringArray(value.extensions)) {\n            collector.error(nls.localize(11, null, 'extensions'));\n            return false;\n        }\n        if (!isUndefinedOrStringArray(value.filenames)) {\n            collector.error(nls.localize(12, null, 'filenames'));\n            return false;\n        }\n        if (typeof value.firstLine !== 'undefined' && typeof value.firstLine !== 'string') {\n            collector.error(nls.localize(13, null, 'firstLine'));\n            return false;\n        }\n        if (typeof value.configuration !== 'undefined' && typeof value.configuration !== 'string') {\n            collector.error(nls.localize(14, null, 'configuration'));\n            return false;\n        }\n        if (!isUndefinedOrStringArray(value.aliases)) {\n            collector.error(nls.localize(15, null, 'aliases'));\n            return false;\n        }\n        if (!isUndefinedOrStringArray(value.mimetypes)) {\n            collector.error(nls.localize(16, null, 'mimetypes'));\n            return false;\n        }\n        return true;\n    }\n    var ModeServiceImpl = (function () {\n        function ModeServiceImpl(instantiationService, extensionService) {\n            var _this = this;\n            this._onDidAddModes = new event_1.Emitter();\n            this.onDidAddModes = this._onDidAddModes.event;\n            this._onDidCreateMode = new event_1.Emitter();\n            this.onDidCreateMode = this._onDidCreateMode.event;\n            this._instantiationService = instantiationService;\n            this._extensionService = extensionService;\n            this._activationPromises = {};\n            this._instantiatedModes = {};\n            this._config = {};\n            this._registry = new languagesRegistry_1.LanguagesRegistry();\n            this._registry.onDidAddModes(function (modes) { return _this._onDidAddModes.fire(modes); });\n        }\n        ModeServiceImpl.prototype.getConfigurationForMode = function (modeId) {\n            return this._config[modeId] || {};\n        };\n        ModeServiceImpl.prototype.configureMode = function (mimetype, options) {\n            var modeId = this.getModeId(mimetype);\n            if (modeId) {\n                this.configureModeById(modeId, options);\n            }\n        };\n        ModeServiceImpl.prototype.configureModeById = function (modeId, options) {\n            var previousOptions = this._config[modeId] || {};\n            var newOptions = objects.mixin(objects.clone(previousOptions), options);\n            if (objects.equals(previousOptions, newOptions)) {\n                // This configure call is a no-op\n                return;\n            }\n            this._config[modeId] = newOptions;\n            var mode = this.getMode(modeId);\n            if (mode && mode.configSupport) {\n                mode.configSupport.configure(this.getConfigurationForMode(modeId));\n            }\n        };\n        ModeServiceImpl.prototype._configureAllModes = function (config) {\n            var _this = this;\n            if (!config) {\n                return;\n            }\n            var modes = this._registry.getRegisteredModes();\n            modes.forEach(function (modeIdentifier) {\n                var configuration = config[modeIdentifier];\n                _this.configureModeById(modeIdentifier, configuration);\n            });\n        };\n        ModeServiceImpl.prototype.isRegisteredMode = function (mimetypeOrModeId) {\n            return this._registry.isRegisteredMode(mimetypeOrModeId);\n        };\n        ModeServiceImpl.prototype.isCompatMode = function (modeId) {\n            var compatModeData = this._registry.getCompatMode(modeId);\n            return (compatModeData ? true : false);\n        };\n        ModeServiceImpl.prototype.getRegisteredModes = function () {\n            return this._registry.getRegisteredModes();\n        };\n        ModeServiceImpl.prototype.getRegisteredLanguageNames = function () {\n            return this._registry.getRegisteredLanguageNames();\n        };\n        ModeServiceImpl.prototype.getExtensions = function (alias) {\n            return this._registry.getExtensions(alias);\n        };\n        ModeServiceImpl.prototype.getMimeForMode = function (modeId) {\n            return this._registry.getMimeForMode(modeId);\n        };\n        ModeServiceImpl.prototype.getLanguageName = function (modeId) {\n            return this._registry.getLanguageName(modeId);\n        };\n        ModeServiceImpl.prototype.getModeIdForLanguageName = function (alias) {\n            return this._registry.getModeIdForLanguageNameLowercase(alias);\n        };\n        ModeServiceImpl.prototype.getModeId = function (commaSeparatedMimetypesOrCommaSeparatedIds) {\n            var modeIds = this._registry.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\n            if (modeIds.length > 0) {\n                return modeIds[0];\n            }\n            return null;\n        };\n        ModeServiceImpl.prototype.getConfigurationFiles = function (modeId) {\n            return this._registry.getConfigurationFiles(modeId);\n        };\n        // --- instantiation\n        ModeServiceImpl.prototype.lookup = function (commaSeparatedMimetypesOrCommaSeparatedIds) {\n            var r = [];\n            var modeIds = this._registry.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\n            for (var i = 0; i < modeIds.length; i++) {\n                var modeId = modeIds[i];\n                r.push({\n                    modeId: modeId,\n                    isInstantiated: this._instantiatedModes.hasOwnProperty(modeId)\n                });\n            }\n            return r;\n        };\n        ModeServiceImpl.prototype.getMode = function (commaSeparatedMimetypesOrCommaSeparatedIds) {\n            var modeIds = this._registry.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\n            var isPlainText = false;\n            for (var i = 0; i < modeIds.length; i++) {\n                if (this._instantiatedModes.hasOwnProperty(modeIds[i])) {\n                    return this._instantiatedModes[modeIds[i]];\n                }\n                isPlainText = isPlainText || (modeIds[i] === 'plaintext');\n            }\n            if (isPlainText) {\n                // Try to do it synchronously\n                var r = null;\n                this.getOrCreateMode(commaSeparatedMimetypesOrCommaSeparatedIds).then(function (mode) {\n                    r = mode;\n                }).done(null, errors_1.onUnexpectedError);\n                return r;\n            }\n        };\n        ModeServiceImpl.prototype.getModeIdByLanguageName = function (languageName) {\n            var modeIds = this._registry.getModeIdsFromLanguageName(languageName);\n            if (modeIds.length > 0) {\n                return modeIds[0];\n            }\n            return null;\n        };\n        ModeServiceImpl.prototype.getModeIdByFilenameOrFirstLine = function (filename, firstLine) {\n            var modeIds = this._registry.getModeIdsFromFilenameOrFirstLine(filename, firstLine);\n            if (modeIds.length > 0) {\n                return modeIds[0];\n            }\n            return null;\n        };\n        ModeServiceImpl.prototype.onReady = function () {\n            return this._extensionService.onReady();\n        };\n        ModeServiceImpl.prototype.getOrCreateMode = function (commaSeparatedMimetypesOrCommaSeparatedIds) {\n            var _this = this;\n            return this.onReady().then(function () {\n                var modeId = _this.getModeId(commaSeparatedMimetypesOrCommaSeparatedIds);\n                // Fall back to plain text if no mode was found\n                return _this._getOrCreateMode(modeId || 'plaintext');\n            });\n        };\n        ModeServiceImpl.prototype.getOrCreateModeByLanguageName = function (languageName) {\n            var _this = this;\n            return this.onReady().then(function () {\n                var modeId = _this.getModeIdByLanguageName(languageName);\n                // Fall back to plain text if no mode was found\n                return _this._getOrCreateMode(modeId || 'plaintext');\n            });\n        };\n        ModeServiceImpl.prototype.getOrCreateModeByFilenameOrFirstLine = function (filename, firstLine) {\n            var _this = this;\n            return this.onReady().then(function () {\n                var modeId = _this.getModeIdByFilenameOrFirstLine(filename, firstLine);\n                // Fall back to plain text if no mode was found\n                return _this._getOrCreateMode(modeId || 'plaintext');\n            });\n        };\n        ModeServiceImpl.prototype._getOrCreateMode = function (modeId) {\n            var _this = this;\n            if (this._instantiatedModes.hasOwnProperty(modeId)) {\n                return winjs_base_1.TPromise.as(this._instantiatedModes[modeId]);\n            }\n            if (this._activationPromises.hasOwnProperty(modeId)) {\n                return this._activationPromises[modeId];\n            }\n            var c, e;\n            var promise = new winjs_base_1.TPromise(function (cc, ee, pp) { c = cc; e = ee; });\n            this._activationPromises[modeId] = promise;\n            this._createMode(modeId).then(function (mode) {\n                _this._instantiatedModes[modeId] = mode;\n                delete _this._activationPromises[modeId];\n                _this._onDidCreateMode.fire(mode);\n                _this._extensionService.activateByEvent(\"onLanguage:\" + modeId).done(null, errors_1.onUnexpectedError);\n                return _this._instantiatedModes[modeId];\n            }).then(c, e);\n            return promise;\n        };\n        ModeServiceImpl.prototype._createMode = function (modeId) {\n            var _this = this;\n            var modeDescriptor = this._createModeDescriptor(modeId);\n            var compatModeData = this._registry.getCompatMode(modeId);\n            if (compatModeData) {\n                // This is a compatibility mode\n                var resolvedDeps = null;\n                if (Array.isArray(compatModeData.deps)) {\n                    resolvedDeps = winjs_base_1.TPromise.join(compatModeData.deps.map(function (dep) { return _this.getOrCreateMode(dep); }));\n                }\n                else {\n                    resolvedDeps = winjs_base_1.TPromise.as(null);\n                }\n                return resolvedDeps.then(function (_) {\n                    var compatModeAsyncDescriptor = descriptors_1.createAsyncDescriptor1(compatModeData.moduleId, compatModeData.ctorName);\n                    return _this._instantiationService.createInstance(compatModeAsyncDescriptor, modeDescriptor).then(function (compatMode) {\n                        if (compatMode.configSupport) {\n                            compatMode.configSupport.configure(_this.getConfigurationForMode(modeId));\n                        }\n                        return compatMode;\n                    });\n                });\n            }\n            return winjs_base_1.TPromise.as(this._instantiationService.createInstance(abstractMode_1.FrankensteinMode, modeDescriptor));\n        };\n        ModeServiceImpl.prototype._createModeDescriptor = function (modeId) {\n            return {\n                id: modeId\n            };\n        };\n        ModeServiceImpl.prototype._registerTokenizationSupport = function (mode, callback) {\n            if (mode.setTokenizationSupport) {\n                return mode.setTokenizationSupport(callback);\n            }\n            else {\n                console.warn('Cannot register tokenizationSupport on mode ' + mode.getId() + ' because it does not support it.');\n                return lifecycle_1.empty;\n            }\n        };\n        ModeServiceImpl.prototype.registerModeSupport = function (modeId, callback) {\n            var _this = this;\n            if (this._instantiatedModes.hasOwnProperty(modeId)) {\n                return this._registerTokenizationSupport(this._instantiatedModes[modeId], callback);\n            }\n            var cc;\n            var promise = new winjs_base_1.TPromise(function (c, e) { cc = c; });\n            var disposable = this.onDidCreateMode(function (mode) {\n                if (mode.getId() !== modeId) {\n                    return;\n                }\n                cc(_this._registerTokenizationSupport(mode, callback));\n                disposable.dispose();\n            });\n            return {\n                dispose: function () {\n                    promise.done(function (disposable) { return disposable.dispose(); }, null);\n                }\n            };\n        };\n        ModeServiceImpl.prototype.registerTokenizationSupport = function (modeId, callback) {\n            return this.registerModeSupport(modeId, callback);\n        };\n        ModeServiceImpl.prototype.registerTokenizationSupport2 = function (modeId, support) {\n            return this.registerModeSupport(modeId, function (mode) {\n                return new TokenizationSupport2Adapter(mode, support);\n            });\n        };\n        return ModeServiceImpl;\n    }());\n    exports.ModeServiceImpl = ModeServiceImpl;\n    var TokenizationState2Adapter = (function () {\n        function TokenizationState2Adapter(mode, actual, stateData) {\n            this._mode = mode;\n            this._actual = actual;\n            this._stateData = stateData;\n        }\n        Object.defineProperty(TokenizationState2Adapter.prototype, \"actual\", {\n            get: function () { return this._actual; },\n            enumerable: true,\n            configurable: true\n        });\n        TokenizationState2Adapter.prototype.clone = function () {\n            return new TokenizationState2Adapter(this._mode, this._actual.clone(), abstractState_1.AbstractState.safeClone(this._stateData));\n        };\n        TokenizationState2Adapter.prototype.equals = function (other) {\n            if (other instanceof TokenizationState2Adapter) {\n                if (!this._actual.equals(other._actual)) {\n                    return false;\n                }\n                return abstractState_1.AbstractState.safeEquals(this._stateData, other._stateData);\n            }\n            return false;\n        };\n        TokenizationState2Adapter.prototype.getMode = function () {\n            return this._mode;\n        };\n        TokenizationState2Adapter.prototype.tokenize = function (stream) {\n            throw new Error('Unexpected tokenize call!');\n        };\n        TokenizationState2Adapter.prototype.getStateData = function () {\n            return this._stateData;\n        };\n        TokenizationState2Adapter.prototype.setStateData = function (stateData) {\n            this._stateData = stateData;\n        };\n        return TokenizationState2Adapter;\n    }());\n    exports.TokenizationState2Adapter = TokenizationState2Adapter;\n    var TokenizationSupport2Adapter = (function () {\n        function TokenizationSupport2Adapter(mode, actual) {\n            this._mode = mode;\n            this._actual = actual;\n        }\n        TokenizationSupport2Adapter.prototype.getInitialState = function () {\n            return new TokenizationState2Adapter(this._mode, this._actual.getInitialState(), null);\n        };\n        TokenizationSupport2Adapter.prototype.tokenize = function (line, state, offsetDelta, stopAtOffset) {\n            if (offsetDelta === void 0) { offsetDelta = 0; }\n            if (state instanceof TokenizationState2Adapter) {\n                var actualResult = this._actual.tokenize(line, state.actual);\n                var tokens_1 = [];\n                actualResult.tokens.forEach(function (t) {\n                    if (typeof t.scopes === 'string') {\n                        tokens_1.push(new supports_1.Token(t.startIndex + offsetDelta, t.scopes));\n                    }\n                    else if (Array.isArray(t.scopes) && t.scopes.length === 1) {\n                        tokens_1.push(new supports_1.Token(t.startIndex + offsetDelta, t.scopes[0]));\n                    }\n                    else {\n                        throw new Error('Only token scopes as strings or of precisely 1 length are supported at this time!');\n                    }\n                });\n                return {\n                    tokens: tokens_1,\n                    actualStopOffset: offsetDelta + line.length,\n                    endState: new TokenizationState2Adapter(state.getMode(), actualResult.endState, state.getStateData()),\n                    modeTransitions: [{ startIndex: offsetDelta, mode: state.getMode() }],\n                };\n            }\n            throw new Error('Unexpected state to tokenize with!');\n        };\n        return TokenizationSupport2Adapter;\n    }());\n    exports.TokenizationSupport2Adapter = TokenizationSupport2Adapter;\n    var MainThreadModeServiceImpl = (function (_super) {\n        __extends(MainThreadModeServiceImpl, _super);\n        function MainThreadModeServiceImpl(instantiationService, extensionService, configurationService) {\n            var _this = this;\n            _super.call(this, instantiationService, extensionService);\n            this._configurationService = configurationService;\n            languagesExtPoint.setHandler(function (extensions) {\n                var allValidLanguages = [];\n                for (var i = 0, len = extensions.length; i < len; i++) {\n                    var extension = extensions[i];\n                    if (!Array.isArray(extension.value)) {\n                        extension.collector.error(nls.localize(17, null, languagesExtPoint.name));\n                        continue;\n                    }\n                    for (var j = 0, lenJ = extension.value.length; j < lenJ; j++) {\n                        var ext = extension.value[j];\n                        if (isValidLanguageExtensionPoint(ext, extension.collector)) {\n                            var configuration = (ext.configuration ? paths.join(extension.description.extensionFolderPath, ext.configuration) : ext.configuration);\n                            allValidLanguages.push({\n                                id: ext.id,\n                                extensions: ext.extensions,\n                                filenames: ext.filenames,\n                                filenamePatterns: ext.filenamePatterns,\n                                firstLine: ext.firstLine,\n                                aliases: ext.aliases,\n                                mimetypes: ext.mimetypes,\n                                configuration: configuration\n                            });\n                        }\n                    }\n                }\n                modesRegistry_1.ModesRegistry.registerLanguages(allValidLanguages);\n            });\n            this._configurationService.onDidUpdateConfiguration(function (e) { return _this.onConfigurationChange(e.config); });\n        }\n        MainThreadModeServiceImpl.prototype.onReady = function () {\n            var _this = this;\n            if (!this._onReadyPromise) {\n                var configuration_2 = this._configurationService.getConfiguration();\n                this._onReadyPromise = this._extensionService.onReady().then(function () {\n                    _this.onConfigurationChange(configuration_2);\n                    return true;\n                });\n            }\n            return this._onReadyPromise;\n        };\n        MainThreadModeServiceImpl.prototype.onConfigurationChange = function (configuration) {\n            var _this = this;\n            // Update Languages\n            this._configureAllModes(configuration);\n            // Clear user configured mime associations\n            mime.clearTextMimes(true /* user configured */);\n            // Register based on settings\n            if (configuration.files && configuration.files.associations) {\n                Object.keys(configuration.files.associations).forEach(function (pattern) {\n                    mime.registerTextMime({ mime: _this.getMimeForMode(configuration.files.associations[pattern]), filepattern: pattern, userConfigured: true });\n                });\n            }\n        };\n        MainThreadModeServiceImpl = __decorate([\n            __param(0, instantiation_1.IInstantiationService),\n            __param(1, extensions_1.IExtensionService),\n            __param(2, configuration_1.IConfigurationService)\n        ], MainThreadModeServiceImpl);\n        return MainThreadModeServiceImpl;\n    }(ModeServiceImpl));\n    exports.MainThreadModeServiceImpl = MainThreadModeServiceImpl;\n});\n\ndefine(__m[101], __M([1,0,72,26,5,39]), function (require, exports, nls, severity_1, winjs_base_1, extensionsRegistry_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var hasOwnProperty = Object.hasOwnProperty;\n    var ActivatedExtension = (function () {\n        function ActivatedExtension(activationFailed) {\n            this.activationFailed = activationFailed;\n        }\n        return ActivatedExtension;\n    }());\n    exports.ActivatedExtension = ActivatedExtension;\n    var AbstractExtensionService = (function () {\n        function AbstractExtensionService(isReadyByDefault) {\n            var _this = this;\n            if (isReadyByDefault) {\n                this._onReady = winjs_base_1.TPromise.as(true);\n                this._onReadyC = function (v) { };\n            }\n            else {\n                this._onReady = new winjs_base_1.TPromise(function (c, e, p) {\n                    _this._onReadyC = c;\n                }, function () {\n                    console.warn('You should really not try to cancel this ready promise!');\n                });\n            }\n            this._activatingExtensions = {};\n            this._activatedExtensions = {};\n        }\n        AbstractExtensionService.prototype._triggerOnReady = function () {\n            this._onReadyC(true);\n        };\n        AbstractExtensionService.prototype.onReady = function () {\n            return this._onReady;\n        };\n        AbstractExtensionService.prototype.getExtensionsStatus = function () {\n            return null;\n        };\n        AbstractExtensionService.prototype.isActivated = function (extensionId) {\n            return hasOwnProperty.call(this._activatedExtensions, extensionId);\n        };\n        AbstractExtensionService.prototype.activateByEvent = function (activationEvent) {\n            var _this = this;\n            return this._onReady.then(function () {\n                extensionsRegistry_1.ExtensionsRegistry.triggerActivationEventListeners(activationEvent);\n                var activateExtensions = extensionsRegistry_1.ExtensionsRegistry.getExtensionDescriptionsForActivationEvent(activationEvent);\n                return _this._activateExtensions(activateExtensions, 0);\n            });\n        };\n        AbstractExtensionService.prototype.activateById = function (extensionId) {\n            var _this = this;\n            return this._onReady.then(function () {\n                var desc = extensionsRegistry_1.ExtensionsRegistry.getExtensionDescription(extensionId);\n                if (!desc) {\n                    throw new Error('Extension `' + extensionId + '` is not known');\n                }\n                return _this._activateExtensions([desc], 0);\n            });\n        };\n        /**\n         * Handle semantics related to dependencies for `currentExtension`.\n         * semantics: `redExtensions` must wait for `greenExtensions`.\n         */\n        AbstractExtensionService.prototype._handleActivateRequest = function (currentExtension, greenExtensions, redExtensions) {\n            var depIds = (typeof currentExtension.extensionDependencies === 'undefined' ? [] : currentExtension.extensionDependencies);\n            var currentExtensionGetsGreenLight = true;\n            for (var j = 0, lenJ = depIds.length; j < lenJ; j++) {\n                var depId = depIds[j];\n                var depDesc = extensionsRegistry_1.ExtensionsRegistry.getExtensionDescription(depId);\n                if (!depDesc) {\n                    // Error condition 1: unknown dependency\n                    this._showMessage(severity_1.default.Error, nls.localize(0, null, depId, currentExtension.id));\n                    this._activatedExtensions[currentExtension.id] = this._createFailedExtension();\n                    return;\n                }\n                if (hasOwnProperty.call(this._activatedExtensions, depId)) {\n                    var dep = this._activatedExtensions[depId];\n                    if (dep.activationFailed) {\n                        // Error condition 2: a dependency has already failed activation\n                        this._showMessage(severity_1.default.Error, nls.localize(1, null, depId, currentExtension.id));\n                        this._activatedExtensions[currentExtension.id] = this._createFailedExtension();\n                        return;\n                    }\n                }\n                else {\n                    // must first wait for the dependency to activate\n                    currentExtensionGetsGreenLight = false;\n                    greenExtensions[depId] = depDesc;\n                }\n            }\n            if (currentExtensionGetsGreenLight) {\n                greenExtensions[currentExtension.id] = currentExtension;\n            }\n            else {\n                redExtensions.push(currentExtension);\n            }\n        };\n        AbstractExtensionService.prototype._activateExtensions = function (extensionDescriptions, recursionLevel) {\n            var _this = this;\n            // console.log(recursionLevel, '_activateExtensions: ', extensionDescriptions.map(p => p.id));\n            if (extensionDescriptions.length === 0) {\n                return winjs_base_1.TPromise.as(void 0);\n            }\n            extensionDescriptions = extensionDescriptions.filter(function (p) { return !hasOwnProperty.call(_this._activatedExtensions, p.id); });\n            if (extensionDescriptions.length === 0) {\n                return winjs_base_1.TPromise.as(void 0);\n            }\n            if (recursionLevel > 10) {\n                // More than 10 dependencies deep => most likely a dependency loop\n                for (var i = 0, len = extensionDescriptions.length; i < len; i++) {\n                    // Error condition 3: dependency loop\n                    this._showMessage(severity_1.default.Error, nls.localize(2, null, extensionDescriptions[i].id));\n                    this._activatedExtensions[extensionDescriptions[i].id] = this._createFailedExtension();\n                }\n                return winjs_base_1.TPromise.as(void 0);\n            }\n            var greenMap = Object.create(null), red = [];\n            for (var i = 0, len = extensionDescriptions.length; i < len; i++) {\n                this._handleActivateRequest(extensionDescriptions[i], greenMap, red);\n            }\n            // Make sure no red is also green\n            for (var i = 0, len = red.length; i < len; i++) {\n                if (greenMap[red[i].id]) {\n                    delete greenMap[red[i].id];\n                }\n            }\n            var green = Object.keys(greenMap).map(function (id) { return greenMap[id]; });\n            // console.log('greenExtensions: ', green.map(p => p.id));\n            // console.log('redExtensions: ', red.map(p => p.id));\n            if (red.length === 0) {\n                // Finally reached only leafs!\n                return winjs_base_1.TPromise.join(green.map(function (p) { return _this._activateExtension(p); })).then(function (_) { return void 0; });\n            }\n            return this._activateExtensions(green, recursionLevel + 1).then(function (_) {\n                return _this._activateExtensions(red, recursionLevel + 1);\n            });\n        };\n        AbstractExtensionService.prototype._activateExtension = function (extensionDescription) {\n            var _this = this;\n            if (hasOwnProperty.call(this._activatedExtensions, extensionDescription.id)) {\n                return winjs_base_1.TPromise.as(void 0);\n            }\n            if (hasOwnProperty.call(this._activatingExtensions, extensionDescription.id)) {\n                return this._activatingExtensions[extensionDescription.id];\n            }\n            this._activatingExtensions[extensionDescription.id] = this._actualActivateExtension(extensionDescription).then(null, function (err) {\n                _this._showMessage(severity_1.default.Error, nls.localize(3, null, extensionDescription.id, err.message));\n                console.error('Activating extension `' + extensionDescription.id + '` failed: ', err.message);\n                console.log('Here is the error stack: ', err.stack);\n                // Treat the extension as being empty\n                return _this._createFailedExtension();\n            }).then(function (x) {\n                _this._activatedExtensions[extensionDescription.id] = x;\n                delete _this._activatingExtensions[extensionDescription.id];\n            });\n            return this._activatingExtensions[extensionDescription.id];\n        };\n        return AbstractExtensionService;\n    }());\n    exports.AbstractExtensionService = AbstractExtensionService;\n});\n\ndefine(__m[102], __M([1,0,5,52,3]), function (require, exports, winjs_base_1, timer_1, instantiation_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.ITelemetryService = instantiation_1.createDecorator('telemetryService');\n    exports.NullTelemetryService = {\n        _serviceBrand: undefined,\n        timedPublicLog: function (name, data) {\n            return timer_1.nullEvent;\n        },\n        publicLog: function (eventName, data) {\n            return winjs_base_1.TPromise.as(null);\n        },\n        isOptedIn: true,\n        getTelemetryInfo: function () {\n            return winjs_base_1.TPromise.as({\n                instanceId: 'someValue.instanceId',\n                sessionId: 'someValue.sessionId',\n                machineId: 'someValue.machineId'\n            });\n        }\n    };\n    function combinedAppender() {\n        var appenders = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            appenders[_i - 0] = arguments[_i];\n        }\n        return { log: function (e, d) { return appenders.forEach(function (a) { return a.log(e, d); }); } };\n    }\n    exports.combinedAppender = combinedAppender;\n    exports.NullAppender = { log: function () { return null; } };\n    // --- util\n    function anonymize(input) {\n        if (!input) {\n            return input;\n        }\n        var r = '';\n        for (var i = 0; i < input.length; i++) {\n            var ch = input[i];\n            if (ch >= '0' && ch <= '9') {\n                r += '0';\n                continue;\n            }\n            if (ch >= 'a' && ch <= 'z') {\n                r += 'a';\n                continue;\n            }\n            if (ch >= 'A' && ch <= 'Z') {\n                r += 'A';\n                continue;\n            }\n            r += ch;\n        }\n        return r;\n    }\n    exports.anonymize = anonymize;\n});\n\ndefine(__m[64], __M([1,0,3]), function (require, exports, instantiation_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.IWorkspaceContextService = instantiation_1.createDecorator('contextService');\n});\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[62], __M([1,0,32,33,48,50,38,9,99,12,13,51,15,56,64,102,16,18,47,35,24,76,81,34,54,41,80,28,40]), function (require, exports) {\n    'use strict';\n});\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\ndefine(__m[105], __M([1,0,26,5,74,90,101,44,59,93,100,28,82,22,96,40,62]), function (require, exports, severity_1, winjs_base_1, eventService_1, event_1, abstractExtensionService_1, extensions_1, serviceCollection_1, instantiationService_1, modeServiceImpl_1, modeService_1, resourceServiceImpl_1, resourceService_1, compatWorkerServiceWorker_1, compatWorkerService_1) {\n    'use strict';\n    var WorkerExtensionService = (function (_super) {\n        __extends(WorkerExtensionService, _super);\n        function WorkerExtensionService() {\n            _super.call(this, true);\n        }\n        WorkerExtensionService.prototype._showMessage = function (severity, msg) {\n            switch (severity) {\n                case severity_1.default.Error:\n                    console.error(msg);\n                    break;\n                case severity_1.default.Warning:\n                    console.warn(msg);\n                    break;\n                case severity_1.default.Info:\n                    console.info(msg);\n                    break;\n                default:\n                    console.log(msg);\n            }\n        };\n        WorkerExtensionService.prototype._createFailedExtension = function () {\n            throw new Error('unexpected');\n        };\n        WorkerExtensionService.prototype._actualActivateExtension = function (extensionDescription) {\n            throw new Error('unexpected');\n        };\n        return WorkerExtensionService;\n    }(abstractExtensionService_1.AbstractExtensionService));\n    var EditorWorkerServer = (function () {\n        function EditorWorkerServer() {\n        }\n        EditorWorkerServer.prototype.initialize = function (mainThread, complete, error, progress, initData) {\n            var services = new serviceCollection_1.ServiceCollection();\n            var instantiationService = new instantiationService_1.InstantiationService(services);\n            var extensionService = new WorkerExtensionService();\n            services.set(extensions_1.IExtensionService, extensionService);\n            var resourceService = new resourceServiceImpl_1.ResourceService();\n            services.set(resourceService_1.IResourceService, resourceService);\n            services.set(event_1.IEventService, new eventService_1.EventService());\n            var modeService = new modeServiceImpl_1.ModeServiceImpl(instantiationService, extensionService);\n            services.set(modeService_1.IModeService, modeService);\n            this.compatWorkerService = new compatWorkerServiceWorker_1.CompatWorkerServiceWorker(resourceService, modeService, initData.modesRegistryData);\n            services.set(compatWorkerService_1.ICompatWorkerService, this.compatWorkerService);\n            complete(undefined);\n        };\n        EditorWorkerServer.prototype.request = function (mainThread, complete, error, progress, data) {\n            try {\n                winjs_base_1.TPromise.as(this.compatWorkerService.handleMainRequest(data.target, data.methodName, data.args)).then(complete, error);\n            }\n            catch (err) {\n                error(err);\n            }\n        };\n        return EditorWorkerServer;\n    }());\n    exports.EditorWorkerServer = EditorWorkerServer;\n    exports.value = new EditorWorkerServer();\n});\n\n}).call(this);\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default ist zero).\n */\nexport function tail<T>(array: T[], n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\n/**\n * Iterates the provided array and allows to remove\n * elements while iterating.\n */\nexport function forEach<T>(array: T[], callback: (element: T, remove: Function) => void): void {\n\tfor (var i = 0, len = array.length; i < len; i++) {\n\t\tcallback(array[i], function() {\n\t\t\tarray.splice(i, 1);\n\t\t\ti--; len--;\n\t\t});\n\t}\n}\n\nexport function equals<T>(one: T[], other: T[], itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (var i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: T[], key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tlet mid = ((low + high) / 2) | 0;\n\t\tlet comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirst<T>(array: T[], p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tlet mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: T[], compare: (a: T, b: T) => number, n: number) {\n\tconst result = array.slice(0, n).sort(compare);\n\tfor (let i = n, m = array.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirst(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function merge<T>(arrays: T[][], hashFn?: (element: T) => string): T[] {\n\tconst result = new Array<T>();\n\tif (!hashFn) {\n\t\tfor (let i = 0, len = arrays.length; i < len; i++) {\n\t\t\tresult.push.apply(result, arrays[i]);\n\t\t}\n\t} else {\n\t\tconst map: { [k: string]: boolean } = {};\n\t\tfor (let i = 0; i < arrays.length; i++) {\n\t\t\tfor (let j = 0; j < arrays[i].length; j++) {\n\t\t\t\tlet element = arrays[i][j],\n\t\t\t\t\thash = hashFn(element);\n\n\t\t\t\tif (!map.hasOwnProperty(hash)) {\n\t\t\t\t\tmap[hash] = true;\n\t\t\t\t\tresult.push(element);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * @returns a new array with all undefined or null values removed. The original array is not modified at all.\n */\nexport function coalesce<T>(array: T[]): T[] {\n\tif (!array) {\n\t\treturn array;\n\t}\n\n\treturn array.filter(e => !!e);\n}\n\n/**\n * @returns true if the given item is contained in the array.\n */\nexport function contains<T>(array: T[], item: T): boolean {\n\treturn array.indexOf(item) >= 0;\n}\n\n/**\n * Swaps the elements in the array for the provided positions.\n */\nexport function swap(array: any[], pos1: number, pos2: number): void {\n\tconst element1 = array[pos1];\n\tconst element2 = array[pos2];\n\n\tarray[pos1] = element2;\n\tarray[pos2] = element1;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns {{false}} if the provided object is an array\n * \tand not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || (<Array<any>>obj).length === 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: T[], keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function firstIndex<T>(array: T[], fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function first<T>(array: T[], fn: (item: T) => boolean, notFoundValue: T = null): T {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function commonPrefixLength<T>(one: T[], other: T[], equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (var i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn arr.reduce((r, v) => r.concat(v), []);\n}\n\nexport function range(to: number, from = 0): number[] {\n\tconst result = [];\n\n\tfor (let i = from; i < to; i++) {\n\t\tresult.push(i);\n\t}\n\n\treturn result;\n}\n\nexport function fill<T>(num: number, valueFn: () => T, arr: T[] = []): T[] {\n\tfor (let i = 0; i < num; i++) {\n\t\tarr[i] = valueFn();\n\t}\n\n\treturn arr;\n}\n\nexport function index<T>(array: T[], indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T,R>(array: T[], indexer: (t: T) => string, merger?: (t: T, r: R) => R): { [key: string]: R; };\nexport function index<T,R>(array: T[], indexer: (t: T) => string, merger: (t: T, r: R) => R = t => t as any): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tconst key = indexer(t);\n\t\tr[key] = merger(t, r[key]);\n\t\treturn r;\n\t}, Object.create(null));\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: any, message?: string) {\n\tif (!value || value === null) {\n\t\tthrow new Error(message ? 'Assertion failed (' + message + ')' : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are strings.\n */\nexport interface IStringDictionary<V> {\n\t[name: string]: V;\n}\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are numbers.\n */\nexport interface INumberDictionary<V> {\n\t[idx: number]: V;\n}\n\nexport function createStringDictionary<V>(): IStringDictionary<V> {\n\treturn Object.create(null);\n}\n\nexport function createNumberDictionary<V>(): INumberDictionary<V> {\n\treturn Object.create(null);\n}\n\n/**\n * Looks up and returns a property that is owned\n * by the provided map object.\n * @param what The key.\n * @param from A native JavaScript object that stores items.\n * @param alternate A default value this is return in case an item with\n * \tthe key isn't found.\n */\nexport function lookup<T>(from: IStringDictionary<T>, what: string, alternate?: T): T;\nexport function lookup<T>(from: INumberDictionary<T>, what: number, alternate?: T): T;\nexport function lookup<T>(from: any, what: any, alternate: T = null): T {\n\tconst key = String(what);\n\tif (contains(from, key)) {\n\t\treturn from[key];\n\t}\n\treturn alternate;\n}\n\n\n/**\n * Looks up a value from the set. If the set doesn't contain the\n * value it inserts and returns the given alternate value.\n */\nexport function lookupOrInsert<T>(from: IStringDictionary<T>, key: string, alternate: T): T;\nexport function lookupOrInsert<T>(from: IStringDictionary<T>, key: string, alternateFn: () => T): T;\nexport function lookupOrInsert<T>(from: INumberDictionary<T>, key: number, alternate: T): T;\nexport function lookupOrInsert<T>(from: INumberDictionary<T>, key: number, alternateFn: () => T): T;\nexport function lookupOrInsert<T>(from: any, stringOrNumber: any, alternate: any): T {\n\tconst key = String(stringOrNumber);\n\tif (contains(from, key)) {\n\t\treturn from[key];\n\t} else {\n\t\tif (typeof alternate === 'function') {\n\t\t\talternate = alternate();\n\t\t}\n\t\tfrom[key] = alternate;\n\t\treturn alternate;\n\t}\n}\n\n/**\n * Inserts\n */\nexport function insert<T>(into: IStringDictionary<T>, data: T, hashFn: (data: T) => string): void;\nexport function insert<T>(into: INumberDictionary<T>, data: T, hashFn: (data: T) => string): void;\nexport function insert<T>(into: any, data: T, hashFn: (data: T) => string): void {\n\tinto[hashFn(data)] = data;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Returns {{true}} iff the provided object contains a property\n * with the given name.\n */\nexport function contains<T>(from: IStringDictionary<T>, what: string): boolean;\nexport function contains<T>(from: INumberDictionary<T>, what: number): boolean;\nexport function contains<T>(from: any, what: any): boolean {\n\treturn hasOwnProperty.call(from, what);\n}\n\n/**\n * Returns an array which contains all values that reside\n * in the given set.\n */\nexport function values<T>(from: IStringDictionary<T>): T[];\nexport function values<T>(from: INumberDictionary<T>): T[];\nexport function values<T>(from: any): any[] {\n\tconst result: T[] = [];\n\tfor (var key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tresult.push(from[key]);\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * Iterates over each entry in the provided set. The iterator allows\n * to remove elements and will stop when the callback returns {{false}}.\n */\nexport function forEach<T>(from: IStringDictionary<T>, callback: (entry: { key: string; value: T; }, remove: Function) => any): void;\nexport function forEach<T>(from: INumberDictionary<T>, callback: (entry: { key: number; value: T; }, remove: Function) => any): void;\nexport function forEach<T>(from: any, callback: (entry: { key: any; value: T; }, remove: Function) => any): void {\n\tfor (var key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tconst result = callback({ key: key, value: from[key] }, function() {\n\t\t\t\tdelete from[key];\n\t\t\t});\n\t\t\tif (result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Removes an element from the dictionary. Returns {{false}} if the property\n * does not exists.\n */\nexport function remove<T>(from: IStringDictionary<T>, key: string): boolean;\nexport function remove<T>(from: INumberDictionary<T>, key: string): boolean;\nexport function remove<T>(from: any, key: string): boolean {\n\tif (!hasOwnProperty.call(from, key)) {\n\t\treturn false;\n\t}\n\tdelete from[key];\n\treturn true;\n}\n\n/**\n * Groups the collection into a dictionary based on the provided\n * group function.\n */\nexport function groupBy<T>(data: T[], groupFn: (element: T) => string): IStringDictionary<T[]> {\n\tconst result = createStringDictionary<T[]>();\n\tdata.forEach(element => lookupOrInsert(result, groupFn(element), []).push(element));\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport class Event {\n\tpublic time: number;\n\tpublic originalEvent: Event;\n\tpublic source: any;\n\n\tconstructor(originalEvent?: Event) {\n\t\tthis.time = (new Date()).getTime();\n\t\tthis.originalEvent = originalEvent;\n\t\tthis.source = null;\n\t}\n}\n\nexport class PropertyChangeEvent extends Event {\n\tpublic key: string;\n\tpublic oldValue: any;\n\tpublic newValue: any;\n\n\tconstructor(key?: string, oldValue?: any, newValue?: any, originalEvent?: Event) {\n\t\tsuper(originalEvent);\n\n\t\tthis.key = key;\n\t\tthis.oldValue = oldValue;\n\t\tthis.newValue = newValue;\n\t}\n}\n\nexport class ViewerEvent extends Event {\n\tpublic element: any;\n\n\tconstructor(element: any, originalEvent?: Event) {\n\t\tsuper(originalEvent);\n\n\t\tthis.element = element;\n\t}\n}\n\nexport interface ISelectionEvent {\n\tselection: any[];\n\tpayload?: any;\n\tsource: any;\n}\n\nexport interface IFocusEvent {\n\tfocus: any;\n\tpayload?: any;\n\tsource: any;\n}\n\nexport interface IHighlightEvent {\n\thighlight: any;\n\tpayload?: any;\n\tsource: any;\n}\n\nexport const EventType = {\n\tPROPERTY_CHANGED: 'propertyChanged',\n\tSELECTION: 'selection',\n\tFOCUS: 'focus',\n\tBLUR: 'blur',\n\tHIGHLIGHT: 'highlight',\n\tEXPAND: 'expand',\n\tCOLLAPSE: 'collapse',\n\tTOGGLE: 'toggle',\n\tBEFORE_RUN: 'beforeRun',\n\tRUN: 'run',\n\tEDIT: 'edit',\n\tSAVE: 'save',\n\tCANCEL: 'cancel',\n\tCHANGE: 'change',\n\tDISPOSE: 'dispose',\n};\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nexport interface Key {\n\ttoString():string;\n}\n\nexport interface Entry<K, T> {\n\tnext?: Entry<K, T>;\n\tprev?: Entry<K, T>;\n\tkey: K;\n\tvalue: T;\n}\n\n/**\n * A simple map to store value by a key object. Key can be any object that has toString() function to get\n * string value of the key.\n */\nexport class LinkedMap<K extends Key, T> {\n\n\tprotected map: { [key: string]: Entry<K, T> };\n\tprotected _size: number;\n\n\tconstructor() {\n\t\tthis.map = Object.create(null);\n\t\tthis._size = 0;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this._size;\n\t}\n\n\tpublic get(k: K): T {\n\t\tconst value = this.peek(k);\n\n\t\treturn value ? value : null;\n\t}\n\n\tpublic getOrSet(k: K, t: T): T {\n\t\tconst res = this.get(k);\n\t\tif (res) {\n\t\t\treturn res;\n\t\t}\n\n\t\tthis.set(k, t);\n\n\t\treturn t;\n\t}\n\n\tpublic keys(): K[] {\n\t\tvar keys: K[] = [];\n\t\tfor (let key in this.map) {\n\t\t\tkeys.push(this.map[key].key);\n\t\t}\n\t\treturn keys;\n\t}\n\n\tpublic values(): T[] {\n\t\tvar values: T[] = [];\n\t\tfor (let key in this.map) {\n\t\t\tvalues.push(this.map[key].value);\n\t\t}\n\t\treturn values;\n\t}\n\n\tpublic entries(): Entry<K, T>[] {\n\t\tvar entries: Entry<K, T>[] = [];\n\t\tfor (let key in this.map) {\n\t\t\tentries.push(this.map[key]);\n\t\t}\n\t\treturn entries;\n\t}\n\n\tpublic set(k: K, t: T): boolean {\n\t\tif (this.get(k)) {\n\t\t\treturn false; // already present!\n\t\t}\n\n\t\tthis.push(k, t);\n\n\t\treturn true;\n\t}\n\n\tpublic delete(k: K): T {\n\t\tlet value:T= this.get(k);\n\t\tif (value) {\n\t\t\tthis.pop(k);\n\t\t\treturn value;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic has(k: K): boolean {\n\t\treturn !!this.get(k);\n\t}\n\n\tpublic clear(): void {\n\t\tthis.map = Object.create(null);\n\t\tthis._size = 0;\n\t}\n\n\tprotected push(key: K, value: T): void {\n\t\tconst entry: Entry<K, T> = { key, value };\n\t\tthis.map[key.toString()] = entry;\n\t\tthis._size++;\n\t}\n\n\tprotected pop(k: K): void {\n\t\tdelete this.map[k.toString()];\n\t\tthis._size--;\n\t}\n\n\tprotected peek(k: K): T {\n\t\tconst entry= this.map[k.toString()];\n\t\treturn entry ? entry.value : null;\n\t}\n}\n\n/**\n * A simple Map<T> that optionally allows to set a limit of entries to store. Once the limit is hit,\n * the cache will remove the entry that was last recently added. Or, if a ratio is provided below 1,\n * all elements will be removed until the ratio is full filled (e.g. 0.75 to remove 25% of old elements).\n */\nexport class BoundedLinkedMap<T> {\n\tprotected map: { [key: string]: Entry<string, T> };\n\tprivate head: Entry<string, T>;\n\tprivate tail: Entry<string, T>;\n\tprivate _size: number;\n\tprivate ratio: number;\n\n\tconstructor(private limit = Number.MAX_VALUE, ratio = 1) {\n\t\tthis.map = Object.create(null);\n\t\tthis._size = 0;\n\t\tthis.ratio = limit * ratio;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this._size;\n\t}\n\n\tpublic set(key: string, value: T): boolean {\n\t\tif (this.map[key]) {\n\t\t\treturn false; // already present!\n\t\t}\n\n\t\tconst entry: Entry<string, T> = { key, value };\n\t\tthis.push(entry);\n\n\t\tif (this._size > this.limit) {\n\t\t\tthis.trim();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic get(key: string): T {\n\t\tconst entry = this.map[key];\n\n\t\treturn entry ? entry.value : null;\n\t}\n\n\tpublic getOrSet(k: string, t: T): T {\n\t\tconst res = this.get(k);\n\t\tif (res) {\n\t\t\treturn res;\n\t\t}\n\n\t\tthis.set(k, t);\n\n\t\treturn t;\n\t}\n\n\tpublic delete(key: string): T {\n\t\tconst entry = this.map[key];\n\n\t\tif (entry) {\n\t\t\tthis.map[key] = void 0;\n\t\t\tthis._size--;\n\n\t\t\tif (entry.next) {\n\t\t\t\tentry.next.prev = entry.prev; // [A]<-[x]<-[C] = [A]<-[C]\n\t\t\t} else {\n\t\t\t\tthis.head = entry.prev; // [A]-[x] = [A]\n\t\t\t}\n\n\t\t\tif (entry.prev) {\n\t\t\t\tentry.prev.next = entry.next; // [A]->[x]->[C] = [A]->[C]\n\t\t\t} else {\n\t\t\t\tthis.tail = entry.next; // [x]-[A] = [A]\n\t\t\t}\n\n\t\t\treturn entry.value;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic has(key: string): boolean {\n\t\treturn !!this.map[key];\n\t}\n\n\tpublic clear(): void {\n\t\tthis.map = Object.create(null);\n\t\tthis._size = 0;\n\t\tthis.head = null;\n\t\tthis.tail = null;\n\t}\n\n\tprotected push(entry: Entry<string, T>): void {\n\t\tif (this.head) {\n\t\t\t// [A]-[B] = [A]-[B]->[X]\n\t\t\tentry.prev = this.head;\n\t\t\tthis.head.next = entry;\n\t\t}\n\n\t\tif (!this.tail) {\n\t\t\tthis.tail = entry;\n\t\t}\n\n\t\tthis.head = entry;\n\n\t\tthis.map[entry.key] = entry;\n\t\tthis._size++;\n\t}\n\n\tprivate trim(): void {\n\t\tif (this.tail) {\n\n\t\t\t// Remove all elements until ratio is reached\n\t\t\tif (this.ratio < this.limit) {\n\t\t\t\tlet index = 0;\n\t\t\t\tlet current = this.tail;\n\t\t\t\twhile (current.next) {\n\n\t\t\t\t\t// Remove the entry\n\t\t\t\t\tthis.map[current.key] = void 0;\n\t\t\t\t\tthis._size--;\n\n\t\t\t\t\t// if we reached the element that overflows our ratio condition\n\t\t\t\t\t// make its next element the new tail of the Map and adjust the size\n\t\t\t\t\tif (index === this.ratio) {\n\t\t\t\t\t\tthis.tail = current.next;\n\t\t\t\t\t\tthis.tail.prev = null;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Move on\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Just remove the tail element\n\t\t\telse {\n\t\t\t\tthis.map[this.tail.key] = void 0;\n\t\t\t\tthis._size--;\n\n\t\t\t\t// [x]-[B] = [B]\n\t\t\t\tthis.tail = this.tail.next;\n\t\t\t\tthis.tail.prev = null;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A subclass of Map<T> that makes an entry the MRU entry as soon\n * as it is being accessed. In combination with the limit for the\n * maximum number of elements in the cache, it helps to remove those\n * entries from the cache that are LRU.\n */\nexport class LRUCache<T> extends BoundedLinkedMap<T> {\n\n\tconstructor(limit: number) {\n\t\tsuper(limit);\n\t}\n\n\tpublic get(key: string): T {\n\n\t\t// Upon access of an entry, make it the head of\n\t\t// the linked map so that it is the MRU element\n\t\tconst entry = this.map[key];\n\t\tif (entry) {\n\t\t\tthis.delete(key);\n\t\t\tthis.push(entry);\n\n\t\t\treturn entry.value;\n\t\t}\n\n\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n// --- THIS FILE IS TEMPORARY UNTIL ENV.TS IS CLEANED UP. IT CAN SAFELY BE USED IN ALL TARGET EXECUTION ENVIRONMENTS (node & dom) ---\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isRootUser = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isQunit = false;\nlet _locale = undefined;\nlet _language = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: { [key: string]: string; };\n\tgetuid(): number;\n}\ndeclare let process: INodeProcess;\ndeclare let global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n}\ndeclare let navigator: INavigator;\ndeclare let self: any;\n\nexport const LANGUAGE_DEFAULT = 'en';\n\n// OS detection\nif (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_isRootUser = !_isWindows && (process.getuid() === 0);\n\tlet rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tlet nlsConfig:NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tlet resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n} else if (typeof navigator === 'object') {\n\tlet userAgent = navigator.userAgent;\n\t_isWindows = userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n\t_isLinux = userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\t_isQunit = !!(<any>self).QUnit;\n}\n\nexport enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\n\nexport let _platform:Platform = Platform.Web;\nif (_isNative) {\n\tif (_isMacintosh) {\n\t\t_platform = Platform.Mac;\n\t} else if (_isWindows) {\n\t\t_platform = Platform.Windows;\n\t} else if (_isLinux) {\n\t\t_platform = Platform.Linux;\n\t}\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isRootUser = _isRootUser;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isQunit = _isQunit;\nexport const platform = _platform;\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\nexport interface TimeoutToken {\n}\n\nexport interface IntervalToken {\n}\n\ninterface IGlobals {\n\tWorker?: any;\n\tsetTimeout(callback: (...args: any[]) => void, delay: number, ...args: any[]): TimeoutToken;\n\tclearTimeout(token: TimeoutToken): void;\n\n\tsetInterval(callback: (...args: any[]) => void, delay: number, ...args: any[]): IntervalToken;\n\tclearInterval(token: IntervalToken);\n}\n\nconst _globals = <IGlobals> (typeof self === 'object' ? self : global);\nexport const globals: any = _globals;\n\nexport function hasWebWorkerSupport(): boolean {\n\treturn typeof _globals.Worker !== 'undefined';\n}\nexport const setTimeout = _globals.setTimeout.bind(_globals);\nexport const clearTimeout = _globals.clearTimeout.bind(_globals);\n\nexport const setInterval = _globals.setInterval.bind(_globals);\nexport const clearInterval = _globals.clearInterval.bind(_globals);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {isLinux, isWindows} from 'vs/base/common/platform';\n\n/**\n * The forward slash path separator.\n */\nexport var sep = '/';\n\n/**\n * The native path separator depending on the OS.\n */\nexport var nativeSep = isWindows ? '\\\\' : '/';\n\nexport function relative(from: string, to: string): string {\n\n\tfrom = normalize(from);\n\tto = normalize(to);\n\n\tvar fromParts = from.split(sep),\n\t\ttoParts = to.split(sep);\n\n\twhile (fromParts.length > 0 && toParts.length > 0) {\n\t\tif (fromParts[0] === toParts[0]) {\n\t\t\tfromParts.shift();\n\t\t\ttoParts.shift();\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor (var i = 0, len = fromParts.length; i < len; i++) {\n\t\ttoParts.unshift('..');\n\t}\n\n\treturn toParts.join(sep);\n}\n\n/**\n * @returns the directory name of a path.\n */\nexport function dirname(path: string): string {\n\tvar idx = ~path.lastIndexOf('/') || ~path.lastIndexOf('\\\\');\n\tif (idx === 0) {\n\t\treturn '.';\n\t} else if (~idx === 0) {\n\t\treturn path[0];\n\t} else {\n\t\treturn path.substring(0, ~idx);\n\t}\n}\n\n/**\n * @returns the base name of a path.\n */\nexport function basename(path: string): string {\n\tvar idx = ~path.lastIndexOf('/') || ~path.lastIndexOf('\\\\');\n\tif (idx === 0) {\n\t\treturn path;\n\t} else if (~idx === path.length - 1) {\n\t\treturn basename(path.substring(0, path.length - 1));\n\t} else {\n\t\treturn path.substr(~idx + 1);\n\t}\n}\n\n/**\n * @returns {{.far}} from boo.far or the empty string.\n */\nexport function extname(path: string): string {\n\tpath = basename(path);\n\tvar idx = ~path.lastIndexOf('.');\n\treturn idx ? path.substring(~idx) : '';\n}\n\nconst _posixBadPath = /(\\/\\.\\.?\\/)|(\\/\\.\\.?)$|^(\\.\\.?\\/)|(\\/\\/+)|(\\\\)/;\nconst _winBadPath = /(\\\\\\.\\.?\\\\)|(\\\\\\.\\.?)$|^(\\.\\.?\\\\)|(\\\\\\\\+)|(\\/)/;\n\nfunction _isNormal(path: string, win: boolean): boolean {\n\treturn win\n\t\t? !_winBadPath.test(path)\n\t\t: !_posixBadPath.test(path);\n}\n\nexport function normalize(path: string, toOSPath?: boolean): string {\n\n\tif (path === null || path === void 0) {\n\t\treturn path;\n\t}\n\n\tconst len = path.length;\n\tif (len === 0) {\n\t\treturn '.';\n\t}\n\n\tconst wantsBackslash = isWindows && toOSPath;\n\tif (_isNormal(path, wantsBackslash)) {\n\t\treturn path;\n\t}\n\n\tconst sep = wantsBackslash ? '\\\\' : '/';\n\tconst root = getRoot(path, sep);\n\n\t// skip the root-portion of the path\n\tlet start = root.length;\n\tlet skip = false;\n\tlet res = '';\n\n\tfor (let end = root.length; end <= len; end++) {\n\n\t\t// either at the end or at a path-separator character\n\t\tif (end === len || path.charCodeAt(end) === _slash || path.charCodeAt(end) === _backslash) {\n\n\t\t\tif (streql(path, start, end, '..')) {\n\t\t\t\t// skip current and remove parent (if there is already something)\n\t\t\t\tlet prev_start = res.lastIndexOf(sep);\n\t\t\t\tlet prev_part = res.slice(prev_start + 1);\n\t\t\t\tif ((root || prev_part.length > 0) && prev_part !== '..') {\n\t\t\t\t\tres = prev_start === -1 ? '' : res.slice(0, prev_start);\n\t\t\t\t\tskip = true;\n\t\t\t\t}\n\t\t\t} else if (streql(path, start, end, '.') && (root || res || end < len - 1)) {\n\t\t\t\t// skip current (if there is already something or if there is more to come)\n\t\t\t\tskip = true;\n\t\t\t}\n\n\t\t\tif (!skip) {\n\t\t\t\tlet part = path.slice(start, end);\n\t\t\t\tif (res !== '' && res[res.length - 1] !== sep) {\n\t\t\t\t\tres += sep;\n\t\t\t\t}\n\t\t\t\tres += part;\n\t\t\t}\n\t\t\tstart = end + 1;\n\t\t\tskip = false;\n\t\t}\n\t}\n\n\treturn root + res;\n}\n\nfunction streql(value: string, start: number, end: number, other: string): boolean {\n\treturn start + other.length === end &&  value.indexOf(other, start) === start;\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = '/'): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tlet len = path.length;\n\tlet code = path.charCodeAt(0);\n\tif (code === _slash || code === _backslash) {\n\n\t\tcode = path.charCodeAt(1);\n\t\tif (code === _slash || code === _backslash) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tcode = path.charCodeAt(2);\n\t\t\tif (code !== _slash && code !== _backslash) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tlet start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tcode = path.charCodeAt(pos);\n\t\t\t\t\tif (code === _slash || code === _backslash) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcode = path.charCodeAt(pos + 1);\n\t\t\t\tif (start !== pos && code !== _slash && code !== _backslash) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tcode = path.charCodeAt(pos);\n\t\t\t\t\t\tif (code === _slash || code === _backslash) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if ((code >= _A && code <= _Z) || (code >= _a && code <= _z)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === _colon) {\n\t\t\tcode = path.charCodeAt(2);\n\t\t\tif (code === _slash || code === _backslash) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tcode = path.charCodeAt(pos);\n\t\t\tif (code === _slash || code === _backslash) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\nexport const join: (...parts: string[]) => string = function () {\n\t// Not using a function with var-args because of how TS compiles\n\t// them to JS - it would result in 2*n runtime cost instead\n\t// of 1*n, where n is parts.length.\n\n\tlet value = '';\n\tfor (let i = 0; i < arguments.length; i++) {\n\t\tlet part = arguments[i];\n\t\tif (i > 0) {\n\t\t\t// add the separater between two parts unless\n\t\t\t// there already is one\n\t\t\tlet last = value.charCodeAt(value.length - 1);\n\t\t\tif (last !== _slash && last !== _backslash) {\n\t\t\t\tlet next = part.charCodeAt(0);\n\t\t\t\tif (next !== _slash && next !== _backslash) {\n\n\t\t\t\t\tvalue += sep;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvalue += part;\n\t}\n\n\treturn normalize(value);\n};\n\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== _backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== _backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tlet start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === _backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === _backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction isPosixAbsolute(path: string): boolean {\n\treturn path && path[0] === '/';\n}\n\nexport function makePosixAbsolute(path: string): string {\n\treturn isPosixAbsolute(normalize(path)) ? path : sep + path;\n}\n\n\nconst _slash = '/'.charCodeAt(0);\nconst _backslash = '\\\\'.charCodeAt(0);\nconst _colon = ':'.charCodeAt(0);\nconst _a = 'a'.charCodeAt(0);\nconst _A = 'A'.charCodeAt(0);\nconst _z = 'z'.charCodeAt(0);\nconst _Z = 'Z'.charCodeAt(0);\n\nexport function isEqualOrParent(path: string, candidate: string): boolean {\n\n\tif (path === candidate) {\n\t\treturn true;\n\t}\n\n\tpath = normalize(path);\n\tcandidate = normalize(candidate);\n\n\tlet candidateLen = candidate.length;\n\tlet lastCandidateChar = candidate.charCodeAt(candidateLen - 1);\n\tif (lastCandidateChar === _slash) {\n\t\tcandidate = candidate.substring(0, candidateLen - 1);\n\t\tcandidateLen -= 1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn true;\n\t}\n\n\tif (!isLinux) {\n\t\t// case insensitive\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\tif (path === candidate) {\n\t\treturn true;\n\t}\n\n\tif (path.indexOf(candidate) !== 0) {\n\t\treturn false;\n\t}\n\n\tlet char = path.charCodeAt(candidateLen);\n\treturn char === _slash;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst INVALID_FILE_CHARS = isWindows ? /[\\\\/:\\*\\?\"<>\\|]/g : /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\nexport function isValidBasename(name: string): boolean {\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tINVALID_FILE_CHARS.lastIndex = 0; // the holy grail of software development\n\tif (INVALID_FILE_CHARS.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindows && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindows && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindows && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\treturn true;\n}\n\nexport const isAbsoluteRegex = /^((\\/|[a-zA-Z]:\\\\)[^\\(\\)<>\\\\'\\\"\\[\\]]+)/;\n\n/**\n * If you have access to node, it is recommended to use node's path.isAbsolute().\n * This is a simple regex based approach.\n */\nexport function isAbsolute(path: string): boolean {\n\treturn isAbsoluteRegex.test(path);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport { globals } from 'vs/base/common/platform';\n\nvar hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\n\nexport class StopWatch {\n\n\tprivate _highResolution: boolean;\n\tprivate _startTime: number;\n\tprivate _stopTime: number;\n\n\tpublic static create(highResolution:boolean = true): StopWatch {\n\t\treturn new StopWatch(highResolution);\n\t}\n\n\tconstructor(highResolution: boolean) {\n\t\tthis._highResolution = hasPerformanceNow && highResolution;\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic stop(): void {\n\t\tthis._stopTime = this._now();\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\treturn this._now() - this._startTime;\n\t}\n\n\tprivate _now(): number {\n\t\treturn this._highResolution ? globals.performance.now() : new Date().getTime();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {BoundedLinkedMap} from 'vs/base/common/map';\n\n/**\n * The empty string.\n */\nexport const empty = '';\n\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tlet str = '' + n;\n\tlet r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function(match, group) {\n\t\tlet idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<|>|&]/g, function(match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tlet trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack?: string, needle?: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tlet needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0,\n\t\tidx = -1;\n\n\twhile ((idx = haystack.indexOf(needle, offset)) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack?: string, needle?: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tlet needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tlet diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.lastIndexOf(needle) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, matchCase: boolean, wholeWord: boolean, global:boolean): RegExp {\n\tif (searchString === '') {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = searchString.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n\t}\n\tif (wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tlet match = regexp.exec('');\n\treturn (match && <any>regexp.lastIndex === 0);\n}\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport let canNormalize = typeof ((<any>'').normalize) === 'function';\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nconst normalizedCache = new BoundedLinkedMap<string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize('NFC');\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string): string {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\n\t\t\treturn str.substring(0, i);\n\t\t}\n\t}\n\treturn str;\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tif (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if(a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nfunction isAsciiChar(code: number): boolean {\n\treturn (code >= 97 && code <= 122) || (code >= 65 && code <= 90);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\n\tlet len1 = a.length,\n\t\tlen2 = b.length;\n\n\tif (len1 !== len2) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < len1; i++) {\n\n\t\tlet codeA = a.charCodeAt(i),\n\t\t\tcodeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\n\t\t} else if (isAsciiChar(codeA) && isAsciiChar(codeB)) {\n\t\t\tlet diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (String.fromCharCode(codeA).toLocaleLowerCase() !== String.fromCharCode(codeB).toLocaleLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tlet aLastIndex = a.length - 1;\n\tlet bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tlet chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tlet nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\n//export function isLeadSurrogate(chr:string) {\n//\tlet chrCode = chr.charCodeAt(0);\n//\treturn ;\n//}\n//\n//export function isTrailSurrogate(chr:string) {\n//\tlet chrCode = chr.charCodeAt(0);\n//\treturn 0xDC00 <= chrCode && chrCode <= 0xDFFF;\n//}\n\nexport function isFullWidthCharacter(charCode:number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * Computes the difference score for two strings. More similar strings have a higher score.\n * We use largest common subsequence dynamic programming approach but penalize in the end for length differences.\n * Strings that have a large length difference will get a bad default score 0.\n * Complexity - both time and space O(first.length * second.length)\n * Dynamic programming LCS computation http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n *\n * @param first a string\n * @param second a string\n */\nexport function difference(first: string, second: string, maxLenDelta: number = 4): number {\n\tlet lengthDifference = Math.abs(first.length - second.length);\n\t// We only compute score if length of the currentWord and length of entry.name are similar.\n\tif (lengthDifference > maxLenDelta) {\n\t\treturn 0;\n\t}\n\t// Initialize LCS (largest common subsequence) matrix.\n\tlet LCS: number[][] = [];\n\tlet zeroArray: number[] = [];\n\tlet i: number, j: number;\n\tfor (i = 0; i < second.length + 1; ++i) {\n\t\tzeroArray.push(0);\n\t}\n\tfor (i = 0; i < first.length + 1; ++i) {\n\t\tLCS.push(zeroArray);\n\t}\n\tfor (i = 1; i < first.length + 1; ++i) {\n\t\tfor (j = 1; j < second.length + 1; ++j) {\n\t\t\tif (first[i - 1] === second[j - 1]) {\n\t\t\t\tLCS[i][j] = LCS[i - 1][j - 1] + 1;\n\t\t\t} else {\n\t\t\t\tLCS[i][j] = Math.max(LCS[i - 1][j], LCS[i][j - 1]);\n\t\t\t}\n\t\t}\n\t}\n\treturn LCS[first.length][second.length] - Math.sqrt(lengthDifference);\n}\n\n/**\n * Returns an array in which every entry is the offset of a\n * line. There is always one entry which is zero.\n */\nexport function computeLineStarts(text: string): number[] {\n\tlet regexp = /\\r\\n|\\r|\\n/g,\n\t\tret: number[] = [0],\n\t\tmatch: RegExpExecArray;\n\twhile ((match = regexp.exec(text))) {\n\t\tret.push(regexp.lastIndex);\n\t}\n\treturn ret;\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number): string {\n\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tlet segments = text.split(/\\b/),\n\t\tcount = 0;\n\n\tfor (let i = segments.length - 1; i >= 0; i--) {\n\t\tcount += segments[i].length;\n\n\t\tif (count > n) {\n\t\t\tsegments.splice(0, i);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn segments.join(empty).replace(/^\\s/, empty);\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst LF = /\\xA/g; // line feed\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(LF, '\\n');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nconst __utf8_bom = 65279;\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(__utf8_bom);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn (str && str.length > 0 && str.charCodeAt(0) === __utf8_bom);\n}\n\n/**\n * Appends two strings. If the appended result is longer than maxLength,\n * trims the start of the result and replaces it with '...'.\n */\nexport function appendWithLimit(first: string, second: string, maxLength: number): string {\n\tconst newLength = first.length + second.length;\n\tif (newLength > maxLength) {\n\t\tfirst = '...' + first.substr(newLength - maxLength);\n\t}\n\tif (second.length > maxLength) {\n\t\tfirst += second.substr(second.length - maxLength);\n\t} else {\n\t\tfirst += second;\n\t}\n\n\treturn first;\n}\n\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\nexport function repeat(s:string, count: number): string {\n\tvar result = '';\n\tfor (var i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport strings = require('vs/base/common/strings');\nimport {BoundedLinkedMap} from 'vs/base/common/map';\n\nexport interface IFilter {\n\t// Returns null if word doesn't match.\n\t(word: string, wordToMatchAgainst: string): IMatch[];\n}\n\nexport interface IMatch {\n\tstart: number;\n\tend: number;\n}\n\n// Combined filters\n\n/**\n * @returns A filter which combines the provided set\n * of filters with an or. The *first* filters that\n * matches defined the return value of the returned\n * filter.\n */\nexport function or(...filter: IFilter[]): IFilter {\n\treturn function (word: string, wordToMatchAgainst: string): IMatch[] {\n\t\tfor (let i = 0, len = filter.length; i < len; i++) {\n\t\t\tlet match = filter[i](word, wordToMatchAgainst);\n\t\t\tif (match) {\n\t\t\t\treturn match;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n}\n\n/**\n * @returns A filter which combines the provided set\n * of filters with an and. The combines matches are\n * returned if *all* filters match.\n */\nexport function and(...filter: IFilter[]): IFilter {\n\treturn function (word: string, wordToMatchAgainst: string): IMatch[] {\n\t\tlet result: IMatch[] = [];\n\t\tfor (let i = 0, len = filter.length; i < len; i++) {\n\t\t\tlet match = filter[i](word, wordToMatchAgainst);\n\t\t\tif (!match) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tresult = result.concat(match);\n\t\t}\n\t\treturn result;\n\t};\n}\n\n// Prefix\n\nexport let matchesStrictPrefix: IFilter = (word: string, wordToMatchAgainst: string): IMatch[] => { return _matchesPrefix(false, word, wordToMatchAgainst); };\nexport let matchesPrefix: IFilter = (word: string, wordToMatchAgainst: string): IMatch[] => { return _matchesPrefix(true, word, wordToMatchAgainst); };\n\nfunction _matchesPrefix(ignoreCase: boolean, word: string, wordToMatchAgainst: string): IMatch[] {\n\tif (!wordToMatchAgainst || wordToMatchAgainst.length === 0 || wordToMatchAgainst.length < word.length) {\n\t\treturn null;\n\t}\n\tif (ignoreCase) {\n\t\tword = word.toLowerCase();\n\t\twordToMatchAgainst = wordToMatchAgainst.toLowerCase();\n\t}\n\tfor (let i = 0; i < word.length; i++) {\n\t\tif (word[i] !== wordToMatchAgainst[i]) {\n\t\t\treturn null;\n\t\t}\n\t}\n\treturn word.length > 0 ? [{ start: 0, end: word.length }] : [];\n}\n\n// Contiguous Substring\n\nexport function matchesContiguousSubString(word: string, wordToMatchAgainst: string): IMatch[] {\n\tlet index = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n\tif (index === -1) {\n\t\treturn null;\n\t}\n\n\treturn [{ start: index, end: index + word.length }];\n}\n\n// Substring\n\nexport function matchesSubString(word: string, wordToMatchAgainst: string): IMatch[] {\n\treturn _matchesSubString(word.toLowerCase(), wordToMatchAgainst.toLowerCase(), 0, 0);\n}\n\nfunction _matchesSubString(word: string, wordToMatchAgainst: string, i: number, j: number): IMatch[] {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === wordToMatchAgainst.length) {\n\t\treturn null;\n\t} else {\n\t\tif (word[i] === wordToMatchAgainst[j]) {\n\t\t\tlet result: IMatch[] = null;\n\t\t\tif (result = _matchesSubString(word, wordToMatchAgainst, i + 1, j + 1)) {\n\t\t\t\treturn join({ start: j, end: j + 1 }, result);\n\t\t\t}\n\t\t}\n\n\t\treturn _matchesSubString(word, wordToMatchAgainst, i, j + 1);\n\t}\n}\n\n// CamelCase\n\nfunction isLower(code: number): boolean {\n\treturn 97 <= code && code <= 122;\n}\n\nfunction isUpper(code: number): boolean {\n\treturn 65 <= code && code <= 90;\n}\n\nfunction isNumber(code: number): boolean {\n\treturn 48 <= code && code <= 57;\n}\n\nfunction isWhitespace(code: number): boolean {\n\treturn [32, 9, 10, 13].indexOf(code) > -1;\n}\n\nfunction isAlphanumeric(code: number): boolean {\n\treturn isLower(code) || isUpper(code) || isNumber(code);\n}\n\nfunction join(head: IMatch, tail: IMatch[]): IMatch[] {\n\tif (tail.length === 0) {\n\t\ttail = [head];\n\t} else if (head.end === tail[0].start) {\n\t\ttail[0].start = head.start;\n\t} else {\n\t\ttail.unshift(head);\n\t}\n\treturn tail;\n}\n\nfunction nextAnchor(camelCaseWord: string, start: number): number {\n\tfor (let i = start; i < camelCaseWord.length; i++) {\n\t\tlet c = camelCaseWord.charCodeAt(i);\n\t\tif (isUpper(c) || isNumber(c) || (i > 0 && !isAlphanumeric(camelCaseWord.charCodeAt(i - 1)))) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn camelCaseWord.length;\n}\n\nfunction _matchesCamelCase(word: string, camelCaseWord: string, i: number, j: number): IMatch[] {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === camelCaseWord.length) {\n\t\treturn null;\n\t} else if (word[i] !== camelCaseWord[j].toLowerCase()) {\n\t\treturn null;\n\t} else {\n\t\tlet result = null;\n\t\tlet nextUpperIndex = j + 1;\n\t\tresult = _matchesCamelCase(word, camelCaseWord, i + 1, j + 1);\n\t\twhile (!result && (nextUpperIndex = nextAnchor(camelCaseWord, nextUpperIndex)) < camelCaseWord.length) {\n\t\t\tresult = _matchesCamelCase(word, camelCaseWord, i + 1, nextUpperIndex);\n\t\t\tnextUpperIndex++;\n\t\t}\n\t\treturn result === null ? null : join({ start: j, end: j + 1 }, result);\n\t}\n}\n\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camelCaseWords.\nfunction isCamelCaseWord(word: string): boolean {\n\tif (word.length > 60) {\n\t\treturn false;\n\t}\n\n\tlet upper = 0, lower = 0, alpha = 0, numeric = 0, code = 0;\n\n\tfor (let i = 0; i < word.length; i++) {\n\t\tcode = word.charCodeAt(i);\n\n\t\tif (isUpper(code)) { upper++; }\n\t\tif (isLower(code)) { lower++; }\n\t\tif (isAlphanumeric(code)) { alpha++; }\n\t\tif (isNumber(code)) { numeric++; }\n\t}\n\n\tlet upperPercent = upper / word.length;\n\tlet lowerPercent = lower / word.length;\n\tlet alphaPercent = alpha / word.length;\n\tlet numericPercent = numeric / word.length;\n\n\treturn lowerPercent > 0.2 && upperPercent < 0.8 && alphaPercent > 0.6 && numericPercent < 0.2;\n}\n\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camel case patterns.\nfunction isCamelCasePattern(word: string): boolean {\n\tlet upper = 0, lower = 0, code = 0, whitespace = 0;\n\n\tfor (let i = 0; i < word.length; i++) {\n\t\tcode = word.charCodeAt(i);\n\n\t\tif (isUpper(code)) { upper++; }\n\t\tif (isLower(code)) { lower++; }\n\t\tif (isWhitespace(code)) { whitespace++; }\n\t}\n\n\tif ((upper === 0 || lower === 0) && whitespace === 0) {\n\t\treturn word.length <= 30;\n\t} else {\n\t\treturn upper <= 5;\n\t}\n}\n\nexport function matchesCamelCase(word: string, camelCaseWord: string): IMatch[] {\n\tif (!camelCaseWord || camelCaseWord.length === 0) {\n\t\treturn null;\n\t}\n\n\tif (!isCamelCasePattern(word)) {\n\t\treturn null;\n\t}\n\n\tif (!isCamelCaseWord(camelCaseWord)) {\n\t\treturn null;\n\t}\n\n\tlet result: IMatch[] = null;\n\tlet i = 0;\n\n\twhile (i < camelCaseWord.length && (result = _matchesCamelCase(word.toLowerCase(), camelCaseWord, 0, i)) === null) {\n\t\ti = nextAnchor(camelCaseWord, i + 1);\n\t}\n\n\treturn result;\n}\n\n// Matches beginning of words supporting non-ASCII languages\n// E.g. \"gp\" or \"g p\" will match \"Git: Pull\"\n// Useful in cases where the target is words (e.g. command labels)\n\nexport function matchesWords(word: string, target: string): IMatch[] {\n\tif (!target || target.length === 0) {\n\t\treturn null;\n\t}\n\n\tlet result: IMatch[] = null;\n\tlet i = 0;\n\n\twhile (i < target.length && (result = _matchesWords(word.toLowerCase(), target, 0, i)) === null) {\n\t\ti = nextWord(target, i + 1);\n\t}\n\n\treturn result;\n}\n\nfunction _matchesWords(word: string, target: string, i: number, j: number): IMatch[] {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === target.length) {\n\t\treturn null;\n\t} else if (word[i] !== target[j].toLowerCase()) {\n\t\treturn null;\n\t} else {\n\t\tlet result = null;\n\t\tlet nextWordIndex = j + 1;\n\t\tresult = _matchesWords(word, target, i + 1, j + 1);\n\t\twhile (!result && (nextWordIndex = nextWord(target, nextWordIndex)) < target.length) {\n\t\t\tresult = _matchesWords(word, target, i + 1, nextWordIndex);\n\t\t\tnextWordIndex++;\n\t\t}\n\t\treturn result === null ? null : join({ start: j, end: j + 1 }, result);\n\t}\n}\n\nfunction nextWord(word: string, start: number): number {\n\tfor (let i = start; i < word.length; i++) {\n\t\tlet c = word.charCodeAt(i);\n\t\tif (isWhitespace(c) || (i > 0 && isWhitespace(word.charCodeAt(i - 1)))) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn word.length;\n}\n\n// Fuzzy\n\nexport enum SubstringMatching {\n\tContiguous,\n\tSeparate\n}\n\nexport const fuzzyContiguousFilter = or(matchesPrefix, matchesCamelCase, matchesContiguousSubString);\nconst fuzzySeparateFilter = or(matchesPrefix, matchesCamelCase, matchesSubString);\nconst fuzzyRegExpCache = new BoundedLinkedMap<RegExp>(10000); // bounded to 10000 elements\n\nexport function matchesFuzzy(word: string, wordToMatchAgainst: string, enableSeparateSubstringMatching = false): IMatch[] {\n\tif (typeof word !== 'string' || typeof wordToMatchAgainst !== 'string') {\n\t\treturn null; // return early for invalid input\n\t}\n\n\t// Form RegExp for wildcard matches\n\tlet regexp = fuzzyRegExpCache.get(word);\n\tif (!regexp) {\n\t\tregexp = new RegExp(strings.convertSimple2RegExpPattern(word), 'i');\n\t\tfuzzyRegExpCache.set(word, regexp);\n\t}\n\n\t// RegExp Filter\n\tlet match: RegExpExecArray = regexp.exec(wordToMatchAgainst);\n\tif (match) {\n\t\treturn [{ start: match.index, end: match.index + match[0].length }];\n\t}\n\n\t// Default Filter\n\treturn enableSeparateSubstringMatching ? fuzzySeparateFilter(word, wordToMatchAgainst) : fuzzyContiguousFilter(word, wordToMatchAgainst);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport strings = require('vs/base/common/strings');\nimport paths = require('vs/base/common/paths');\nimport {BoundedLinkedMap} from 'vs/base/common/map';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause | any;\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tlet segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet char: string;\n\tlet curVal = '';\n\tfor (let i = 0; i < pattern.length; i++) {\n\t\tchar = pattern[i];\n\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tlet segments = splitGlobAware(pattern, '/');\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === '**')) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === '**') {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tlet char: string;\n\t\t\tfor (let i = 0; i < segment.length; i++) {\n\t\t\t\tchar = segment[i];\n\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (char !== ']' && inBrackets) {\n\t\t\t\t\tlet res: string;\n\t\t\t\t\tswitch (char) {\n\t\t\t\t\t\tcase '-':\t\t// allow the range operator\n\t\t\t\t\t\t\tres = char;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '^':\t\t// allow the negate operator\n\t\t\t\t\t\t\tres = char;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tlet choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tlet braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the next one is not a globstar\n\t\t\tif (index < segments.length - 1 && segments[index + 1] !== '**') {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/[\\w\\.-]+$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\n\nenum Trivia {\n\tT1, // **/*.something\n\tT2, // **/something\n\tT3, // {**/*.something,**/*.else} or {**/package.json,**/project.json}\n}\n\ninterface IParsedPattern {\n\tregexp?: RegExp;\n\ttrivia?: Trivia;\n}\n\nconst CACHE = new BoundedLinkedMap<IParsedPattern>(10000); // bounded to 10000 elements\n\nfunction parsePattern(pattern: string): IParsedPattern {\n\tif (!pattern) {\n\t\treturn null;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tlet parsedPattern = CACHE.get(pattern);\n\tif (parsedPattern) {\n\t\tif (parsedPattern.regexp) {\n\t\t\tparsedPattern.regexp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t}\n\n\t\treturn parsedPattern;\n\t}\n\n\tparsedPattern = Object.create(null);\n\n\t// Check for Trivias\n\tif (T1.test(pattern)) {\n\t\tparsedPattern.trivia = Trivia.T1;\n\t} else if (T2.test(pattern)) {\n\t\tparsedPattern.trivia = Trivia.T2;\n\t} else if (T3.test(pattern)) {\n\t\tparsedPattern.trivia = Trivia.T3;\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern.regexp = toRegExp(`^${parseRegExp(pattern)}$`);\n\t}\n\n\t// Cache\n\tCACHE.set(pattern, parsedPattern);\n\n\treturn parsedPattern;\n}\n\nfunction toRegExp(regEx: string): RegExp {\n\ttry {\n\t\treturn new RegExp(regEx);\n\t} catch (error) {\n\t\treturn /.^/; // create a regex that matches nothing if we cannot parse the pattern\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string, path: string): boolean;\nexport function match(expression: IExpression, path: string, siblings?: string[]): string /* the matching pattern */;\nexport function match(arg1: string | IExpression, path: string, siblings?: string[]): any {\n\tif (!arg1 || !path) {\n\t\treturn false;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string') {\n\t\tconst parsedPattern = parsePattern(arg1);\n\t\tif (!parsedPattern) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// common pattern: **/*.txt just need endsWith check\n\t\tif (parsedPattern.trivia === Trivia.T1) {\n\t\t\treturn strings.endsWith(path, arg1.substr(4)); // '**/*'.length === 4\n\t\t}\n\n\t\t// common pattern: **/some.txt just need basename check\n\t\tif (parsedPattern.trivia === Trivia.T2) {\n\t\t\tconst base = arg1.substr(3); // '**/'.length === 3\n\n\t\t\treturn path === base || strings.endsWith(path, `/${base}`) || strings.endsWith(path, `\\\\${base}`);\n\t\t}\n\n\t\t// repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tif (parsedPattern.trivia === Trivia.T3) {\n\t\t\treturn arg1.slice(1, -1).split(',').some(pattern => match(pattern, path));\n\t\t}\n\n\t\treturn parsedPattern.regexp.test(path);\n\t}\n\n\t// Glob with Expression\n\treturn matchExpression(<IExpression>arg1, path, siblings);\n}\n\nfunction matchExpression(expression: IExpression, path: string, siblings?: string[]): string /* the matching pattern */ {\n\tlet patterns = Object.getOwnPropertyNames(expression);\n\tlet basename: string;\n\tfor (let i = 0; i < patterns.length; i++) {\n\t\tlet pattern = patterns[i];\n\n\t\tlet value = expression[pattern];\n\t\tif (value === false) {\n\t\t\tcontinue; // pattern is disabled\n\t\t}\n\n\t\t// Pattern matches path\n\t\tif (match(pattern, path)) {\n\n\t\t\t// Expression Pattern is <boolean>\n\t\t\tif (typeof value === 'boolean') {\n\t\t\t\treturn pattern;\n\t\t\t}\n\n\t\t\t// Expression Pattern is <SiblingClause>\n\t\t\tif (value && typeof (<SiblingClause>value).when === 'string') {\n\t\t\t\tif (!siblings || !siblings.length) {\n\t\t\t\t\tcontinue; // pattern is malformed or we don't have siblings\n\t\t\t\t}\n\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = strings.rtrim(paths.basename(path), paths.extname(path));\n\t\t\t\t}\n\n\t\t\t\tlet clause = <SiblingClause>value;\n\t\t\t\tlet clausePattern = clause.when.replace('$(basename)', basename);\n\t\t\t\tif (siblings.some((sibling) => sibling === clausePattern)) {\n\t\t\t\t\treturn pattern;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue; // pattern does not match in the end because the when clause is not satisfied\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Expression is Anything\n\t\t\treturn pattern;\n\t\t}\n\t}\n\n\treturn null;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\n\nconst _typeof = {\n\tnumber: 'number',\n\tstring: 'string',\n\tundefined: 'undefined',\n\tobject: 'object',\n\tfunction: 'function'\n};\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\tif (Array.isArray) {\n\t\treturn Array.isArray(array);\n\t}\n\n\tif (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\tif (typeof (str) === _typeof.string|| str instanceof String) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is any {\n\treturn typeof obj === _typeof.object\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\tif ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn obj === true || obj === false;\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): boolean {\n\treturn typeof (obj) === _typeof.undefined;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): boolean {\n\treturn isUndefined(obj) || obj === null;\n}\n\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn typeof obj === _typeof.function;\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects && objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: TypeConstraint[]): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\tif (arg instanceof constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (arg && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\n/**\n * Creates a new object of the provided class and will call the constructor with\n * any additional argument supplied.\n */\nexport function create(ctor: Function, ...args: any[]): any {\n\tlet obj = Object.create(ctor.prototype);\n\tctor.apply(obj, args);\n\n\treturn obj;\n}\n\nexport interface IFunction0<T> {\n\t(): T;\n}\nexport interface IFunction1<A1, T> {\n\t(a1: A1): T;\n}\nexport interface IFunction2<A1, A2, T> {\n\t(a1: A1, a2: A2): T;\n}\nexport interface IFunction3<A1, A2, A3, T> {\n\t(a1: A1, a2: A2, a3: A3): T;\n}\nexport interface IFunction4<A1, A2, A3, A4, T> {\n\t(a1: A1, a2: A2, a3: A3, a4: A4): T;\n}\nexport interface IFunction5<A1, A2, A3, A4, A5, T> {\n\t(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n}\nexport interface IFunction6<A1, A2, A3, A4, A5, A6, T> {\n\t(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n}\nexport interface IFunction7<A1, A2, A3, A4, A5, A6, A7, T> {\n\t(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n}\nexport interface IFunction8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\t(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n}\n\nexport interface IAction0 extends IFunction0<void> { }\nexport interface IAction1<A1> extends IFunction1<A1, void> { }\nexport interface IAction2<A1, A2> extends IFunction2<A1, A2, void> { }\nexport interface IAction3<A1, A2, A3> extends IFunction3<A1, A2, A3, void> { }\nexport interface IAction4<A1, A2, A3, A4> extends IFunction4<A1, A2, A3, A4, void> { }\nexport interface IAction5<A1, A2, A3, A4, A5> extends IFunction5<A1, A2, A3, A4, A5, void> { }\nexport interface IAction6<A1, A2, A3, A4, A5, A6> extends IFunction6<A1, A2, A3, A4, A5, A6, void> { }\nexport interface IAction7<A1, A2, A3, A4, A5, A6, A7> extends IFunction7<A1, A2, A3, A4, A5, A6, A7, void> { }\nexport interface IAction8<A1, A2, A3, A4, A5, A6, A7, A8> extends IFunction8<A1, A2, A3, A4, A5, A6, A7, A8, void> { }\n\nexport interface IAsyncFunction0<T> extends IFunction0<TPromise<T>> { }\nexport interface IAsyncFunction1<A1, T> extends IFunction1<A1, TPromise<T>> { }\nexport interface IAsyncFunction2<A1, A2, T> extends IFunction2<A1, A2, TPromise<T>> { }\nexport interface IAsyncFunction3<A1, A2, A3, T> extends IFunction3<A1, A2, A3, TPromise<T>> { }\nexport interface IAsyncFunction4<A1, A2, A3, A4, T> extends IFunction4<A1, A2, A3, A4, TPromise<T>> { }\nexport interface IAsyncFunction5<A1, A2, A3, A4, A5, T> extends IFunction5<A1, A2, A3, A4, A5, TPromise<T>> { }\nexport interface IAsyncFunction6<A1, A2, A3, A4, A5, A6, T> extends IFunction6<A1, A2, A3, A4, A5, A6, TPromise<T>> { }\nexport interface IAsyncFunction7<A1, A2, A3, A4, A5, A6, A7, T> extends IFunction7<A1, A2, A3, A4, A5, A6, A7, TPromise<T>> { }\nexport interface IAsyncFunction8<A1, A2, A3, A4, A5, A6, A7, A8, T> extends IFunction8<A1, A2, A3, A4, A5, A6, A7, A8, TPromise<T>> { }\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {isEmptyObject} from 'vs/base/common/types';\nimport {forEach, contains, lookup} from 'vs/base/common/collections';\n\nexport interface Node<T> {\n\tdata: T;\n\tincoming: { [key: string]: Node<T> };\n\toutgoing: { [key: string]: Node<T> };\n}\n\nfunction newNode<T>(data: T): Node<T> {\n\treturn {\n\t\tdata: data,\n\t\tincoming: Object.create(null),\n\t\toutgoing: Object.create(null)\n\t};\n}\n\nexport class Graph<T> {\n\n\tprivate _nodes: { [key: string]: Node<T> } = Object.create(null);\n\n\tconstructor(private _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tvar ret: Node<T>[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tif (isEmptyObject(entry.value.outgoing)) {\n\t\t\t\tret.push(entry.value);\n\t\t\t}\n\t\t});\n\t\treturn ret;\n\t}\n\n\ttraverse(start: T, inwards: boolean, callback: (data: T) => void): void {\n\t\tvar startNode = this.lookup(start);\n\t\tif (!startNode) {\n\t\t\treturn;\n\t\t}\n\t\tthis._traverse(startNode, inwards, Object.create(null), callback);\n\t}\n\n\tprivate _traverse(node: Node<T>, inwards: boolean, seen: { [key: string]: boolean }, callback: (data: T) => void): void {\n\t\tvar key = this._hashFn(node.data);\n\t\tif (contains(seen, key)) {\n\t\t\treturn;\n\t\t}\n\t\tseen[key] = true;\n\t\tcallback(node.data);\n\t\tvar nodes = inwards ? node.outgoing : node.incoming;\n\t\tforEach(nodes, (entry) => this._traverse(entry.value, inwards, seen, callback));\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tvar fromNode = this.lookupOrInsertNode(from),\n\t\t\ttoNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing[this._hashFn(to)] = toNode;\n\t\ttoNode.incoming[this._hashFn(from)] = fromNode;\n\t}\n\n\tremoveNode(data: T): void {\n\t\tvar key = this._hashFn(data);\n\t\tdelete this._nodes[key];\n\t\tforEach(this._nodes, (entry) => {\n\t\t\tdelete entry.value.outgoing[key];\n\t\t\tdelete entry.value.incoming[key];\n\t\t});\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tvar key = this._hashFn(data),\n\t\t\tnode = lookup(this._nodes, key);\n\n\t\tif (!node) {\n\t\t\tnode = newNode(data);\n\t\t\tthis._nodes[key] = node;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> {\n\t\treturn lookup(this._nodes, this._hashFn(data));\n\t}\n\n\tget length(): number {\n\t\treturn Object.keys(this._nodes).length;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tdata.push(`${entry.key}, (incoming)[${Object.keys(entry.value.incoming).join(', ')}], (outgoing)[${Object.keys(entry.value.outgoing).join(',')}]`);\n\t\t});\n\t\treturn data.join('\\n');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport { isArray } from './types';\n\nexport const empty: IDisposable = Object.freeze({\n\tdispose() { }\n});\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function dispose<T extends IDisposable>(...disposables: T[]): T;\nexport function dispose<T extends IDisposable>(disposables: T[]): T[];\nexport function dispose<T extends IDisposable>(...disposables: T[]): T[] {\n\tconst first = disposables[0];\n\n\tif (isArray(first)) {\n\t\tdisposables = first as any as T[];\n\t}\n\n\tdisposables.forEach(d => d && d.dispose());\n\treturn [];\n}\n\nexport function combinedDisposable(disposables: IDisposable[]): IDisposable;\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable;\nexport function combinedDisposable(disposables: any): IDisposable {\n\treturn { dispose: () => dispose(disposables) };\n}\n\nexport function toDisposable(...fns: (() => void)[]): IDisposable {\n\treturn combinedDisposable(fns.map(fn => ({ dispose: fn })));\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tprivate _toDispose: IDisposable[];\n\n\tconstructor() {\n\t\tthis._toDispose = [];\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._toDispose = dispose(this._toDispose);\n\t}\n\n\tprotected _register<T extends IDisposable>(t:T): T {\n\t\tthis._toDispose.push(t);\n\t\treturn t;\n\t}\n}\n\nexport class Disposables extends Disposable {\n\n\tpublic add<T extends IDisposable>(e: T): T;\n\tpublic add(...elements: IDisposable[]): void;\n\tpublic add<T extends IDisposable>(arg: T | T[]): T {\n\t\tif (!Array.isArray(arg)) {\n\t\t\treturn this._register(arg);\n\t\t} else {\n\t\t\tfor (let element of arg) {\n\t\t\t\treturn this._register(element);\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport paths = require('vs/base/common/paths');\nimport types = require('vs/base/common/types');\nimport strings = require('vs/base/common/strings');\nimport {match} from 'vs/base/common/glob';\n\nexport let MIME_TEXT = 'text/plain';\nexport let MIME_BINARY = 'application/octet-stream';\nexport let MIME_UNKNOWN = 'application/unknown';\n\nexport interface ITextMimeAssociation {\n\tmime: string;\n\tfilename?: string;\n\textension?: string;\n\tfilepattern?: string;\n\tfirstline?: RegExp;\n\tuserConfigured?: boolean;\n}\n\nlet registeredAssociations: ITextMimeAssociation[] = [];\n\n/**\n * Associate a text mime to the registry.\n */\nexport function registerTextMime(association: ITextMimeAssociation): void {\n\n\t// Register\n\tregisteredAssociations.push(association);\n\n\t// Check for conflicts unless this is a user configured association\n\tif (!association.userConfigured) {\n\t\tregisteredAssociations.forEach(a => {\n\t\t\tif (a.mime === association.mime || a.userConfigured) {\n\t\t\t\treturn; // same mime or userConfigured is ok\n\t\t\t}\n\n\t\t\tif (association.extension && a.extension === association.extension) {\n\t\t\t\tconsole.warn(`Overwriting extension <<${association.extension}>> to now point to mime <<${association.mime}>>`);\n\t\t\t}\n\n\t\t\tif (association.filename && a.filename === association.filename) {\n\t\t\t\tconsole.warn(`Overwriting filename <<${association.filename}>> to now point to mime <<${association.mime}>>`);\n\t\t\t}\n\n\t\t\tif (association.filepattern && a.filepattern === association.filepattern) {\n\t\t\t\tconsole.warn(`Overwriting filepattern <<${association.filepattern}>> to now point to mime <<${association.mime}>>`);\n\t\t\t}\n\n\t\t\tif (association.firstline && a.firstline === association.firstline) {\n\t\t\t\tconsole.warn(`Overwriting firstline <<${association.firstline}>> to now point to mime <<${association.mime}>>`);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * Clear text mimes from the registry.\n */\nexport function clearTextMimes(onlyUserConfigured?: boolean): void {\n\tif (!onlyUserConfigured) {\n\t\tregisteredAssociations = [];\n\t} else {\n\t\tregisteredAssociations = registeredAssociations.filter(a => !a.userConfigured);\n\t}\n}\n\n/**\n * Given a file, return the best matching mime type for it\n */\nexport function guessMimeTypes(path: string, firstLine?: string): string[] {\n\tif (!path) {\n\t\treturn [MIME_UNKNOWN];\n\t}\n\n\tpath = path.toLowerCase();\n\n\t// 1.) User configured mappings have highest priority\n\tlet configuredMime = guessMimeTypeByPath(path, registeredAssociations.filter(a => a.userConfigured));\n\tif (configuredMime) {\n\t\treturn [configuredMime, MIME_TEXT];\n\t}\n\n\t// 2.) Registered mappings have middle priority\n\tlet registeredMime = guessMimeTypeByPath(path, registeredAssociations.filter(a => !a.userConfigured));\n\tif (registeredMime) {\n\t\treturn [registeredMime, MIME_TEXT];\n\t}\n\n\t// 3.) Firstline has lowest priority\n\tif (firstLine) {\n\t\tlet firstlineMime = guessMimeTypeByFirstline(firstLine);\n\t\tif (firstlineMime) {\n\t\t\treturn [firstlineMime, MIME_TEXT];\n\t\t}\n\t}\n\n\treturn [MIME_UNKNOWN];\n}\n\nfunction guessMimeTypeByPath(path: string, associations: ITextMimeAssociation[]): string {\n\tlet filename = paths.basename(path);\n\n\tlet filenameMatch: ITextMimeAssociation;\n\tlet patternMatch: ITextMimeAssociation;\n\tlet extensionMatch: ITextMimeAssociation;\n\n\tfor (var i = 0; i < associations.length; i++) {\n\t\tlet association = associations[i];\n\n\t\t// First exact name match\n\t\tif (association.filename && filename === association.filename.toLowerCase()) {\n\t\t\tfilenameMatch = association;\n\t\t\tbreak; // take it!\n\t\t}\n\n\t\t// Longest pattern match\n\t\tif (association.filepattern) {\n\t\t\tlet target = association.filepattern.indexOf(paths.sep) >= 0 ? path : filename; // match on full path if pattern contains path separator\n\t\t\tif (match(association.filepattern.toLowerCase(), target)) {\n\t\t\t\tif (!patternMatch || association.filepattern.length > patternMatch.filepattern.length) {\n\t\t\t\t\tpatternMatch = association;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Longest extension match\n\t\tif (association.extension) {\n\t\t\tif (strings.endsWith(filename, association.extension.toLowerCase())) {\n\t\t\t\tif (!extensionMatch || association.extension.length > extensionMatch.extension.length) {\n\t\t\t\t\textensionMatch = association;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 1.) Exact name match has second highest prio\n\tif (filenameMatch) {\n\t\treturn filenameMatch.mime;\n\t}\n\n\t// 2.) Match on pattern\n\tif (patternMatch) {\n\t\treturn patternMatch.mime;\n\t}\n\n\t// 3.) Match on extension comes next\n\tif (extensionMatch) {\n\t\treturn extensionMatch.mime;\n\t}\n\n\treturn null;\n}\n\nfunction guessMimeTypeByFirstline(firstLine: string): string {\n\tif (strings.startsWithUTF8BOM(firstLine)) {\n\t\tfirstLine = firstLine.substr(1);\n\t}\n\n\tif (firstLine.length > 0) {\n\t\tfor (let i = 0; i < registeredAssociations.length; ++i) {\n\t\t\tlet association = registeredAssociations[i];\n\t\t\tif (!association.firstline) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Make sure the entire line matches, not just a subpart.\n\t\t\tlet matches = firstLine.match(association.firstline);\n\t\t\tif (matches && matches.length > 0 && matches[0].length === firstLine.length) {\n\t\t\t\treturn association.mime;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function isBinaryMime(mimes: string): boolean;\nexport function isBinaryMime(mimes: string[]): boolean;\nexport function isBinaryMime(mimes: any): boolean {\n\tif (!mimes) {\n\t\treturn false;\n\t}\n\n\tlet mimeVals: string[];\n\tif (types.isArray(mimes)) {\n\t\tmimeVals = (<string[]>mimes);\n\t} else {\n\t\tmimeVals = (<string>mimes).split(',').map((mime) => mime.trim());\n\t}\n\n\treturn mimeVals.indexOf(MIME_BINARY) >= 0;\n}\n\nexport function isUnspecific(mime: string[] | string): boolean {\n\tif (!mime) {\n\t\treturn true;\n\t}\n\n\tif (typeof mime === 'string') {\n\t\treturn mime === MIME_BINARY || mime === MIME_TEXT || mime === MIME_UNKNOWN;\n\t}\n\n\treturn mime.length === 1 && isUnspecific(mime[0]);\n}\n\nexport function suggestFilename(theMime: string, prefix: string): string {\n\tfor (var i = 0; i < registeredAssociations.length; i++) {\n\t\tlet association = registeredAssociations[i];\n\t\tif (association.userConfigured) {\n\t\t\tcontinue; // only support registered ones\n\t\t}\n\n\t\tif (association.mime === theMime && association.extension) {\n\t\t\treturn prefix + association.extension;\n\t\t}\n\t}\n\n\treturn null;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as Types from 'vs/base/common/types';\n\nexport function clone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\treturn obj;\n\t}\n\tvar result = (Array.isArray(obj)) ? <any>[] : <any>{};\n\tObject.keys(obj).forEach((key) => {\n\t\tif (obj[key] && typeof obj[key] === 'object') {\n\t\t\tresult[key] = clone(obj[key]);\n\t\t} else {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tvar result = (Array.isArray(obj)) ? <any>[] : <any>{};\n\tObject.getOwnPropertyNames(obj).forEach((key) => {\n\t\tif (obj[key] && typeof obj[key] === 'object') {\n\t\t\tresult[key] = deepClone(obj[key]);\n\t\t} else {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, []);\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, encounteredObjects: any[]): any {\n\tif (Types.isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tvar changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (Types.isArray(obj)) {\n\t\tvar r1: any[] = [];\n\t\tfor (var i1 = 0; i1 < obj.length; i1++) {\n\t\t\tr1.push(_cloneAndChange(obj[i1], changer, encounteredObjects));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (Types.isObject(obj)) {\n\t\tif (encounteredObjects.indexOf(obj) >= 0) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tencounteredObjects.push(obj);\n\t\tvar r2 = {};\n\t\tfor (var i2 in obj) {\n\t\t\tif (hasOwnProperty.call(obj, i2)) {\n\t\t\t\tr2[i2] = _cloneAndChange(obj[i2], changer, encounteredObjects);\n\t\t\t}\n\t\t}\n\t\tencounteredObjects.pop();\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n// DON'T USE THESE FUNCTION UNLESS YOU KNOW HOW CHROME\n// WORKS... WE HAVE SEEN VERY WEIRD BEHAVIOUR WITH CHROME >= 37\n\n///**\n// * Recursively call Object.freeze on object and any properties that are objects.\n// */\n//export function deepFreeze(obj:any):void {\n//\tObject.freeze(obj);\n//\tObject.keys(obj).forEach((key) => {\n//\t\tif(!(typeof obj[key] === 'object') || Object.isFrozen(obj[key])) {\n//\t\t\treturn;\n//\t\t}\n//\n//\t\tdeepFreeze(obj[key]);\n//\t});\n//\tif(!Object.isFrozen(obj)) {\n//\t\tconsole.log('too warm');\n//\t}\n//}\n//\n//export function deepSeal(obj:any):void {\n//\tObject.seal(obj);\n//\tObject.keys(obj).forEach((key) => {\n//\t\tif(!(typeof obj[key] === 'object') || Object.isSealed(obj[key])) {\n//\t\t\treturn;\n//\t\t}\n//\n//\t\tdeepSeal(obj[key]);\n//\t});\n//\tif(!Object.isSealed(obj)) {\n//\t\tconsole.log('NOT sealed');\n//\t}\n//}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!Types.isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (Types.isObject(source)) {\n\t\tObject.keys(source).forEach((key) => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (Types.isObject(destination[key]) && Types.isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function assign(destination: any, ...sources: any[]): any {\n\tsources.forEach(source => Object.keys(source).forEach((key) => destination[key] = source[key]));\n\treturn destination;\n}\n\nexport function toObject<T,R>(arr: T[], keyMap: (T) => string, valueMap: (T) => R = x => x): { [key: string]: R } {\n\treturn arr.reduce((o, d) => assign(o, { [keyMap(d)]: valueMap(d) }), Object.create(null));\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tvar i: number,\n\t\tkey: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tvar oneKeys:string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tvar otherKeys:string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nexport function ensureProperty(obj: any, property: string, defaultValue: any) {\n\tif (typeof obj[property] === 'undefined') {\n\t\tobj[property] = defaultValue;\n\t}\n}\n\nexport function arrayToHash(array: any[]) {\n\tvar result: any = {};\n\tfor (var i = 0; i < array.length; ++i) {\n\t\tresult[array[i]] = true;\n\t}\n\treturn result;\n}\n\n/**\n * Given an array of strings, returns a function which, given a string\n * returns true or false whether the string is in that array.\n */\nexport function createKeywordMatcher(arr: string[], caseInsensitive: boolean = false): (str: string) => boolean {\n\tif (caseInsensitive) {\n\t\tarr = arr.map(function (x) { return x.toLowerCase(); });\n\t}\n\tvar hash = arrayToHash(arr);\n\tif (caseInsensitive) {\n\t\treturn function (word) {\n\t\t\treturn hash[word.toLowerCase()] !== undefined && hash.hasOwnProperty(word.toLowerCase());\n\t\t};\n\t} else {\n\t\treturn function (word) {\n\t\t\treturn hash[word] !== undefined && hash.hasOwnProperty(word);\n\t\t};\n\t}\n}\n\n/**\n * Started from TypeScript's __extends function to make a type a subclass of a specific class.\n * Modified to work with properties already defined on the derivedClass, since we can't get TS\n * to call this method before the constructor definition.\n */\nexport function derive(baseClass: any, derivedClass: any): void {\n\n\tfor (var prop in baseClass) {\n\t\tif (baseClass.hasOwnProperty(prop)) {\n\t\t\tderivedClass[prop] = baseClass[prop];\n\t\t}\n\t}\n\n\tderivedClass = derivedClass || function () { };\n\tvar basePrototype = baseClass.prototype;\n\tvar derivedPrototype = derivedClass.prototype;\n\tderivedClass.prototype = Object.create(basePrototype);\n\n\tfor (var prop in derivedPrototype) {\n\t\tif (derivedPrototype.hasOwnProperty(prop)) {\n\t\t\t// handle getters and setters properly\n\t\t\tObject.defineProperty(derivedClass.prototype, prop, Object.getOwnPropertyDescriptor(derivedPrototype, prop));\n\t\t}\n\t}\n\n\t// Cast to any due to Bug 16188:PropertyDescriptor set and get function should be optional.\n\tObject.defineProperty(derivedClass.prototype, 'constructor', <any>{ value: derivedClass, writable: true, configurable: true, enumerable: true });\n}\n\n/**\n * Calls JSON.Stringify with a replacer to break apart any circular references.\n * This prevents JSON.stringify from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tvar seen: any[] = [];\n\treturn JSON.stringify(obj, (key, value) => {\n\n\t\tif (Types.isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.indexOf(value) !== -1) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.push(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T,R>(obj: T, fn: (obj: T) => R, defaultValue: R = null): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport platform = require('vs/base/common/platform');\n\n\nfunction _encode(ch: string): string {\n\treturn '%' + ch.charCodeAt(0).toString(16).toUpperCase();\n}\n\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\nfunction encodeURIComponent2(str: string): string {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, _encode);\n}\n\nfunction encodeNoop(str: string): string {\n\treturn str;\n}\n\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component paths\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n *\n *\n */\nexport default class URI {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string';\n\t}\n\n\tprivate static _empty = '';\n\tprivate static _slash = '/';\n\tprivate static _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\tprivate static _driveLetterPath = /^\\/[a-zA-z]:/;\n\tprivate static _upperCaseDrive = /^(\\/)?([A-Z]:)/;\n\n\tprivate _scheme: string;\n\tprivate _authority: string;\n\tprivate _path: string;\n\tprivate _query: string;\n\tprivate _fragment: string;\n\tprivate _formatted: string;\n\tprivate _fsPath: string;\n\n\tconstructor() {\n\t\tthis._scheme = URI._empty;\n\t\tthis._authority = URI._empty;\n\t\tthis._path = URI._empty;\n\t\tthis._query = URI._empty;\n\t\tthis._fragment = URI._empty;\n\n\t\tthis._formatted = null;\n\t\tthis._fsPath = null;\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\tget scheme() {\n\t\treturn this._scheme;\n\t}\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\tget authority() {\n\t\treturn this._authority;\n\t}\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\tget path() {\n\t\treturn this._path;\n\t}\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\tget query() {\n\t\treturn this._query;\n\t}\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\tget fragment() {\n\t\treturn this._fragment;\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths and normalize windows drive letters to lower-case. Also\n\t * uses the platform specific path separator. Will *not* validate the path for\n\t * invalid characters and semantics. Will *not* look at the scheme of this URI.\n\t */\n\tget fsPath() {\n\t\tif (!this._fsPath) {\n\t\t\tvar value: string;\n\t\t\tif (this._authority && this.scheme === 'file') {\n\t\t\t\t// unc path: file://shares/c$/far/boo\n\t\t\t\tvalue = `//${this._authority}${this._path}`;\n\t\t\t} else if (URI._driveLetterPath.test(this._path)) {\n\t\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\t\tvalue = this._path[1].toLowerCase() + this._path.substr(2);\n\t\t\t} else {\n\t\t\t\t// other path\n\t\t\t\tvalue = this._path;\n\t\t\t}\n\t\t\tif (platform.isWindows) {\n\t\t\t\tvalue = value.replace(/\\//g, '\\\\');\n\t\t\t}\n\t\t\tthis._fsPath = value;\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\t// ---- modify to new -------------------------\n\n\tpublic with(change: { scheme?: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet {scheme, authority, path, query, fragment} = change;\n\t\tif (scheme === void 0) {\n\t\t\tscheme = this.scheme;\n\t\t} else if(scheme === null){\n\t\t\tscheme = '';\n\t\t}\n\t\tif (authority === void 0) {\n\t\t\tauthority = this.authority;\n\t\t} else if(authority === null){\n\t\t\tauthority = '';\n\t\t}\n\t\tif (path === void 0) {\n\t\t\tpath = this.path;\n\t\t} else if(path === null){\n\t\t\tpath = '';\n\t\t}\n\t\tif (query === void 0) {\n\t\t\tquery = this.query;\n\t\t} else if(query === null){\n\t\t\tquery = '';\n\t\t}\n\t\tif (fragment === void 0) {\n\t\t\tfragment = this.fragment;\n\t\t} else if(fragment === null){\n\t\t\tfragment = '';\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\tconst ret = new URI();\n\t\tret._scheme = scheme;\n\t\tret._authority = authority;\n\t\tret._path = path;\n\t\tret._query = query;\n\t\tret._fragment = fragment;\n\t\tURI._validate(ret);\n\t\treturn ret;\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\tpublic static parse(value: string): URI {\n\t\tconst ret = new URI();\n\t\tconst data = URI._parseComponents(value);\n\t\tret._scheme = data.scheme;\n\t\tret._authority = decodeURIComponent(data.authority);\n\t\tret._path = decodeURIComponent(data.path);\n\t\tret._query = decodeURIComponent(data.query);\n\t\tret._fragment = decodeURIComponent(data.fragment);\n\t\tURI._validate(ret);\n\t\treturn ret;\n\t}\n\n\tpublic static file(path: string): URI {\n\n\t\tconst ret = new URI();\n\t\tret._scheme = 'file';\n\n\t\t// normalize to fwd-slashes\n\t\tpath = path.replace(/\\\\/g, URI._slash);\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === URI._slash && path[0] === path[1]) {\n\t\t\tlet idx = path.indexOf(URI._slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tret._authority = path.substring(2);\n\t\t\t} else {\n\t\t\t\tret._authority = path.substring(2, idx);\n\t\t\t\tret._path = path.substring(idx);\n\t\t\t}\n\t\t} else {\n\t\t\tret._path = path;\n\t\t}\n\n\t\t// Ensure that path starts with a slash\n\t\t// or that it is at least a slash\n\t\tif (ret._path[0] !== URI._slash) {\n\t\t\tret._path = URI._slash + ret._path;\n\t\t}\n\n\t\tURI._validate(ret);\n\n\t\treturn ret;\n\t}\n\n\tprivate static _parseComponents(value: string): UriComponents {\n\n\t\tconst ret: UriComponents = {\n\t\t\tscheme: URI._empty,\n\t\t\tauthority: URI._empty,\n\t\t\tpath: URI._empty,\n\t\t\tquery: URI._empty,\n\t\t\tfragment: URI._empty,\n\t\t};\n\n\t\tconst match = URI._regexp.exec(value);\n\t\tif (match) {\n\t\t\tret.scheme = match[2] || ret.scheme;\n\t\t\tret.authority = match[4] || ret.authority;\n\t\t\tret.path = match[5] || ret.path;\n\t\t\tret.query = match[7] || ret.query;\n\t\t\tret.fragment = match[9] || ret.fragment;\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic static from(components: { scheme?: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new URI().with(components);\n\t}\n\n\tprivate static _schemePattern = /^\\w[\\w\\d+.-]*$/;\n\tprivate static _singleSlashStart = /^\\//;\n\tprivate static _doubleSlashStart = /^\\/\\//;\n\n\tprivate static _validate(ret: URI): void {\n\t\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\t\tif (ret.scheme && !URI._schemePattern.test(ret.scheme)) {\n\t\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t\t}\n\n\t\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t\t// If a URI contains an authority component, then the path component\n\t\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t\t// does not contain an authority component, then the path cannot begin\n\t\t// with two slash characters (\"//\").\n\t\tif (ret.path) {\n\t\t\tif (ret.authority) {\n\t\t\t\tif (!URI._singleSlashStart.test(ret.path)) {\n\t\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (URI._doubleSlashStart.test(ret.path)) {\n\t\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\tpublic toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = URI._asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn URI._asFormatted(this, true);\n\t\t}\n\t}\n\n\tprivate static _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\t\tconst encoder = !skipEncoding\n\t\t\t? encodeURIComponent2\n\t\t\t: encodeNoop;\n\n\t\tconst parts: string[] = [];\n\n\t\tlet {scheme, authority, path, query, fragment} = uri;\n\t\tif (scheme) {\n\t\t\tparts.push(scheme, ':');\n\t\t}\n\t\tif (authority || scheme === 'file') {\n\t\t\tparts.push('//');\n\t\t}\n\t\tif (authority) {\n\t\t\tauthority = authority.toLowerCase();\n\t\t\tlet idx = authority.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tparts.push(encoder(authority));\n\t\t\t} else {\n\t\t\t\tparts.push(encoder(authority.substr(0, idx)), authority.substr(idx));\n\t\t\t}\n\t\t}\n\t\tif (path) {\n\t\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\t\tconst m = URI._upperCaseDrive.exec(path);\n\t\t\tif (m) {\n\t\t\t\tif (m[1]) {\n\t\t\t\t\tpath = '/' + m[2].toLowerCase() + path.substr(3); // \"/c:\".length === 3\n\t\t\t\t} else {\n\t\t\t\t\tpath = m[2].toLowerCase() + path.substr(2); // // \"c:\".length === 2\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// encode every segement but not slashes\n\t\t\t// make sure that # and ? are always encoded\n\t\t\t// when occurring in paths - otherwise the result\n\t\t\t// cannot be parsed back again\n\t\t\tlet lastIdx = 0;\n\t\t\twhile(true) {\n\t\t\t\tlet idx = path.indexOf(URI._slash, lastIdx);\n\t\t\t\tif (idx === -1) {\n\t\t\t\t\tparts.push(encoder(path.substring(lastIdx)).replace(/[#?]/, _encode));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tparts.push(encoder(path.substring(lastIdx, idx)).replace(/[#?]/, _encode), URI._slash);\n\t\t\t\tlastIdx = idx + 1;\n\t\t\t};\n\t\t}\n\t\tif (query) {\n\t\t\tparts.push('?', encoder(query));\n\t\t}\n\t\tif (fragment) {\n\t\t\tparts.push('#', encoder(fragment));\n\t\t}\n\n\t\treturn parts.join(URI._empty);\n\t}\n\n\tpublic toJSON(): any {\n\t\treturn <UriState> {\n\t\t\tscheme: this.scheme,\n\t\t\tauthority: this.authority,\n\t\t\tpath: this.path,\n\t\t\tfsPath: this.fsPath,\n\t\t\tquery: this.query,\n\t\t\tfragment: this.fragment,\n\t\t\texternal: this.toString(),\n\t\t\t$mid: 1\n\t\t};\n\t}\n\n\tstatic revive(data: any): URI {\n\t\tlet result = new URI();\n\t\tresult._scheme = (<UriState> data).scheme;\n\t\tresult._authority = (<UriState> data).authority;\n\t\tresult._path = (<UriState> data).path;\n\t\tresult._query = (<UriState> data).query;\n\t\tresult._fragment = (<UriState> data).fragment;\n\t\tresult._fsPath = (<UriState> data).fsPath;\n\t\tresult._formatted = (<UriState>data).external;\n\t\tURI._validate(result);\n\t\treturn result;\n\t}\n}\n\ninterface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\tfsPath: string;\n\texternal: string;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\treturn JSON.parse(text, reviver);\n}\n\ninterface MarshalledObject {\n\t$mid: number;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: 2,\n\t\t\tsource: (<RegExp>value).source,\n\t\t\tflags: ((<RegExp>value).global ? 'g' : '') + ((<RegExp>value).ignoreCase ? 'i' : '') + ((<RegExp>value).multiline ? 'm' : ''),\n\t\t};\n\t}\n\treturn value;\n}\n\n\nfunction reviver(key: string, value: any): any {\n\tlet marshallingConst: number;\n\tif (value !== void 0 && value !== null) {\n\t\tmarshallingConst = (<MarshalledObject>value).$mid;\n\t}\n\tif (marshallingConst === 1) {\n\t\treturn URI.revive(value);\n\t} else if (marshallingConst === 2) {\n\t\treturn new RegExp(value.source, value.flags);\n\t} else {\n\t\treturn value;\n\t}\n}\n","/**\n * Extracted from https://github.com/winjs/winjs\n * Version: 4.4.0(ec3258a9f3a36805a187848984e3bb938044178d)\n * Copyright (c) Microsoft Corporation.\n * All Rights Reserved.\n * Licensed under the MIT License.\n */\n(function() {\n\nvar _modules = {};\n_modules[\"WinJS/Core/_WinJS\"] = {};\n\nvar _winjs = function(moduleId, deps, factory) {\n    var exports = {};\n    var exportsPassedIn = false;\n\n    var depsValues = deps.map(function(dep) {\n        if (dep === 'exports') {\n            exportsPassedIn = true;\n            return exports;\n        }\n        return _modules[dep];\n    });\n\n    var result = factory.apply({}, depsValues);\n\n    _modules[moduleId] = exportsPassedIn ? exports : result;\n};\n\n\n_winjs(\"WinJS/Core/_Global\", [], function () {\n    \"use strict\";\n\n    // Appease jshint\n    /* global window, self, global */\n\n    var globalObject =\n        typeof window !== 'undefined' ? window :\n        typeof self !== 'undefined' ? self :\n        typeof global !== 'undefined' ? global :\n        {};\n    return globalObject;\n});\n\n_winjs(\"WinJS/Core/_BaseCoreUtils\", [\"WinJS/Core/_Global\"], function baseCoreUtilsInit(_Global) {\n    \"use strict\";\n\n    var hasWinRT = !!_Global.Windows;\n\n    function markSupportedForProcessing(func) {\n        /// <signature helpKeyword=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// <summary locid=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// Marks a function as being compatible with declarative processing, such as WinJS.UI.processAll\n        /// or WinJS.Binding.processAll.\n        /// </summary>\n        /// <param name=\"func\" type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_p:func\">\n        /// The function to be marked as compatible with declarative processing.\n        /// </param>\n        /// <returns type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_returnValue\">\n        /// The input function.\n        /// </returns>\n        /// </signature>\n        func.supportedForProcessing = true;\n        return func;\n    }\n\n    return {\n        hasWinRT: hasWinRT,\n        markSupportedForProcessing: markSupportedForProcessing,\n        _setImmediate: _Global.setImmediate ? _Global.setImmediate.bind(_Global) : function (handler) {\n            _Global.setTimeout(handler, 0);\n        }\n    };\n});\n_winjs(\"WinJS/Core/_WriteProfilerMark\", [\"WinJS/Core/_Global\"], function profilerInit(_Global) {\n    \"use strict\";\n\n    return _Global.msWriteProfilerMark || function () { };\n});\n_winjs(\"WinJS/Core/_Base\", [\"WinJS/Core/_WinJS\",\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_WriteProfilerMark\"], function baseInit(_WinJS, _Global, _BaseCoreUtils, _WriteProfilerMark) {\n    \"use strict\";\n\n    function initializeProperties(target, members, prefix) {\n        var keys = Object.keys(members);\n        var isArray = Array.isArray(target);\n        var properties;\n        var i, len;\n        for (i = 0, len = keys.length; i < len; i++) {\n            var key = keys[i];\n            var enumerable = key.charCodeAt(0) !== /*_*/95;\n            var member = members[key];\n            if (member && typeof member === 'object') {\n                if (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n                    if (member.enumerable === undefined) {\n                        member.enumerable = enumerable;\n                    }\n                    if (prefix && member.setName && typeof member.setName === 'function') {\n                        member.setName(prefix + \".\" + key);\n                    }\n                    properties = properties || {};\n                    properties[key] = member;\n                    continue;\n                }\n            }\n            if (!enumerable) {\n                properties = properties || {};\n                properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true };\n                continue;\n            }\n            if (isArray) {\n                target.forEach(function (target) {\n                    target[key] = member;\n                });\n            } else {\n                target[key] = member;\n            }\n        }\n        if (properties) {\n            if (isArray) {\n                target.forEach(function (target) {\n                    Object.defineProperties(target, properties);\n                });\n            } else {\n                Object.defineProperties(target, properties);\n            }\n        }\n    }\n\n    (function () {\n\n        var _rootNamespace = _WinJS;\n        if (!_rootNamespace.Namespace) {\n            _rootNamespace.Namespace = Object.create(Object.prototype);\n        }\n\n        function createNamespace(parentNamespace, name) {\n            var currentNamespace = parentNamespace || {};\n            if (name) {\n                var namespaceFragments = name.split(\".\");\n                if (currentNamespace === _Global && namespaceFragments[0] === \"WinJS\") {\n                    currentNamespace = _WinJS;\n                    namespaceFragments.splice(0, 1);\n                }\n                for (var i = 0, len = namespaceFragments.length; i < len; i++) {\n                    var namespaceName = namespaceFragments[i];\n                    if (!currentNamespace[namespaceName]) {\n                        Object.defineProperty(currentNamespace, namespaceName,\n                            { value: {}, writable: false, enumerable: true, configurable: true }\n                        );\n                    }\n                    currentNamespace = currentNamespace[namespaceName];\n                }\n            }\n            return currentNamespace;\n        }\n\n        function defineWithParent(parentNamespace, name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.defineWithParent\">\n            /// <summary locid=\"WinJS.Namespace.defineWithParent\">\n            /// Defines a new namespace with the specified name under the specified parent namespace.\n            /// </summary>\n            /// <param name=\"parentNamespace\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:parentNamespace\">\n            /// The parent namespace.\n            /// </param>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.defineWithParent_p:name\">\n            /// The name of the new namespace.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            var currentNamespace = createNamespace(parentNamespace, name);\n\n            if (members) {\n                initializeProperties(currentNamespace, members, name || \"<ANONYMOUS>\");\n            }\n\n            return currentNamespace;\n        }\n\n        function define(name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.define\">\n            /// <summary locid=\"WinJS.Namespace.define\">\n            /// Defines a new namespace with the specified name.\n            /// </summary>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.define_p:name\">\n            /// The name of the namespace. This could be a dot-separated name for nested namespaces.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.define_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.define_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            return defineWithParent(_Global, name, members);\n        }\n\n        var LazyStates = {\n            uninitialized: 1,\n            working: 2,\n            initialized: 3,\n        };\n\n        function lazy(f) {\n            var name;\n            var state = LazyStates.uninitialized;\n            var result;\n            return {\n                setName: function (value) {\n                    name = value;\n                },\n                get: function () {\n                    switch (state) {\n                        case LazyStates.initialized:\n                            return result;\n\n                        case LazyStates.uninitialized:\n                            state = LazyStates.working;\n                            try {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StartTM\");\n                                result = f();\n                            } finally {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StopTM\");\n                                state = LazyStates.uninitialized;\n                            }\n                            f = null;\n                            state = LazyStates.initialized;\n                            return result;\n\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            throw \"Illegal\";\n                    }\n                },\n                set: function (value) {\n                    switch (state) {\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            state = LazyStates.initialized;\n                            result = value;\n                            break;\n                    }\n                },\n                enumerable: true,\n                configurable: true,\n            };\n        }\n\n        // helper for defining AMD module members\n        function moduleDefine(exports, name, members) {\n            var target = [exports];\n            var publicNS = null;\n            if (name) {\n                publicNS = createNamespace(_Global, name);\n                target.push(publicNS);\n            }\n            initializeProperties(target, members, name || \"<ANONYMOUS>\");\n            return publicNS;\n        }\n\n        // Establish members of the \"WinJS.Namespace\" namespace\n        Object.defineProperties(_rootNamespace.Namespace, {\n\n            defineWithParent: { value: defineWithParent, writable: true, enumerable: true, configurable: true },\n\n            define: { value: define, writable: true, enumerable: true, configurable: true },\n\n            _lazy: { value: lazy, writable: true, enumerable: true, configurable: true },\n\n            _moduleDefine: { value: moduleDefine, writable: true, enumerable: true, configurable: true }\n\n        });\n\n    })();\n\n    (function () {\n\n        function define(constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.define\">\n            /// <summary locid=\"WinJS.Class.define\">\n            /// Defines a class using the given constructor and the specified instance members.\n            /// </summary>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.define_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:staticMembers\">\n            /// The set of static fields, properties, and methods made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.define_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            _BaseCoreUtils.markSupportedForProcessing(constructor);\n            if (instanceMembers) {\n                initializeProperties(constructor.prototype, instanceMembers);\n            }\n            if (staticMembers) {\n                initializeProperties(constructor, staticMembers);\n            }\n            return constructor;\n        }\n\n        function derive(baseClass, constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.derive\">\n            /// <summary locid=\"WinJS.Class.derive\">\n            /// Creates a sub-class based on the supplied baseClass parameter, using prototypal inheritance.\n            /// </summary>\n            /// <param name=\"baseClass\" type=\"Function\" locid=\"WinJS.Class.derive_p:baseClass\">\n            /// The class to inherit from.\n            /// </param>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.derive_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:staticMembers\">\n            /// The set of static fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.derive_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            if (baseClass) {\n                constructor = constructor || function () { };\n                var basePrototype = baseClass.prototype;\n                constructor.prototype = Object.create(basePrototype);\n                _BaseCoreUtils.markSupportedForProcessing(constructor);\n                Object.defineProperty(constructor.prototype, \"constructor\", { value: constructor, writable: true, configurable: true, enumerable: true });\n                if (instanceMembers) {\n                    initializeProperties(constructor.prototype, instanceMembers);\n                }\n                if (staticMembers) {\n                    initializeProperties(constructor, staticMembers);\n                }\n                return constructor;\n            } else {\n                return define(constructor, instanceMembers, staticMembers);\n            }\n        }\n\n        function mix(constructor) {\n            /// <signature helpKeyword=\"WinJS.Class.mix\">\n            /// <summary locid=\"WinJS.Class.mix\">\n            /// Defines a class using the given constructor and the union of the set of instance members\n            /// specified by all the mixin objects. The mixin parameter list is of variable length.\n            /// </summary>\n            /// <param name=\"constructor\" locid=\"WinJS.Class.mix_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.mix_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            var i, len;\n            for (i = 1, len = arguments.length; i < len; i++) {\n                initializeProperties(constructor.prototype, arguments[i]);\n            }\n            return constructor;\n        }\n\n        // Establish members of \"WinJS.Class\" namespace\n        _WinJS.Namespace.define(\"WinJS.Class\", {\n            define: define,\n            derive: derive,\n            mix: mix\n        });\n\n    })();\n\n    return {\n        Namespace: _WinJS.Namespace,\n        Class: _WinJS.Class\n    };\n\n});\n_winjs(\"WinJS/Core/_ErrorFromName\", [\"WinJS/Core/_Base\"], function errorsInit(_Base) {\n    \"use strict\";\n\n    var ErrorFromName = _Base.Class.derive(Error, function (name, message) {\n        /// <signature helpKeyword=\"WinJS.ErrorFromName\">\n        /// <summary locid=\"WinJS.ErrorFromName\">\n        /// Creates an Error object with the specified name and message properties.\n        /// </summary>\n        /// <param name=\"name\" type=\"String\" locid=\"WinJS.ErrorFromName_p:name\">The name of this error. The name is meant to be consumed programmatically and should not be localized.</param>\n        /// <param name=\"message\" type=\"String\" optional=\"true\" locid=\"WinJS.ErrorFromName_p:message\">The message for this error. The message is meant to be consumed by humans and should be localized.</param>\n        /// <returns type=\"Error\" locid=\"WinJS.ErrorFromName_returnValue\">Error instance with .name and .message properties populated</returns>\n        /// </signature>\n        this.name = name;\n        this.message = message || name;\n    }, {\n        /* empty */\n    }, {\n        supportedForProcessing: false,\n    });\n\n    _Base.Namespace.define(\"WinJS\", {\n        // ErrorFromName establishes a simple pattern for returning error codes.\n        //\n        ErrorFromName: ErrorFromName\n    });\n\n    return ErrorFromName;\n\n});\n\n\n_winjs(\"WinJS/Core/_Events\", [\"exports\",\"WinJS/Core/_Base\"], function eventsInit(exports, _Base) {\n    \"use strict\";\n\n\n    function createEventProperty(name) {\n        var eventPropStateName = \"_on\" + name + \"state\";\n\n        return {\n            get: function () {\n                var state = this[eventPropStateName];\n                return state && state.userHandler;\n            },\n            set: function (handler) {\n                var state = this[eventPropStateName];\n                if (handler) {\n                    if (!state) {\n                        state = { wrapper: function (evt) { return state.userHandler(evt); }, userHandler: handler };\n                        Object.defineProperty(this, eventPropStateName, { value: state, enumerable: false, writable:true, configurable: true });\n                        this.addEventListener(name, state.wrapper, false);\n                    }\n                    state.userHandler = handler;\n                } else if (state) {\n                    this.removeEventListener(name, state.wrapper, false);\n                    this[eventPropStateName] = null;\n                }\n            },\n            enumerable: true\n        };\n    }\n\n    function createEventProperties() {\n        /// <signature helpKeyword=\"WinJS.Utilities.createEventProperties\">\n        /// <summary locid=\"WinJS.Utilities.createEventProperties\">\n        /// Creates an object that has one property for each name passed to the function.\n        /// </summary>\n        /// <param name=\"events\" locid=\"WinJS.Utilities.createEventProperties_p:events\">\n        /// A variable list of property names.\n        /// </param>\n        /// <returns type=\"Object\" locid=\"WinJS.Utilities.createEventProperties_returnValue\">\n        /// The object with the specified properties. The names of the properties are prefixed with 'on'.\n        /// </returns>\n        /// </signature>\n        var props = {};\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            var name = arguments[i];\n            props[\"on\" + name] = createEventProperty(name);\n        }\n        return props;\n    }\n\n    var EventMixinEvent = _Base.Class.define(\n        function EventMixinEvent_ctor(type, detail, target) {\n            this.detail = detail;\n            this.target = target;\n            this.timeStamp = Date.now();\n            this.type = type;\n        },\n        {\n            bubbles: { value: false, writable: false },\n            cancelable: { value: false, writable: false },\n            currentTarget: {\n                get: function () { return this.target; }\n            },\n            defaultPrevented: {\n                get: function () { return this._preventDefaultCalled; }\n            },\n            trusted: { value: false, writable: false },\n            eventPhase: { value: 0, writable: false },\n            target: null,\n            timeStamp: null,\n            type: null,\n\n            preventDefault: function () {\n                this._preventDefaultCalled = true;\n            },\n            stopImmediatePropagation: function () {\n                this._stopImmediatePropagationCalled = true;\n            },\n            stopPropagation: function () {\n            }\n        }, {\n            supportedForProcessing: false,\n        }\n    );\n\n    var eventMixin = {\n        _listeners: null,\n\n        addEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// Adds an event listener to the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:listener\">\n            /// The listener to invoke when the event is raised.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:useCapture\">\n            /// if true initiates capture, otherwise false.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            this._listeners = this._listeners || {};\n            var eventListeners = (this._listeners[type] = this._listeners[type] || []);\n            for (var i = 0, len = eventListeners.length; i < len; i++) {\n                var l = eventListeners[i];\n                if (l.useCapture === useCapture && l.listener === listener) {\n                    return;\n                }\n            }\n            eventListeners.push({ listener: listener, useCapture: useCapture });\n        },\n        dispatchEvent: function (type, details) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// Raises an event of the specified type and with the specified additional properties.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"details\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:details\">\n            /// The set of additional properties to be attached to the event object when the event is raised.\n            /// </param>\n            /// <returns type=\"Boolean\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_returnValue\">\n            /// true if preventDefault was called on the event.\n            /// </returns>\n            /// </signature>\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                var eventValue = new EventMixinEvent(type, details, this);\n                // Need to copy the array to protect against people unregistering while we are dispatching\n                listeners = listeners.slice(0, listeners.length);\n                for (var i = 0, len = listeners.length; i < len && !eventValue._stopImmediatePropagationCalled; i++) {\n                    listeners[i].listener(eventValue);\n                }\n                return eventValue.defaultPrevented || false;\n            }\n            return false;\n        },\n        removeEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// Removes an event listener from the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:listener\">\n            /// The listener to remove.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:useCapture\">\n            /// Specifies whether to initiate capture.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                    var l = listeners[i];\n                    if (l.listener === listener && l.useCapture === useCapture) {\n                        listeners.splice(i, 1);\n                        if (listeners.length === 0) {\n                            delete this._listeners[type];\n                        }\n                        // Only want to remove one element for each call to removeEventListener\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    _Base.Namespace._moduleDefine(exports, \"WinJS.Utilities\", {\n        _createEventProperty: createEventProperty,\n        createEventProperties: createEventProperties,\n        eventMixin: eventMixin\n    });\n\n});\n\n\n_winjs(\"WinJS/Core/_Trace\", [\"WinJS/Core/_Global\"], function traceInit(_Global) {\n    \"use strict\";\n\n    function nop(v) {\n        return v;\n    }\n\n    return {\n        _traceAsyncOperationStarting: (_Global.Debug && _Global.Debug.msTraceAsyncOperationStarting && _Global.Debug.msTraceAsyncOperationStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncOperationCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncOperationCompleted && _Global.Debug.msTraceAsyncOperationCompleted.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackStarting: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackStarting && _Global.Debug.msTraceAsyncCallbackStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackCompleted && _Global.Debug.msTraceAsyncCallbackCompleted.bind(_Global.Debug)) || nop\n    };\n});\n_winjs(\"WinJS/Promise/_StateMachine\", [\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_Base\",\"WinJS/Core/_ErrorFromName\",\"WinJS/Core/_Events\",\"WinJS/Core/_Trace\"], function promiseStateMachineInit(_Global, _BaseCoreUtils, _Base, _ErrorFromName, _Events, _Trace) {\n    \"use strict\";\n\n    _Global.Debug && (_Global.Debug.setNonUserCodeExceptions = true);\n\n    var ListenerType = _Base.Class.mix(_Base.Class.define(null, { /*empty*/ }, { supportedForProcessing: false }), _Events.eventMixin);\n    var promiseEventListeners = new ListenerType();\n    // make sure there is a listeners collection so that we can do a more trivial check below\n    promiseEventListeners._listeners = {};\n    var errorET = \"error\";\n    var canceledName = \"Canceled\";\n    var tagWithStack = false;\n    var tag = {\n        promise: 0x01,\n        thenPromise: 0x02,\n        errorPromise: 0x04,\n        exceptionPromise: 0x08,\n        completePromise: 0x10,\n    };\n    tag.all = tag.promise | tag.thenPromise | tag.errorPromise | tag.exceptionPromise | tag.completePromise;\n\n    //\n    // Global error counter, for each error which enters the system we increment this once and then\n    // the error number travels with the error as it traverses the tree of potential handlers.\n    //\n    // When someone has registered to be told about errors (WinJS.Promise.callonerror) promises\n    // which are in error will get tagged with a ._errorId field. This tagged field is the\n    // contract by which nested promises with errors will be identified as chaining for the\n    // purposes of the callonerror semantics. If a nested promise in error is encountered without\n    // a ._errorId it will be assumed to be foreign and treated as an interop boundary and\n    // a new error id will be minted.\n    //\n    var error_number = 1;\n\n    //\n    // The state machine has a interesting hiccup in it with regards to notification, in order\n    // to flatten out notification and avoid recursion for synchronous completion we have an\n    // explicit set of *_notify states which are responsible for notifying their entire tree\n    // of children. They can do this because they know that immediate children are always\n    // ThenPromise instances and we can therefore reach into their state to access the\n    // _listeners collection.\n    //\n    // So, what happens is that a Promise will be fulfilled through the _completed or _error\n    // messages at which point it will enter a *_notify state and be responsible for to move\n    // its children into an (as appropriate) success or error state and also notify that child's\n    // listeners of the state transition, until leaf notes are reached.\n    //\n\n    var state_created,              // -> working\n        state_working,              // -> error | error_notify | success | success_notify | canceled | waiting\n        state_waiting,              // -> error | error_notify | success | success_notify | waiting_canceled\n        state_waiting_canceled,     // -> error | error_notify | success | success_notify | canceling\n        state_canceled,             // -> error | error_notify | success | success_notify | canceling\n        state_canceling,            // -> error_notify\n        state_success_notify,       // -> success\n        state_success,              // -> .\n        state_error_notify,         // -> error\n        state_error;                // -> .\n\n    // Noop function, used in the various states to indicate that they don't support a given\n    // message. Named with the somewhat cute name '_' because it reads really well in the states.\n\n    function _() { }\n\n    // Initial state\n    //\n    state_created = {\n        name: \"created\",\n        enter: function (promise) {\n            promise._setState(state_working);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Ready state, waiting for a message (completed/error/progress), able to be canceled\n    //\n    state_working = {\n        name: \"working\",\n        enter: _,\n        cancel: function (promise) {\n            promise._setState(state_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting state, if a promise is completed with a value which is itself a promise\n    // (has a then() method) it signs up to be informed when that child promise is\n    // fulfilled at which point it will be fulfilled with that value.\n    //\n    state_waiting = {\n        name: \"waiting\",\n        enter: function (promise) {\n            var waitedUpon = promise._value;\n            // We can special case our own intermediate promises which are not in a\n            //  terminal state by just pushing this promise as a listener without\n            //  having to create new indirection functions\n            if (waitedUpon instanceof ThenPromise &&\n                waitedUpon._state !== state_error &&\n                waitedUpon._state !== state_success) {\n                pushListener(waitedUpon, { promise: promise });\n            } else {\n                var error = function (value) {\n                    if (waitedUpon._errorId) {\n                        promise._chainedError(value, waitedUpon);\n                    } else {\n                        // Because this is an interop boundary we want to indicate that this\n                        //  error has been handled by the promise infrastructure before we\n                        //  begin a new handling chain.\n                        //\n                        callonerror(promise, value, detailsForHandledError, waitedUpon, error);\n                        promise._error(value);\n                    }\n                };\n                error.handlesOnError = true;\n                waitedUpon.then(\n                    promise._completed.bind(promise),\n                    error,\n                    promise._progress.bind(promise)\n                );\n            }\n        },\n        cancel: function (promise) {\n            promise._setState(state_waiting_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting canceled state, when a promise has been in a waiting state and receives a\n    // request to cancel its pending work it will forward that request to the child promise\n    // and then waits to be informed of the result. This promise moves itself into the\n    // canceling state but understands that the child promise may instead push it to a\n    // different state.\n    //\n    state_waiting_canceled = {\n        name: \"waiting_canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. Triggering a cancel on the promise\n            // that we are waiting upon may result in a different state transition\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            var waitedUpon = promise._value;\n            if (waitedUpon.cancel) {\n                waitedUpon.cancel();\n            }\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceled state, moves to the canceling state and then tells the promise to do\n    // whatever it might need to do on cancelation.\n    //\n    state_canceled = {\n        name: \"canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. The _cancelAction may change the state\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            promise._cancelAction();\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceling state, commits to the promise moving to an error state with an error\n    // object whose 'name' and 'message' properties contain the string \"Canceled\"\n    //\n    state_canceling = {\n        name: \"canceling\",\n        enter: function (promise) {\n            var error = new Error(canceledName);\n            error.name = error.message;\n            promise._value = error;\n            promise._setState(state_error_notify);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success notify state, moves a promise to the success state and notifies all children\n    //\n    state_success_notify = {\n        name: \"complete_notify\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_success);\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success state, moves a promise to the success state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_success = {\n        name: \"success\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error notify state, moves a promise to the error state and notifies all children\n    //\n    state_error_notify = {\n        name: \"error_notify\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_error);\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error state, moves a promise to the error state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_error = {\n        name: \"error\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    //\n    // The statemachine implementation follows a very particular pattern, the states are specified\n    // as static stateless bags of functions which are then indirected through the state machine\n    // instance (a Promise). As such all of the functions on each state have the promise instance\n    // passed to them explicitly as a parameter and the Promise instance members do a little\n    // dance where they indirect through the state and insert themselves in the argument list.\n    //\n    // We could instead call directly through the promise states however then every caller\n    // would have to remember to do things like pumping the state machine to catch state transitions.\n    //\n\n    var PromiseStateMachine = _Base.Class.define(null, {\n        _listeners: null,\n        _nextState: null,\n        _state: null,\n        _value: null,\n\n        cancel: function () {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n            /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n            /// already been fulfilled and cancellation is supported, the promise enters\n            /// the error state with a value of Error(\"Canceled\").\n            /// </summary>\n            /// </signature>\n            this._state.cancel(this);\n            this._run();\n        },\n        done: function Promise_done(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            ///\n            /// After the handlers have finished executing, this function throws any error that would have been returned\n            /// from then() as a promise in the error state.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The fulfilled value is passed as the single argument. If the value is null,\n            /// the fulfilled value is returned. The value returned\n            /// from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while executing the function, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function is the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n            /// the function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// </signature>\n            this._state.done(this, onComplete, onError, onProgress);\n        },\n        then: function Promise_then(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The value is passed as the single argument. If the value is null, the value is returned.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while this function is being executed, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n            /// The function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n            /// The promise whose value is the result of executing the complete or\n            /// error function.\n            /// </returns>\n            /// </signature>\n            return this._state.then(this, onComplete, onError, onProgress);\n        },\n\n        _chainedError: function (value, context) {\n            var result = this._state._error(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _completed: function (value) {\n            var result = this._state._completed(this, value);\n            this._run();\n            return result;\n        },\n        _error: function (value) {\n            var result = this._state._error(this, value, detailsForError);\n            this._run();\n            return result;\n        },\n        _progress: function (value) {\n            this._state._progress(this, value);\n        },\n        _setState: function (state) {\n            this._nextState = state;\n        },\n        _setCompleteValue: function (value) {\n            this._state._setCompleteValue(this, value);\n            this._run();\n        },\n        _setChainedErrorValue: function (value, context) {\n            var result = this._state._setErrorValue(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _setExceptionValue: function (value) {\n            var result = this._state._setErrorValue(this, value, detailsForException);\n            this._run();\n            return result;\n        },\n        _run: function () {\n            while (this._nextState) {\n                this._state = this._nextState;\n                this._nextState = null;\n                this._state.enter(this);\n            }\n        }\n    }, {\n        supportedForProcessing: false\n    });\n\n    //\n    // Implementations of shared state machine code.\n    //\n\n    function completed(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success_notify;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function createErrorDetails(exception, error, promise, id, parent, handler) {\n        return {\n            exception: exception,\n            error: error,\n            promise: promise,\n            handler: handler,\n            id: id,\n            parent: parent\n        };\n    }\n    function detailsForHandledError(promise, errorValue, context, handler) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context,\n            handler\n        );\n    }\n    function detailsForChainedError(promise, errorValue, context) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        setErrorInfo(promise, errorId, exception);\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context\n        );\n    }\n    function detailsForError(promise, errorValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId);\n        return createErrorDetails(\n            null,\n            errorValue,\n            promise,\n            errorId\n        );\n    }\n    function detailsForException(promise, exceptionValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId, true);\n        return createErrorDetails(\n            exceptionValue,\n            null,\n            promise,\n            errorId\n        );\n    }\n    function done(promise, onComplete, onError, onProgress) {\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.done\");\n        pushListener(promise, { c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n    }\n    function error(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error_notify);\n    }\n    function notifySuccess(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onComplete = listener.c;\n            var target = listener.promise;\n\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, _Global.Debug && _Global.Debug.MS_ASYNC_OP_STATUS_SUCCESS);\n\n            if (target) {\n                _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                try {\n                    target._setCompleteValue(onComplete ? onComplete(value) : value);\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    _Trace._traceAsyncCallbackCompleted();\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                CompletePromise.prototype.done.call(promise, onComplete);\n            }\n        }\n    }\n    function notifyError(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onError = listener.e;\n            var target = listener.promise;\n\n            var errorID = _Global.Debug && (value && value.name === canceledName ? _Global.Debug.MS_ASYNC_OP_STATUS_CANCELED : _Global.Debug.MS_ASYNC_OP_STATUS_ERROR);\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, errorID);\n\n            if (target) {\n                var asyncCallbackStarted = false;\n                try {\n                    if (onError) {\n                        _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                        asyncCallbackStarted = true;\n                        if (!onError.handlesOnError) {\n                            callonerror(target, value, detailsForHandledError, promise, onError);\n                        }\n                        target._setCompleteValue(onError(value));\n                    } else {\n                        target._setChainedErrorValue(value, promise);\n                    }\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    if (asyncCallbackStarted) {\n                        _Trace._traceAsyncCallbackCompleted();\n                    }\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                ErrorPromise.prototype.done.call(promise, null, onError);\n            }\n        }\n    }\n    function callonerror(promise, value, onerrorDetailsGenerator, context, handler) {\n        if (promiseEventListeners._listeners[errorET]) {\n            if (value instanceof Error && value.message === canceledName) {\n                return;\n            }\n            promiseEventListeners.dispatchEvent(errorET, onerrorDetailsGenerator(promise, value, context, handler));\n        }\n    }\n    function progress(promise, value) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            var i, len;\n            for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n                var listener = len === 1 ? listeners : listeners[i];\n                var onProgress = listener.p;\n                if (onProgress) {\n                    try { onProgress(value); } catch (ex) { }\n                }\n                if (!(listener.c || listener.e) && listener.promise) {\n                    listener.promise._progress(value);\n                }\n            }\n        }\n    }\n    function pushListener(promise, listener) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            // We may have either a single listener (which will never be wrapped in an array)\n            // or 2+ listeners (which will be wrapped). Since we are now adding one more listener\n            // we may have to wrap the single listener before adding the second.\n            listeners = Array.isArray(listeners) ? listeners : [listeners];\n            listeners.push(listener);\n        } else {\n            listeners = listener;\n        }\n        promise._listeners = listeners;\n    }\n    // The difference beween setCompleteValue()/setErrorValue() and complete()/error() is that setXXXValue() moves\n    // a promise directly to the success/error state without starting another notification pass (because one\n    // is already ongoing).\n    function setErrorInfo(promise, errorId, isException) {\n        promise._isException = isException || false;\n        promise._errorId = errorId;\n    }\n    function setErrorValue(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error);\n    }\n    function setCompleteValue(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function then(promise, onComplete, onError, onProgress) {\n        var result = new ThenPromise(promise);\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.then\");\n        pushListener(promise, { promise: result, c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n        return result;\n    }\n\n    //\n    // Internal implementation detail promise, ThenPromise is created when a promise needs\n    // to be returned from a then() method.\n    //\n    var ThenPromise = _Base.Class.derive(PromiseStateMachine,\n        function (creator) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.thenPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._creator = creator;\n            this._setState(state_created);\n            this._run();\n        }, {\n            _creator: null,\n\n            _cancelAction: function () { if (this._creator) { this._creator.cancel(); } },\n            _cleanupAction: function () { this._creator = null; }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Slim promise implementations for already completed promises, these are created\n    // under the hood on synchronous completion paths as well as by WinJS.Promise.wrap\n    // and WinJS.Promise.wrapError.\n    //\n\n    var ErrorPromise = _Base.Class.define(\n        function ErrorPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.errorPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForError);\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function ErrorPromise_done(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                var value = this._value;\n                if (onError) {\n                    try {\n                        if (!onError.handlesOnError) {\n                            callonerror(null, value, detailsForHandledError, this, onError);\n                        }\n                        var result = onError(value);\n                        if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                            // If a promise is returned we need to wait on it.\n                            result.done();\n                        }\n                        return;\n                    } catch (ex) {\n                        value = ex;\n                    }\n                }\n                if (value instanceof Error && value.message === canceledName) {\n                    // suppress cancel\n                    return;\n                }\n                // force the exception to be thrown asyncronously to avoid any try/catch blocks\n                //\n                Promise._doneHandler(value);\n            },\n            then: function ErrorPromise_then(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n\n                // If the promise is already in a error state and no error handler is provided\n                // we optimize by simply returning the promise instead of creating a new one.\n                //\n                if (!onError) { return this; }\n                var result;\n                var value = this._value;\n                try {\n                    if (!onError.handlesOnError) {\n                        callonerror(null, value, detailsForHandledError, this, onError);\n                    }\n                    result = new CompletePromise(onError(value));\n                } catch (ex) {\n                    // If the value throw from the error handler is the same as the value\n                    // provided to the error handler then there is no need for a new promise.\n                    //\n                    if (ex === value) {\n                        result = this;\n                    } else {\n                        result = new ExceptionPromise(ex);\n                    }\n                }\n                return result;\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var ExceptionPromise = _Base.Class.derive(ErrorPromise,\n        function ExceptionPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.exceptionPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForException);\n        }, {\n            /* empty */\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var CompletePromise = _Base.Class.define(\n        function CompletePromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.completePromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                var result = new ThenPromise(null);\n                result._setCompleteValue(value);\n                return result;\n            }\n            this._value = value;\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function CompletePromise_done(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                if (!onComplete) { return; }\n                try {\n                    var result = onComplete(this._value);\n                    if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                        result.done();\n                    }\n                } catch (ex) {\n                    // force the exception to be thrown asynchronously to avoid any try/catch blocks\n                    Promise._doneHandler(ex);\n                }\n            },\n            then: function CompletePromise_then(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n                try {\n                    // If the value returned from the completion handler is the same as the value\n                    // provided to the completion handler then there is no need for a new promise.\n                    //\n                    var newValue = onComplete ? onComplete(this._value) : this._value;\n                    return newValue === this._value ? this : new CompletePromise(newValue);\n                } catch (ex) {\n                    return new ExceptionPromise(ex);\n                }\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Promise is the user-creatable WinJS.Promise object.\n    //\n\n    function timeout(timeoutMS) {\n        var id;\n        return new Promise(\n            function (c) {\n                if (timeoutMS) {\n                    id = _Global.setTimeout(c, timeoutMS);\n                } else {\n                    _BaseCoreUtils._setImmediate(c);\n                }\n            },\n            function () {\n                if (id) {\n                    _Global.clearTimeout(id);\n                }\n            }\n        );\n    }\n\n    function timeoutWithPromise(timeout, promise) {\n        var cancelPromise = function () { promise.cancel(); };\n        var cancelTimeout = function () { timeout.cancel(); };\n        timeout.then(cancelPromise);\n        promise.then(cancelTimeout, cancelTimeout);\n        return promise;\n    }\n\n    var staticCanceledPromise;\n\n    var Promise = _Base.Class.derive(PromiseStateMachine,\n        function Promise_ctor(init, oncancel) {\n            /// <signature helpKeyword=\"WinJS.Promise\">\n            /// <summary locid=\"WinJS.Promise\">\n            /// A promise provides a mechanism to schedule work to be done on a value that\n            /// has not yet been computed. It is a convenient abstraction for managing\n            /// interactions with asynchronous APIs.\n            /// </summary>\n            /// <param name=\"init\" type=\"Function\" locid=\"WinJS.Promise_p:init\">\n            /// The function that is called during construction of the  promise. The function\n            /// is given three arguments (complete, error, progress). Inside this function\n            /// you should add event listeners for the notifications supported by this value.\n            /// </param>\n            /// <param name=\"oncancel\" optional=\"true\" locid=\"WinJS.Promise_p:oncancel\">\n            /// The function to call if a consumer of this promise wants\n            /// to cancel its undone work. Promises are not required to\n            /// support cancellation.\n            /// </param>\n            /// </signature>\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.promise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._oncancel = oncancel;\n            this._setState(state_created);\n            this._run();\n\n            try {\n                var complete = this._completed.bind(this);\n                var error = this._error.bind(this);\n                var progress = this._progress.bind(this);\n                init(complete, error, progress);\n            } catch (ex) {\n                this._setExceptionValue(ex);\n            }\n        }, {\n            _oncancel: null,\n\n            _cancelAction: function () {\n                // BEGIN monaco change\n                try {\n                    if (this._oncancel) {\n                        this._oncancel();\n                    } else {\n                        throw new Error('Promise did not implement oncancel');\n                    }\n                } catch (ex) {\n                    // Access fields to get them created\n                    var msg = ex.message;\n                    var stack = ex.stack;\n                    promiseEventListeners.dispatchEvent('error', ex);\n                }\n                // END monaco change\n            },\n            _cleanupAction: function () { this._oncancel = null; }\n        }, {\n\n            addEventListener: function Promise_addEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.addEventListener\">\n                /// <summary locid=\"WinJS.Promise.addEventListener\">\n                /// Adds an event listener to the control.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.addEventListener_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"listener\" locid=\"WinJS.Promise.addEventListener_p:listener\">\n                /// The listener to invoke when the event is raised.\n                /// </param>\n                /// <param name=\"capture\" locid=\"WinJS.Promise.addEventListener_p:capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.addEventListener(eventType, listener, capture);\n            },\n            any: function Promise_any(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.any\">\n                /// <summary locid=\"WinJS.Promise.any\">\n                /// Returns a promise that is fulfilled when one of the input promises\n                /// has been fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Array\" locid=\"WinJS.Promise.any_p:values\">\n                /// An array that contains promise objects or objects whose property\n                /// values include promise objects.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.any_returnValue\">\n                /// A promise that on fulfillment yields the value of the input (complete or error).\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error) {\n                        var keys = Object.keys(values);\n                        if (keys.length === 0) {\n                            complete();\n                        }\n                        var canceled = 0;\n                        keys.forEach(function (key) {\n                            Promise.as(values[key]).then(\n                                function () { complete({ key: key, value: values[key] }); },\n                                function (e) {\n                                    if (e instanceof Error && e.name === canceledName) {\n                                        if ((++canceled) === keys.length) {\n                                            complete(Promise.cancel);\n                                        }\n                                        return;\n                                    }\n                                    error({ key: key, value: values[key] });\n                                }\n                            );\n                        });\n                    },\n                    function () {\n                        var keys = Object.keys(values);\n                        keys.forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            as: function Promise_as(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.as\">\n                /// <summary locid=\"WinJS.Promise.as\">\n                /// Returns a promise. If the object is already a promise it is returned;\n                /// otherwise the object is wrapped in a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.as_p:value\">\n                /// The value to be treated as a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.as_returnValue\">\n                /// A promise.\n                /// </returns>\n                /// </signature>\n                if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                    return value;\n                }\n                return new CompletePromise(value);\n            },\n            /// <field type=\"WinJS.Promise\" helpKeyword=\"WinJS.Promise.cancel\" locid=\"WinJS.Promise.cancel\">\n            /// Canceled promise value, can be returned from a promise completion handler\n            /// to indicate cancelation of the promise chain.\n            /// </field>\n            cancel: {\n                get: function () {\n                    return (staticCanceledPromise = staticCanceledPromise || new ErrorPromise(new _ErrorFromName(canceledName)));\n                }\n            },\n            dispatchEvent: function Promise_dispatchEvent(eventType, details) {\n                /// <signature helpKeyword=\"WinJS.Promise.dispatchEvent\">\n                /// <summary locid=\"WinJS.Promise.dispatchEvent\">\n                /// Raises an event of the specified type and properties.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.dispatchEvent_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"details\" locid=\"WinJS.Promise.dispatchEvent_p:details\">\n                /// The set of additional properties to be attached to the event object.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.dispatchEvent_returnValue\">\n                /// Specifies whether preventDefault was called on the event.\n                /// </returns>\n                /// </signature>\n                return promiseEventListeners.dispatchEvent(eventType, details);\n            },\n            is: function Promise_is(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.is\">\n                /// <summary locid=\"WinJS.Promise.is\">\n                /// Determines whether a value fulfills the promise contract.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.is_p:value\">\n                /// A value that may be a promise.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.is_returnValue\">\n                /// true if the specified value is a promise, otherwise false.\n                /// </returns>\n                /// </signature>\n                return value && typeof value === \"object\" && typeof value.then === \"function\";\n            },\n            join: function Promise_join(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.join\">\n                /// <summary locid=\"WinJS.Promise.join\">\n                /// Creates a promise that is fulfilled when all the values are fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Object\" locid=\"WinJS.Promise.join_p:values\">\n                /// An object whose fields contain values, some of which may be promises.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.join_returnValue\">\n                /// A promise whose value is an object with the same field names as those of the object in the values parameter, where\n                /// each field value is the fulfilled value of a promise.\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error, progress) {\n                        var keys = Object.keys(values);\n                        var errors = Array.isArray(values) ? [] : {};\n                        var results = Array.isArray(values) ? [] : {};\n                        var undefineds = 0;\n                        var pending = keys.length;\n                        var argDone = function (key) {\n                            if ((--pending) === 0) {\n                                var errorCount = Object.keys(errors).length;\n                                if (errorCount === 0) {\n                                    complete(results);\n                                } else {\n                                    var canceledCount = 0;\n                                    keys.forEach(function (key) {\n                                        var e = errors[key];\n                                        if (e instanceof Error && e.name === canceledName) {\n                                            canceledCount++;\n                                        }\n                                    });\n                                    if (canceledCount === errorCount) {\n                                        complete(Promise.cancel);\n                                    } else {\n                                        error(errors);\n                                    }\n                                }\n                            } else {\n                                progress({ Key: key, Done: true });\n                            }\n                        };\n                        keys.forEach(function (key) {\n                            var value = values[key];\n                            if (value === undefined) {\n                                undefineds++;\n                            } else {\n                                Promise.then(value,\n                                    function (value) { results[key] = value; argDone(key); },\n                                    function (value) { errors[key] = value; argDone(key); }\n                                );\n                            }\n                        });\n                        pending -= undefineds;\n                        if (pending === 0) {\n                            complete(results);\n                            return;\n                        }\n                    },\n                    function () {\n                        Object.keys(values).forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            removeEventListener: function Promise_removeEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.removeEventListener\">\n                /// <summary locid=\"WinJS.Promise.removeEventListener\">\n                /// Removes an event listener from the control.\n                /// </summary>\n                /// <param name='eventType' locid=\"WinJS.Promise.removeEventListener_eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name='listener' locid=\"WinJS.Promise.removeEventListener_listener\">\n                /// The listener to remove.\n                /// </param>\n                /// <param name='capture' locid=\"WinJS.Promise.removeEventListener_capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.removeEventListener(eventType, listener, capture);\n            },\n            supportedForProcessing: false,\n            then: function Promise_then(value, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.then\">\n                /// <summary locid=\"WinJS.Promise.then\">\n                /// A static version of the promise instance method then().\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.then_p:value\">\n                /// the value to be treated as a promise.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.then_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If it is null, the promise simply\n                /// returns the value. The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.then_returnValue\">\n                /// A promise whose value is the result of executing the provided complete function.\n                /// </returns>\n                /// </signature>\n                return Promise.as(value).then(onComplete, onError, onProgress);\n            },\n            thenEach: function Promise_thenEach(values, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.thenEach\">\n                /// <summary locid=\"WinJS.Promise.thenEach\">\n                /// Performs an operation on all the input promises and returns a promise\n                /// that has the shape of the input and contains the result of the operation\n                /// that has been performed on each input.\n                /// </summary>\n                /// <param name=\"values\" locid=\"WinJS.Promise.thenEach_p:values\">\n                /// A set of values (which could be either an array or an object) of which some or all are promises.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.thenEach_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If the value is null, the promise returns the value.\n                /// The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.thenEach_returnValue\">\n                /// A promise that is the result of calling Promise.join on the values parameter.\n                /// </returns>\n                /// </signature>\n                var result = Array.isArray(values) ? [] : {};\n                Object.keys(values).forEach(function (key) {\n                    result[key] = Promise.as(values[key]).then(onComplete, onError, onProgress);\n                });\n                return Promise.join(result);\n            },\n            timeout: function Promise_timeout(time, promise) {\n                /// <signature helpKeyword=\"WinJS.Promise.timeout\">\n                /// <summary locid=\"WinJS.Promise.timeout\">\n                /// Creates a promise that is fulfilled after a timeout.\n                /// </summary>\n                /// <param name=\"timeout\" type=\"Number\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:timeout\">\n                /// The timeout period in milliseconds. If this value is zero or not specified\n                /// setImmediate is called, otherwise setTimeout is called.\n                /// </param>\n                /// <param name=\"promise\" type=\"Promise\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:promise\">\n                /// A promise that will be canceled if it doesn't complete before the\n                /// timeout has expired.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.timeout_returnValue\">\n                /// A promise that is completed asynchronously after the specified timeout.\n                /// </returns>\n                /// </signature>\n                var to = timeout(time);\n                return promise ? timeoutWithPromise(to, promise) : to;\n            },\n            wrap: function Promise_wrap(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrap\">\n                /// <summary locid=\"WinJS.Promise.wrap\">\n                /// Wraps a non-promise value in a promise. You can use this function if you need\n                /// to pass a value to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.wrap_p:value\">\n                /// Some non-promise value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrap_returnValue\">\n                /// A promise that is successfully fulfilled with the specified value\n                /// </returns>\n                /// </signature>\n                return new CompletePromise(value);\n            },\n            wrapError: function Promise_wrapError(error) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrapError\">\n                /// <summary locid=\"WinJS.Promise.wrapError\">\n                /// Wraps a non-promise error value in a promise. You can use this function if you need\n                /// to pass an error to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"error\" locid=\"WinJS.Promise.wrapError_p:error\">\n                /// A non-promise error value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrapError_returnValue\">\n                /// A promise that is in an error state with the specified value.\n                /// </returns>\n                /// </signature>\n                return new ErrorPromise(error);\n            },\n\n            _veryExpensiveTagWithStack: {\n                get: function () { return tagWithStack; },\n                set: function (value) { tagWithStack = value; }\n            },\n            _veryExpensiveTagWithStack_tag: tag,\n            _getStack: function () {\n                if (_Global.Debug && _Global.Debug.debuggerEnabled) {\n                    try { throw new Error(); } catch (e) { return e.stack; }\n                }\n            },\n\n            _cancelBlocker: function Promise__cancelBlocker(input, oncancel) {\n                //\n                // Returns a promise which on cancelation will still result in downstream cancelation while\n                //  protecting the promise 'input' from being  canceled which has the effect of allowing\n                //  'input' to be shared amoung various consumers.\n                //\n                if (!Promise.is(input)) {\n                    return Promise.wrap(input);\n                }\n                var complete;\n                var error;\n                var output = new Promise(\n                    function (c, e) {\n                        complete = c;\n                        error = e;\n                    },\n                    function () {\n                        complete = null;\n                        error = null;\n                        oncancel && oncancel();\n                    }\n                );\n                input.then(\n                    function (v) { complete && complete(v); },\n                    function (e) { error && error(e); }\n                );\n                return output;\n            },\n\n        }\n    );\n    Object.defineProperties(Promise, _Events.createEventProperties(errorET));\n\n    Promise._doneHandler = function (value) {\n        _BaseCoreUtils._setImmediate(function Promise_done_rethrow() {\n            throw value;\n        });\n    };\n\n    return {\n        PromiseStateMachine: PromiseStateMachine,\n        Promise: Promise,\n        state_created: state_created\n    };\n});\n\n_winjs(\"WinJS/Promise\", [\"WinJS/Core/_Base\",\"WinJS/Promise/_StateMachine\"], function promiseInit( _Base, _StateMachine) {\n    \"use strict\";\n\n    _Base.Namespace.define(\"WinJS\", {\n        Promise: _StateMachine.Promise\n    });\n\n    return _StateMachine.Promise;\n});\n\nvar exported = _modules[\"WinJS/Core/_WinJS\"];\n\nif (typeof exports === 'undefined' && typeof define === 'function' && define.amd) {\n    define(\"vs/base/common/winjs.base.raw\", exported);\n} else {\n    module.exports = exported;\n}\n\nif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n    _modules[\"WinJS/Core/_BaseCoreUtils\"]._setImmediate = function(handler) {\n        return process.nextTick(handler);\n    };\n}\n\n})();","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/**\n * A message sent from the UI thread to a worker\n */\nexport interface IClientMessage {\n\tid:number;\n\ttype:string;\n\ttimestamp:number;\n\tpayload:any;\n}\n\n/**\n * A message sent from a worker to the UI thread\n */\nexport interface IServerMessage {\n\tmonacoWorker:boolean;\n\tfrom:number;\n\treq:string;\n\ttype:string;\n\tpayload:any;\n}\n\n/**\n * A message sent from a worker to the UI thread in reply to a UI thread request\n */\nexport interface IServerReplyMessage extends IServerMessage {\n\tid:number;\n\taction:string;\n}\n\n/**\n * A message sent from a worker to the UI thread for debugging purposes (console.log, console.info, etc.)\n */\nexport interface IServerPrintMessage extends IServerMessage {\n\tlevel:string;\n}\n\nexport var MessageType = {\n\tINITIALIZE: '$initialize',\n\tREPLY: '$reply',\n\tPRINT: '$print'\n};\n\nexport var ReplyType = {\n\tCOMPLETE: 'complete',\n\tERROR: 'error',\n\tPROGRESS: 'progress'\n};\n\nexport var PrintType = {\n\tLOG: 'log',\n\tDEBUG: 'debug',\n\tINFO: 'info',\n\tWARN: 'warn',\n\tERROR: 'error'\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport namespace Arrays {\n\n\t/**\n\t * Given a sorted array of natural number segments, find the segment containing a natural number.\n\t *    For example, the segments [0, 5), [5, 9), [9, infinity) will be represented in the following manner:\n\t *       [{ startIndex: 0 }, { startIndex: 5 }, { startIndex: 9 }]\n\t *    Searching for 0, 1, 2, 3 or 4 will return 0.\n\t *    Searching for 5, 6, 7 or 8 will return 1.\n\t *    Searching for 9, 10, 11, ... will return 2.\n\t * @param arr A sorted array representing natural number segments\n\t * @param desiredIndex The search\n\t * @return The index of the containing segment in the array.\n\t */\n\texport function findIndexInSegmentsArray(arr: { startIndex: number; }[], desiredIndex: number): number {\n\n\t\tlet low = 0;\n\t\tlet high = arr.length - 1;\n\n\t\tif (high <= 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\twhile (low < high) {\n\n\t\t\tlet mid = low + Math.ceil((high - low) / 2);\n\n\t\t\tif (arr[mid].startIndex > desiredIndex) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else {\n\t\t\t\tlow = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IMode, IModeTransition} from 'vs/editor/common/modes';\nimport {Arrays} from 'vs/editor/common/core/arrays';\n\nexport class ModeTransition {\n\t_modeTransitionBrand: void;\n\n\tpublic startIndex:number;\n\tpublic mode:IMode;\n\tpublic modeId: string;\n\n\tconstructor(startIndex:number, mode:IMode) {\n\t\tthis.startIndex = startIndex|0;\n\t\tthis.mode = mode;\n\t\tthis.modeId = mode.getId();\n\t}\n\n\tpublic static findIndexInSegmentsArray(arr:ModeTransition[], desiredIndex: number): number {\n\t\treturn Arrays.findIndexInSegmentsArray(arr, desiredIndex);\n\t}\n\n\tpublic static create(modeTransitions:IModeTransition[]): ModeTransition[] {\n\t\tlet result:ModeTransition[] = [];\n\t\tfor (let i = 0, len = modeTransitions.length; i < len; i++) {\n\t\t\tlet modeTransition = modeTransitions[i];\n\t\t\tresult.push(new ModeTransition(modeTransition.startIndex, modeTransition.mode));\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IPosition} from 'vs/editor/common/editorCommon';\n\n/**\n * A position in the editor.\n */\nexport class Position {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tpublic lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tpublic column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.column = column;\n\t}\n\n\t/**\n\t * Test if this position equals other position\n\t */\n\tpublic equals(other:IPosition): boolean {\n\t\treturn Position.equals(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` equals position `b`\n\t */\n\tpublic static equals(a:IPosition, b:IPosition): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.lineNumber === b.lineNumber &&\n\t\t\ta.column === b.column\n\t\t);\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic isBefore(other:IPosition): boolean {\n\t\treturn Position.isBefore(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic static isBefore(a:IPosition, b:IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column < b.column;\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic isBeforeOrEqual(other:IPosition): boolean {\n\t\treturn Position.isBeforeOrEqual(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic static isBeforeOrEqual(a:IPosition, b:IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column <= b.column;\n\t}\n\n\t/**\n\t * Clone this position.\n\t */\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\t/**\n\t * Convert to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\t/**\n\t * Create a `Position` from an `IPosition`.\n\t */\n\tpublic static lift(pos:IPosition): Position {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IPosition`.\n\t */\n\tpublic static isIPosition(obj: any): obj is IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {Position} from 'vs/editor/common/core/position';\nimport {IPosition, IRange} from 'vs/editor/common/editorCommon';\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tpublic startLineNumber:number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tpublic startColumn:number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tpublic endLineNumber:number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tpublic endColumn:number;\n\n\tconstructor(startLineNumber:number, startColumn:number, endLineNumber:number, endColumn:number) {\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n\t\t\tthis.startLineNumber = endLineNumber;\n\t\t\tthis.startColumn = endColumn;\n\t\t\tthis.endLineNumber = startLineNumber;\n\t\t\tthis.endColumn = startColumn;\n\t\t} else {\n\t\t\tthis.startLineNumber = startLineNumber;\n\t\t\tthis.startColumn = startColumn;\n\t\t\tthis.endLineNumber = endLineNumber;\n\t\t\tthis.endColumn = endColumn;\n\t\t}\n\t}\n\n\t/**\n\t * Test if this range is empty.\n\t */\n\tpublic isEmpty(): boolean {\n\t\treturn Range.isEmpty(this);\n\t}\n\n\t/**\n\t * Test if `range` is empty.\n\t */\n\tpublic static isEmpty(range:IRange): boolean {\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n\t}\n\n\t/**\n\t * Test if position is in this range. If the position is at the edges, will return true.\n\t */\n\tpublic containsPosition(position:IPosition): boolean {\n\t\treturn Range.containsPosition(this, position);\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return true.\n\t */\n\tpublic static containsPosition(range:IRange, position:IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if range is in this range. If the range is equal to this range, will return true.\n\t */\n\tpublic containsRange(range:IRange): boolean {\n\t\treturn Range.containsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n\t */\n\tpublic static containsRange(range:IRange, otherRange:IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic plusRange(range:IRange): Range {\n\t\treturn Range.plusRange(this, range);\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic static plusRange(a:IRange, b:IRange): Range {\n\t\tvar startLineNumber:number, startColumn:number, endLineNumber:number, endColumn:number;\n\t\tif (b.startLineNumber < a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = b.startColumn;\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\n\t\t} else {\n\t\t\tstartLineNumber = a.startLineNumber;\n\t\t\tstartColumn = a.startColumn;\n\t\t}\n\n\t\tif (b.endLineNumber > a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = b.endColumn;\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\n\t\t} else {\n\t\t\tendLineNumber = a.endLineNumber;\n\t\t\tendColumn = a.endColumn;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic intersectRanges(range:IRange): Range {\n\t\treturn Range.intersectRanges(this, range);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic static intersectRanges(a:IRange, b:IRange): Range {\n\t\tvar resultStartLineNumber = a.startLineNumber,\n\t\t\tresultStartColumn = a.startColumn,\n\t\t\tresultEndLineNumber = a.endLineNumber,\n\t\t\tresultEndColumn = a.endColumn,\n\t\t\totherStartLineNumber = b.startLineNumber,\n\t\t\totherStartColumn = b.startColumn,\n\t\t\totherEndLineNumber = b.endLineNumber,\n\t\t\totherEndColumn = b.endColumn;\n\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\n\t\t\tresultStartLineNumber = otherStartLineNumber;\n\t\t\tresultStartColumn = otherStartColumn;\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n\t\t}\n\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\n\t\t\tresultEndLineNumber = otherEndLineNumber;\n\t\t\tresultEndColumn = otherEndColumn;\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n\t\t}\n\n\t\t// Check if selection is now empty\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\n\t\t\treturn null;\n\t\t}\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n\t}\n\n\t/**\n\t * Test if this range equals other.\n\t */\n\tpublic equalsRange(other:IRange): boolean {\n\t\treturn Range.equalsRange(this, other);\n\t}\n\n\t/**\n\t * Test if range `a` equals `b`.\n\t */\n\tpublic static equalsRange(a:IRange, b:IRange): boolean {\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.startLineNumber === b.startLineNumber &&\n\t\t\ta.startColumn === b.startColumn &&\n\t\t\ta.endLineNumber === b.endLineNumber &&\n\t\t\ta.endColumn === b.endColumn\n\t\t);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic getEndPosition(): Position {\n\t\treturn new Position(this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic getStartPosition(): Position {\n\t\treturn new Position(this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Clone this range.\n\t */\n\tpublic cloneRange(): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Transform to a user presentable string representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n\t}\n\n\t/**\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic collapseToStart(): Range {\n\t\treturn Range.collapseToStart(this);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic static collapseToStart(range:IRange): Range {\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n\t}\n\n\t// ---\n\n\t/**\n\t * Create a `Range` from an `IRange`.\n\t */\n\tpublic static lift(range:IRange): Range {\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IRange`.\n\t */\n\tpublic static isIRange(obj: any): obj is IRange {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.startLineNumber === 'number')\n\t\t\t&& (typeof obj.startColumn === 'number')\n\t\t\t&& (typeof obj.endLineNumber === 'number')\n\t\t\t&& (typeof obj.endColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two ranges are touching in any way.\n\t */\n\tpublic static areIntersectingOrTouching(a:IRange, b:IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the startPosition and then on the endPosition\n\t */\n\tpublic static compareRangesUsingStarts(a:IRange, b:IRange): number {\n\t\tlet aStartLineNumber = a.startLineNumber|0;\n\t\tlet bStartLineNumber = b.startLineNumber|0;\n\t\tlet aStartColumn = a.startColumn|0;\n\t\tlet bStartColumn = b.startColumn|0;\n\t\tlet aEndLineNumber = a.endLineNumber|0;\n\t\tlet bEndLineNumber = b.endLineNumber|0;\n\t\tlet aEndColumn = a.endColumn|0;\n\t\tlet bEndColumn = b.endColumn|0;\n\n\t\tif (aStartLineNumber === bStartLineNumber) {\n\t\t\tif (aStartColumn === bStartColumn) {\n\t\t\t\tif (aEndLineNumber === bEndLineNumber) {\n\t\t\t\t\treturn aEndColumn - bEndColumn;\n\t\t\t\t}\n\t\t\t\treturn aEndLineNumber - bEndLineNumber;\n\t\t\t}\n\t\t\treturn aStartColumn - bStartColumn;\n\t\t}\n\t\treturn aStartLineNumber - bStartLineNumber;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the endPosition and then on the startPosition\n\t */\n\tpublic static compareRangesUsingEnds(a:IRange, b:IRange): number {\n\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\tif (a.endColumn === b.endColumn) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.startColumn - b.startColumn;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn a.endColumn - b.endColumn;\n\t\t}\n\t\treturn a.endLineNumber - b.endLineNumber;\n\t}\n\n\t/**\n\t * Test if the range spans multiple lines.\n\t */\n\tpublic static spansMultipleLines(range:IRange):boolean {\n\t\treturn range.endLineNumber > range.startLineNumber;\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Arrays} from 'vs/editor/common/core/arrays';\n\n/**\n * A token on a line.\n */\nexport class ViewLineToken {\n\t_viewLineTokenBrand: void;\n\n\tpublic startIndex:number;\n\tpublic type:string;\n\n\tconstructor(startIndex:number, type:string) {\n\t\tthis.startIndex = startIndex|0;// @perf\n\t\tthis.type = type.replace(/[^a-z0-9\\-]/gi, ' ');\n\t}\n\n\tpublic equals(other:ViewLineToken): boolean {\n\t\treturn (\n\t\t\tthis.startIndex === other.startIndex\n\t\t\t&& this.type === other.type\n\t\t);\n\t}\n\n\tpublic static findIndexInSegmentsArray(arr:ViewLineToken[], desiredIndex: number): number {\n\t\treturn Arrays.findIndexInSegmentsArray(arr, desiredIndex);\n\t}\n\n\tpublic static equalsArray(a:ViewLineToken[], b:ViewLineToken[]): boolean {\n\t\tlet aLen = a.length;\n\t\tlet bLen = b.length;\n\t\tif (aLen !== bLen) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < aLen; i++) {\n\t\t\tif (!a[i].equals(b[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class ViewLineTokens {\n\t_viewLineTokensBrand: void;\n\n\tprivate _lineTokens:ViewLineToken[];\n\tprivate _fauxIndentLength:number;\n\tprivate _textLength:number;\n\n\tconstructor(lineTokens:ViewLineToken[], fauxIndentLength:number, textLength:number) {\n\t\tthis._lineTokens = lineTokens;\n\t\tthis._fauxIndentLength = fauxIndentLength|0;\n\t\tthis._textLength = textLength|0;\n\t}\n\n\tpublic getTokens(): ViewLineToken[] {\n\t\treturn this._lineTokens;\n\t}\n\n\tpublic getFauxIndentLength(): number {\n\t\treturn this._fauxIndentLength;\n\t}\n\n\tpublic getTextLength(): number {\n\t\treturn this._textLength;\n\t}\n\n\tpublic equals(other:ViewLineTokens): boolean {\n\t\treturn (\n\t\t\tthis._fauxIndentLength === other._fauxIndentLength\n\t\t\t&& this._textLength === other._textLength\n\t\t\t&& ViewLineToken.equalsArray(this._lineTokens, other._lineTokens)\n\t\t);\n\t}\n\n\tpublic findIndexOfOffset(offset:number): number {\n\t\treturn ViewLineToken.findIndexInSegmentsArray(this._lineTokens, offset);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {ITextModel} from 'vs/editor/common/editorCommon';\n\nexport class IndentRange {\n\t_indentRangeBrand: void;\n\tstartLineNumber:number;\n\tendLineNumber:number;\n\tindent:number;\n\n\tconstructor(startLineNumber:number, endLineNumber:number, indent:number) {\n\t\tthis.startLineNumber = startLineNumber;\n\t\tthis.endLineNumber = endLineNumber;\n\t\tthis.indent = indent;\n\t}\n\n\tpublic static deepCloneArr(indentRanges:IndentRange[]): IndentRange[] {\n\t\tlet result:IndentRange[] = [];\n\t\tfor (let i = 0, len = indentRanges.length; i < len; i++) {\n\t\t\tlet r = indentRanges[i];\n\t\t\tresult[i] = new IndentRange(r.startLineNumber, r.endLineNumber, r.indent);\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport function computeRanges(model: ITextModel, minimumRangeSize: number = 1): IndentRange[] {\n\n\tlet result: IndentRange[] = [];\n\n\tlet previousRegions: { indent: number, line: number }[] = [];\n\tpreviousRegions.push({ indent: -1, line: model.getLineCount() + 1 }); // sentinel, to make sure there's at least one entry\n\n\tfor (let line = model.getLineCount(); line > 0; line--) {\n\t\tlet indent = model.getIndentLevel(line);\n\t\tif (indent === -1) {\n\t\t\tcontinue; // only whitespace\n\t\t}\n\n\t\tlet previous = previousRegions[previousRegions.length - 1];\n\n\t\tif (previous.indent > indent) {\n\t\t\t// discard all regions with larger indent\n\t\t\tdo {\n\t\t\t\tpreviousRegions.pop();\n\t\t\t\tprevious = previousRegions[previousRegions.length - 1];\n\t\t\t} while (previous.indent > indent);\n\n\t\t\t// new folding range\n\t\t\tlet endLineNumber = previous.line - 1;\n\t\t\tif (endLineNumber - line >= minimumRangeSize) {\n\t\t\t\tresult.push(new IndentRange(line, endLineNumber, indent));\n\t\t\t}\n\t\t}\n\t\tif (previous.indent === indent) {\n\t\t\tprevious.line = line;\n\t\t} else { // previous.indent < indent\n\t\t\t// new region with a bigger indent\n\t\t\tpreviousRegions.push({ indent, line });\n\t\t}\n\t}\n\n\treturn result.reverse();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nconst __space = ' '.charCodeAt(0);\nconst __tab = '\\t'.charCodeAt(0);\n\n/**\n * Compute the diff in spaces between two line's indentation.\n */\nfunction spacesDiff(a:string, aLength:number, b:string, bLength:number): number {\n\n\t// This can go both ways (e.g.):\n\t//  - a: \"\\t\"\n\t//  - b: \"\\t    \"\n\t//  => This should count 1 tab and 4 spaces\n\n\tlet i:number;\n\n\tfor (i = 0; i < aLength && i < bLength; i++) {\n\t\tlet aCharCode = a.charCodeAt(i);\n\t\tlet bCharCode = b.charCodeAt(i);\n\n\t\tif (aCharCode !== bCharCode) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tlet aSpacesCnt = 0, aTabsCount = 0;\n\tfor (let j = i; j < aLength; j++) {\n\t\tlet aCharCode = a.charCodeAt(j);\n\t\tif (aCharCode === __space) {\n\t\t\taSpacesCnt++;\n\t\t} else {\n\t\t\taTabsCount++;\n\t\t}\n\t}\n\n\tlet bSpacesCnt = 0, bTabsCount = 0;\n\tfor (let j = i; j < bLength; j++) {\n\t\tlet bCharCode = b.charCodeAt(j);\n\t\tif (bCharCode === __space) {\n\t\t\tbSpacesCnt++;\n\t\t} else {\n\t\t\tbTabsCount++;\n\t\t}\n\t}\n\n\tif (aSpacesCnt > 0 && aTabsCount > 0) {\n\t\treturn 0;\n\t}\n\tif (bSpacesCnt > 0 && bTabsCount > 0) {\n\t\treturn 0;\n\t}\n\n\tlet tabsDiff = Math.abs(aTabsCount - bTabsCount);\n\tlet spacesDiff = Math.abs(aSpacesCnt - bSpacesCnt);\n\n\tif (tabsDiff === 0) {\n\t\treturn spacesDiff;\n\t}\n\tif (spacesDiff % tabsDiff === 0) {\n\t\treturn spacesDiff / tabsDiff;\n\t}\n\treturn 0;\n}\n\n/**\n * Result for a guessIndentation\n */\nexport interface IGuessedIndentation {\n\t/**\n\t * If indentation is based on spaces (`insertSpaces` = true), then what is the number of spaces that make an indent?\n\t */\n\ttabSize: number;\n\t/**\n\t * Is indentation based on spaces?\n\t */\n\tinsertSpaces: boolean;\n}\n\nexport function guessIndentation(lines:string[], defaultTabSize:number, defaultInsertSpaces:boolean): IGuessedIndentation {\n\tlet linesIndentedWithTabsCount = 0;\t\t\t\t// number of lines that contain at least one tab in indentation\n\tlet linesIndentedWithSpacesCount = 0;\t\t\t// number of lines that contain only spaces in indentation\n\n\tlet previousLineText = '';\t\t\t\t\t\t// content of latest line that contained non-whitespace chars\n\tlet previousLineIndentation = 0;\t\t\t\t// index at which latest line contained the first non-whitespace char\n\n\tconst ALLOWED_TAB_SIZE_GUESSES = [2, 4, 6, 8];\t// limit guesses for `tabSize` to 2, 4, 6 or 8.\n\tconst MAX_ALLOWED_TAB_SIZE_GUESS = 8;\t\t\t// max(2,4,6,8) = 8\n\n\tlet spacesDiffCount = [0,0,0,0,0,0,0,0,0];\t\t// `tabSize` scores\n\n\tfor (let i = 0, len = lines.length; i < len; i++) {\n\t\tlet currentLineText = lines[i];\n\n\t\tlet currentLineHasContent = false;\t\t\t// does `currentLineText` contain non-whitespace chars\n\t\tlet currentLineIndentation = 0;\t\t\t\t// index at which `currentLineText` contains the first non-whitespace char\n\t\tlet currentLineSpacesCount = 0;\t\t\t\t// count of spaces found in `currentLineText` indentation\n\t\tlet currentLineTabsCount = 0;\t\t\t\t// count of tabs found in `currentLineText` indentation\n\t\tfor (let j = 0, lenJ = currentLineText.length; j < lenJ; j++) {\n\t\t\tlet charCode = currentLineText.charCodeAt(j);\n\n\t\t\tif (charCode === __tab) {\n\t\t\t\tcurrentLineTabsCount++;\n\t\t\t} else if (charCode === __space) {\n\t\t\t\tcurrentLineSpacesCount++;\n\t\t\t} else {\n\t\t\t\t// Hit non whitespace character on this line\n\t\t\t\tcurrentLineHasContent = true;\n\t\t\t\tcurrentLineIndentation = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Ignore empty or only whitespace lines\n\t\tif (!currentLineHasContent) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (currentLineTabsCount > 0) {\n\t\t\tlinesIndentedWithTabsCount++;\n\t\t} else if (currentLineSpacesCount > 1) {\n\t\t\tlinesIndentedWithSpacesCount++;\n\t\t}\n\n\t\tlet currentSpacesDiff = spacesDiff(previousLineText, previousLineIndentation, currentLineText, currentLineIndentation);\n\t\tif (currentSpacesDiff <= MAX_ALLOWED_TAB_SIZE_GUESS) {\n\t\t\tspacesDiffCount[currentSpacesDiff]++;\n\t\t}\n\n\t\tpreviousLineText = currentLineText;\n\t\tpreviousLineIndentation = currentLineIndentation;\n\t}\n\n\t// Take into account the last line as well\n\tlet deltaSpacesCount = spacesDiff(previousLineText, previousLineIndentation, '', 0);\n\tif (deltaSpacesCount <= MAX_ALLOWED_TAB_SIZE_GUESS) {\n\t\tspacesDiffCount[deltaSpacesCount]++;\n\t}\n\n\tlet insertSpaces = defaultInsertSpaces;\n\tif (linesIndentedWithTabsCount !== linesIndentedWithSpacesCount) {\n\t\tinsertSpaces = (linesIndentedWithTabsCount < linesIndentedWithSpacesCount);\n\t}\n\n\tlet tabSize = defaultTabSize;\n\tlet tabSizeScore = (insertSpaces ? 0 : 0.1 * lines.length);\n\n\t// console.log(\"score threshold: \" + tabSizeScore);\n\n\tALLOWED_TAB_SIZE_GUESSES.forEach((possibleTabSize) => {\n\t\tlet possibleTabSizeScore = spacesDiffCount[possibleTabSize];\n\t\tif (possibleTabSizeScore > tabSizeScore) {\n\t\t\ttabSizeScore = possibleTabSizeScore;\n\t\t\ttabSize = possibleTabSize;\n\t\t}\n\t});\n\n\n\t// console.log('--------------------------');\n\t// console.log('linesIndentedWithTabsCount: ' + linesIndentedWithTabsCount + ', linesIndentedWithSpacesCount: ' + linesIndentedWithSpacesCount);\n\t// console.log('spacesDiffCount: ' + spacesDiffCount);\n\t// console.log('tabSize: ' + tabSize + ', tabSizeScore: ' + tabSizeScore);\n\n\treturn {\n\t\tinsertSpaces: insertSpaces,\n\t\ttabSize: tabSize\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Arrays} from 'vs/editor/common/core/arrays';\n\n/**\n * A token on a line.\n */\nexport class LineToken {\n\tpublic _lineTokenBrand: void;\n\n\tpublic startIndex:number;\n\tpublic type:string;\n\n\tconstructor(startIndex:number, type:string) {\n\t\tthis.startIndex = startIndex|0;// @perf\n\t\tthis.type = type;\n\t}\n\n\tpublic equals(other:LineToken): boolean {\n\t\treturn (\n\t\t\tthis.startIndex === other.startIndex\n\t\t\t&& this.type === other.type\n\t\t);\n\t}\n\n\tpublic static findIndexInSegmentsArray(arr:LineToken[], desiredIndex: number): number {\n\t\treturn Arrays.findIndexInSegmentsArray(arr, desiredIndex);\n\t}\n\n\tpublic static equalsArray(a:LineToken[], b:LineToken[]): boolean {\n\t\tlet aLen = a.length;\n\t\tlet bLen = b.length;\n\t\tif (aLen !== bLen) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < aLen; i++) {\n\t\t\tif (!a[i].equals(b[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as editorCommon from 'vs/editor/common/editorCommon';\n\nexport class TokenIterator implements editorCommon.ITokenIterator {\n\n\tprivate _model:editorCommon.ITokenizedModel;\n\tprivate _currentLineNumber:number;\n\tprivate _currentTokenIndex:number;\n\tprivate _currentLineTokens:editorCommon.ILineTokens;\n\tprivate _next:editorCommon.ITokenInfo;\n\tprivate _prev:editorCommon.ITokenInfo;\n\n\tconstructor(model:editorCommon.ITokenizedModel, position:editorCommon.IPosition) {\n\t\tthis._model = model;\n\t\tthis._currentLineNumber = position.lineNumber;\n\t\tthis._currentTokenIndex = 0;\n\t\tthis._readLineTokens(this._currentLineNumber);\n\t\tthis._next = null;\n\t\tthis._prev = null;\n\n\t\t// start with a position to next/prev run\n\t\tvar columnIndex = position.column - 1, tokenEndIndex = Number.MAX_VALUE;\n\n\t\tfor (var i = this._currentLineTokens.getTokenCount() - 1; i >= 0; i--) {\n\t\t\tlet tokenStartIndex = this._currentLineTokens.getTokenStartIndex(i);\n\n\t\t\tif (tokenStartIndex <= columnIndex && columnIndex <= tokenEndIndex) {\n\n\t\t\t\tthis._currentTokenIndex = i;\n\t\t\t\tthis._next = this._current();\n\t\t\t\tthis._prev = this._current();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttokenEndIndex = tokenStartIndex;\n\t\t}\n\t}\n\n\tprivate _readLineTokens(lineNumber:number): void {\n\t\tthis._currentLineTokens = this._model.getLineTokens(lineNumber, false);\n\t}\n\n\tprivate _advanceNext() {\n\t\tthis._prev = this._next;\n\t\tthis._next = null;\n\t\tif (this._currentTokenIndex + 1 < this._currentLineTokens.getTokenCount()) {\n\t\t\t// There are still tokens on current line\n\t\t\tthis._currentTokenIndex++;\n\t\t\tthis._next = this._current();\n\n\t\t} else {\n\t\t\t// find the next line with tokens\n\t\t\twhile (this._currentLineNumber + 1 <= this._model.getLineCount()) {\n\t\t\t\tthis._currentLineNumber++;\n\t\t\t\tthis._readLineTokens(this._currentLineNumber);\n\t\t\t\tif (this._currentLineTokens.getTokenCount() > 0) {\n\t\t\t\t\tthis._currentTokenIndex = 0;\n\t\t\t\t\tthis._next = this._current();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._next === null) {\n\t\t\t\t// prepare of a previous run\n\t\t\t\tthis._readLineTokens(this._currentLineNumber);\n\t\t\t\tthis._currentTokenIndex = this._currentLineTokens.getTokenCount();\n\t\t\t\tthis._advancePrev();\n\t\t\t\tthis._next = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _advancePrev() {\n\t\tthis._next = this._prev;\n\t\tthis._prev = null;\n\t\tif (this._currentTokenIndex > 0) {\n\t\t\t// There are still tokens on current line\n\t\t\tthis._currentTokenIndex--;\n\t\t\tthis._prev = this._current();\n\n\t\t} else {\n\t\t\t// find previous line with tokens\n\t\t\twhile (this._currentLineNumber > 1) {\n\t\t\t\tthis._currentLineNumber--;\n\t\t\t\tthis._readLineTokens(this._currentLineNumber);\n\t\t\t\tif (this._currentLineTokens.getTokenCount() > 0) {\n\t\t\t\t\tthis._currentTokenIndex = this._currentLineTokens.getTokenCount() - 1;\n\t\t\t\t\tthis._prev = this._current();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _current(): editorCommon.ITokenInfo {\n\t\tlet startIndex = this._currentLineTokens.getTokenStartIndex(this._currentTokenIndex);\n\t\tlet type = this._currentLineTokens.getTokenType(this._currentTokenIndex);\n\t\tlet endIndex = this._currentLineTokens.getTokenEndIndex(this._currentTokenIndex, this._model.getLineContent(this._currentLineNumber).length);\n\n\t\treturn {\n\t\t\ttoken: {\n\t\t\t\tstartIndex: startIndex,\n\t\t\t\ttype: type\n\t\t\t},\n\t\t\tlineNumber: this._currentLineNumber,\n\t\t\tstartColumn: startIndex + 1,\n\t\t\tendColumn: endIndex + 1\n\t\t};\n\t}\n\n\tpublic hasNext(): boolean {\n\t\treturn this._next !== null;\n\t}\n\n\tpublic next(): editorCommon.ITokenInfo {\n\t\tvar result = this._next;\n\t\tthis._advanceNext();\n\t\treturn result;\n\t}\n\n\tpublic hasPrev(): boolean {\n\t\treturn this._prev !== null;\n\t}\n\n\tpublic prev(): editorCommon.ITokenInfo {\n\t\tvar result = this._prev;\n\t\tthis._advancePrev();\n\t\treturn result;\n\t}\n\n\tpublic _invalidate() {\n\t\t// replace all public functions with errors\n\t\tvar errorFn = function(): any {\n\t\t\tthrow new Error('iteration isn\\'t valid anymore');\n\t\t};\n\t\tthis.hasNext = errorFn;\n\t\tthis.next = errorFn;\n\t\tthis.hasPrev = errorFn;\n\t\tthis.prev = errorFn;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IWordAtPosition} from 'vs/editor/common/editorCommon';\n\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nexport function createWordRegExp(allowInWords:string = ''): RegExp {\n\tvar usualSeparators = USUAL_WORD_SEPARATORS;\n\tvar source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n\tfor (var i = 0; i < usualSeparators.length; i++) {\n\t\tif (allowInWords.indexOf(usualSeparators[i]) >= 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tsource += '\\\\' + usualSeparators[i];\n\t}\n\tsource += '\\\\s]+)';\n\treturn new RegExp(source, 'g');\n}\n\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\n\nexport function ensureValidWordDefinition(wordDefinition?:RegExp): RegExp {\n\tvar result: RegExp = DEFAULT_WORD_REGEXP;\n\n\tif (wordDefinition && (wordDefinition instanceof RegExp)) {\n\t\tif (!wordDefinition.global) {\n\t\t\tvar flags = 'g';\n\t\t\tif (wordDefinition.ignoreCase) {\n\t\t\t\tflags += 'i';\n\t\t\t}\n\t\t\tif (wordDefinition.multiline) {\n\t\t\t\tflags += 'm';\n\t\t\t}\n\t\t\tresult = new RegExp(wordDefinition.source, flags);\n\t\t} else {\n\t\t\tresult = wordDefinition;\n\t\t}\n\t}\n\n\tresult.lastIndex = 0;\n\n\treturn result;\n}\n\nexport function getWordAtText(column:number, wordDefinition:RegExp, text:string, textOffset:number): IWordAtPosition {\n\n\t// console.log('_getWordAtText: ', column, text, textOffset);\n\n\tvar words = text.match(wordDefinition),\n\t\tk:number,\n\t\tstartWord:number,\n\t\tendWord:number,\n\t\tstartColumn:number,\n\t\tendColumn:number,\n\t\tword:string;\n\n\tif (words) {\n\t\tfor (k = 0; k < words.length; k++) {\n\t\t\tword = words[k].trim();\n\t\t\tif (word.length > 0) {\n\t\t\t\tstartWord = text.indexOf(word, endWord);\n\t\t\t\tendWord = startWord + word.length;\n\n\t\t\t\tstartColumn = textOffset + startWord + 1;\n\t\t\t\tendColumn = textOffset + endWord + 1;\n\n\t\t\t\tif (startColumn <= column && column <= endColumn) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tword: word,\n\t\t\t\t\t\tstartColumn: startColumn,\n\t\t\t\t\t\tendColumn: endColumn\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IMode, IState, IStream, ITokenizationResult} from 'vs/editor/common/modes';\n\nexport class AbstractState implements IState {\n\n\tprivate mode:IMode;\n\tprivate stateData:IState;\n\n\tconstructor(mode:IMode, stateData:IState = null) {\n\t\tthis.mode = mode;\n\t\tthis.stateData = stateData;\n\t}\n\n\tpublic getMode():IMode {\n\t\treturn this.mode;\n\t}\n\n\tpublic clone():IState {\n\t\tvar result:AbstractState = this.makeClone();\n\t\tresult.initializeFrom(this);\n\t\treturn result;\n\t}\n\n\tpublic makeClone():AbstractState {\n\t\tthrow new Error('Abstract Method');\n\t}\n\n\tpublic initializeFrom(other:AbstractState): void {\n\t\tthis.stateData = other.stateData !== null ? other.stateData.clone() : null;\n\t}\n\n\tpublic getStateData(): IState {\n\t\treturn this.stateData;\n\t}\n\n\tpublic setStateData(state:IState):void {\n\t\tthis.stateData = state;\n\t}\n\n\tpublic equals(other:IState):boolean {\n\t\tif (other === null || this.mode !== other.getMode()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (other instanceof AbstractState) {\n\t\t\treturn AbstractState.safeEquals(this.stateData, other.stateData);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic tokenize(stream:IStream):ITokenizationResult {\n\t\tthrow new Error('Abstract Method');\n\t}\n\n\tpublic static safeEquals(a: IState, b: IState): boolean {\n\t\tif (a === null && b === null) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a === null || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.equals(b);\n\t}\n\n\tpublic static safeClone(state: IState): IState {\n\t\tif (state) {\n\t\t\treturn state.clone();\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {match as matchGlobPattern} from 'vs/base/common/glob'; // TODO@Alex\n\nexport interface LanguageFilter {\n\tlanguage?: string;\n\tscheme?: string;\n\tpattern?: string;\n}\n\nexport type LanguageSelector = string | LanguageFilter | (string | LanguageFilter)[];\n\nexport default function matches(selection: LanguageSelector, uri: URI, language: string): boolean {\n\treturn score(selection, uri, language) > 0;\n}\n\nexport function score(selector: LanguageSelector, uri: URI, language: string): number {\n\n\tif (Array.isArray(selector)) {\n\t\t// for each\n\t\tlet values = (<LanguageSelector[]>selector).map(item => score(item, uri, language));\n\t\treturn Math.max(...values);\n\n\t} else if (typeof selector === 'string') {\n\t\t// compare language id\n\t\tif (selector === language) {\n\t\t\treturn 10;\n\t\t} else if (selector === '*') {\n\t\t\treturn 5;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t} else if (selector) {\n\t\t// all must match but only highest score counts\n\t\tconst filter = <LanguageFilter>selector;\n\n\t\tlet valueLanguage = 0;\n\t\tlet valueScheme = 0;\n\t\tlet valuePattern = 0;\n\n\t\t// language id\n\t\tif (filter.language) {\n\t\t\tif (filter.language === language) {\n\t\t\t\tvalueLanguage = 10;\n\t\t\t} else if (filter.language === '*') {\n\t\t\t\tvalueLanguage = 5;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\t// scheme\n\t\tif (filter.scheme) {\n\t\t\tif (filter.scheme === uri.scheme) {\n\t\t\t\tvalueScheme = 10;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\t// match fsPath with pattern\n\t\tif (filter.pattern) {\n\t\t\tif (filter.pattern === uri.fsPath) {\n\t\t\t\tvaluePattern = 10;\n\t\t\t} else if (matchGlobPattern(filter.pattern, uri.fsPath)) {\n\t\t\t\tvaluePattern = 5;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\treturn Math.max(valueLanguage, valueScheme, valuePattern);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IStream} from 'vs/editor/common/modes';\n\nexport class LineStream implements IStream {\n\n\tstatic STRING_TO_ARRAY_CACHE:{ [key:string]:boolean[]; } = {};\n\n\t/*protected*/ _source:string;\n\tprivate sourceLength:number;\n\t/*protected*/ _pos:number;\n\tprivate whitespace:string;\n\tprivate whitespaceArr:boolean[];\n\tprivate separators:string;\n\tprivate separatorsArr:boolean[];\n\tprivate tokenStart:number;\n\tprivate tokenEnd:number;\n\n\tconstructor(source:string) {\n\t\tthis._source = source;\n\t\tthis.sourceLength = source.length;\n\t\tthis._pos = 0;\n\t\tthis.whitespace = '\\t \\u00a0';\n\t\tthis.whitespaceArr = this.stringToArray(this.whitespace);\n\t\tthis.separators = '';\n\t\tthis.separatorsArr = this.stringToArray(this.separators);\n\t\tthis.tokenStart = -1;\n\t\tthis.tokenEnd = -1;\n\t}\n\n\tprivate stringToArray(str:string):boolean[] {\n\t\tif (!LineStream.STRING_TO_ARRAY_CACHE.hasOwnProperty(str)) {\n\t\t\tLineStream.STRING_TO_ARRAY_CACHE[str] = this.actualStringToArray(str);\n\t\t}\n\t\treturn LineStream.STRING_TO_ARRAY_CACHE[str];\n\t}\n\n\tprivate actualStringToArray(str:string):boolean[] {\n\t\tlet maxCharCode = 0;\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tmaxCharCode = Math.max(maxCharCode, str.charCodeAt(i));\n\t\t}\n\t\tlet r:boolean[] = [];\n\t\tfor (let i = 0; i <= maxCharCode; i++) {\n\t\t\tr[i] = false;\n\t\t}\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tr[str.charCodeAt(i)] = true;\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic pos():number {\n\t\treturn this._pos;\n\t}\n\n\tpublic eos() {\n\t\treturn this._pos >= this.sourceLength;\n\t}\n\n\tpublic peek():string {\n\t\t// Check EOS\n\t\tif (this._pos >= this.sourceLength) {\n\t\t\tthrow new Error('Stream is at the end');\n\t\t}\n\t\treturn this._source[this._pos];\n\t}\n\n\tpublic next():string {\n\t\t// Check EOS\n\t\tif (this._pos >= this.sourceLength) {\n\t\t\tthrow new Error('Stream is at the end');\n\t\t}\n\n\t\t// Reset peeked token\n\t\tthis.tokenStart = -1;\n\t\tthis.tokenEnd = -1;\n\n\t\treturn this._source[this._pos++];\n\t}\n\n\tpublic next2(): void {\n\t\t// Check EOS\n\t\tif (this._pos >= this.sourceLength) {\n\t\t\tthrow new Error('Stream is at the end');\n\t\t}\n\n\t\t// Reset peeked token\n\t\tthis.tokenStart = -1;\n\t\tthis.tokenEnd = -1;\n\n\t\tthis._pos++;\n\t}\n\n\tpublic advance(n: number): string {\n\t\tif (n === 0) {\n\t\t\treturn '';\n\t\t}\n\t\tvar oldPos = this._pos;\n\t\tthis._pos += n;\n\t\t// Reset peeked token\n\t\tthis.tokenStart = -1;\n\t\tthis.tokenEnd = -1;\n\t\treturn this._source.substring(oldPos, this._pos);\n\t}\n\n\tprivate _advance2(n: number): number {\n\t\tif (n === 0) {\n\t\t\treturn n;\n\t\t}\n\t\tthis._pos += n;\n\t\t// Reset peeked token\n\t\tthis.tokenStart = -1;\n\t\tthis.tokenEnd = -1;\n\t\treturn n;\n\t}\n\n\tpublic advanceToEOS():string {\n\t\tvar oldPos = this._pos;\n\t\tthis._pos = this.sourceLength;\n\t\tthis.resetPeekedToken();\n\t\treturn this._source.substring(oldPos, this._pos);\n\t}\n\n\tpublic goBack(n:number) {\n\t\tthis._pos -= n;\n\t\tthis.resetPeekedToken();\n\t}\n\n\tprivate createPeeker(condition:any):()=>number {\n\t\tif (condition instanceof RegExp) {\n\t\t\treturn () => {\n\t\t\t\tvar result = condition.exec(this._source.substr(this._pos));\n\t\t\t\tif (result === null) {\n\t\t\t\t\treturn 0;\n\t\t\t\t} else if (result.index !== 0) {\n\t\t\t\t\tthrow new Error('Regular expression must begin with the character \"^\"');\n\t\t\t\t}\n\t\t\t\treturn result[0].length;\n\t\t\t};\n\t\t} else if ((condition instanceof String || (typeof condition) === 'string') && condition) {\n\t\t\treturn () => {\n\t\t\t\tvar len = (<String> condition).length, match = this._pos + len <= this.sourceLength;\n\t\t\t\tfor (var i = 0; match && i < len; i++) {\n\t\t\t\t\tmatch = this._source.charCodeAt(this._pos + i) === (<String> condition).charCodeAt(i);\n\t\t\t\t}\n\t\t\t\treturn match ? len : 0;\n\t\t\t};\n\t\t}\n\t\tthrow new Error('Condition must be either a regular expression, function or a non-empty string');\n\t}\n\n\t// --- BEGIN `_advanceIfStringCaseInsensitive`\n\tprivate _advanceIfStringCaseInsensitive(condition:string): number {\n\t\tvar oldPos = this._pos,\n\t\t\tsource = this._source,\n\t\t\tlen = condition.length,\n\t\t\ti:number;\n\n\t\tif (len < 1 || oldPos + len > this.sourceLength) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (source.charAt(oldPos + i).toLowerCase() !== condition.charAt(i).toLowerCase()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\treturn len;\n\t}\n\tpublic advanceIfStringCaseInsensitive(condition: string): string {\n\t\treturn this.advance(this._advanceIfStringCaseInsensitive(condition));\n\t}\n\tpublic advanceIfStringCaseInsensitive2(condition: string): number {\n\t\treturn this._advance2(this._advanceIfStringCaseInsensitive(condition));\n\t}\n\t// --- END\n\n\t// --- BEGIN `advanceIfString`\n\tprivate _advanceIfString(condition: string): number {\n\t\tvar oldPos = this._pos,\n\t\t\tsource = this._source,\n\t\t\tlen = condition.length,\n\t\t\ti:number;\n\n\t\tif (len < 1 || oldPos + len > this.sourceLength) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (source.charCodeAt(oldPos + i) !== condition.charCodeAt(i)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\treturn len;\n\t}\n\tpublic advanceIfString(condition:string): string {\n\t\treturn this.advance(this._advanceIfString(condition));\n\t}\n\tpublic advanceIfString2(condition: string): number {\n\t\treturn this._advance2(this._advanceIfString(condition));\n\t}\n\t// --- END\n\n\t// --- BEGIN `advanceIfString`\n\tprivate _advanceIfCharCode(charCode:number): number {\n\t\tif (this._pos < this.sourceLength && this._source.charCodeAt(this._pos) === charCode) {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t}\n\tpublic advanceIfCharCode(charCode: number): string {\n\t\treturn this.advance(this._advanceIfCharCode(charCode));\n\t}\n\tpublic advanceIfCharCode2(charCode: number): number {\n\t\treturn this._advance2(this._advanceIfCharCode(charCode));\n\t}\n\t// --- END\n\n\t// --- BEGIN `advanceIfRegExp`\n\tprivate _advanceIfRegExp(condition:RegExp): number {\n\t\tif (this._pos >= this.sourceLength) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (!condition.test(this._source.substr(this._pos))) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn RegExp.lastMatch.length;\n\t}\n\tpublic advanceIfRegExp(condition: RegExp): string {\n\t\treturn this.advance(this._advanceIfRegExp(condition));\n\t}\n\tpublic advanceIfRegExp2(condition: RegExp): number {\n\t\treturn this._advance2(this._advanceIfRegExp(condition));\n\t}\n\t// --- END\n\n\tprivate advanceLoop(condition:any, isWhile:boolean, including:boolean):string {\n\t\tif (this.eos()) {\n\t\t\treturn '';\n\t\t}\n\t\tvar peeker = this.createPeeker(condition);\n\t\tvar oldPos = this._pos;\n\t\tvar n = 0;\n\t\tvar f = null;\n\t\tif (isWhile) {\n\t\t\tf = (n) => {\n\t\t\t\treturn n > 0;\n\t\t\t};\n\t\t} else {\n\t\t\tf = (n) => {\n\t\t\t\treturn n === 0;\n\t\t\t};\n\t\t}\n\t\twhile (!this.eos() && f(n = peeker())) {\n\t\t\tif (n > 0) {\n\t\t\t\tthis.advance(n);\n\t\t\t} else {\n\t\t\t\tthis.next();\n\t\t\t}\n\t\t}\n\t\tif (including && !this.eos()) {\n\t\t\tthis.advance(n);\n\t\t}\n\t\treturn this._source.substring(oldPos, this._pos);\n\t}\n\n\tpublic advanceWhile(condition:any):string {\n\t\treturn this.advanceLoop(condition, true, false);\n\t}\n\n\tpublic advanceUntil(condition:any, including:boolean):string {\n\t\treturn this.advanceLoop(condition, false, including);\n\t}\n\n\t// --- BEGIN `advanceUntilString`\n\tprivate _advanceUntilString(condition: string, including: boolean): number {\n\t\tif (this.eos() || condition.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar oldPos = this._pos;\n\t\tvar index = this._source.indexOf(condition, oldPos);\n\n\t\tif (index === -1) {\n\t\t\t// String was not found => advanced to `eos`\n\t\t\treturn (this.sourceLength - oldPos);\n\t\t}\n\n\t\tif (including) {\n\t\t\t// String was found => advance to include `condition`\n\t\t\treturn (index + condition.length - oldPos);\n\t\t}\n\n\t\t// String was found => advance right before `condition`\n\t\treturn (index - oldPos);\n\t}\n\tpublic advanceUntilString(condition: string, including: boolean): string {\n\t\treturn this.advance(this._advanceUntilString(condition, including));\n\t}\n\tpublic advanceUntilString2(condition: string, including: boolean): number {\n\t\treturn this._advance2(this._advanceUntilString(condition, including));\n\t}\n\t// --- END\n\n\tprivate resetPeekedToken() {\n\t\tthis.tokenStart = -1;\n\t\tthis.tokenEnd = -1;\n\t}\n\n\tpublic setTokenRules(separators:string, whitespace:string):void {\n\t\tif (this.separators !== separators || this.whitespace !== whitespace) {\n\t\t\tthis.separators = separators;\n\t\t\tthis.separatorsArr = this.stringToArray(this.separators);\n\t\t\tthis.whitespace = whitespace;\n\t\t\tthis.whitespaceArr = this.stringToArray(this.whitespace);\n\t\t\tthis.resetPeekedToken();\n\t\t}\n\t}\n\n\t// --- tokens\n\n\tpublic peekToken():string {\n\t\tif (this.tokenStart !== -1) {\n\t\t\treturn this._source.substring(this.tokenStart, this.tokenEnd);\n\t\t}\n\n\t\tvar\tsource = this._source,\n\t\t\tsourceLength = this.sourceLength,\n\t\t\twhitespaceArr = this.whitespaceArr,\n\t\t\tseparatorsArr = this.separatorsArr,\n\t\t\ttokenStart = this._pos;\n\n\t\t// Check EOS\n\t\tif (tokenStart >= sourceLength) {\n\t\t\tthrow new Error('Stream is at the end');\n\t\t}\n\n\t\t// Skip whitespace\n\t\twhile (whitespaceArr[source.charCodeAt(tokenStart)] && tokenStart < sourceLength) {\n\t\t\ttokenStart++;\n\t\t}\n\n\t\tvar tokenEnd = tokenStart;\n\t\t// If a separator is hit, it is a token\n\t\tif (separatorsArr[source.charCodeAt(tokenEnd)] && tokenEnd < sourceLength) {\n\t\t\ttokenEnd++;\n\t\t} else {\n\t\t\t// Advance until a separator or a whitespace is hit\n\t\t\twhile (!separatorsArr[source.charCodeAt(tokenEnd)] && !whitespaceArr[source.charCodeAt(tokenEnd)] && tokenEnd < sourceLength) {\n\t\t\t\ttokenEnd++;\n\t\t\t}\n\t\t}\n\n\t\t// Cache peeked token\n\t\tthis.tokenStart = tokenStart;\n\t\tthis.tokenEnd = tokenEnd;\n\n\t\treturn source.substring(tokenStart, tokenEnd);\n\t}\n\n\tpublic nextToken():string {\n\t\t// Check EOS\n\t\tif (this._pos >= this.sourceLength) {\n\t\t\tthrow new Error('Stream is at the end');\n\t\t}\n\n\t\t// Peek token if necessary\n\t\tvar result:string;\n\t\tif (this.tokenStart === -1)  {\n\t\t\tresult = this.peekToken();\n\t\t} else {\n\t\t\tresult = this._source.substring(this.tokenStart, this.tokenEnd);\n\t\t}\n\n\t\t// Advance to tokenEnd\n\t\tthis._pos = this.tokenEnd;\n\n\t\t// Reset peeked token\n\t\tthis.tokenStart = -1;\n\t\tthis.tokenEnd = -1;\n\n\t\treturn result;\n\t}\n\n\t// -- whitespace\n\n\tpublic peekWhitespace():string {\n\t\tvar\tsource = this._source,\n\t\t\tsourceLength = this.sourceLength,\n\t\t\twhitespaceArr = this.whitespaceArr,\n\t\t\tpeek = this._pos;\n\n\t\twhile (whitespaceArr[source.charCodeAt(peek)] && peek < sourceLength) {\n\t\t\tpeek++;\n\t\t}\n\t\treturn source.substring(this._pos, peek);\n\t}\n\n\t// --- BEGIN `advanceIfRegExp`\n\tprivate _skipWhitespace(): number {\n\t\tvar source = this._source,\n\t\t\tsourceLength = this.sourceLength,\n\t\t\twhitespaceArr = this.whitespaceArr,\n\t\t\toldPos = this._pos,\n\t\t\tpeek = this._pos;\n\n\t\twhile (whitespaceArr[source.charCodeAt(peek)] && peek < sourceLength) {\n\t\t\tpeek++;\n\t\t}\n\n\t\treturn (peek - oldPos);\n\t}\n\tpublic skipWhitespace(): string {\n\t\treturn this.advance(this._skipWhitespace());\n\t}\n\tpublic skipWhitespace2(): number {\n\t\treturn this._advance2(this._skipWhitespace());\n\t}\n\t// --- END\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/*\n * This module exports common types and functionality shared between\n * the Monarch compiler that compiles JSON to ILexer, and the Monarch\n * Tokenizer (that highlights at runtime)\n */\n\n/*\n * Type definitions to be used internally to Monarch.\n * Inside monarch we use fully typed definitions and compiled versions of the more abstract JSON descriptions.\n */\n\nexport enum MonarchBracket {\n\tNone = 0,\n\tOpen = 1,\n\tClose = -1\n}\n\nexport interface ILexerMin {\n\tlanguageId: string;\n\tnoThrow: boolean;\n\tignoreCase: boolean;\n\tusesEmbedded: boolean;\n\tdefaultToken: string;\n\tstateNames: Object;\n}\n\nexport interface ILexer extends ILexerMin {\n\tmaxStack: number;\n\tstart: string;\n\tignoreCase: boolean;\n\ttokenPostfix: string;\n\n\ttokenizer: IRule[][];\n\tbrackets: IBracket[];\n}\n\nexport interface IBracket {\n\ttoken: string;\n\topen: string;\n\tclose: string;\n}\n\nexport interface IRule {\n\tregex: RegExp;\n\taction: IAction;\n\tmatchOnlyAtLineStart: boolean;\n\tname: string;\n}\n\nexport interface IAction {\n\t// an action is either a group of actions\n\tgroup?: IAction[];\n\n\t// or a function that returns a fresh action\n\ttest?: (id: string, matches: string[], state: string, eos: boolean) => IAction;\n\n\t// or it is a declarative action with a token value and various other attributes\n\ttoken?: string;\n\ttokenSubst?: boolean;\n\tnext?: string;\n\tnextEmbedded?: string;\n\tbracket?: MonarchBracket;\n\tlog?: string;\n\tswitchTo?: string;\n\tgoBack?: number;\n\ttransform?: (states: string[]) => string[];\n}\n\nexport interface IBranch {\n\tname: string;\n\tvalue: IAction;\n\ttest: (id: string, matches: string[], state: string, eos: boolean) => boolean;\n}\n\n// Small helper functions\n\n/**\n * Is a string null, undefined, or empty?\n */\nexport function empty(s: string): boolean {\n\treturn (s ? false : true);\n}\n\n/**\n * Puts a string to lower case if 'ignoreCase' is set.\n */\nexport function fixCase(lexer: ILexerMin, str: string): string {\n\treturn (lexer.ignoreCase && str ? str.toLowerCase() : str);\n}\n\n/**\n * Ensures there are no bad characters in a CSS token class.\n */\nexport function sanitize(s: string) {\n\treturn s.replace(/[&<>'\"_]/g, '-'); // used on all output token CSS classes\n}\n\n// Logging\n\n/**\n * Logs a message.\n */\nexport function log(lexer: ILexerMin, msg: string) {\n\tconsole.log(`${lexer.languageId}: ${msg}`);\n}\n\n// Throwing errors\n\n/**\n * Throws error. May actually just log the error and continue.\n */\nexport function throwError(lexer: ILexerMin, msg: string) {\n\tthrow new Error(`${lexer.languageId}: ${msg}`);\n}\n\n// Helper functions for rule finding and substitution\n\n/**\n * substituteMatches is used on lexer strings and can substitutes predefined patterns:\n * \t\t$$  => $\n * \t\t$#  => id\n * \t\t$n  => matched entry n\n * \t\t@attr => contents of lexer[attr]\n *\n * See documentation for more info\n */\nexport function substituteMatches(lexer: ILexerMin, str: string, id: string, matches: string[], state: string) {\n\tvar re = /\\$((\\$)|(#)|(\\d\\d?)|[sS](\\d\\d?)|@(\\w+))/g;\n\tvar stateMatches: string[] = null;\n\treturn str.replace(re, function(full, sub?, dollar?, hash?, n?, s?, attr?, ofs?, total?) {\n\t\tif (!empty(dollar)) {\n\t\t\treturn '$'; // $$\n\t\t}\n\t\tif (!empty(hash)) {\n\t\t\treturn fixCase(lexer, id);   // default $#\n\t\t}\n\t\tif (!empty(n) && n < matches.length) {\n\t\t\treturn fixCase(lexer, matches[n]); // $n\n\t\t}\n\t\tif (!empty(attr) && lexer && typeof (lexer[attr]) === 'string') {\n\t\t\treturn lexer[attr]; //@attribute\n\t\t}\n\t\tif (stateMatches === null) { // split state on demand\n\t\t\tstateMatches = state.split('.');\n\t\t\tstateMatches.unshift(state);\n\t\t}\n\t\tif (!empty(s) && s < stateMatches.length) {\n\t\t\treturn fixCase(lexer, stateMatches[s]); //$Sn\n\t\t}\n\t\treturn '';\n\t});\n}\n\n/**\n * Find the tokenizer rules for a specific state (i.e. next action)\n */\nexport function findRules(lexer: ILexer, state: string): IRule[] {\n\twhile (state && state.length > 0) {\n\t\tvar rules = lexer.tokenizer[state];\n\t\tif (rules) {\n\t\t\treturn rules;\n\t\t}\n\n\t\tvar idx = state.lastIndexOf('.');\n\t\tif (idx < 0) {\n\t\t\tstate = null; // no further parent\n\t\t} else {\n\t\t\tstate = state.substr(0, idx);\n\t\t}\n\t}\n\treturn null;\n}\n\n/**\n * Is a certain state defined? In contrast to 'findRules' this works on a ILexerMin.\n * This is used during compilation where we may know the defined states\n * but not yet whether the corresponding rules are correct.\n */\nexport function stateExists(lexer: ILexerMin, state: string): boolean {\n\twhile (state && state.length > 0) {\n\t\tvar exist = lexer.stateNames[state];\n\t\tif (exist) {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar idx = state.lastIndexOf('.');\n\t\tif (idx < 0) {\n\t\t\tstate = null; // no further parent\n\t\t} else {\n\t\t\tstate = state.substr(0, idx);\n\t\t}\n\t}\n\treturn false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/*\n * This module only exports 'compile' which compiles a JSON langauge definition\n * into a typed and checked ILexer definition.\n */\n\nimport * as objects from 'vs/base/common/objects';\nimport * as monarchCommon from 'vs/editor/common/modes/monarch/monarchCommon';\nimport {IMonarchLanguage, IMonarchLanguageBracket} from 'vs/editor/common/modes/monarch/monarchTypes';\n\n/*\n * Type helpers\n *\n * Note: this is just for sanity checks on the JSON description which is\n * helpful for the programmer. No checks are done anymore once the lexer is\n * already 'compiled and checked'.\n *\n */\n\nfunction isArrayOf(elemType: (x: any) => boolean, obj: any): boolean {\n\tif (!obj) {\n\t\treturn false;\n\t}\n\tif (!(Array.isArray(obj))) {\n\t\treturn false;\n\t}\n\tvar idx: any;\n\tfor (idx in obj) {\n\t\tif (obj.hasOwnProperty(idx)) {\n\t\t\tif (!(elemType(obj[idx]))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction bool(prop: any, def?: boolean, onerr?: () => void ): boolean {\n\tif (typeof (prop) === 'boolean') {\n\t\treturn prop;\n\t}\n\tif (onerr && (prop || def === undefined)) {\n\t\tonerr(); // type is wrong, or there is no default\n\t}\n\treturn (def === undefined ? null : def);\n}\n\nfunction string(prop: any, def?: string, onerr?: () => void ): string {\n\tif (typeof (prop) === 'string') {\n\t\treturn prop;\n\t}\n\tif (onerr && (prop || def === undefined)) {\n\t\tonerr(); // type is wrong, or there is no default\n\t}\n\treturn (def === undefined ? null : def);\n\n}\n\n// Lexer helpers\n\n/**\n * Compiles a regular expression string, adding the 'i' flag if 'ignoreCase' is set.\n * Also replaces @\\w+ or sequences with the content of the specified attribute\n */\nfunction compileRegExp(lexer: monarchCommon.ILexerMin, str: string): RegExp {\n\tif (typeof (str) !== 'string') {\n\t\treturn null;\n\t}\n\n\tvar n = 0;\n\twhile (str.indexOf('@') >= 0 && n < 5) { // at most 5 expansions\n\t\tn++;\n\t\tstr = str.replace(/@(\\w+)/g, function(s, attr?) {\n\t\t\tvar sub = '';\n\t\t\tif (typeof (lexer[attr]) === 'string') {\n\t\t\t\tsub = lexer[attr];\n\t\t\t} else if (lexer[attr] && lexer[attr] instanceof RegExp) {\n\t\t\t\tsub = lexer[attr].source;\n\t\t\t} else {\n\t\t\t\tif (lexer[attr] === undefined) {\n\t\t\t\t\tmonarchCommon.throwError(lexer, 'language definition does not contain attribute \\'' + attr + '\\', used at: ' + str);\n\t\t\t\t} else {\n\t\t\t\t\tmonarchCommon.throwError(lexer, 'attribute reference \\'' + attr + '\\' must be a string, used at: ' + str);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (monarchCommon.empty(sub) ? '' : '(?:' + sub + ')');\n\t\t});\n\t}\n\n\treturn new RegExp(str, (lexer.ignoreCase ? 'i' : ''));\n}\n\n/**\n * Compiles guard functions for case matches.\n * This compiles 'cases' attributes into efficient match functions.\n *\n */\nfunction selectScrutinee(id: string, matches: string[], state: string, num: number): string {\n\tif (num < 0) {\n\t\treturn id;\n\t}\n\tif (num < matches.length) {\n\t\treturn matches[num];\n\t}\n\tif (num >= 100) {\n\t\tnum = num - 100;\n\t\tvar parts = state.split('.');\n\t\tparts.unshift(state);\n\t\tif (num < parts.length) {\n\t\t\treturn parts[num];\n\t\t}\n\t}\n\treturn null;\n}\n\nfunction createGuard(lexer: monarchCommon.ILexerMin, ruleName: string, tkey: string, val: monarchCommon.IAction): monarchCommon.IBranch {\n\t// get the scrutinee and pattern\n\tvar scrut = -1; // -1: $!, 0-99: $n, 100+n: $Sn\n\tvar oppat = tkey;\n\tvar matches: string[] = tkey.match(/^\\$(([sS]?)(\\d\\d?)|#)(.*)$/);\n\tif (matches) {\n\t\tif (matches[3]) { // if digits\n\t\t\tscrut = parseInt(matches[3]);\n\t\t\tif (matches[2]) {\n\t\t\t\tscrut = scrut + 100; // if [sS] present\n\t\t\t}\n\t\t}\n\t\toppat = matches[4];\n\t}\n\t// get operator\n\tvar op = '~';\n\tvar pat = oppat;\n\tif (!oppat || oppat.length === 0) {\n\t\top = '!=';\n\t\tpat = '';\n\t}\n\telse if (/^\\w*$/.test(pat)) {  // just a word\n\t\top = '==';\n\t}\n\telse {\n\t\tmatches = oppat.match(/^(@|!@|~|!~|==|!=)(.*)$/);\n\t\tif (matches) {\n\t\t\top = matches[1];\n\t\t\tpat = matches[2];\n\t\t}\n\t}\n\n\t// set the tester function\n\tvar tester: (s: string, id: string, matches: string[], state: string, eos: boolean) => boolean;\n\n\t// special case a regexp that matches just words\n\tif ((op === '~' || op === '!~') && /^(\\w|\\|)*$/.test(pat)) {\n\t\tvar inWords = objects.createKeywordMatcher(pat.split('|'), lexer.ignoreCase);\n\t\ttester = function(s) { return (op === '~' ? inWords(s) : !inWords(s)); };\n\t}\n\telse if (op === '@' || op === '!@') {\n\t\tvar words = lexer[pat];\n\t\tif (!words) {\n\t\t\tmonarchCommon.throwError(lexer, 'the @ match target \\'' + pat + '\\' is not defined, in rule: ' + ruleName);\n\t\t}\n\t\tif (!(isArrayOf(function(elem) { return (typeof (elem) === 'string'); }, words))) {\n\t\t\tmonarchCommon.throwError(lexer, 'the @ match target \\'' + pat + '\\' must be an array of strings, in rule: ' + ruleName);\n\t\t}\n\t\tvar inWords = objects.createKeywordMatcher(words, lexer.ignoreCase);\n\t\ttester = function(s) { return (op === '@' ? inWords(s) : !inWords(s)); };\n\t}\n\telse if (op === '~' || op === '!~') {\n\t\tif (pat.indexOf('$') < 0) {\n\t\t\t// precompile regular expression\n\t\t\tvar re = compileRegExp(lexer, '^' + pat + '$');\n\t\t\ttester = function(s) { return (op === '~' ? re.test(s) : !re.test(s)); };\n\t\t}\n\t\telse {\n\t\t\ttester = function(s, id, matches, state) {\n\t\t\t\tvar re = compileRegExp(lexer, '^' + monarchCommon.substituteMatches(lexer, pat, id, matches, state) + '$');\n\t\t\t\treturn re.test(s);\n\t\t\t};\n\t\t}\n\t}\n\telse { // if (op==='==' || op==='!=') {\n\t\tif (pat.indexOf('$') < 0) {\n\t\t\tvar patx = monarchCommon.fixCase(lexer, pat);\n\t\t\ttester = function(s) { return (op === '==' ? s === patx : s !== patx); };\n\t\t}\n\t\telse {\n\t\t\tvar patx = monarchCommon.fixCase(lexer, pat);\n\t\t\ttester = function(s, id, matches, state, eos) {\n\t\t\t\tvar patexp = monarchCommon.substituteMatches(lexer, patx, id, matches, state);\n\t\t\t\treturn (op === '==' ? s === patexp : s !== patexp);\n\t\t\t};\n\t\t}\n\t}\n\n\t// return the branch object\n\tif (scrut === -1) {\n\t\treturn {\n\t\t\tname: tkey, value: val, test: function(id, matches, state, eos) {\n\t\t\t\treturn tester(id, id, matches, state, eos);\n\t\t\t}\n\t\t};\n\t}\n\telse {\n\t\treturn {\n\t\t\tname: tkey, value: val, test: function(id, matches, state, eos) {\n\t\t\t\tvar scrutinee = selectScrutinee(id, matches, state, scrut);\n\t\t\t\treturn tester(!scrutinee ? '' : scrutinee, id, matches, state, eos);\n\t\t\t}\n\t\t};\n\t}\n}\n\n/**\n * Compiles an action: i.e. optimize regular expressions and case matches\n * and do many sanity checks.\n *\n * This is called only during compilation but if the lexer definition\n * contains user functions as actions (which is usually not allowed), then this\n * may be called during lexing. It is important therefore to compile common cases efficiently\n */\nfunction compileAction(lexer: monarchCommon.ILexerMin, ruleName: string, action: any): monarchCommon.IAction {\n\tif (!action) {\n\t\treturn { token: '' };\n\t}\n\telse if (typeof (action) === 'string') {\n\t\treturn action; // { token: action };\n\t}\n\telse if (action.token || action.token === '') {\n\t\tif (typeof (action.token) !== 'string') {\n\t\t\tmonarchCommon.throwError(lexer, 'a \\'token\\' attribute must be of type string, in rule: ' + ruleName);\n\t\t\treturn { token: '' };\n\t\t}\n\t\telse {\n\t\t\t// only copy specific typed fields (only happens once during compile Lexer)\n\t\t\tvar newAction: monarchCommon.IAction = { token: action.token };\n\t\t\tif (action.token.indexOf('$') >= 0) {\n\t\t\t\tnewAction.tokenSubst = true;\n\t\t\t}\n\t\t\tif (typeof (action.bracket) === 'string') {\n\t\t\t\tif (action.bracket === '@open') {\n\t\t\t\t\tnewAction.bracket = monarchCommon.MonarchBracket.Open;\n\t\t\t\t} else if (action.bracket === '@close') {\n\t\t\t\t\tnewAction.bracket = monarchCommon.MonarchBracket.Close;\n\t\t\t\t} else {\n\t\t\t\t\tmonarchCommon.throwError(lexer, 'a \\'bracket\\' attribute must be either \\'@open\\' or \\'@close\\', in rule: ' + ruleName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (action.next) {\n\t\t\t\tif (typeof (action.next) !== 'string') {\n\t\t\t\t\tmonarchCommon.throwError(lexer, 'the next state must be a string value in rule: ' + ruleName);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar next: string = action.next;\n\t\t\t\t\tif (!/^(@pop|@push|@popall)$/.test(next)) {\n\t\t\t\t\t\tif (next[0] === '@') {\n\t\t\t\t\t\t\tnext = next.substr(1); // peel off starting @ sign\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (next.indexOf('$') < 0) {  // no dollar substitution, we can check if the state exists\n\t\t\t\t\t\t\tif (!monarchCommon.stateExists(lexer, monarchCommon.substituteMatches(lexer, next, '', [], ''))) {\n\t\t\t\t\t\t\t\tmonarchCommon.throwError(lexer, 'the next state \\'' + action.next + '\\' is not defined in rule: ' + ruleName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnewAction.next = next;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof (action.goBack) === 'number') {\n\t\t\t\tnewAction.goBack = action.goBack;\n\t\t\t}\n\t\t\tif (typeof (action.switchTo) === 'string') {\n\t\t\t\tnewAction.switchTo = action.switchTo;\n\t\t\t}\n\t\t\tif (typeof (action.log) === 'string') {\n\t\t\t\tnewAction.log = action.log;\n\t\t\t}\n\t\t\tif (typeof (action.nextEmbedded) === 'string') {\n\t\t\t\tnewAction.nextEmbedded = action.nextEmbedded;\n\t\t\t\tlexer.usesEmbedded = true;\n\t\t\t}\n\t\t\treturn newAction;\n\t\t}\n\t}\n\telse if (Array.isArray(action)) {\n\t\tvar results = [];\n\t\tvar idx: string;\n\t\tfor (idx in action) {\n\t\t\tif (action.hasOwnProperty(idx)) {\n\t\t\t\tresults[idx] = compileAction(lexer, ruleName, action[idx]);\n\t\t\t}\n\t\t}\n\t\treturn { group: results };\n\t}\n\telse if (action.cases) {\n\t\t// build an array of test cases\n\t\tvar cases: monarchCommon.IBranch[] = [];\n\n\t\t// for each case, push a test function and result value\n\t\tvar tkey: string;\n\t\tfor (tkey in action.cases) {\n\t\t\tif (action.cases.hasOwnProperty(tkey)) {\n\t\t\t\tvar val = compileAction(lexer, ruleName, action.cases[tkey]);\n\n\t\t\t\t// what kind of case\n\t\t\t\tif (tkey === '@default' || tkey === '@' || tkey === '') {\n\t\t\t\t\tcases.push({ test: null, value: val, name: tkey });\n\t\t\t\t}\n\t\t\t\telse if (tkey === '@eos') {\n\t\t\t\t\tcases.push({ test: function(id, matches, state, eos) { return eos; }, value: val, name: tkey });\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcases.push(createGuard(lexer, ruleName, tkey, val));  // call separate function to avoid local variable capture\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// create a matching function\n\t\tvar def = lexer.defaultToken;\n\t\treturn {\n\t\t\ttest: function(id, matches, state, eos) {\n\t\t\t\tvar idx: string;\n\t\t\t\tfor (idx in cases) {\n\t\t\t\t\tif (cases.hasOwnProperty(idx)) {\n\t\t\t\t\t\tvar didmatch = (!cases[idx].test || cases[idx].test(id, matches, state, eos));\n\t\t\t\t\t\tif (didmatch) {\n\t\t\t\t\t\t\treturn cases[idx].value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn def;\n\t\t\t}\n\t\t};\n\t}\n\telse {\n\t\tmonarchCommon.throwError(lexer, 'an action must be a string, an object with a \\'token\\' or \\'cases\\' attribute, or an array of actions; in rule: ' + ruleName);\n\t\treturn '';\n\t}\n}\n\n/**\n * Helper class for creating matching rules\n */\nclass Rule implements monarchCommon.IRule {\n\tpublic regex: RegExp = new RegExp('');\n\tpublic action: monarchCommon.IAction = { token: '' };\n\tpublic matchOnlyAtLineStart: boolean = false;\n\tpublic name: string = '';\n\n\tconstructor(name: string) {\n\t\tthis.name = name;\n\t}\n\n\tpublic setRegex(lexer: monarchCommon.ILexerMin, re: string);\n\tpublic setRegex(lexer: monarchCommon.ILexerMin, re: RegExp);\n\tpublic setRegex(lexer: monarchCommon.ILexerMin, re: any) {\n\t\tvar sregex: string;\n\t\tif (typeof (re) === 'string') {\n\t\t\tsregex = re;\n\t\t}\n\t\telse if (re instanceof RegExp) {\n\t\t\tsregex = (<RegExp>re).source;\n\t\t}\n\t\telse {\n\t\t\tmonarchCommon.throwError(lexer, 'rules must start with a match string or regular expression: ' + this.name);\n\t\t}\n\n\t\tthis.matchOnlyAtLineStart = (sregex.length > 0 && sregex[0] === '^');\n\t\tthis.name = this.name + ': ' + sregex;\n\t\tthis.regex = compileRegExp(lexer, '^(?:' + (this.matchOnlyAtLineStart ? sregex.substr(1) : sregex) + ')');\n\t}\n\n\tpublic setAction(lexer: monarchCommon.ILexerMin, act: monarchCommon.IAction) {\n\t\tthis.action = compileAction(lexer, this.name, act);\n\t}\n}\n\n/**\n * Compiles a json description function into json where all regular expressions,\n * case matches etc, are compiled and all include rules are expanded.\n * We also compile the bracket definitions, supply defaults, and do many sanity checks.\n * If the 'jsonStrict' parameter is 'false', we allow at certain locations\n * regular expression objects and functions that get called during lexing.\n * (Currently we have no samples that need this so perhaps we should always have\n * jsonStrict to true).\n */\nexport function compile(languageId:string, json: IMonarchLanguage): monarchCommon.ILexer {\n\tif (!json || typeof (json) !== 'object') {\n\t\tthrow new Error('Monarch: expecting a language definition object');\n\t}\n\n\t// Create our lexer\n\tvar lexer: monarchCommon.ILexer = <monarchCommon.ILexer>{};\n\tlexer.languageId = languageId;\n\tlexer.noThrow = false; // raise exceptions during compilation\n\tlexer.maxStack = 100;\n\n\t// Set standard fields: be defensive about types\n\tlexer.start = string(json.start);\n\tlexer.ignoreCase = bool(json.ignoreCase, false);\n\n\tlexer.tokenPostfix = string(json.tokenPostfix, '.' + lexer.languageId);\n\tlexer.defaultToken = string(json.defaultToken, 'source', function () { monarchCommon.throwError(lexer, 'the \\'defaultToken\\' must be a string'); });\n\n\tlexer.usesEmbedded = false; // becomes true if we find a nextEmbedded action\n\n\t// For calling compileAction later on\n\tvar lexerMin: monarchCommon.ILexerMin = <any>json;\n\tlexerMin.languageId = languageId;\n\tlexerMin.ignoreCase = lexer.ignoreCase;\n\tlexerMin.noThrow = lexer.noThrow;\n\tlexerMin.usesEmbedded = lexer.usesEmbedded;\n\tlexerMin.stateNames = json.tokenizer;\n\tlexerMin.defaultToken = lexer.defaultToken;\n\n\n\t// Compile an array of rules into newrules where RegExp objects are created.\n\tfunction addRules(state: string, newrules: monarchCommon.IRule[], rules: any[]) {\n\t\tvar idx: string;\n\t\tfor (idx in rules) {\n\t\t\tif (rules.hasOwnProperty(idx)) {\n\t\t\t\tvar rule = rules[idx];\n\t\t\t\tvar include = rule.include;\n\t\t\t\tif (include) {\n\t\t\t\t\tif (typeof (include) !== 'string') {\n\t\t\t\t\t\tmonarchCommon.throwError(lexer, 'an \\'include\\' attribute must be a string at: ' + state);\n\t\t\t\t\t}\n\t\t\t\t\tif (include[0] === '@') {\n\t\t\t\t\t\tinclude = include.substr(1); // peel off starting @\n\t\t\t\t\t}\n\t\t\t\t\tif (!json.tokenizer[include]) {\n\t\t\t\t\t\tmonarchCommon.throwError(lexer, 'include target \\'' + include + '\\' is not defined at: ' + state);\n\t\t\t\t\t}\n\t\t\t\t\taddRules(state + '.' + include, newrules, json.tokenizer[include]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar newrule = new Rule(state);\n\n\n\t\t\t\t\t// Set up new rule attributes\n\t\t\t\t\tif (Array.isArray(rule) && rule.length >= 1 && rule.length <= 3) {\n\t\t\t\t\t\tnewrule.setRegex(lexerMin, rule[0]);\n\t\t\t\t\t\tif (rule.length >= 3) {\n\t\t\t\t\t\t\tif (typeof (rule[1]) === 'string') {\n\t\t\t\t\t\t\t\tnewrule.setAction(lexerMin, { token: rule[1], next: rule[2] });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (typeof (rule[1]) === 'object') {\n\t\t\t\t\t\t\t\tvar rule1 = rule[1];\n\t\t\t\t\t\t\t\trule1.next = rule[2];\n\t\t\t\t\t\t\t\tnewrule.setAction(lexerMin, rule1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tmonarchCommon.throwError(lexer, 'a next state as the last element of a rule can only be given if the action is either an object or a string, at: ' + state);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnewrule.setAction(lexerMin, rule[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!rule.regex) {\n\t\t\t\t\t\t\tmonarchCommon.throwError(lexer, 'a rule must either be an array, or an object with a \\'regex\\' or \\'include\\' field at: ' + state);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rule.name) {\n\t\t\t\t\t\t\tnewrule.name = string(rule.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rule.matchOnlyAtStart) {\n\t\t\t\t\t\t\tnewrule.matchOnlyAtLineStart = bool(rule.matchOnlyAtLineStart);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewrule.setRegex(lexerMin, rule.regex);\n\t\t\t\t\t\tnewrule.setAction(lexerMin, rule.action);\n\t\t\t\t\t}\n\n\t\t\t\t\tnewrules.push(newrule);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// compile the tokenizer rules\n\tif (!json.tokenizer || typeof (json.tokenizer) !== 'object') {\n\t\tmonarchCommon.throwError(lexer, 'a language definition must define the \\'tokenizer\\' attribute as an object');\n\t}\n\n\tlexer.tokenizer = [];\n\tvar key: string;\n\tfor (key in json.tokenizer) {\n\t\tif (json.tokenizer.hasOwnProperty(key)) {\n\t\t\tif (!lexer.start) {\n\t\t\t\tlexer.start = key;\n\t\t\t}\n\n\t\t\tvar rules = json.tokenizer[key];\n\t\t\tlexer.tokenizer[key] = new Array();\n\t\t\taddRules('tokenizer.' + key, lexer.tokenizer[key], rules);\n\t\t}\n\t}\n\tlexer.usesEmbedded = lexerMin.usesEmbedded;  // can be set during compileAction\n\n\t// Set simple brackets\n\tif (json.brackets) {\n\t\tif (!(Array.isArray(<any>json.brackets))) {\n\t\t\tmonarchCommon.throwError(lexer, 'the \\'brackets\\' attribute must be defined as an array');\n\t\t}\n\t}\n\telse {\n\t\tjson.brackets = [\n\t\t\t{ open: '{', close: '}', token: 'delimiter.curly' },\n\t\t\t{ open: '[', close: ']', token: 'delimiter.square' },\n\t\t\t{ open: '(', close: ')', token: 'delimiter.parenthesis' },\n\t\t\t{ open: '<', close: '>', token: 'delimiter.angle' }];\n\t}\n\tvar brackets : IMonarchLanguageBracket[] = [];\n\tfor (var bracketIdx in json.brackets) {\n\t\tif (json.brackets.hasOwnProperty(bracketIdx)) {\n\t\t\tvar desc = <any> json.brackets[bracketIdx];\n\t\t\tif (desc && Array.isArray(desc) && desc.length === 3) {\n\t\t\t\tdesc = { token: desc[2], open: desc[0], close: desc[1] };\n\t\t\t}\n\t\t\tif (desc.open === desc.close) {\n\t\t\t\tmonarchCommon.throwError(lexer, 'open and close brackets in a \\'brackets\\' attribute must be different: ' + desc.open +\n\t\t\t\t\t'\\n hint: use the \\'bracket\\' attribute if matching on equal brackets is required.');\n\t\t\t}\n\t\t\tif (typeof (desc.open) === 'string' && typeof (desc.token) === 'string') {\n\t\t\t\tbrackets.push({\n\t\t\t\t\ttoken: string(desc.token) + lexer.tokenPostfix\n\t\t\t\t\t, open: monarchCommon.fixCase(lexer, string(desc.open))\n\t\t\t\t\t, close: monarchCommon.fixCase(lexer, string(desc.close))\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmonarchCommon.throwError(lexer, 'every element in the \\'brackets\\' array must be a \\'{open,close,token}\\' object or array');\n\t\t\t}\n\t\t}\n\t}\n\tlexer.brackets = brackets;\n\n\t// Disable throw so the syntax highlighter goes, no matter what\n\tlexer.noThrow = true;\n\treturn lexer;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as modes from 'vs/editor/common/modes';\n\nexport class NullState implements modes.IState {\n\n\tprivate mode: modes.IMode;\n\tprivate stateData: modes.IState;\n\n\tconstructor(mode: modes.IMode, stateData: modes.IState) {\n\t\tthis.mode = mode;\n\t\tthis.stateData = stateData;\n\t}\n\n\tpublic clone(): modes.IState {\n\t\tvar stateDataClone:modes.IState = (this.stateData ? this.stateData.clone() : null);\n\t\treturn new NullState(this.mode, stateDataClone);\n\t}\n\n\tpublic equals(other:modes.IState): boolean {\n\t\tif (this.mode !== other.getMode()) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherStateData = other.getStateData();\n\t\tif (!this.stateData && !otherStateData) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.stateData && otherStateData) {\n\t\t\treturn this.stateData.equals(otherStateData);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getMode(): modes.IMode {\n\t\treturn this.mode;\n\t}\n\n\tpublic tokenize(stream:modes.IStream):modes.ITokenizationResult {\n\t\tstream.advanceToEOS();\n\t\treturn { type:'' };\n\t}\n\n\tpublic getStateData(): modes.IState {\n\t\treturn this.stateData;\n\t}\n\n\tpublic setStateData(stateData:modes.IState):void {\n\t\tthis.stateData = stateData;\n\t}\n}\n\nexport class NullMode implements modes.IMode {\n\n\n\tpublic static ID = 'vs.editor.modes.nullMode';\n\n\tconstructor() {\n\t}\n\n\tpublic getId():string {\n\t\treturn NullMode.ID;\n\t}\n\n\tpublic toSimplifiedMode(): modes.IMode {\n\t\treturn this;\n\t}\n}\n\nexport function nullTokenize(mode: modes.IMode, buffer:string, state: modes.IState, deltaOffset:number = 0, stopAtOffset?:number): modes.ILineTokens {\n\tvar tokens:modes.IToken[] = [\n\t\t{\n\t\t\tstartIndex: deltaOffset,\n\t\t\ttype: ''\n\t\t}\n\t];\n\n\tvar modeTransitions:modes.IModeTransition[] = [\n\t\t{\n\t\t\tstartIndex: deltaOffset,\n\t\t\tmode: mode\n\t\t}\n\t];\n\n\treturn {\n\t\ttokens: tokens,\n\t\tactualStopOffset: deltaOffset + buffer.length,\n\t\tendState: state,\n\t\tmodeTransitions: modeTransitions\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport * as modes from 'vs/editor/common/modes';\nimport {ModeTransition} from 'vs/editor/common/core/modeTransition';\n\nexport class Token implements modes.IToken {\n\t_tokenBrand: void;\n\n\tpublic startIndex:number;\n\tpublic type:string;\n\n\tconstructor(startIndex:number, type:string) {\n\t\tthis.startIndex = startIndex;\n\t\tthis.type = type;\n\t}\n\n\tpublic toString(): string {\n\t\treturn '(' + this.startIndex + ', ' + this.type + ')';\n\t}\n}\n\nexport class LineTokens implements modes.ILineTokens {\n\t_lineTokensBrand: void;\n\n\ttokens: Token[];\n\tmodeTransitions: ModeTransition[];\n\tactualStopOffset: number;\n\tendState: modes.IState;\n\tretokenize: TPromise<void>;\n\n\tconstructor(tokens:Token[], modeTransitions: ModeTransition[], actualStopOffset:number, endState:modes.IState) {\n\t\tthis.tokens = tokens;\n\t\tthis.modeTransitions = modeTransitions;\n\t\tthis.actualStopOffset = actualStopOffset;\n\t\tthis.endState = endState;\n\t\tthis.retokenize = null;\n\t}\n}\n\nexport function handleEvent<T>(context:modes.ILineContext, offset:number, runner:(modeId:string, newContext:modes.ILineContext, offset:number)=>T):T {\n\tvar modeTransitions = context.modeTransitions;\n\tif (modeTransitions.length === 1) {\n\t\treturn runner(modeTransitions[0].modeId, context, offset);\n\t}\n\n\tvar modeIndex = ModeTransition.findIndexInSegmentsArray(modeTransitions, offset);\n\tvar nestedMode = modeTransitions[modeIndex].mode;\n\tvar modeStartIndex = modeTransitions[modeIndex].startIndex;\n\n\tvar firstTokenInModeIndex = context.findIndexOfOffset(modeStartIndex);\n\tvar nextCharacterAfterModeIndex = -1;\n\tvar nextTokenAfterMode = -1;\n\tif (modeIndex + 1 < modeTransitions.length) {\n\t\tnextTokenAfterMode = context.findIndexOfOffset(modeTransitions[modeIndex + 1].startIndex);\n\t\tnextCharacterAfterModeIndex = context.getTokenStartIndex(nextTokenAfterMode);\n\t} else {\n\t\tnextTokenAfterMode = context.getTokenCount();\n\t\tnextCharacterAfterModeIndex = context.getLineContent().length;\n\t}\n\n\tvar firstTokenCharacterOffset = context.getTokenStartIndex(firstTokenInModeIndex);\n\tvar newCtx = new FilteredLineContext(context, nestedMode, firstTokenInModeIndex, nextTokenAfterMode, firstTokenCharacterOffset, nextCharacterAfterModeIndex);\n\treturn runner(nestedMode.getId(), newCtx, offset - firstTokenCharacterOffset);\n}\n\nexport class FilteredLineContext implements modes.ILineContext {\n\n\tpublic modeTransitions: ModeTransition[];\n\n\tprivate _actual:modes.ILineContext;\n\tprivate _firstTokenInModeIndex:number;\n\tprivate _nextTokenAfterMode:number;\n\tprivate _firstTokenCharacterOffset:number;\n\tprivate _nextCharacterAfterModeIndex:number;\n\n\tconstructor(actual:modes.ILineContext, mode:modes.IMode,\n\t\t\tfirstTokenInModeIndex:number, nextTokenAfterMode:number,\n\t\t\tfirstTokenCharacterOffset:number, nextCharacterAfterModeIndex:number) {\n\n\t\tthis.modeTransitions = [new ModeTransition(0, mode)];\n\t\tthis._actual = actual;\n\t\tthis._firstTokenInModeIndex = firstTokenInModeIndex;\n\t\tthis._nextTokenAfterMode = nextTokenAfterMode;\n\t\tthis._firstTokenCharacterOffset = firstTokenCharacterOffset;\n\t\tthis._nextCharacterAfterModeIndex = nextCharacterAfterModeIndex;\n\t}\n\n\tpublic getLineContent(): string {\n\t\tvar actualLineContent = this._actual.getLineContent();\n\t\treturn actualLineContent.substring(this._firstTokenCharacterOffset, this._nextCharacterAfterModeIndex);\n\t}\n\n\tpublic getTokenCount(): number {\n\t\treturn this._nextTokenAfterMode - this._firstTokenInModeIndex;\n\t}\n\n\tpublic findIndexOfOffset(offset:number): number {\n\t\treturn this._actual.findIndexOfOffset(offset + this._firstTokenCharacterOffset) - this._firstTokenInModeIndex;\n\t}\n\n\tpublic getTokenStartIndex(tokenIndex:number): number {\n\t\treturn this._actual.getTokenStartIndex(tokenIndex + this._firstTokenInModeIndex) - this._firstTokenCharacterOffset;\n\t}\n\n\tpublic getTokenEndIndex(tokenIndex:number): number {\n\t\treturn this._actual.getTokenEndIndex(tokenIndex + this._firstTokenInModeIndex) - this._firstTokenCharacterOffset;\n\t}\n\n\tpublic getTokenType(tokenIndex:number): string {\n\t\treturn this._actual.getTokenType(tokenIndex + this._firstTokenInModeIndex);\n\t}\n\n\tpublic getTokenText(tokenIndex:number): string {\n\t\treturn this._actual.getTokenText(tokenIndex + this._firstTokenInModeIndex);\n\t}\n}\n\nconst IGNORE_IN_TOKENS = /\\b(comment|string|regex)\\b/;\nexport function ignoreBracketsInToken(tokenType:string): boolean {\n\treturn IGNORE_IN_TOKENS.test(tokenType);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IAutoClosingPair, IAutoClosingPairConditional, ILineContext, IRichEditCharacterPair, CharacterPair} from 'vs/editor/common/modes';\nimport {handleEvent} from 'vs/editor/common/modes/supports';\nimport {LanguageConfigurationRegistryImpl} from 'vs/editor/common/modes/languageConfigurationRegistry';\n\nexport class CharacterPairSupport implements IRichEditCharacterPair {\n\n\tprivate _registry: LanguageConfigurationRegistryImpl;\n\tprivate _modeId: string;\n\tprivate _autoClosingPairs: IAutoClosingPairConditional[];\n\tprivate _surroundingPairs: IAutoClosingPair[];\n\n\tconstructor(registry: LanguageConfigurationRegistryImpl, modeId: string, config: { brackets?: CharacterPair[]; autoClosingPairs?: IAutoClosingPairConditional[], surroundingPairs?: IAutoClosingPair[]}) {\n\t\tthis._registry = registry;\n\t\tthis._modeId = modeId;\n\t\tthis._autoClosingPairs = config.autoClosingPairs;\n\t\tif (!this._autoClosingPairs) {\n\t\t\tthis._autoClosingPairs = config.brackets ? config.brackets.map(b => ({ open: b[0], close: b[1] })) : [];\n\t\t}\n\t\tthis._surroundingPairs = config.surroundingPairs || this._autoClosingPairs;\n\t}\n\n\tpublic getAutoClosingPairs(): IAutoClosingPair[] {\n\t\treturn this._autoClosingPairs;\n\t}\n\n\tpublic shouldAutoClosePair(character:string, context:ILineContext, offset:number): boolean {\n\t\treturn handleEvent(context, offset, (nestedModeId:string, context:ILineContext, offset:number) => {\n\t\t\tif (this._modeId === nestedModeId) {\n\n\t\t\t\t// Always complete on empty line\n\t\t\t\tif (context.getTokenCount() === 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tvar tokenIndex = context.findIndexOfOffset(offset - 1);\n\t\t\t\tvar tokenType = context.getTokenType(tokenIndex);\n\n\t\t\t\tfor (var i = 0; i < this._autoClosingPairs.length; ++i) {\n\t\t\t\t\tif (this._autoClosingPairs[i].open === character) {\n\t\t\t\t\t\tif (this._autoClosingPairs[i].notIn) {\n\t\t\t\t\t\t\tfor (var notInIndex = 0; notInIndex < this._autoClosingPairs[i].notIn.length; ++notInIndex) {\n\t\t\t\t\t\t\t\tif (tokenType.indexOf(this._autoClosingPairs[i].notIn[notInIndex]) > -1) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tlet characterPairSupport = this._registry.getCharacterPairSupport(nestedModeId);\n\t\t\tif (characterPairSupport) {\n\t\t\t\treturn characterPairSupport.shouldAutoClosePair(character, context, offset);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tpublic getSurroundingPairs(): IAutoClosingPair[]{\n\t\treturn this._surroundingPairs;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as strings from 'vs/base/common/strings';\nimport {Range} from 'vs/editor/common/core/range';\nimport {IRichEditBracket} from 'vs/editor/common/editorCommon';\nimport {IRichEditBrackets, CharacterPair} from 'vs/editor/common/modes';\n\ninterface ISimpleInternalBracket {\n\topen: string;\n\tclose: string;\n}\n\nexport class RichEditBrackets implements IRichEditBrackets {\n\n\tpublic brackets: IRichEditBracket[];\n\tpublic forwardRegex: RegExp;\n\tpublic reversedRegex: RegExp;\n\tpublic maxBracketLength: number;\n\tpublic textIsBracket: {[text:string]:IRichEditBracket;};\n\tpublic textIsOpenBracket: {[text:string]:boolean;};\n\n\tconstructor(modeId: string, brackets: CharacterPair[]) {\n\t\tthis.brackets = brackets.map((b) => {\n\t\t\treturn {\n\t\t\t\tmodeId: modeId,\n\t\t\t\topen: b[0],\n\t\t\t\tclose: b[1],\n\t\t\t\tforwardRegex: getRegexForBracketPair({ open: b[0], close: b[1] }),\n\t\t\t\treversedRegex: getReversedRegexForBracketPair({ open: b[0], close: b[1] })\n\t\t\t};\n\t\t});\n\t\tthis.forwardRegex = getRegexForBrackets(this.brackets);\n\t\tthis.reversedRegex = getReversedRegexForBrackets(this.brackets);\n\n\t\tthis.textIsBracket = {};\n\t\tthis.textIsOpenBracket = {};\n\t\tthis.maxBracketLength = 0;\n\t\tthis.brackets.forEach((b) => {\n\t\t\tthis.textIsBracket[b.open] = b;\n\t\t\tthis.textIsBracket[b.close] = b;\n\t\t\tthis.textIsOpenBracket[b.open] = true;\n\t\t\tthis.textIsOpenBracket[b.close] = false;\n\t\t\tthis.maxBracketLength = Math.max(this.maxBracketLength, b.open.length);\n\t\t\tthis.maxBracketLength = Math.max(this.maxBracketLength, b.close.length);\n\t\t});\n\t}\n}\n\nfunction once<T, R>(keyFn:(input:T)=>string, computeFn:(input:T)=>R):(input:T)=>R {\n\tlet cache: {[key:string]:R;} = {};\n\treturn (input:T):R => {\n\t\tlet key = keyFn(input);\n\t\tif (!cache.hasOwnProperty(key)) {\n\t\t\tcache[key] = computeFn(input);\n\t\t}\n\t\treturn cache[key];\n\t};\n}\n\nvar getRegexForBracketPair = once<ISimpleInternalBracket,RegExp>(\n\t(input) => `${input.open};${input.close}`,\n\t(input) => {\n\t\treturn createOrRegex([input.open, input.close]);\n\t}\n);\n\nvar getReversedRegexForBracketPair = once<ISimpleInternalBracket,RegExp>(\n\t(input) => `${input.open};${input.close}`,\n\t(input) => {\n\t\treturn createOrRegex([toReversedString(input.open), toReversedString(input.close)]);\n\t}\n);\n\nvar getRegexForBrackets = once<ISimpleInternalBracket[],RegExp>(\n\t(input) => input.map(b => `${b.open};${b.close}`).join(';'),\n\t(input) => {\n\t\tlet pieces: string[] = [];\n\t\tinput.forEach((b) => {\n\t\t\tpieces.push(b.open);\n\t\t\tpieces.push(b.close);\n\t\t});\n\t\treturn createOrRegex(pieces);\n\t}\n);\n\nvar getReversedRegexForBrackets = once<ISimpleInternalBracket[],RegExp>(\n\t(input) => input.map(b => `${b.open};${b.close}`).join(';'),\n\t(input) => {\n\t\tlet pieces: string[] = [];\n\t\tinput.forEach((b) => {\n\t\t\tpieces.push(toReversedString(b.open));\n\t\t\tpieces.push(toReversedString(b.close));\n\t\t});\n\t\treturn createOrRegex(pieces);\n\t}\n);\n\nfunction createOrRegex(pieces:string[]): RegExp {\n\tlet regexStr = `(${pieces.map(strings.escapeRegExpCharacters).join(')|(')})`;\n\treturn strings.createRegExp(regexStr, true, false, false, false);\n}\n\nfunction toReversedString(str:string): string {\n\tlet reversedStr = '';\n\tfor (let i = str.length - 1; i >= 0; i--) {\n\t\treversedStr += str.charAt(i);\n\t}\n\treturn reversedStr;\n}\n\nexport class BracketsUtils {\n\n\tprivate static _findPrevBracketInText(reversedBracketRegex:RegExp, lineNumber:number, reversedText:string, offset:number): Range {\n\t\tlet m = reversedText.match(reversedBracketRegex);\n\n\t\tif (!m) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet matchOffset = reversedText.length - m.index;\n\t\tlet matchLength = m[0].length;\n\t\tlet absoluteMatchOffset = offset + matchOffset;\n\n\t\treturn new Range(lineNumber, absoluteMatchOffset - matchLength + 1, lineNumber, absoluteMatchOffset + 1);\n\t}\n\n\tpublic static findPrevBracketInToken(reversedBracketRegex:RegExp, lineNumber:number, lineText:string, currentTokenStart:number, currentTokenEnd:number): Range {\n\t\t// Because JS does not support backwards regex search, we search forwards in a reversed string with a reversed regex ;)\n\t\tlet currentTokenReversedText = '';\n\t\tfor (let index = currentTokenEnd - 1; index >= currentTokenStart; index--) {\n\t\t\tcurrentTokenReversedText += lineText.charAt(index);\n\t\t}\n\n\t\treturn this._findPrevBracketInText(reversedBracketRegex, lineNumber, currentTokenReversedText, currentTokenStart);\n\t}\n\n\tpublic static findNextBracketInText(bracketRegex:RegExp, lineNumber:number, text:string, offset:number): Range {\n\t\tlet m = text.match(bracketRegex);\n\n\t\tif (!m) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet matchOffset = m.index;\n\t\tlet matchLength = m[0].length;\n\t\tlet absoluteMatchOffset = offset + matchOffset;\n\n\t\treturn new Range(lineNumber, absoluteMatchOffset + 1, lineNumber, absoluteMatchOffset + 1 + matchLength);\n\t}\n\n\tpublic static findNextBracketInToken(bracketRegex:RegExp, lineNumber:number, lineText:string, currentTokenStart:number, currentTokenEnd:number): Range {\n\t\tlet currentTokenText = lineText.substring(currentTokenStart, currentTokenEnd);\n\n\t\treturn this.findNextBracketInText(bracketRegex, lineNumber, currentTokenText, currentTokenStart);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as strings from 'vs/base/common/strings';\nimport * as modes from 'vs/editor/common/modes';\nimport {handleEvent, ignoreBracketsInToken} from 'vs/editor/common/modes/supports';\nimport {BracketsUtils} from 'vs/editor/common/modes/supports/richEditBrackets';\nimport {LanguageConfigurationRegistryImpl} from 'vs/editor/common/modes/languageConfigurationRegistry';\n\n/**\n * Definition of documentation comments (e.g. Javadoc/JSdoc)\n */\nexport interface IDocComment {\n\tscope: string; // What tokens should be used to detect a doc comment (e.g. 'comment.documentation').\n\topen: string; // The string that starts a doc comment (e.g. '/**')\n\tlineStart: string; // The string that appears at the start of each line, except the first and last (e.g. ' * ').\n\tclose?: string; // The string that appears on the last line and closes the doc comment (e.g. ' */').\n}\n\nexport interface IBracketElectricCharacterContribution {\n\tdocComment?: IDocComment;\n\tembeddedElectricCharacters?: string[];\n}\n\nexport class BracketElectricCharacterSupport implements modes.IRichEditElectricCharacter {\n\n\tprivate _registry: LanguageConfigurationRegistryImpl;\n\tprivate _modeId: string;\n\tprivate contribution: IBracketElectricCharacterContribution;\n\tprivate brackets: Brackets;\n\n\tconstructor(registry:LanguageConfigurationRegistryImpl, modeId: string, brackets: modes.IRichEditBrackets, autoClosePairs: modes.IAutoClosingPairConditional[], contribution: IBracketElectricCharacterContribution) {\n\t\tthis._registry = registry;\n\t\tthis._modeId = modeId;\n\t\tthis.contribution = contribution || {};\n\t\tthis.brackets = new Brackets(modeId, brackets, autoClosePairs, this.contribution.docComment);\n\t}\n\n\tpublic getElectricCharacters(): string[]{\n\t\tif (Array.isArray(this.contribution.embeddedElectricCharacters)) {\n\t\t\treturn this.contribution.embeddedElectricCharacters.concat(this.brackets.getElectricCharacters());\n\t\t}\n\t\treturn this.brackets.getElectricCharacters();\n\t}\n\n\tpublic onElectricCharacter(context:modes.ILineContext, offset:number): modes.IElectricAction {\n\t\treturn handleEvent(context, offset, (nestedModeId:string, context:modes.ILineContext, offset:number) => {\n\t\t\tif (this._modeId === nestedModeId) {\n\t\t\t\treturn this.brackets.onElectricCharacter(context, offset);\n\t\t\t}\n\t\t\tlet electricCharacterSupport = this._registry.getElectricCharacterSupport(nestedModeId);\n\t\t\tif (electricCharacterSupport) {\n\t\t\t\treturn electricCharacterSupport.onElectricCharacter(context, offset);\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n}\n\n\n\nexport class Brackets {\n\n\tprivate _modeId: string;\n\tprivate _richEditBrackets: modes.IRichEditBrackets;\n\tprivate _complexAutoClosePairs: modes.IAutoClosingPairConditional[];\n\n\tconstructor(modeId: string, richEditBrackets: modes.IRichEditBrackets, autoClosePairs: modes.IAutoClosingPairConditional[], docComment?: IDocComment) {\n\t\tthis._modeId = modeId;\n\t\tthis._richEditBrackets = richEditBrackets;\n\t\tthis._complexAutoClosePairs = autoClosePairs.filter(pair => pair.open.length > 1 && !!pair.close);\n\t\tif (docComment) {\n\t\t\t// IDocComment is legacy, only partially supported\n\t\t\tthis._complexAutoClosePairs.push({ open: docComment.open, close: docComment.close });\n\t\t}\n\t}\n\n\tpublic getElectricCharacters():string[] {\n\t\tvar result: string[] = [];\n\n\t\tif (this._richEditBrackets) {\n\t\t\tfor (let i = 0, len = this._richEditBrackets.brackets.length; i < len; i++) {\n\t\t\t\tlet bracketPair = this._richEditBrackets.brackets[i];\n\t\t\t\tlet lastChar = bracketPair.close.charAt(bracketPair.close.length - 1);\n\t\t\t\tresult.push(lastChar);\n\t\t\t}\n\t\t}\n\n\t\t// auto close\n\t\tfor (let pair of this._complexAutoClosePairs) {\n\t\t\tresult.push(pair.open.charAt(pair.open.length - 1));\n\t\t}\n\n\t\t// Filter duplicate entries\n\t\tresult = result.filter((item, pos, array) => {\n\t\t\treturn array.indexOf(item) === pos;\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tpublic onElectricCharacter(context: modes.ILineContext, offset: number): modes.IElectricAction {\n\t\tif (context.getTokenCount() === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (this._onElectricAutoClose(context, offset) ||\n\t\t\tthis._onElectricAutoIndent(context, offset));\n\t}\n\n\tprivate containsTokenTypes(fullTokenSpec: string, tokensToLookFor: string): boolean {\n\t\tvar array = tokensToLookFor.split('.');\n\t\tfor (var i = 0; i < array.length; ++i) {\n\t\t\tif (fullTokenSpec.indexOf(array[i]) < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate _onElectricAutoIndent(context: modes.ILineContext, offset: number): modes.IElectricAction {\n\n\t\tif (!this._richEditBrackets || this._richEditBrackets.brackets.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet reversedBracketRegex = this._richEditBrackets.reversedRegex;\n\n\t\tlet lineText = context.getLineContent();\n\t\tlet tokenIndex = context.findIndexOfOffset(offset);\n\t\tlet tokenStart = context.getTokenStartIndex(tokenIndex);\n\t\tlet tokenEnd = offset + 1;\n\n\t\tvar firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(context.getLineContent());\n\t\tif (firstNonWhitespaceIndex !== -1 && firstNonWhitespaceIndex < tokenStart) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!ignoreBracketsInToken(context.getTokenType(tokenIndex))) {\n\t\t\tlet r = BracketsUtils.findPrevBracketInToken(reversedBracketRegex, 1, lineText, tokenStart, tokenEnd);\n\t\t\tif (r) {\n\t\t\t\tlet text = lineText.substring(r.startColumn - 1, r.endColumn - 1);\n\t\t\t\tlet isOpen = this._richEditBrackets.textIsOpenBracket[text];\n\t\t\t\tif (!isOpen) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmatchOpenBracket: text\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _onElectricAutoClose(context: modes.ILineContext, offset: number): modes.IElectricAction {\n\n\t\tif (!this._complexAutoClosePairs.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar line = context.getLineContent();\n\t\tvar char: string = line[offset];\n\n\t\tfor (let i = 0; i < this._complexAutoClosePairs.length; i++) {\n\t\t\tlet pair = this._complexAutoClosePairs[i];\n\n\t\t\t// See if the right electric character was pressed\n\t\t\tif (char !== pair.open.charAt(pair.open.length - 1)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If this line already contains the closing tag, do nothing.\n\t\t\tif (line.indexOf(pair.close, offset) >= 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// check if the full open bracket matches\n\t\t\tlet lastTokenIndex = context.findIndexOfOffset(offset);\n\t\t\tif (line.substring(context.getTokenStartIndex(lastTokenIndex), offset+1/* include electric char*/) !== pair.open) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If we're in a scope listen in 'notIn', do nothing\n\t\t\tif (pair.notIn) {\n\t\t\t\tlet tokenType = context.getTokenType(lastTokenIndex);\n\t\t\t\tif (pair.notIn.some(scope => this.containsTokenTypes(tokenType, scope))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { appendText: pair.close};\n\t\t}\n\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport * as modes from 'vs/editor/common/modes';\nimport {LineStream} from 'vs/editor/common/modes/lineStream';\nimport {NullMode, NullState, nullTokenize} from 'vs/editor/common/modes/nullMode';\nimport {Token} from 'vs/editor/common/modes/supports';\n\nexport interface ILeavingNestedModeData {\n\t/**\n\t * The part of the line that will be tokenized by the nested mode\n\t */\n\tnestedModeBuffer: string;\n\n\t/**\n\t * The part of the line that will be tokenized by the parent mode when it continues after the nested mode\n\t */\n\tbufferAfterNestedMode: string;\n\n\t/**\n\t * The state that will be used for continuing tokenization by the parent mode after the nested mode\n\t */\n\tstateAfterNestedMode: modes.IState;\n}\n\nexport interface IEnteringNestedModeData {\n\tmode:modes.IMode;\n\tmissingModePromise:TPromise<void>;\n}\n\nexport interface ITokenizationCustomization {\n\n\tgetInitialState():modes.IState;\n\n\tenterNestedMode?: (state:modes.IState) => boolean;\n\n\tgetNestedMode?: (state:modes.IState) => IEnteringNestedModeData;\n\n\tgetNestedModeInitialState?: (myState:modes.IState) => { state:modes.IState; missingModePromise:TPromise<void>; };\n\n\t/**\n\t * Return null if the line does not leave the nested mode\n\t */\n\tgetLeavingNestedModeData?: (line:string, state:modes.IState) => ILeavingNestedModeData;\n\n\t/**\n\t * Callback for when leaving a nested mode and returning to the outer mode.\n\t * @param myStateAfterNestedMode The outer mode's state that will begin to tokenize\n\t * @param lastNestedModeState The nested mode's last state\n\t */\n\tonReturningFromNestedMode?: (myStateAfterNestedMode:modes.IState, lastNestedModeState:modes.IState)=> void;\n}\n\nfunction isFunction(something) {\n\treturn typeof something === 'function';\n}\n\nexport class TokenizationSupport implements modes.ITokenizationSupport, IDisposable {\n\n\tstatic MAX_EMBEDDED_LEVELS = 5;\n\n\tprivate customization:ITokenizationCustomization;\n\tprivate defaults: {\n\t\tenterNestedMode: boolean;\n\t\tgetNestedMode: boolean;\n\t\tgetNestedModeInitialState: boolean;\n\t\tgetLeavingNestedModeData: boolean;\n\t\tonReturningFromNestedMode: boolean;\n\t};\n\n\tpublic supportsNestedModes:boolean;\n\n\tprivate _mode:modes.IMode;\n\tprivate _embeddedModesListeners: { [modeId:string]: IDisposable; };\n\n\tconstructor(mode:modes.IMode, customization:ITokenizationCustomization, supportsNestedModes:boolean) {\n\t\tthis._mode = mode;\n\t\tthis.customization = customization;\n\t\tthis.supportsNestedModes = supportsNestedModes;\n\t\tthis._embeddedModesListeners = {};\n\t\tif (this.supportsNestedModes) {\n\t\t\tif (!this._mode.setTokenizationSupport) {\n\t\t\t\tthrow new Error('Cannot be a mode with nested modes unless I can emit a tokenizationSupport changed event!');\n\t\t\t}\n\t\t}\n\t\tthis.defaults = {\n\t\t\tenterNestedMode: !isFunction(customization.enterNestedMode),\n\t\t\tgetNestedMode: !isFunction(customization.getNestedMode),\n\t\t\tgetNestedModeInitialState: !isFunction(customization.getNestedModeInitialState),\n\t\t\tgetLeavingNestedModeData: !isFunction(customization.getLeavingNestedModeData),\n\t\t\tonReturningFromNestedMode: !isFunction(customization.onReturningFromNestedMode)\n\t\t};\n\t}\n\n\tpublic dispose() : void {\n\t\tfor (var listener in this._embeddedModesListeners) {\n\t\t\tthis._embeddedModesListeners[listener].dispose();\n\t\t\tdelete this._embeddedModesListeners[listener];\n\t\t}\n\t}\n\n\tpublic getInitialState(): modes.IState {\n\t\treturn this.customization.getInitialState();\n\t}\n\n\tpublic tokenize(line:string, state:modes.IState, deltaOffset:number = 0, stopAtOffset:number = deltaOffset + line.length):modes.ILineTokens {\n\t\tif (state.getMode() !== this._mode) {\n\t\t\treturn this._nestedTokenize(line, state, deltaOffset, stopAtOffset, [], []);\n\t\t} else {\n\t\t\treturn this._myTokenize(line, state, deltaOffset, stopAtOffset, [], []);\n\t\t}\n\t}\n\n\t/**\n\t * Precondition is: nestedModeState.getMode() !== this\n\t * This means we are in a nested mode when parsing starts on this line.\n\t */\n\tprivate _nestedTokenize(buffer:string, nestedModeState:modes.IState, deltaOffset:number, stopAtOffset:number, prependTokens:modes.IToken[], prependModeTransitions:modes.IModeTransition[]):modes.ILineTokens {\n\t\tvar myStateBeforeNestedMode = nestedModeState.getStateData();\n\t\tvar leavingNestedModeData = this.getLeavingNestedModeData(buffer, myStateBeforeNestedMode);\n\n\t\t// Be sure to give every embedded mode the\n\t\t// opportunity to leave nested mode.\n\t\t// i.e. Don't go straight to the most nested mode\n\t\tvar stepOnceNestedState = nestedModeState;\n\t\twhile (stepOnceNestedState.getStateData() && stepOnceNestedState.getStateData().getMode() !== this._mode) {\n\t\t\tstepOnceNestedState = stepOnceNestedState.getStateData();\n\t\t}\n\t\tvar nestedMode = stepOnceNestedState.getMode();\n\n\t\tif (!leavingNestedModeData) {\n\t\t\t// tokenization will not leave nested mode\n\t\t\tvar result:modes.ILineTokens;\n\t\t\tif (nestedMode.tokenizationSupport) {\n\t\t\t\tresult = nestedMode.tokenizationSupport.tokenize(buffer, nestedModeState, deltaOffset, stopAtOffset);\n\t\t\t} else {\n\t\t\t\t// The nested mode doesn't have tokenization support,\n\t\t\t\t// unfortunatelly this means we have to fake it\n\t\t\t\tresult = nullTokenize(nestedMode, buffer, nestedModeState, deltaOffset);\n\t\t\t}\n\t\t\tresult.tokens = prependTokens.concat(result.tokens);\n\t\t\tresult.modeTransitions = prependModeTransitions.concat(result.modeTransitions);\n\t\t\treturn result;\n\t\t}\n\n\t\tvar nestedModeBuffer = leavingNestedModeData.nestedModeBuffer;\n\t\tif (nestedModeBuffer.length > 0) {\n\t\t\t// Tokenize with the nested mode\n\t\t\tvar nestedModeLineTokens:modes.ILineTokens;\n\t\t\tif (nestedMode.tokenizationSupport) {\n\t\t\t\tnestedModeLineTokens = nestedMode.tokenizationSupport.tokenize(nestedModeBuffer, nestedModeState, deltaOffset, stopAtOffset);\n\t\t\t} else {\n\t\t\t\t// The nested mode doesn't have tokenization support,\n\t\t\t\t// unfortunatelly this means we have to fake it\n\t\t\t\tnestedModeLineTokens = nullTokenize(nestedMode, nestedModeBuffer, nestedModeState, deltaOffset);\n\t\t\t}\n\n\t\t\t// Save last state of nested mode\n\t\t\tnestedModeState = nestedModeLineTokens.endState;\n\n\t\t\t// Prepend nested mode's result to our result\n\t\t\tprependTokens = prependTokens.concat(nestedModeLineTokens.tokens);\n\t\t\tprependModeTransitions = prependModeTransitions.concat(nestedModeLineTokens.modeTransitions);\n\t\t}\n\n\t\tvar bufferAfterNestedMode = leavingNestedModeData.bufferAfterNestedMode;\n\t\tvar myStateAfterNestedMode = leavingNestedModeData.stateAfterNestedMode;\n\t\tmyStateAfterNestedMode.setStateData(myStateBeforeNestedMode.getStateData());\n\t\tthis.onReturningFromNestedMode(myStateAfterNestedMode, nestedModeState);\n\n\t\treturn this._myTokenize(bufferAfterNestedMode, myStateAfterNestedMode, deltaOffset + nestedModeBuffer.length, stopAtOffset, prependTokens, prependModeTransitions);\n\t}\n\n\t/**\n\t * Precondition is: state.getMode() === this\n\t * This means we are in the current mode when parsing starts on this line.\n\t */\n\tprivate _myTokenize(buffer:string, myState:modes.IState, deltaOffset:number, stopAtOffset:number, prependTokens:modes.IToken[], prependModeTransitions:modes.IModeTransition[]):modes.ILineTokens {\n\t\tvar lineStream = new LineStream(buffer);\n\t\tvar tokenResult:modes.ITokenizationResult, beforeTokenizeStreamPos:number;\n\t\tvar previousType:string = null;\n\t\tvar retokenize:TPromise<void> = null;\n\n\t\tmyState = myState.clone();\n\t\tif (prependModeTransitions.length <= 0 || prependModeTransitions[prependModeTransitions.length-1].mode !== this._mode) {\n\t\t\t// Avoid transitioning to the same mode (this can happen in case of empty embedded modes)\n\t\t\tprependModeTransitions.push({\n\t\t\t\tstartIndex: deltaOffset,\n\t\t\t\tmode: this._mode\n\t\t\t});\n\t\t}\n\n\t\tvar maxPos = Math.min(stopAtOffset - deltaOffset, buffer.length);\n\t\twhile (lineStream.pos() < maxPos) {\n\t\t\tbeforeTokenizeStreamPos = lineStream.pos();\n\n\t\t\tdo {\n\t\t\t\ttokenResult = myState.tokenize(lineStream);\n\t\t\t\tif (tokenResult === null || tokenResult === undefined ||\n\t\t\t\t\t((tokenResult.type === undefined || tokenResult.type === null) &&\n\t\t\t\t\t(tokenResult.nextState === undefined || tokenResult.nextState === null))) {\n\t\t\t\t\tthrow new Error('Tokenizer must return a valid state');\n\t\t\t\t}\n\n\t\t\t\tif (tokenResult.nextState) {\n\t\t\t\t\ttokenResult.nextState.setStateData(myState.getStateData());\n\t\t\t\t\tmyState = tokenResult.nextState;\n\t\t\t\t}\n\t\t\t\tif (lineStream.pos() <= beforeTokenizeStreamPos) {\n\t\t\t\t\tthrow new Error('Stream did not advance while tokenizing. Mode id is ' + this._mode.getId() + ' (stuck at token type: \"' + tokenResult.type + '\", prepend tokens: \"' + (prependTokens.map(t => t.type).join(',')) + '\").');\n\t\t\t\t}\n\t\t\t} while (!tokenResult.type && tokenResult.type !== '');\n\n\t\t\tif (previousType !== tokenResult.type || tokenResult.dontMergeWithPrev || previousType === null) {\n\t\t\t\tprependTokens.push(new Token(beforeTokenizeStreamPos + deltaOffset, tokenResult.type));\n\t\t\t}\n\n\t\t\tpreviousType = tokenResult.type;\n\n\t\t\tif (this.supportsNestedModes && this.enterNestedMode(myState)) {\n\t\t\t\tvar currentEmbeddedLevels = this._getEmbeddedLevel(myState);\n\t\t\t\tif (currentEmbeddedLevels < TokenizationSupport.MAX_EMBEDDED_LEVELS) {\n\t\t\t\t\tvar nestedModeState = this.getNestedModeInitialState(myState);\n\n\t\t\t\t\t// Re-emit tokenizationSupport change events from all modes that I ever embedded\n\t\t\t\t\tvar embeddedMode = nestedModeState.state.getMode();\n\t\t\t\t\tif (typeof embeddedMode.addSupportChangedListener === 'function' && !this._embeddedModesListeners.hasOwnProperty(embeddedMode.getId())) {\n\t\t\t\t\t\tvar emitting = false;\n\t\t\t\t\t\tthis._embeddedModesListeners[embeddedMode.getId()] = embeddedMode.addSupportChangedListener((e) => {\n\t\t\t\t\t\t\tif (emitting) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (e.tokenizationSupport) {\n\t\t\t\t\t\t\t\temitting = true;\n\t\t\t\t\t\t\t\tthis._mode.setTokenizationSupport((mode) => {\n\t\t\t\t\t\t\t\t\treturn mode.tokenizationSupport;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\temitting = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (!lineStream.eos()) {\n\t\t\t\t\t\t// There is content from the embedded mode\n\t\t\t\t\t\tvar restOfBuffer = buffer.substr(lineStream.pos());\n\t\t\t\t\t\tvar result = this._nestedTokenize(restOfBuffer, nestedModeState.state, deltaOffset + lineStream.pos(), stopAtOffset, prependTokens, prependModeTransitions);\n\t\t\t\t\t\tresult.retokenize = result.retokenize || nestedModeState.missingModePromise;\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Transition to the nested mode state\n\t\t\t\t\t\tmyState = nestedModeState.state;\n\t\t\t\t\t\tretokenize = nestedModeState.missingModePromise;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttokens: prependTokens,\n\t\t\tactualStopOffset: lineStream.pos() + deltaOffset,\n\t\t\tmodeTransitions: prependModeTransitions,\n\t\t\tendState: myState,\n\t\t\tretokenize: retokenize\n\t\t};\n\t}\n\n\tprivate _getEmbeddedLevel(state:modes.IState): number {\n\t\tvar result = -1;\n\t\twhile(state) {\n\t\t\tresult++;\n\t\t\tstate = state.getStateData();\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate enterNestedMode(state:modes.IState): boolean {\n\t\tif (this.defaults.enterNestedMode) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.customization.enterNestedMode(state);\n\n\t}\n\n\tprivate getNestedMode(state:modes.IState): IEnteringNestedModeData {\n\t\tif (this.defaults.getNestedMode) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.customization.getNestedMode(state);\n\t}\n\n\tprivate static _validatedNestedMode(input:IEnteringNestedModeData): IEnteringNestedModeData {\n\t\tvar mode: modes.IMode = new NullMode(),\n\t\t\tmissingModePromise: TPromise<void> = null;\n\n\t\tif (input && input.mode) {\n\t\t\tmode = input.mode;\n\t\t}\n\t\tif (input && input.missingModePromise) {\n\t\t\tmissingModePromise = input.missingModePromise;\n\t\t}\n\n\t\treturn {\n\t\t\tmode: mode,\n\t\t\tmissingModePromise: missingModePromise\n\t\t};\n\t}\n\n\tprivate getNestedModeInitialState(state:modes.IState): { state:modes.IState; missingModePromise:TPromise<void>; } {\n\t\tif (this.defaults.getNestedModeInitialState) {\n\t\t\tvar nestedMode = TokenizationSupport._validatedNestedMode(this.getNestedMode(state));\n\t\t\tvar missingModePromise = nestedMode.missingModePromise;\n\t\t\tvar nestedModeState: modes.IState;\n\n\t\t\tif (nestedMode.mode.tokenizationSupport) {\n\t\t\t\tnestedModeState = nestedMode.mode.tokenizationSupport.getInitialState();\n\t\t\t} else {\n\t\t\t\tnestedModeState = new NullState(nestedMode.mode, null);\n\t\t\t}\n\n\t\t\tnestedModeState.setStateData(state);\n\n\t\t\treturn {\n\t\t\t\tstate: nestedModeState,\n\t\t\t\tmissingModePromise: missingModePromise\n\t\t\t};\n\t\t}\n\t\treturn this.customization.getNestedModeInitialState(state);\n\t}\n\n\tprivate getLeavingNestedModeData(line:string, state:modes.IState): ILeavingNestedModeData {\n\t\tif (this.defaults.getLeavingNestedModeData) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.customization.getLeavingNestedModeData(line, state);\n\t}\n\n\tprivate onReturningFromNestedMode(myStateAfterNestedMode:modes.IState, lastNestedModeState:modes.IState): void {\n\t\tif (this.defaults.onReturningFromNestedMode) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.customization.onReturningFromNestedMode(myStateAfterNestedMode, lastNestedModeState);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/**\n * Create a syntax highighter with a fully declarative JSON style lexer description\n * using regular expressions.\n */\n\nimport * as modes from 'vs/editor/common/modes';\nimport {AbstractState} from 'vs/editor/common/modes/abstractState';\nimport {LineStream} from 'vs/editor/common/modes/lineStream';\nimport * as monarchCommon from 'vs/editor/common/modes/monarch/monarchCommon';\nimport {IEnteringNestedModeData, TokenizationSupport} from 'vs/editor/common/modes/supports/tokenizationSupport';\nimport {IModeService} from 'vs/editor/common/services/modeService';\n\n/**\n * The MonarchLexer class implements a monaco lexer that highlights source code.\n * It takes a compiled lexer to guide the tokenizer and maintains a stack of\n * lexer states.\n */\nexport class MonarchLexer extends AbstractState {\n\n\tstatic ID = 0;\n\n\tprivate modeService:IModeService;\n\n\tprivate id: number;\n\tprivate lexer: monarchCommon.ILexer;\n\tprivate stack: string[];\n\n\tpublic embeddedMode: string;\n\tpublic embeddedEntered: boolean;\n\n\tprivate groupActions: monarchCommon.IAction[];\n\tprivate groupMatches: string[];\n\tprivate groupMatched: string[];\n\tprivate groupRule: monarchCommon.IRule;\n\n\tconstructor(mode: modes.IMode, modeService:IModeService, lexer: monarchCommon.ILexer, stack?: string[], embeddedMode?: string) {\n\t\tsuper(mode);\n\t\tthis.id = MonarchLexer.ID++; // for debugging, assigns unique id to each instance\n\t\tthis.modeService = modeService;\n\n\t\tthis.lexer = lexer; // (compiled) lexer description\n\t\tthis.stack = (stack ? stack : [lexer.start]); // stack of states\n\t\tthis.embeddedMode = (embeddedMode ? embeddedMode : null); // are we scanning an embedded section?\n\n\t\t// did we encounter an embedded start on this line?\n\t\t// no need for cloning or equality since it is used only within a line\n\t\tthis.embeddedEntered = false;\n\n\t\t// regular expression group matching\n\t\t// these never need cloning or equality since they are only used within a line match\n\t\tthis.groupActions = null;\n\t\tthis.groupMatches = null;\n\t\tthis.groupMatched = null;\n\t\tthis.groupRule = null;\n\t}\n\n\tpublic makeClone(): MonarchLexer {\n\t\treturn new MonarchLexer(this.getMode(), this.modeService, this.lexer, this.stack.slice(0), this.embeddedMode);\n\t}\n\n\tpublic equals(other: modes.IState): boolean {\n\t\tif (!super.equals(other)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!(other instanceof MonarchLexer)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherm: MonarchLexer = <MonarchLexer>other;\n\t\tif ((this.stack.length !== otherm.stack.length) || (this.lexer.languageId !== otherm.lexer.languageId) ||\n\t\t\t(this.embeddedMode !== otherm.embeddedMode)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar idx: string;\n\t\tfor (idx in this.stack) {\n\t\t\tif (this.stack.hasOwnProperty(idx)) {\n\t\t\t\tif (this.stack[idx] !== otherm.stack[idx]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * The main tokenizer: this function gets called by monaco to tokenize lines\n\t * Note: we don't want to raise exceptions here and always keep going..\n\t *\n\t * TODO: there are many optimizations possible here for the common cases\n\t * but for now I concentrated on functionality and correctness.\n\t */\n\tpublic tokenize(stream: modes.IStream, noConsumeIsOk?: boolean): modes.ITokenizationResult {\n\t\tvar stackLen0 = this.stack.length;  // these are saved to check progress\n\t\tvar groupLen0 = 0;\n\t\tvar state: string = this.stack[0];  // the current state\n\t\tthis.embeddedEntered = false;\n\n\t\tvar matches: string[] = null;\n\t\tvar matched: string = null;\n\t\tvar action: monarchCommon.IAction = null;\n\t\tvar next: string = null;\n\t\tvar rule: monarchCommon.IRule = null;\n\n\t\t// check if we need to process group matches first\n\t\tif (this.groupActions) {\n\t\t\tgroupLen0 = this.groupActions.length;\n\t\t\tmatches = this.groupMatches;\n\t\t\tmatched = this.groupMatched.shift();\n\t\t\taction = this.groupActions.shift();\n\t\t\trule = this.groupRule;\n\n\t\t\t// cleanup if necessary\n\t\t\tif (this.groupActions.length === 0) {\n\t\t\t\tthis.groupActions = null;\n\t\t\t\tthis.groupMatches = null;\n\t\t\t\tthis.groupMatched = null;\n\t\t\t\tthis.groupRule = null;\n\t\t\t}\n\t\t}\n\t\t\t// otherwise we match on the token stream\n\t\telse {\n\t\t\t// nothing to do\n\t\t\tif (stream.eos()) {\n\t\t\t\treturn { type: '' };\n\t\t\t}\n\n\t\t\t// get the entire line\n\t\t\tvar line = stream.advanceToEOS();\n\t\t\tstream.goBack(line.length);\n\n\t\t\t// get the rules for this state\n\t\t\tvar rules = this.lexer.tokenizer[state];\n\t\t\tif (!rules) {\n\t\t\t\trules = monarchCommon.findRules(this.lexer, state); // do parent matching\n\t\t\t}\n\n\t\t\tif (!rules) {\n\t\t\t\tmonarchCommon.throwError(this.lexer, 'tokenizer state is not defined: ' + state);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// try each rule until we match\n\t\t\t\trule = null;\n\t\t\t\tvar pos = stream.pos();\n\t\t\t\tvar idx: string;\n\t\t\t\tfor (idx in rules) {\n\t\t\t\t\tif (rules.hasOwnProperty(idx)) {\n\t\t\t\t\t\trule = rules[idx];\n\t\t\t\t\t\tif (pos === 0 || !rule.matchOnlyAtLineStart) {\n\t\t\t\t\t\t\tmatches = line.match(rule.regex);\n\t\t\t\t\t\t\tif (matches) {\n\t\t\t\t\t\t\t\tmatched = matches[0];\n\t\t\t\t\t\t\t\taction = rule.action;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// We matched 'rule' with 'matches' and 'action'\n\t\tif (!matches) {\n\t\t\tmatches = [''];\n\t\t\tmatched = '';\n\t\t}\n\t\tif (!action) {\n\t\t\t// bad: we didn't match anything, and there is no action to take\n\t\t\t// we need to advance the stream or we get progress trouble\n\t\t\tif (!stream.eos()) {\n\t\t\t\tmatches = [stream.peek()];\n\t\t\t\tmatched = matches[0];\n\t\t\t}\n\t\t\taction = this.lexer.defaultToken;\n\t\t}\n\n\t\t// advance stream\n\t\tstream.advance(matched.length);\n\n\t\t// maybe call action function (used for 'cases')\n\t\twhile (action.test) {\n\t\t\tvar callres = action.test(matched, matches, state, stream.eos());\n\t\t\taction = callres;\n\t\t}\n\n\t\t// set the result: either a string or an array of actions\n\t\tvar result = null;\n\t\tif (typeof (action) === 'string' || Array.isArray(action)) {\n\t\t\tresult = action;\n\t\t}\n\t\telse if (action.group) {\n\t\t\tresult = action.group;\n\t\t}\n\t\telse if (action.token !== null && action.token !== undefined) {\n\t\t\tresult = action.token;\n\n\t\t\t// do $n replacements?\n\t\t\tif (action.tokenSubst) {\n\t\t\t\tresult = monarchCommon.substituteMatches(this.lexer, result, matched, matches, state);\n\t\t\t}\n\n\t\t\t// enter embedded mode?\n\t\t\tif (action.nextEmbedded) {\n\t\t\t\tif (action.nextEmbedded === '@pop') {\n\t\t\t\t\tif (!this.embeddedMode) {\n\t\t\t\t\t\tmonarchCommon.throwError(this.lexer, 'cannot pop embedded mode if not inside one');\n\t\t\t\t\t}\n\t\t\t\t\tthis.embeddedMode = null;\n\t\t\t\t}\n\t\t\t\telse if (this.embeddedMode) {\n\t\t\t\t\tmonarchCommon.throwError(this.lexer, 'cannot enter embedded mode from within an embedded mode');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.embeddedMode = monarchCommon.substituteMatches(this.lexer, action.nextEmbedded, matched, matches, state);\n\n\t\t\t\t\t// substitute language alias to known modes to support syntax highlighting\n\t\t\t\t\tvar embeddedMode = this.modeService.getModeIdForLanguageName(this.embeddedMode);\n\t\t\t\t\tif (this.embeddedMode && embeddedMode) {\n\t\t\t\t\t\tthis.embeddedMode = embeddedMode;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.embeddedEntered = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// state transformations\n\t\t\tif (action.goBack) { // back up the stream..\n\t\t\t\tstream.goBack(action.goBack);\n\t\t\t}\n\t\t\tif (action.switchTo && typeof action.switchTo === 'string') {\n\t\t\t\tvar nextState = monarchCommon.substituteMatches(this.lexer, action.switchTo, matched, matches, state);  // switch state without a push...\n\t\t\t\tif (nextState[0] === '@') {\n\t\t\t\t\tnextState = nextState.substr(1); // peel off starting '@'\n\t\t\t\t}\n\t\t\t\tif (!monarchCommon.findRules(this.lexer, nextState)) {\n\t\t\t\t\tmonarchCommon.throwError(this.lexer, 'trying to switch to a state \\'' + nextState + '\\' that is undefined in rule: ' + rule.name);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.stack[0] = nextState;\n\t\t\t\t}\n\t\t\t\tnext = null;\n\t\t\t}\n\t\t\telse if (action.transform && typeof action.transform === 'function') {\n\t\t\t\tthis.stack = action.transform(this.stack); // if you need to do really funky stuff...\n\t\t\t\tnext = null;\n\t\t\t}\n\t\t\telse if (action.next) {\n\t\t\t\tif (action.next === '@push') {\n\t\t\t\t\tif (this.stack.length >= this.lexer.maxStack) {\n\t\t\t\t\t\tmonarchCommon.throwError(this.lexer, 'maximum tokenizer stack size reached: [' +\n\t\t\t\t\t\t\tthis.stack[0] + ',' + this.stack[1] + ',...,' +\n\t\t\t\t\t\t\tthis.stack[this.stack.length - 2] + ',' + this.stack[this.stack.length - 1] + ']');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.stack.unshift(state);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (action.next === '@pop') {\n\t\t\t\t\tif (this.stack.length <= 1) {\n\t\t\t\t\t\tmonarchCommon.throwError(this.lexer, 'trying to pop an empty stack in rule: ' + rule.name);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.stack.shift();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (action.next === '@popall') {\n\t\t\t\t\tif (this.stack.length > 1) {\n\t\t\t\t\t\tthis.stack = [this.stack[this.stack.length - 1]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar nextState = monarchCommon.substituteMatches(this.lexer, action.next, matched, matches, state);\n\t\t\t\t\tif (nextState[0] === '@') {\n\t\t\t\t\t\tnextState = nextState.substr(1); // peel off starting '@'\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!monarchCommon.findRules(this.lexer, nextState)) {\n\t\t\t\t\t\tmonarchCommon.throwError(this.lexer, 'trying to set a next state \\'' + nextState + '\\' that is undefined in rule: ' + rule.name);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.stack.unshift(nextState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (action.log && typeof (action.log) === 'string') {\n\t\t\t\tmonarchCommon.log(this.lexer, this.lexer.languageId + ': ' + monarchCommon.substituteMatches(this.lexer, action.log, matched, matches, state));\n\t\t\t}\n\t\t}\n\n\t\t// check result\n\t\tif (result === null) {\n\t\t\tmonarchCommon.throwError(this.lexer, 'lexer rule has no well-defined action in rule: ' + rule.name);\n\t\t\tresult = this.lexer.defaultToken;\n\t\t}\n\n\t\t// is the result a group match?\n\t\tif (Array.isArray(result)) {\n\t\t\tif (this.groupActions && this.groupActions.length > 0) {\n\t\t\t\tmonarchCommon.throwError(this.lexer, 'groups cannot be nested: ' + rule.name);\n\t\t\t}\n\t\t\tif (matches.length !== result.length + 1) {\n\t\t\t\tmonarchCommon.throwError(this.lexer, 'matched number of groups does not match the number of actions in rule: ' + rule.name);\n\t\t\t}\n\t\t\tvar totalLen = 0;\n\t\t\tfor (var i = 1; i < matches.length; i++) {\n\t\t\t\ttotalLen += matches[i].length;\n\t\t\t}\n\t\t\tif (totalLen !== matched.length) {\n\t\t\t\tmonarchCommon.throwError(this.lexer, 'with groups, all characters should be matched in consecutive groups in rule: ' + rule.name);\n\t\t\t}\n\t\t\tthis.groupMatches = matches;\n\t\t\tthis.groupMatched = matches.slice(1);\n\t\t\tthis.groupActions = result.slice(0);\n\t\t\tthis.groupRule = rule;\n\t\t\tstream.goBack(matched.length);\n\t\t\treturn this.tokenize(stream);  // call recursively to initiate first result match\n\t\t}\n\t\t\t// regular result\n\t\telse {\n\t\t\t// check for '@rematch'\n\t\t\tif (result === '@rematch') {\n\t\t\t\tstream.goBack(matched.length);\n\t\t\t\tmatched = '';  // better set the next state too..\n\t\t\t\tmatches = null;\n\t\t\t\tresult = '';\n\t\t\t}\n\n\t\t\t// check progress\n\t\t\tif (matched.length === 0) {\n\t\t\t\tif (stackLen0 !== this.stack.length || state !== this.stack[0]\n\t\t\t\t\t|| (!this.groupActions ? 0 : this.groupActions.length) !== groupLen0) {\n\t\t\t\t\tif (!noConsumeIsOk) { // used for nested modes..\n\t\t\t\t\t\treturn this.tokenize(stream); // tokenize again in the new state\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmonarchCommon.throwError(this.lexer, 'no progress in tokenizer in rule: ' + rule.name);\n\t\t\t\t\tstream.advanceToEOS(); // must make progress or editor loops\n\t\t\t\t\t// result='';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// return the result (and check for brace matching)\n\t\t\t// todo: for efficiency we could pre-sanitize tokenPostfix and substitutions\n\t\t\tif (result.indexOf('@brackets') === 0) {\n\t\t\t\tvar rest = result.substr('@brackets'.length);\n\t\t\t\tvar bracket = findBracket(this.lexer, matched);\n\t\t\t\tif (!bracket) {\n\t\t\t\t\tmonarchCommon.throwError(this.lexer, '@brackets token returned but no bracket defined as: ' + matched);\n\t\t\t\t\tbracket = { token: '', bracketType: monarchCommon.MonarchBracket.None };\n\t\t\t\t}\n\t\t\t\treturn { type: monarchCommon.sanitize(bracket.token + rest) };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar token = (result === '' ? '' : result + this.lexer.tokenPostfix);\n\t\t\t\treturn { type: monarchCommon.sanitize(token) };\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Searches for a bracket in the 'brackets' attribute that matches the input.\n */\nfunction findBracket(lexer: monarchCommon.ILexer, matched: string) {\n\tif (!matched) {\n\t\treturn null;\n\t}\n\tmatched = monarchCommon.fixCase(lexer, matched);\n\n\tvar brackets = lexer.brackets;\n\tfor (var i = 0; i < brackets.length; i++) {\n\t\tvar bracket = brackets[i];\n\t\tif (bracket.open === matched) {\n\t\t\treturn { token: bracket.token, bracketType: monarchCommon.MonarchBracket.Open };\n\t\t}\n\t\telse if (bracket.close === matched) {\n\t\t\treturn { token: bracket.token, bracketType: monarchCommon.MonarchBracket.Close };\n\t\t}\n\t}\n\treturn null;\n}\n\nexport function createTokenizationSupport(modeService:IModeService, mode:modes.IMode, lexer: monarchCommon.ILexer): modes.ITokenizationSupport {\n\treturn new TokenizationSupport(mode, {\n\t\tgetInitialState: (): modes.IState => {\n\t\t\treturn new MonarchLexer(mode, modeService, lexer);\n\t\t},\n\n\t\tenterNestedMode: (state: modes.IState): boolean => {\n\t\t\tif (state instanceof MonarchLexer) {\n\t\t\t\treturn state.embeddedEntered;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tgetNestedMode: (rawState: modes.IState): IEnteringNestedModeData => {\n\t\t\tvar mime = (<MonarchLexer>rawState).embeddedMode;\n\n\t\t\tif (!modeService.isRegisteredMode(mime)) {\n\t\t\t\t// unknown mode\n\t\t\t\treturn {\n\t\t\t\t\tmode: modeService.getMode('text/plain'),\n\t\t\t\t\tmissingModePromise: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar mode = modeService.getMode(mime);\n\t\t\tif (mode) {\n\t\t\t\t// mode is available\n\t\t\t\treturn {\n\t\t\t\t\tmode: mode,\n\t\t\t\t\tmissingModePromise: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// mode is not yet loaded\n\t\t\treturn {\n\t\t\t\tmode: modeService.getMode('text/plain'),\n\t\t\t\tmissingModePromise: modeService.getOrCreateMode(mime).then(() => null)\n\t\t\t};\n\t\t},\n\n\t\tgetLeavingNestedModeData: (line: string, state: modes.IState) => {\n\t\t\t// state = state.clone();\n\t\t\tvar mstate = <MonarchLexer>state.clone();\n\t\t\tvar stream = new LineStream(line);\n\t\t\twhile (!stream.eos() && mstate.embeddedMode) {\n\t\t\t\tmstate.tokenize(stream, true); // allow no consumption for @rematch\n\t\t\t}\n\t\t\tif (mstate.embeddedMode) {\n\t\t\t\treturn null;  // don't leave yet\n\t\t\t}\n\n\t\t\tvar end = stream.pos();\n\t\t\treturn {\n\t\t\t\tnestedModeBuffer: line.substring(0, end),\n\t\t\t\tbufferAfterNestedMode: line.substring(end),\n\t\t\t\tstateAfterNestedMode: mstate\n\t\t\t};\n\t\t}\n\t}, lexer.usesEmbedded);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport class PrefixSumIndexOfResult {\n\t_prefixSumIndexOfResultBrand: void;\n\n\tindex: number;\n\tremainder: number;\n\n\tconstructor(index:number, remainder:number) {\n\t\tthis.index = index;\n\t\tthis.remainder = remainder;\n\t}\n}\n\nexport class PrefixSumComputer {\n\n\t/**\n\t * values[i] is the value at index i\n\t */\n\tprivate values:number[];\n\n\t/**\n\t * prefixSum[i] = SUM(heights[j]), 0 <= j <= i\n\t */\n\tprivate prefixSum:number[];\n\n\t/**\n\t * prefixSum[i], 0 <= i <= prefixSumValidIndex can be trusted\n\t */\n\tprivate prefixSumValidIndex:number;\n\n\tconstructor(values:number[]) {\n\t\tthis.values = values;\n\t\tthis.prefixSum = [];\n\t\tfor (let i = 0, len = this.values.length; i < len; i++) {\n\t\t\tthis.prefixSum[i] = 0;\n\t\t}\n\t\tthis.prefixSumValidIndex = -1;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this.values.length;\n\t}\n\n\tpublic insertValue(insertIndex:number, value:number): void {\n\t\tinsertIndex = Math.floor(insertIndex); //@perf\n\t\tvalue = Math.floor(value); //@perf\n\n\t\tthis.values.splice(insertIndex, 0, value);\n\t\tthis.prefixSum.splice(insertIndex, 0, 0);\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex) {\n\t\t\tthis.prefixSumValidIndex = insertIndex - 1;\n\t\t}\n\t}\n\n\tpublic insertValues(insertIndex: number, values: number[]): void {\n\t\tinsertIndex = Math.floor(insertIndex); //@perf\n\n\t\tif (values.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.values = this.values.slice(0, insertIndex).concat(values).concat(this.values.slice(insertIndex));\n\t\tthis.prefixSum = this.prefixSum.slice(0, insertIndex).concat(PrefixSumComputer._zeroArray(values.length)).concat(this.prefixSum.slice(insertIndex));\n\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex) {\n\t\t\tthis.prefixSumValidIndex = insertIndex - 1;\n\t\t}\n\t}\n\n\tprivate static _zeroArray(count: number): number[] {\n\t\tcount = Math.floor(count); //@perf\n\n\t\tlet r: number[] = [];\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tr[i] = 0;\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic changeValue(index:number, value:number): void {\n\t\tindex = Math.floor(index); //@perf\n\t\tvalue = Math.floor(value); //@perf\n\n\t\tif (this.values[index] === value) {\n\t\t\treturn;\n\t\t}\n\t\tthis.values[index] = value;\n\t\tif (index - 1 < this.prefixSumValidIndex) {\n\t\t\tthis.prefixSumValidIndex = index - 1;\n\t\t}\n\t}\n\n\tpublic removeValues(startIndex:number, cnt:number): void {\n\t\tstartIndex = Math.floor(startIndex); //@perf\n\t\tcnt = Math.floor(cnt); //@perf\n\n\t\tthis.values.splice(startIndex, cnt);\n\t\tthis.prefixSum.splice(startIndex, cnt);\n\t\tif (startIndex - 1 < this.prefixSumValidIndex) {\n\t\t\tthis.prefixSumValidIndex = startIndex - 1;\n\t\t}\n\t}\n\n\tpublic getTotalValue(): number {\n\t\tif (this.values.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this.getAccumulatedValue(this.values.length - 1);\n\t}\n\n\tpublic getAccumulatedValue(index:number): number {\n\t\tindex = Math.floor(index); //@perf\n\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (index <= this.prefixSumValidIndex) {\n\t\t\treturn this.prefixSum[index];\n\t\t}\n\n\t\tlet startIndex = this.prefixSumValidIndex + 1;\n\t\tif (startIndex === 0) {\n\t\t\tthis.prefixSum[0] = this.values[0];\n\t\t\tstartIndex++;\n\t\t}\n\n\t\tif (index >= this.values.length) {\n\t\t\tindex = this.values.length - 1;\n\t\t}\n\n\t\tfor (let i = startIndex; i <= index; i++) {\n\t\t\tthis.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n\t\t}\n\t\tthis.prefixSumValidIndex = Math.max(this.prefixSumValidIndex, index);\n\t\treturn this.prefixSum[index];\n\t}\n\n\tpublic getIndexOf(accumulatedValue:number): PrefixSumIndexOfResult {\n\t\taccumulatedValue = Math.floor(accumulatedValue); //@perf\n\n\t\tlet low = 0;\n\t\tlet high = this.values.length - 1;\n\t\tlet mid:number;\n\t\tlet midStop:number;\n\t\tlet midStart:number;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ( (high-low)/2 ) | 0;\n\n\t\t\tmidStop = this.getAccumulatedValue(mid);\n\t\t\tmidStart = midStop - this.values[mid];\n\n\t\t\tif (accumulatedValue < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (accumulatedValue >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport objects = require('vs/base/common/objects');\nimport platform = require('vs/base/common/platform');\nimport types = require('vs/base/common/types');\nimport arrays = require('vs/base/common/arrays');\nimport strings = require('vs/base/common/strings');\nimport {IAction} from 'vs/base/common/actions';\nimport {IXHRResponse} from 'vs/base/common/http';\nimport Severity from 'vs/base/common/severity';\nimport { TPromise } from 'vs/base/common/winjs.base';\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function(e: any) {\n\t\t\tplatform.setTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\tpublic addListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tpublic setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tpublic getUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tpublic onUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n}\n\nexport let errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): void {\n\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n}\n\nexport function onUnexpectedPromiseError<T>(promise: TPromise<T>): TPromise<T> {\n\treturn promise.then<T>(null, onUnexpectedError);\n}\n\nexport interface IConnectionErrorData {\n\tstatus: number;\n\tstatusText?: string;\n\tresponseText?: string;\n}\n\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet {name, message} = error;\n\t\tlet stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n/**\n * The base class for all connection errors originating from XHR requests.\n */\nexport class ConnectionError implements Error {\n\tpublic status: number;\n\tpublic statusText: string;\n\tpublic responseText: string;\n\tpublic errorMessage: string;\n\tpublic errorCode: string;\n\tpublic errorObject: any;\n\tpublic name: string;\n\n\tconstructor(mixin: IConnectionErrorData);\n\tconstructor(request: IXHRResponse);\n\tconstructor(arg: any) {\n\t\tthis.status = arg.status;\n\t\tthis.statusText = arg.statusText;\n\t\tthis.name = 'ConnectionError';\n\n\t\ttry {\n\t\t\tthis.responseText = arg.responseText;\n\t\t} catch (e) {\n\t\t\tthis.responseText = '';\n\t\t}\n\n\t\tthis.errorMessage = null;\n\t\tthis.errorCode = null;\n\t\tthis.errorObject = null;\n\n\t\tif (this.responseText) {\n\t\t\ttry {\n\t\t\t\tlet errorObj = JSON.parse(this.responseText);\n\t\t\t\tthis.errorMessage = errorObj.message;\n\t\t\t\tthis.errorCode = errorObj.code;\n\t\t\t\tthis.errorObject = errorObj;\n\t\t\t} catch (error) {\n\t\t\t\t// Ignore\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get message(): string {\n\t\treturn this.connectionErrorToMessage(this, false);\n\t}\n\n\tpublic get verboseMessage(): string {\n\t\treturn this.connectionErrorToMessage(this, true);\n\t}\n\n\tprivate connectionErrorDetailsToMessage(error: ConnectionError, verbose: boolean): string {\n\t\tlet errorCode = error.errorCode;\n\t\tlet errorMessage = error.errorMessage;\n\n\t\tif (errorCode !== null && errorMessage !== null) {\n\t\t\treturn nls.localize(\n\t\t\t\t{\n\t\t\t\t\tkey: 'message',\n\t\t\t\t\tcomment: [\n\t\t\t\t\t\t'{0} represents the error message',\n\t\t\t\t\t\t'{1} represents the error code'\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"{0}. Error code: {1}\",\n\t\t\t\tstrings.rtrim(errorMessage, '.'), errorCode);\n\t\t}\n\n\t\tif (errorMessage !== null) {\n\t\t\treturn errorMessage;\n\t\t}\n\n\t\tif (verbose && error.responseText !== null) {\n\t\t\treturn error.responseText;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate connectionErrorToMessage(error: ConnectionError, verbose: boolean): string {\n\t\tlet details = this.connectionErrorDetailsToMessage(error, verbose);\n\n\t\t// Status Code based Error\n\t\tif (error.status === 401) {\n\t\t\tif (details !== null) {\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: 'error.permission.verbose',\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t'{0} represents detailed information why the permission got denied'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"Permission Denied (HTTP {0})\",\n\t\t\t\t\tdetails);\n\t\t\t}\n\n\t\t\treturn nls.localize('error.permission', \"Permission Denied\");\n\t\t}\n\n\t\t// Return error details if present\n\t\tif (details) {\n\t\t\treturn details;\n\t\t}\n\n\t\t// Fallback to HTTP Status and Code\n\t\tif (error.status > 0 && error.statusText !== null) {\n\t\t\tif (verbose && error.responseText !== null && error.responseText.length > 0) {\n\t\t\t\treturn nls.localize('error.http.verbose', \"{0} (HTTP {1}: {2})\", error.statusText, error.status, error.responseText);\n\t\t\t}\n\n\t\t\treturn nls.localize('error.http', \"{0} (HTTP {1})\", error.statusText, error.status);\n\t\t}\n\n\t\t// Finally its an Unknown Connection Error\n\t\tif (verbose && error.responseText !== null && error.responseText.length > 0) {\n\t\t\treturn nls.localize('error.connection.unknown.verbose', \"Unknown Connection Error ({0})\", error.responseText);\n\t\t}\n\n\t\treturn nls.localize('error.connection.unknown', \"An unknown connection error occurred. Either you are no longer connected to the internet or the server you are connected to is offline.\");\n\t}\n}\n\n// Bug: Can not subclass a JS Type. Do it manually (as done in WinJS.Class.derive)\nobjects.derive(Error, ConnectionError);\n\nfunction xhrToErrorMessage(xhr: IConnectionErrorData, verbose: boolean): string {\n\tlet ce = new ConnectionError(xhr);\n\tif (verbose) {\n\t\treturn ce.verboseMessage;\n\t} else {\n\t\treturn ce.message;\n\t}\n}\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (exception.message) {\n\t\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), exception.stack || exception.stacktrace);\n\t\t}\n\n\t\treturn detectSystemErrorMessage(exception);\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occured ({0})\", exception.message);\n\t}\n\n\treturn exception.message;\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tlet errors: any[] = arrays.coalesce(error);\n\t\tlet msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (!types.isUndefinedOrNull(error.status)) {\n\t\treturn xhrToErrorMessage(error, verbose);\n\t}\n\n\tif (error.detail) {\n\t\tlet detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\tif (detail.error && !types.isUndefinedOrNull(detail.error.status)) {\n\t\t\t\treturn xhrToErrorMessage(detail.error, verbose);\n\t\t\t}\n\n\t\t\tif (types.isArray(detail.error)) {\n\t\t\t\tfor (let i = 0; i < detail.error.length; i++) {\n\t\t\t\t\tif (detail.error[i] && !types.isUndefinedOrNull(detail.error[i].status)) {\n\t\t\t\t\t\treturn xhrToErrorMessage(detail.error[i], verbose);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t\t}\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\tif (!types.isUndefinedOrNull(detail.exception.status)) {\n\t\t\t\treturn xhrToErrorMessage(detail.exception, verbose);\n\t\t\t}\n\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tlet error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\n/**\n * Returns an error that signals something is not implemented.\n */\nexport function notImplemented(): Error {\n\treturn new Error(nls.localize('notImplementedError', \"Not Implemented\"));\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(nls.localize('illegalArgumentError', \"Illegal argument: {0}\", name));\n\t} else {\n\t\treturn new Error(nls.localize('illegalArgumentError2', \"Illegal argument\"));\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(nls.localize('illegalStateError', \"Illegal state: {0}\", name));\n\t} else {\n\t\treturn new Error(nls.localize('illegalStateError2', \"Illegal state\"));\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function loaderError(err: Error): Error {\n\tif (platform.isWeb) {\n\t\treturn new Error(nls.localize('loaderError', \"Failed to load a required file. Either you are no longer connected to the internet or the server you are connected to is offline. Please refresh the browser to try again.\"));\n\t}\n\n\treturn new Error(nls.localize('loaderErrorNative', \"Failed to load a required file. Please restart the application to try again. Details: {0}\", JSON.stringify(err)));\n}\n\nexport interface IErrorOptions {\n\tseverity?: Severity;\n\tactions?: IAction[];\n}\n\nexport function create(message: string, options: IErrorOptions = {}): Error {\n\tlet result = new Error(message);\n\n\tif (types.isNumber(options.severity)) {\n\t\t(<any>result).severity = options.severity;\n\t}\n\n\tif (options.actions) {\n\t\t(<any>result).actions = options.actions;\n\t}\n\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {onUnexpectedError} from 'vs/base/common/errors';\n\nexport default class CallbackList {\n\n\tprivate _callbacks: Function[];\n\tprivate _contexts: any[];\n\n\tpublic add(callback: Function, context: any = null, bucket?: IDisposable[]): void {\n\t\tif (!this._callbacks) {\n\t\t\tthis._callbacks = [];\n\t\t\tthis._contexts = [];\n\t\t}\n\t\tthis._callbacks.push(callback);\n\t\tthis._contexts.push(context);\n\n\t\tif (Array.isArray(bucket)) {\n\t\t\tbucket.push({ dispose: () => this.remove(callback, context) });\n\t\t}\n\t}\n\n\tpublic remove(callback: Function, context: any = null): void {\n\t\tif (!this._callbacks) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet foundCallbackWithDifferentContext = false;\n\t\tfor (var i = 0, len = this._callbacks.length; i < len; i++) {\n\t\t\tif (this._callbacks[i] === callback) {\n\t\t\t\tif (this._contexts[i] === context) {\n\t\t\t\t\t// callback & context match => remove it\n\t\t\t\t\tthis._callbacks.splice(i, 1);\n\t\t\t\t\tthis._contexts.splice(i, 1);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tfoundCallbackWithDifferentContext = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (foundCallbackWithDifferentContext) {\n\t\t\tthrow new Error('When adding a listener with a context, you should remove it with the same context');\n\t\t}\n\t}\n\n\tpublic invoke(...args: any[]): any[] {\n\t\tif (!this._callbacks) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ret: any[] = [],\n\t\t\tcallbacks = this._callbacks.slice(0),\n\t\t\tcontexts = this._contexts.slice(0);\n\n\t\tfor (var i = 0, len = callbacks.length; i < len; i++) {\n\t\t\ttry {\n\t\t\t\tret.push(callbacks[i].apply(contexts[i], args));\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic isEmpty(): boolean {\n\t\treturn !this._callbacks || this._callbacks.length === 0;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._callbacks = undefined;\n\t\tthis._contexts = undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IDisposable}  from 'vs/base/common/lifecycle';\nimport CallbackList from 'vs/base/common/callbackList';\nimport {EventEmitter} from 'vs/base/common/eventEmitter';\nimport {TPromise} from 'vs/base/common/winjs.base';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\ninterface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n}\n\nnamespace Event {\n\tconst _disposable = { dispose() { } };\n\texport const None: Event<any> = function() { return _disposable; };\n}\n\nexport default Event;\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonLastListenerRemove?: Function;\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static _noop = function () { };\n\n\tprivate _event: Event<T>;\n\tprivate _callbacks: CallbackList;\n\tprivate _disposed: boolean;\n\n\tconstructor(private _options?: EmitterOptions) {\n\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any,  thisArgs?: any, disposables?: IDisposable[]) => {\n\t\t\t\tif (!this._callbacks) {\n\t\t\t\t\tthis._callbacks = new CallbackList();\n\t\t\t\t}\n\t\t\t\tif (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\t\t\t\tthis._callbacks.add(listener, thisArgs);\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tthis._callbacks.remove(listener, thisArgs);\n\t\t\t\t\t\t\tif(this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif(Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event?: T): any {\n\t\tif (this._callbacks) {\n\t\t\tthis._callbacks.invoke.call(this._callbacks, event);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif(this._callbacks) {\n\t\t\tthis._callbacks.dispose();\n\t\t\tthis._callbacks = undefined;\n\t\t\tthis._disposed = true;\n\t\t}\n\t}\n}\n\n/**\n * Creates an Event which is backed-up by the event emitter. This allows\n * to use the existing eventing pattern and is likely using less memory.\n * Sample:\n *\n * \tclass Document {\n *\n *\t\tprivate _eventbus = new EventEmitter();\n *\n *\t\tpublic onDidChange = fromEventEmitter(this._eventbus, 'changed');\n *\n *\t\t// getter-style\n *\t\t// get onDidChange(): Event<(value:string)=>any> {\n *\t\t// \tcache fromEventEmitter result and return\n *\t\t// }\n *\n *\t\tprivate _doIt() {\n *\t\t\t// ...\n *\t\t\tthis._eventbus.emit('changed', value)\n *\t\t}\n *\t}\n */\nexport function fromEventEmitter<T>(emitter: EventEmitter, eventType: string): Event<T> {\n\treturn function (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable {\n\t\tconst result = emitter.addListener2(eventType, function () {\n\t\t\tlistener.apply(thisArgs, arguments);\n\t\t});\n\t\tif(Array.isArray(disposables)) {\n\t\t\tdisposables.push(result);\n\t\t}\n\t\treturn result;\n\t};\n}\n\nexport function fromPromise<T>(promise: TPromise<Event<T>>): Event<T> {\n\tlet toCancel: TPromise<any> = null;\n\tlet listener: IDisposable = null;\n\n\tconst emitter = new Emitter<T>({\n\t\tonFirstListenerAdd() {\n\t\t\ttoCancel = promise.then(\n\t\t\t\tevent => listener = event(e => emitter.fire(e)),\n\t\t\t\t() => null\n\t\t\t);\n\t\t},\n\t\tonLastListenerRemove() {\n\t\t\tif (toCancel) {\n\t\t\t\ttoCancel.cancel();\n\t\t\t\ttoCancel = null;\n\t\t\t}\n\n\t\t\tif (listener) {\n\t\t\t\tlistener.dispose();\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn emitter.event;\n}\n\nexport function mapEvent<I,O>(event: Event<I>, map: (i:I)=>O): Event<O> {\n\treturn (listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables);\n}\n\nexport function filterEvent<T>(event: Event<T>, filter: (e:T)=>boolean): Event<T> {\n\treturn (listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables);\n}\n\nexport function debounceEvent<I, O>(event: Event<I>, merger: (last: O, event: I) => O, delay: number = 100): Event<O> {\n\n\tlet subscription: IDisposable;\n\tlet output: O;\n\tlet handle: number;\n\n\tconst emitter = new Emitter<O>({\n\t\tonFirstListenerAdd() {\n\t\t\tsubscription = event(cur => {\n\t\t\t\toutput = merger(output, cur);\n\t\t\t\tclearTimeout(handle);\n\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\tlet _output = output;\n\t\t\t\t\toutput = undefined;\n\t\t\t\t\temitter.fire(_output);\n\t\t\t\t}, delay);\n\t\t\t});\n\t\t},\n\t\tonLastListenerRemove() {\n\t\t\tsubscription.dispose();\n\t\t}\n\t});\n\n\treturn emitter.event;\n}\n\nenum EventDelayerState {\n\tIdle,\n\tRunning\n}\n\n/**\n * The EventDelayer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.delay(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.wrap(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, void 0, disposables);\n\t\t};\n\t}\n\n\tbufferEvents(fn: () => void): void {\n\t\tconst buffer = [];\n\t\tthis.buffers.push(buffer);\n\t\tfn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport Event, {Emitter} from 'vs/base/common/event';\n\nexport interface CancellationToken {\n\tisCancellationRequested: boolean;\n\tonCancellationRequested: Event<any>;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function(callback, context?) {\n\tlet handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any>;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis._emitter = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token: CancellationToken;\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\t\t} else {\n\t\t\t(<MutableToken>this._token).cancel();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Errors = require('vs/base/common/errors');\nimport {IDisposable} from 'vs/base/common/lifecycle';\n\nexport class EmitterEvent {\n\n\tprivate _type:string;\n\tprivate _data:any;\n\n\tconstructor(eventType:string=null, data:any=null) {\n\t\tthis._type = eventType;\n\t\tthis._data = data;\n\t}\n\n\tpublic getType():string {\n\t\treturn this._type;\n\t}\n\n\tpublic getData():any {\n\t\treturn this._data;\n\t}\n}\n\nexport interface ListenerCallback {\n\t(value:any):void;\n}\n\nexport interface BulkListenerCallback {\n\t(value:EmitterEvent[]):void;\n}\n\nexport interface IEventEmitter extends IDisposable {\n\taddListener2(eventType:string, listener:ListenerCallback):IDisposable;\n\taddOneTimeDisposableListener(eventType:string, listener:ListenerCallback):IDisposable;\n\taddBulkListener2(listener:BulkListenerCallback):IDisposable;\n\taddEmitter2(eventEmitter:IEventEmitter):IDisposable;\n}\n\nexport interface IListenersMap {\n\t[key:string]:ListenerCallback[];\n}\n\nexport class EventEmitter implements IEventEmitter {\n\n\tprotected _listeners:IListenersMap;\n\tprotected _bulkListeners:ListenerCallback[];\n\tprivate _collectedEvents:EmitterEvent[];\n\tprivate _deferredCnt:number;\n\tprivate _allowedEventTypes:{[eventType:string]:boolean;};\n\n\tconstructor(allowedEventTypes:string[] = null) {\n\t\tthis._listeners = {};\n\t\tthis._bulkListeners = [];\n\t\tthis._collectedEvents = [];\n\t\tthis._deferredCnt = 0;\n\t\tif (allowedEventTypes) {\n\t\t\tthis._allowedEventTypes = {};\n\t\t\tfor (var i = 0; i < allowedEventTypes.length; i++) {\n\t\t\t\tthis._allowedEventTypes[allowedEventTypes[i]] = true;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._allowedEventTypes = null;\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._listeners = {};\n\t\tthis._bulkListeners = [];\n\t\tthis._collectedEvents = [];\n\t\tthis._deferredCnt = 0;\n\t\tthis._allowedEventTypes = null;\n\t}\n\n\tprivate addListener(eventType:string, listener:ListenerCallback):IDisposable {\n\t\tif (eventType === '*') {\n\t\t\tthrow new Error('Use addBulkListener(listener) to register your listener!');\n\t\t}\n\n\t\tif (this._allowedEventTypes && !this._allowedEventTypes.hasOwnProperty(eventType)) {\n\t\t\tthrow new Error('This object will never emit this event type!');\n\t\t}\n\n\t\tif (this._listeners.hasOwnProperty(eventType)) {\n\t\t\tthis._listeners[eventType].push(listener);\n\t\t} else {\n\t\t\tthis._listeners[eventType] = [listener];\n\t\t}\n\n\t\tvar bound = this;\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tif (!bound) {\n\t\t\t\t\t// Already called\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tbound._removeListener(eventType, listener);\n\n\t\t\t\t// Prevent leakers from holding on to the event emitter\n\t\t\t\tbound = null;\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic addListener2(eventType:string, listener:ListenerCallback):IDisposable {\n\t\treturn this.addListener(eventType, listener);\n\t}\n\n\tpublic addOneTimeDisposableListener(eventType:string, listener:ListenerCallback):IDisposable {\n\t\tconst disposable = this.addListener(eventType, value => {\n\t\t\tdisposable.dispose();\n\t\t\tlistener(value);\n\t\t});\n\t\t\n\t\treturn disposable;\n\t}\n\n\tprotected addBulkListener(listener:BulkListenerCallback):IDisposable {\n\n\t\tthis._bulkListeners.push(listener);\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis._removeBulkListener(listener);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic addBulkListener2(listener:BulkListenerCallback):IDisposable {\n\t\treturn this.addBulkListener(listener);\n\t}\n\n\tprivate addEmitter(eventEmitter:IEventEmitter):IDisposable {\n\t\treturn eventEmitter.addBulkListener2((events:EmitterEvent[]):void => {\n\t\t\tvar newEvents = events;\n\n\t\t\tif (this._deferredCnt === 0) {\n\t\t\t\tthis._emitEvents(<EmitterEvent[]>newEvents);\n\t\t\t} else {\n\t\t\t\t// Collect for later\n\t\t\t\tthis._collectedEvents.push.apply(this._collectedEvents, newEvents);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic addEmitter2(eventEmitter:IEventEmitter):IDisposable {\n\t\treturn this.addEmitter(eventEmitter);\n\t}\n\n\tprivate _removeListener(eventType:string, listener:ListenerCallback): void {\n\t\tif (this._listeners.hasOwnProperty(eventType)) {\n\t\t\tvar listeners = this._listeners[eventType];\n\t\t\tfor (var i = 0, len = listeners.length; i < len; i++) {\n\t\t\t\tif (listeners[i] === listener) {\n\t\t\t\t\tlisteners.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprivate _removeBulkListener(listener:BulkListenerCallback): void {\n\t\tfor (var i = 0, len = this._bulkListeners.length; i < len; i++) {\n\t\t\tif (this._bulkListeners[i] === listener) {\n\t\t\t\tthis._bulkListeners.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _emitToSpecificTypeListeners(eventType:string, data:any): void {\n\t\tif (this._listeners.hasOwnProperty(eventType)) {\n\t\t\tvar listeners = this._listeners[eventType].slice(0);\n\t\t\tfor (var i = 0, len = listeners.length; i < len; i++) {\n\t\t\t\tsafeInvoke1Arg(listeners[i], data);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _emitToBulkListeners(events:EmitterEvent[]): void {\n\t\tvar bulkListeners = this._bulkListeners.slice(0);\n\t\tfor (var i = 0, len = bulkListeners.length; i < len; i++) {\n\t\t\tsafeInvoke1Arg(bulkListeners[i], events);\n\t\t}\n\t}\n\n\tprotected _emitEvents(events:EmitterEvent[]): void {\n\t\tif (this._bulkListeners.length > 0) {\n\t\t\tthis._emitToBulkListeners(events);\n\t\t}\n\t\tfor (var i = 0, len = events.length; i < len; i++) {\n\t\t\tvar e = events[i];\n\n\t\t\tthis._emitToSpecificTypeListeners(e.getType(), e.getData());\n\t\t}\n\t}\n\n\tpublic emit(eventType:string, data:any={}):void {\n\t\tif (this._allowedEventTypes && !this._allowedEventTypes.hasOwnProperty(eventType)) {\n\t\t\tthrow new Error('Cannot emit this event type because it wasn\\'t white-listed!');\n\t\t}\n\t\t// Early return if no listeners would get this\n\t\tif (!this._listeners.hasOwnProperty(eventType) && this._bulkListeners.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tvar emitterEvent = new EmitterEvent(eventType, data);\n\n\t\tif (this._deferredCnt === 0) {\n\t\t\tthis._emitEvents([emitterEvent]);\n\t\t} else {\n\t\t\t// Collect for later\n\t\t\tthis._collectedEvents.push(emitterEvent);\n\t\t}\n\t}\n\n\tpublic deferredEmit(callback:()=>any):any {\n\t\tthis._deferredCnt = this._deferredCnt + 1;\n\t\tvar result: any = safeInvokeNoArg(callback);\n\t\tthis._deferredCnt = this._deferredCnt - 1;\n\n\t\tif (this._deferredCnt === 0) {\n\t\t\tthis._emitCollected();\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _emitCollected(): void {\n\t\t// Flush collected events\n\t\tvar events = this._collectedEvents;\n\t\tthis._collectedEvents = [];\n\n\t\tif (events.length > 0) {\n\t\t\tthis._emitEvents(events);\n\t\t}\n\t}\n}\n\nclass EmitQueueElement {\n\tpublic target: Function;\n\tpublic arg: any;\n\n\tconstructor(target: Function, arg: any) {\n\t\tthis.target = target;\n\t\tthis.arg = arg;\n\t}\n}\n\n/**\n * Same as EventEmitter, but guarantees events are delivered in order to each listener\n */\nexport class OrderGuaranteeEventEmitter extends EventEmitter {\n\n\tprivate _emitQueue: EmitQueueElement[];\n\n\tconstructor(allowedEventTypes:string[] = null) {\n\t\tsuper(allowedEventTypes);\n\t\tthis._emitQueue = [];\n\t}\n\n\tprotected _emitToSpecificTypeListeners(eventType:string, data:any): void {\n\t\tif (this._listeners.hasOwnProperty(eventType)) {\n\t\t\tlet listeners = this._listeners[eventType];\n\t\t\tfor (let i = 0, len = listeners.length; i < len; i++) {\n\t\t\t\tthis._emitQueue.push(new EmitQueueElement(listeners[i], data));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _emitToBulkListeners(events:EmitterEvent[]): void {\n\t\tlet bulkListeners = this._bulkListeners;\n\t\tfor (let i = 0, len = bulkListeners.length; i < len; i++) {\n\t\t\tthis._emitQueue.push(new EmitQueueElement(bulkListeners[i], events));\n\t\t}\n\t}\n\n\tprotected _emitEvents(events:EmitterEvent[]): void {\n\t\tsuper._emitEvents(events);\n\n\t\twhile (this._emitQueue.length > 0) {\n\t\t\tlet queueElement = this._emitQueue.shift();\n\t\t\tsafeInvoke1Arg(queueElement.target, queueElement.arg);\n\t\t}\n\t}\n}\n\nfunction safeInvokeNoArg(func:Function): any {\n\ttry {\n\t\treturn func();\n\t} catch(e) {\n\t\tErrors.onUnexpectedError(e);\n\t}\n}\n\nfunction safeInvoke1Arg(func:Function, arg1:any): any {\n\ttry {\n\t\treturn func(arg1);\n\t} catch(e) {\n\t\tErrors.onUnexpectedError(e);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Platform = require('vs/base/common/platform');\nimport errors = require('vs/base/common/errors');\nimport precision = require('vs/base/common/stopwatch');\nimport {IDisposable} from 'vs/base/common/lifecycle';\n\nexport var ENABLE_TIMER = false;\nvar msWriteProfilerMark = Platform.globals['msWriteProfilerMark'];\n\nexport enum Topic {\n\tEDITOR,\n\tLANGUAGES,\n\tWORKER,\n\tWORKBENCH,\n\tSTARTUP\n}\n\nexport interface ITimerEvent {\n\tid: number;\n\ttopic: string;\n\tname: string;\n\tdescription: string;\n\tdata: any;\n\n\tstartTime: Date;\n\tstopTime: Date;\n\n\tstop(stopTime?: Date): void;\n\ttimeTaken(): number;\n}\n\nexport interface IExistingTimerEvent {\n\ttopic: string;\n\tname: string;\n\n\tdescription?: string;\n\n\tstartTime: Date;\n\tstopTime: Date;\n}\n\nclass NullTimerEvent implements ITimerEvent {\n\tpublic id: number;\n\tpublic topic: string;\n\tpublic name: string;\n\tpublic description: string;\n\tpublic data: any;\n\n\tpublic startTime: Date;\n\tpublic stopTime: Date;\n\n\tpublic stop(): void {\n\t\treturn;\n\t}\n\n\tpublic timeTaken(): number {\n\t\treturn -1;\n\t}\n}\n\nclass TimerEvent implements ITimerEvent {\n\tpublic id: number;\n\tpublic topic: string;\n\tpublic name: string;\n\tpublic description: string;\n\tpublic data: any;\n\n\tpublic startTime: Date;\n\tpublic stopTime: Date;\n\n\tprivate timeKeeper: TimeKeeper;\n\tprivate sw: precision.StopWatch;\n\n\tconstructor(timeKeeper: TimeKeeper, name: string, topic: string, startTime?: Date, description?: string) {\n\t\tthis.timeKeeper = timeKeeper;\n\t\tthis.name = name;\n\t\tthis.description = description;\n\t\tthis.topic = topic;\n\t\tthis.stopTime = null;\n\n\t\tif (startTime) {\n\t\t\tthis.startTime = startTime;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.startTime = new Date();\n\t\tthis.sw = precision.StopWatch.create();\n\n\t\tif (msWriteProfilerMark) {\n\t\t\tvar profilerName = ['Monaco', this.topic, this.name, 'start'];\n\t\t\tmsWriteProfilerMark(profilerName.join('|'));\n\t\t}\n\t}\n\n\tpublic stop(stopTime?: Date): void {\n\n\t\t// already stopped\n\t\tif (this.stopTime !== null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (stopTime) {\n\t\t\tthis.stopTime = stopTime;\n\t\t\tthis.sw = null;\n\t\t\tthis.timeKeeper._onEventStopped(this);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.stopTime = new Date();\n\t\tif (this.sw) {\n\t\t\tthis.sw.stop();\n\t\t}\n\n\t\tthis.timeKeeper._onEventStopped(this);\n\n\t\tif (msWriteProfilerMark) {\n\t\t\tvar profilerName = ['Monaco', this.topic, this.name, 'stop'];\n\t\t\tmsWriteProfilerMark(profilerName.join('|'));\n\t\t}\n\t}\n\n\tpublic timeTaken(): number {\n\t\tif (this.sw) {\n\t\t\treturn this.sw.elapsed();\n\t\t}\n\t\tif (this.stopTime) {\n\t\t\treturn this.stopTime.getTime() - this.startTime.getTime();\n\t\t}\n\t\treturn -1;\n\t}\n}\n\nexport interface IEventsListener {\n\t(events: ITimerEvent[]): void;\n}\n\nexport class TimeKeeper {\n\t/**\n\t * After being started for 1 minute, all timers are automatically stopped.\n\t */\n\tprivate static _MAX_TIMER_LENGTH = 60000; // 1 minute\n\t/**\n\t * Every 2 minutes, a sweep of current started timers is done.\n\t */\n\tprivate static _CLEAN_UP_INTERVAL = 120000; // 2 minutes\n\t/**\n\t * Collect at most 1000 events.\n\t */\n\tprivate static _EVENT_CACHE_LIMIT = 1000;\n\n\tprivate static EVENT_ID = 1;\n\tpublic static PARSE_TIME = new Date();\n\n\n\tprivate cleaningIntervalId: Platform.IntervalToken;\n\tprivate collectedEvents: ITimerEvent[];\n\tprivate listeners: IEventsListener[];\n\n\tconstructor() {\n\t\tthis.cleaningIntervalId = -1;\n\t\tthis.collectedEvents = [];\n\t\tthis.listeners = [];\n\t}\n\n\tpublic isEnabled(): boolean {\n\t\treturn ENABLE_TIMER;\n\t}\n\n\tpublic start(topic: Topic|string, name: string, start?: Date, description?: string): ITimerEvent {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn nullEvent;\n\t\t}\n\n\t\tvar strTopic: string;\n\n\t\tif (typeof topic === 'string') {\n\t\t\tstrTopic = topic;\n\t\t} else if (topic === Topic.EDITOR) {\n\t\t\tstrTopic = 'Editor';\n\t\t} else if (topic === Topic.LANGUAGES) {\n\t\t\tstrTopic = 'Languages';\n\t\t} else if (topic === Topic.WORKER) {\n\t\t\tstrTopic = 'Worker';\n\t\t} else if (topic === Topic.WORKBENCH) {\n\t\t\tstrTopic = 'Workbench';\n\t\t} else if (topic === Topic.STARTUP) {\n\t\t\tstrTopic = 'Startup';\n\t\t}\n\n\t\tthis.initAutoCleaning();\n\t\tvar event = new TimerEvent(this, name, strTopic, start, description);\n\t\tthis.addEvent(event);\n\n\t\treturn event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.cleaningIntervalId !== -1) {\n\t\t\tPlatform.clearInterval(this.cleaningIntervalId);\n\t\t\tthis.cleaningIntervalId = -1;\n\t\t}\n\t}\n\n\tpublic addListener(listener: IEventsListener): IDisposable {\n\t\tthis.listeners.push(listener);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tfor (var i = 0; i < this.listeners.length; i++) {\n\t\t\t\t\tif (this.listeners[i] === listener) {\n\t\t\t\t\t\tthis.listeners.splice(i, 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate addEvent(event: ITimerEvent): void {\n\t\tevent.id = TimeKeeper.EVENT_ID;\n\t\tTimeKeeper.EVENT_ID++;\n\t\tthis.collectedEvents.push(event);\n\t\t// expire items from the front of the cache\n\t\tif (this.collectedEvents.length > TimeKeeper._EVENT_CACHE_LIMIT) {\n\t\t\tthis.collectedEvents.shift();\n\t\t}\n\t}\n\n\tprivate initAutoCleaning(): void {\n\t\tif (this.cleaningIntervalId === -1) {\n\t\t\tthis.cleaningIntervalId = Platform.setInterval(() => {\n\t\t\t\tvar now = Date.now();\n\t\t\t\tthis.collectedEvents.forEach((event) => {\n\t\t\t\t\tif (!event.stopTime && (now - event.startTime.getTime()) >= TimeKeeper._MAX_TIMER_LENGTH) {\n\t\t\t\t\t\tevent.stop();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, TimeKeeper._CLEAN_UP_INTERVAL);\n\t\t}\n\t}\n\n\tpublic getCollectedEvents(): ITimerEvent[] {\n\t\treturn this.collectedEvents.slice(0);\n\t}\n\n\tpublic clearCollectedEvents(): void {\n\t\tthis.collectedEvents = [];\n\t}\n\n\t_onEventStopped(event: ITimerEvent): void {\n\t\tvar emitEvents = [event];\n\n\t\tvar listeners = this.listeners.slice(0);\n\t\tfor (var i = 0; i < listeners.length; i++) {\n\t\t\ttry {\n\t\t\t\tlisteners[i](emitEvents);\n\t\t\t} catch (e) {\n\t\t\t\terrors.onUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setInitialCollectedEvents(events: IExistingTimerEvent[], startTime?: Date): void {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (startTime) {\n\t\t\tTimeKeeper.PARSE_TIME = startTime;\n\t\t}\n\n\t\tevents.forEach((event) => {\n\t\t\tvar e = new TimerEvent(this, event.name, event.topic, event.startTime, event.description);\n\t\t\te.stop(event.stopTime);\n\t\t\tthis.addEvent(e);\n\t\t});\n\t}\n}\n\nvar timeKeeper = new TimeKeeper();\nexport var nullEvent: ITimerEvent = new NullTimerEvent();\n\nexport function start(topic: Topic|string, name: string, start?: Date, description?: string): ITimerEvent {\n\treturn timeKeeper.start(topic, name, start, description);\n}\n\nexport function getTimeKeeper(): TimeKeeper {\n\treturn timeKeeper;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\ndefine(__m[5], __M([103,2]), function (winjs, __Errors__) {\n\t'use strict';\n\n\tvar outstandingPromiseErrors = {};\n\tfunction promiseErrorHandler(e) {\n\n\t\t//\n\t\t// e.detail looks like: { exception, error, promise, handler, id, parent }\n\t\t//\n\t\tvar details = e.detail;\n\t\tvar id = details.id;\n\n\t\t// If the error has a parent promise then this is not the origination of the\n\t\t//  error so we check if it has a handler, and if so we mark that the error\n\t\t//  was handled by removing it from outstandingPromiseErrors\n\t\t//\n\t\tif (details.parent) {\n\t\t\tif (details.handler && outstandingPromiseErrors) {\n\t\t\t\tdelete outstandingPromiseErrors[id];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Indicate that this error was originated and needs to be handled\n\t\toutstandingPromiseErrors[id] = details;\n\n\t\t// The first time the queue fills up this iteration, schedule a timeout to\n\t\t// check if any errors are still unhandled.\n\t\tif (Object.keys(outstandingPromiseErrors).length === 1) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tvar errors = outstandingPromiseErrors;\n\t\t\t\toutstandingPromiseErrors = {};\n\t\t\t\tObject.keys(errors).forEach(function (errorId) {\n\t\t\t\t\tvar error = errors[errorId];\n\t\t\t\t\tif(error.exception) {\n\t\t\t\t\t\t__Errors__.onUnexpectedError(error.exception);\n\t\t\t\t\t} else if(error.error) {\n\t\t\t\t\t\t__Errors__.onUnexpectedError(error.error);\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(\"WARNING: Promise with no error callback:\" + error.id);\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tif(error.exception) {\n\t\t\t\t\t\tconsole.log(error.exception.stack);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\twinjs.Promise.addEventListener(\"error\", promiseErrorHandler);\n\n\treturn {\n\t\tPromise: winjs.Promise,\n\t\tTPromise: winjs.Promise,\n\t\tPPromise: winjs.Promise\n\t};\n});","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as errors from 'vs/base/common/errors';\nimport * as platform from 'vs/base/common/platform';\nimport { Promise, TPromise, ValueCallback, ErrorCallback, ProgressCallback } from 'vs/base/common/winjs.base';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\nfunction isThenable<T>(obj: any): obj is Thenable<T> {\n\treturn obj && typeof (<Thenable<any>>obj).then === 'function';\n}\n\nexport function toThenable<T>(arg: T | Thenable<T>): Thenable<T> {\n\tif (isThenable(arg)) {\n\t\treturn arg;\n\t} else {\n\t\treturn TPromise.as(arg);\n\t}\n}\n\nexport function asWinJsPromise<T>(callback: (token: CancellationToken) => T | Thenable<T>): TPromise<T> {\n\tlet source = new CancellationTokenSource();\n\treturn new TPromise<T>((resolve, reject) => {\n\t\tlet item = callback(source.token);\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t}, () => {\n\t\tsource.cancel();\n\t});\n}\n\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nexport function wireCancellationToken<T>(token: CancellationToken, promise: TPromise<T>, resolveAsUndefinedWhenCancelled?: boolean): Thenable<T> {\n\ttoken.onCancellationRequested(() => promise.cancel());\n\tif (resolveAsUndefinedWhenCancelled) {\n\t\treturn promise.then(undefined, err => {\n\t\t\tif (!errors.isPromiseCanceledError(err)) {\n\t\t\t\treturn TPromise.wrapError(err);\n\t\t\t}\n\t\t});\n\t}\n\treturn promise;\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tvar throttler = new Throttler();\n * \t\tvar letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise;\n\tprivate queuedPromise: Promise;\n\tprivate queuedPromiseFactory: ITask<Promise>;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<TPromise<T>>): TPromise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise((c, e, p) => {\n\t\t\t\t\tthis.activePromise.then(onComplete, onComplete, p).done(c);\n\t\t\t\t}, () => {\n\t\t\t\t\tthis.activePromise.cancel();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e, p) => {\n\t\t\t\tthis.queuedPromise.then(c, e, p);\n\t\t\t}, () => {\n\t\t\t\t// no-op\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e, p) => {\n\t\t\tthis.activePromise.done((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t}, p);\n\t\t}, () => {\n\t\t\tthis.activePromise.cancel();\n\t\t});\n\t}\n}\n\n// TODO@Joao: can the previous throttler be replaced with this?\nexport class SimpleThrottler {\n\n\tprivate current = TPromise.as(null);\n\n\tqueue<T>(promiseTask: ITask<TPromise<T>>): TPromise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so the he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tvar delayer = new Delayer(WAITING_PERIOD);\n * \t\tvar letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> {\n\n\tprivate timeout: number;\n\tprivate completionPromise: Promise;\n\tprivate onSuccess: ValueCallback;\n\tprivate task: ITask<T>;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.onSuccess = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T>, delay: number = this.defaultDelay): TPromise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c) => {\n\t\t\t\tthis.onSuccess = c;\n\t\t\t}, () => {\n\t\t\t\t// no-op\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.onSuccess = null;\n\t\t\t\tconst task = this.task;\n\t\t\t\tthis.task = null;\n\n\t\t\t\treturn task();\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tthis.onSuccess(null);\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tthis.completionPromise.cancel();\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * Simply combine the two mail man strategies from the Throttler and Delayer\n * helpers, for an analogy.\n */\nexport class ThrottledDelayer<T> extends Delayer<TPromise<T>> {\n\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tsuper(defaultDelay);\n\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<TPromise<T>>, delay?: number): Promise {\n\t\treturn super.trigger(() => this.throttler.queue(promiseFactory), delay);\n\t}\n}\n\n/**\n * Similar to the ThrottledDelayer, except it also guarantees that the promise\n * factory doesn't get called more often than every `minimumPeriod` milliseconds.\n */\nexport class PeriodThrottledDelayer<T> extends ThrottledDelayer<T> {\n\n\tprivate minimumPeriod: number;\n\tprivate periodThrottler: Throttler;\n\n\tconstructor(defaultDelay: number, minimumPeriod: number = 0) {\n\t\tsuper(defaultDelay);\n\n\t\tthis.minimumPeriod = minimumPeriod;\n\t\tthis.periodThrottler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<TPromise<T>>, delay?: number): Promise {\n\t\treturn super.trigger(() => {\n\t\t\treturn this.periodThrottler.queue(() => {\n\t\t\t\treturn Promise.join([\n\t\t\t\t\tTPromise.timeout(this.minimumPeriod),\n\t\t\t\t\tpromiseFactory()\n\t\t\t\t]).then(r => r[1]);\n\t\t\t});\n\t\t}, delay);\n\t}\n}\n\nexport class PromiseSource<T> {\n\n\tprivate _value: TPromise<T>;\n\tprivate _completeCallback: Function;\n\tprivate _errorCallback: Function;\n\n\tconstructor() {\n\t\tthis._value = new TPromise<T>((c, e) => {\n\t\t\tthis._completeCallback = c;\n\t\t\tthis._errorCallback = e;\n\t\t});\n\t}\n\n\tget value(): TPromise<T> {\n\t\treturn this._value;\n\t}\n\n\tcomplete(value?: T): void {\n\t\tthis._completeCallback(value);\n\t}\n\n\terror(err?: any): void {\n\t\tthis._errorCallback(err);\n\t}\n}\n\nexport class ShallowCancelThenPromise<T> extends TPromise<T> {\n\n\tconstructor(outer: TPromise<T>) {\n\n\t\tlet completeCallback: ValueCallback,\n\t\t\terrorCallback: ErrorCallback,\n\t\t\tprogressCallback: ProgressCallback;\n\n\t\tsuper((c, e, p) => {\n\t\t\tcompleteCallback = c;\n\t\t\terrorCallback = e;\n\t\t\tprogressCallback = p;\n\t\t}, () => {\n\t\t\t// cancel this promise but not the\n\t\t\t// outer promise\n\t\t\terrorCallback(errors.canceled());\n\t\t});\n\n\t\touter.then(completeCallback, errorCallback, progressCallback);\n\t}\n}\n\n/**\n * Returns a new promise that joins the provided promise. Upon completion of\n * the provided promise the provided function will always be called. This\n * method is comparable to a try-finally code block.\n * @param promise a promise\n * @param f a function that will be call in the success and error case.\n */\nexport function always<T>(promise: TPromise<T>, f: Function): TPromise<T> {\n\treturn new TPromise<T>((c, e, p) => {\n\t\tpromise.done((result) => {\n\t\t\ttry {\n\t\t\t\tf(result);\n\t\t\t} catch (e1) {\n\t\t\t\terrors.onUnexpectedError(e1);\n\t\t\t}\n\t\t\tc(result);\n\t\t}, (err) => {\n\t\t\ttry {\n\t\t\t\tf(err);\n\t\t\t} catch (e1) {\n\t\t\t\terrors.onUnexpectedError(e1);\n\t\t\t}\n\t\t\te(err);\n\t\t}, (progress) => {\n\t\t\tp(progress);\n\t\t});\n\t}, () => {\n\t\tpromise.cancel();\n\t});\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\nexport function sequence<T>(promiseFactory: ITask<TPromise<T>>[]): TPromise<T[]> {\n\tconst results: T[] = [];\n\n\t// reverse since we start with last element using pop()\n\tpromiseFactory = promiseFactory.reverse();\n\n\tfunction next(): Promise {\n\t\tif (promiseFactory.length) {\n\t\t\treturn promiseFactory.pop()();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction thenHandler(result: any): Promise {\n\t\tif (result) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn TPromise.as(results);\n\t}\n\n\treturn TPromise.as(null).then(thenHandler);\n}\n\nexport function once<T extends Function>(fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: any;\n\n\treturn function() {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as any as T;\n}\n\ninterface ILimitedTaskFactory {\n\tfactory: ITask<Promise>;\n\tc: ValueCallback;\n\te: ErrorCallback;\n\tp: ProgressCallback;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory[];\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t}\n\n\tqueue(promiseFactory: ITask<Promise>): Promise;\n\tqueue(promiseFactory: ITask<TPromise<T>>): TPromise<T> {\n\t\treturn new TPromise<T>((c, e, p) => {\n\t\t\tthis.outstandingPromises.push({\n\t\t\t\tfactory: promiseFactory,\n\t\t\t\tc: c,\n\t\t\t\te: e,\n\t\t\t\tp: p\n\t\t\t});\n\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift();\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.done(iLimitedTask.c, iLimitedTask.e, iLimitedTask.p);\n\t\t\tpromise.done(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis.runningPromises--;\n\t\tthis.consume();\n\t}\n}\n\nexport class TimeoutTimer extends Disposable {\n\tprivate _token: platform.TimeoutToken;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tsuper.dispose();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tplatform.clearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout:number): void {\n\t\tthis.cancel();\n\t\tthis._token = platform.setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = platform.setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer extends Disposable {\n\n\tprivate _token: platform.IntervalToken;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tsuper.dispose();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tplatform.clearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval:number): void {\n\t\tthis.cancel();\n\t\tthis._token = platform.setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprivate timeoutToken: platform.TimeoutToken;\n\tprivate runner: () => void;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: () => void, timeout: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = timeout;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tplatform.clearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Replace runner. If there is a runner already scheduled, the new runner will be called.\n\t */\n\tsetRunner(runner: () => void): void {\n\t\tthis.runner = runner;\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = platform.setTimeout(this.timeoutHandler, delay);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport function nfcall(fn: Function, ...args: any[]): Promise;\nexport function nfcall<T>(fn: Function, ...args: any[]): TPromise<T>;\nexport function nfcall(fn: Function, ...args: any[]): any {\n\treturn new Promise((c, e) => fn(...args, (err, result) => err ? e(err) : c(result)));\n}\n\nexport function ninvoke(thisArg: any, fn: Function, ...args: any[]): Promise;\nexport function ninvoke<T>(thisArg: any, fn: Function, ...args: any[]): TPromise<T>;\nexport function ninvoke(thisArg: any, fn: Function, ...args: any[]): any {\n\treturn new Promise((c, e) => fn.call(thisArg, ...args, (err, result) => err ? e(err) : c(result)));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {setUnexpectedErrorHandler, transformErrorForSerialization} from 'vs/base/common/errors';\nimport {parse, stringify} from 'vs/base/common/marshalling';\nimport * as workerProtocol from 'vs/base/common/worker/workerProtocol';\n\nexport class WorkerServer {\n\n\tprivate _postSerializedMessage:(msg:string)=>void;\n\tprivate _workerId:number;\n\tprivate _requestHandler:any;\n\n\tconstructor(postSerializedMessage:(msg:string)=>void) {\n\t\tthis._postSerializedMessage = postSerializedMessage;\n\t\tthis._workerId = 0;\n\t\tthis._requestHandler = null;\n\t\tthis._bindConsole();\n\t}\n\n\tprivate _bindConsole(): void {\n\t\t(<any> self).console = {\n\t\t\tlog: this._sendPrintMessage.bind(this, workerProtocol.PrintType.LOG),\n\t\t\tdebug: this._sendPrintMessage.bind(this, workerProtocol.PrintType.DEBUG),\n\t\t\tinfo: this._sendPrintMessage.bind(this, workerProtocol.PrintType.INFO),\n\t\t\twarn: this._sendPrintMessage.bind(this, workerProtocol.PrintType.WARN),\n\t\t\terror: this._sendPrintMessage.bind(this, workerProtocol.PrintType.ERROR)\n\t\t};\n\t\tsetUnexpectedErrorHandler((e) => {\n\t\t\tself.console.error(e);\n\t\t});\n\t}\n\n\tprivate _sendPrintMessage(level:string, ...objects:any[]): void {\n\t\tlet transformedObjects = objects.map((obj) => (obj instanceof Error) ? transformErrorForSerialization(obj) : obj);\n\t\tlet msg:workerProtocol.IServerPrintMessage = {\n\t\t\tmonacoWorker: true,\n\t\t\tfrom: this._workerId,\n\t\t\treq: '0',\n\t\t\ttype: workerProtocol.MessageType.PRINT,\n\t\t\tlevel: level,\n\t\t\tpayload: (transformedObjects.length === 1 ? transformedObjects[0] : transformedObjects)\n\t\t};\n\t\tthis._postMessage(msg);\n\t}\n\n\tprivate _sendReply(msgId:number, action:string, payload:any): void {\n\t\tlet msg:workerProtocol.IServerReplyMessage = {\n\t\t\tmonacoWorker: true,\n\t\t\tfrom: this._workerId,\n\t\t\treq: '0',\n\t\t\tid: msgId,\n\t\t\ttype: workerProtocol.MessageType.REPLY,\n\t\t\taction: action,\n\t\t\tpayload: (payload instanceof Error) ? transformErrorForSerialization(payload) : payload\n\t\t};\n\t\tthis._postMessage(msg);\n\t}\n\n\tpublic loadModule(moduleId:string, callback:Function, errorback:(err:any)=>void): void {\n\t\t// Use the global require to be sure to get the global config\n\t\t(<any>self).require([moduleId], (...result:any[]) => {\n\t\t\tcallback(result[0]);\n\t\t}, errorback);\n\t}\n\n\tpublic onmessage(msg:string): void {\n\t\tthis._onmessage(parse(msg));\n\t}\n\n\tprivate _postMessage(msg:workerProtocol.IServerMessage): void {\n\t\tthis._postSerializedMessage(stringify(msg));\n\t}\n\n\tprivate _onmessage(msg:workerProtocol.IClientMessage): void {\n\n\t\tlet c = this._sendReply.bind(this, msg.id, workerProtocol.ReplyType.COMPLETE);\n\t\tlet e = this._sendReply.bind(this, msg.id, workerProtocol.ReplyType.ERROR);\n\t\tlet p = this._sendReply.bind(this, msg.id, workerProtocol.ReplyType.PROGRESS);\n\n\t\tswitch(msg.type) {\n\t\t\tcase workerProtocol.MessageType.INITIALIZE:\n\t\t\t\tthis._workerId = msg.payload.id;\n\n\t\t\t\tlet loaderConfig = msg.payload.loaderConfiguration;\n\t\t\t\t// TODO@Alex: share this code with simpleWorker\n\t\t\t\tif (loaderConfig) {\n\t\t\t\t\t// Remove 'baseUrl', handling it is beyond scope for now\n\t\t\t\t\tif (typeof loaderConfig.baseUrl !== 'undefined') {\n\t\t\t\t\t\tdelete loaderConfig['baseUrl'];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof loaderConfig.paths !== 'undefined') {\n\t\t\t\t\t\tif (typeof loaderConfig.paths.vs !== 'undefined') {\n\t\t\t\t\t\t\tdelete loaderConfig.paths['vs'];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet nlsConfig = loaderConfig['vs/nls'];\n\t\t\t\t\t// We need to have pseudo translation\n\t\t\t\t\tif (nlsConfig && nlsConfig.pseudo) {\n\t\t\t\t\t\trequire(['vs/nls'], function(nlsPlugin) {\n\t\t\t\t\t\t\tnlsPlugin.setPseudoTranslation(nlsConfig.pseudo);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Since this is in a web worker, enable catching errors\n\t\t\t\t\tloaderConfig.catchError = true;\n\t\t\t\t\t(<any>self).require.config(loaderConfig);\n\t\t\t\t}\n\n\t\t\t\tthis.loadModule(msg.payload.moduleId, (handlerModule:any) => {\n\t\t\t\t\tthis._requestHandler = handlerModule.value;\n\t\t\t\t\tc();\n\t\t\t\t}, e);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._handleMessage(msg, c, e, p);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate _handleMessage(msg:workerProtocol.IClientMessage, c:(value:any)=>void, e:(err:any)=>void, p:(progress:any)=>void): void {\n\t\tif (!this._requestHandler) {\n\t\t\te('Request handler not loaded');\n\t\t\treturn;\n\t\t}\n\n\t\tlet handlerMethod = this._requestHandler[msg.type];\n\t\tif (typeof handlerMethod !== 'function') {\n\t\t\te('Handler does not have method ' + msg.type);\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\thandlerMethod.call(this._requestHandler, this, c, e, p, msg.payload);\n\t\t} catch (handlerError) {\n\t\t\te(transformErrorForSerialization(handlerError));\n\t\t}\n\t}\n}\n\nexport function create(postMessage:(msg:string)=>void): WorkerServer {\n\treturn new WorkerServer(postMessage);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport * as strings from 'vs/base/common/strings';\nimport {ViewLineToken} from 'vs/editor/common/core/viewLineToken';\nimport {LineToken} from 'vs/editor/common/model/lineToken';\n\nconst START_INDEX_MASK = 0xffffffff;\nconst TYPE_MASK = 0xffff;\nconst START_INDEX_OFFSET = 1;\nconst TYPE_OFFSET = Math.pow(2, 32);\n\nconst DEFAULT_VIEW_TOKEN = new ViewLineToken(0, '');\nconst INFLATED_TOKENS_EMPTY_TEXT:ViewLineToken[] = [];\nconst DEFLATED_TOKENS_EMPTY_TEXT:number[] = [];\nconst INFLATED_TOKENS_NON_EMPTY_TEXT:ViewLineToken[] = [DEFAULT_VIEW_TOKEN];\nconst DEFLATED_TOKENS_NON_EMPTY_TEXT:number[] = [0];\n\nexport class TokensInflatorMap {\n\n\tpublic _inflate:string[];\n\n\tpublic _deflate: {\n\t\t[token:string]:number;\n\t};\n\n\tconstructor() {\n\t\tthis._inflate = [ '' ];\n\t\tthis._deflate = { '': 0 };\n\t}\n}\n\nexport class TokensBinaryEncoding {\n\tpublic static START_INDEX_MASK = START_INDEX_MASK;\n\tpublic static TYPE_MASK = TYPE_MASK;\n\tpublic static START_INDEX_OFFSET = START_INDEX_OFFSET;\n\tpublic static TYPE_OFFSET = TYPE_OFFSET;\n\n\tpublic static deflateArr(map:TokensInflatorMap, tokens:LineToken[]): number[] {\n\t\tif (tokens.length === 0) {\n\t\t\treturn DEFLATED_TOKENS_EMPTY_TEXT;\n\t\t}\n\t\tif (tokens.length === 1 && tokens[0].startIndex === 0 && !tokens[0].type) {\n\t\t\treturn DEFLATED_TOKENS_NON_EMPTY_TEXT;\n\t\t}\n\n\t\tvar i:number,\n\t\t\tlen:number,\n\t\t\tdeflatedToken:number,\n\t\t\tdeflated:number,\n\t\t\ttoken:LineToken,\n\t\t\tinflateMap = map._inflate,\n\t\t\tdeflateMap = map._deflate,\n\t\t\tprevStartIndex:number = -1,\n\t\t\tresult:number[] = new Array(tokens.length);\n\n\t\tfor (i = 0, len = tokens.length; i < len; i++) {\n\t\t\ttoken = tokens[i];\n\n\t\t\tif (token.startIndex <= prevStartIndex) {\n\t\t\t\ttoken.startIndex = prevStartIndex + 1;\n\t\t\t\tonUnexpectedError({\n\t\t\t\t\tmessage: 'Invalid tokens detected',\n\t\t\t\t\ttokens: tokens\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (deflateMap.hasOwnProperty(token.type)) {\n\t\t\t\tdeflatedToken = deflateMap[token.type];\n\t\t\t} else {\n\t\t\t\tdeflatedToken = inflateMap.length;\n\t\t\t\tdeflateMap[token.type] = deflatedToken;\n\t\t\t\tinflateMap.push(token.type);\n\t\t\t}\n\n\t\t\t// http://stackoverflow.com/a/2803010\n\t\t\t// All numbers in JavaScript are actually IEEE-754 compliant floating-point doubles.\n\t\t\t// These have a 53-bit mantissa which should mean that any integer value with a magnitude\n\t\t\t// of approximately 9 quadrillion or less -- more specifically, 9,007,199,254,740,991 --\n\t\t\t// will be represented accurately.\n\n\t\t\t// http://stackoverflow.com/a/6729252\n\t\t\t// Bitwise operations cast numbers to 32bit representation in JS\n\n\t\t\t// 32 bits for startIndex => up to 2^32 = 4,294,967,296\n\t\t\t// 16 bits for token => up to 2^16 = 65,536\n\n\t\t\t// [token][startIndex]\n\t\t\tdeflated = deflatedToken * TYPE_OFFSET + token.startIndex * START_INDEX_OFFSET;\n\n\t\t\tresult[i] = deflated;\n\n\t\t\tprevStartIndex = token.startIndex;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic static getStartIndex(binaryEncodedToken:number): number {\n\t\treturn (binaryEncodedToken / START_INDEX_OFFSET) & START_INDEX_MASK;\n\t}\n\n\tpublic static getType(map:TokensInflatorMap, binaryEncodedToken:number): string {\n\t\tvar deflatedType = (binaryEncodedToken / TYPE_OFFSET) & TYPE_MASK;\n\t\tif (deflatedType === 0) {\n\t\t\treturn strings.empty;\n\t\t}\n\t\treturn map._inflate[deflatedType];\n\t}\n\n\tpublic static inflateArr(map:TokensInflatorMap, binaryEncodedTokens:number[]): ViewLineToken[] {\n\t\tif (binaryEncodedTokens.length === 0) {\n\t\t\treturn INFLATED_TOKENS_EMPTY_TEXT;\n\t\t}\n\t\tif (binaryEncodedTokens.length === 1 && binaryEncodedTokens[0] === 0) {\n\t\t\treturn INFLATED_TOKENS_NON_EMPTY_TEXT;\n\t\t}\n\n\t\tlet result: ViewLineToken[] = [];\n\t\tconst inflateMap = map._inflate;\n\n\t\tfor (let i = 0, len = binaryEncodedTokens.length; i < len; i++) {\n\t\t\tlet deflated = binaryEncodedTokens[i];\n\n\t\t\tlet startIndex = (deflated / START_INDEX_OFFSET) & START_INDEX_MASK;\n\t\t\tlet deflatedType = (deflated / TYPE_OFFSET) & TYPE_MASK;\n\n\t\t\tresult.push(new ViewLineToken(startIndex, inflateMap[deflatedType]));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic static findIndexOfOffset(binaryEncodedTokens:number[], offset:number): number {\n\t\treturn this.findIndexInSegmentsArray(binaryEncodedTokens, offset);\n\t}\n\n\tpublic static sliceAndInflate(map:TokensInflatorMap, binaryEncodedTokens:number[], startOffset:number, endOffset:number, deltaStartIndex:number): ViewLineToken[] {\n\t\tif (binaryEncodedTokens.length === 0) {\n\t\t\treturn INFLATED_TOKENS_EMPTY_TEXT;\n\t\t}\n\t\tif (binaryEncodedTokens.length === 1 && binaryEncodedTokens[0] === 0) {\n\t\t\treturn INFLATED_TOKENS_NON_EMPTY_TEXT;\n\t\t}\n\n\t\tlet startIndex = this.findIndexInSegmentsArray(binaryEncodedTokens, startOffset);\n\t\tlet result: ViewLineToken[] = [];\n\t\tconst inflateMap = map._inflate;\n\n\t\tlet originalToken = binaryEncodedTokens[startIndex];\n\t\tlet deflatedType = (originalToken / TYPE_OFFSET) & TYPE_MASK;\n\t\tlet newStartIndex = 0;\n\t\tresult.push(new ViewLineToken(newStartIndex, inflateMap[deflatedType]));\n\n\t\tfor (let i = startIndex + 1, len = binaryEncodedTokens.length; i < len; i++) {\n\t\t\toriginalToken = binaryEncodedTokens[i];\n\t\t\tlet originalStartIndex = (originalToken / START_INDEX_OFFSET) & START_INDEX_MASK;\n\n\t\t\tif (originalStartIndex >= endOffset) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tdeflatedType = (originalToken / TYPE_OFFSET) & TYPE_MASK;\n\t\t\tnewStartIndex = originalStartIndex - startOffset + deltaStartIndex;\n\t\t\tresult.push(new ViewLineToken(newStartIndex, inflateMap[deflatedType]));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static findIndexInSegmentsArray(arr:number[], desiredIndex: number):number {\n\n\t\tvar low = 0,\n\t\t\thigh = arr.length - 1,\n\t\t\tmid:number,\n\t\t\tvalue:number;\n\n\t\twhile (low < high) {\n\n\t\t\tmid = low + Math.ceil((high - low)/2);\n\n\t\t\tvalue = arr[mid] & 0xffffffff;\n\n\t\t\tif (value > desiredIndex) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else {\n\t\t\t\tlow = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as strings from 'vs/base/common/strings';\nimport {ILineTokens, IReadOnlyLineMarker} from 'vs/editor/common/editorCommon';\nimport {IMode, IState} from 'vs/editor/common/modes';\nimport {TokensBinaryEncoding, TokensInflatorMap} from 'vs/editor/common/model/tokensBinaryEncoding';\nimport {ModeTransition} from 'vs/editor/common/core/modeTransition';\nimport {LineToken} from 'vs/editor/common/model/lineToken';\nimport {ViewLineToken} from 'vs/editor/common/core/viewLineToken';\n\nconst START_INDEX_MASK = TokensBinaryEncoding.START_INDEX_MASK;\nconst TYPE_MASK = TokensBinaryEncoding.TYPE_MASK;\nconst START_INDEX_OFFSET = TokensBinaryEncoding.START_INDEX_OFFSET;\nconst TYPE_OFFSET = TokensBinaryEncoding.TYPE_OFFSET;\n\nexport interface ILineEdit {\n\tstartColumn: number;\n\tendColumn: number;\n\ttext: string;\n\tforceMoveMarkers: boolean;\n}\n\nexport interface ILineMarker extends IReadOnlyLineMarker {\n\tid:string;\n\tcolumn:number;\n\tstickToPreviousCharacter:boolean;\n\n\toldLineNumber:number;\n\toldColumn:number;\n\n\tline:ModelLine;\n}\n\nexport interface IChangedMarkers {\n\t[markerId:string]: boolean;\n}\n\nexport interface ITextWithMarkers {\n\ttext: string;\n\tmarkers: ILineMarker[];\n}\n\ninterface ITokensAdjuster {\n\tadjust(toColumn:number, delta:number, minimumAllowedColumn:number): void;\n\tfinish(delta:number, lineTextLength:number): void;\n}\n\ninterface IMarkersAdjuster {\n\tadjustDelta(toColumn:number, delta:number, minimumAllowedColumn:number, moveSemantics:MarkerMoveSemantics): void;\n\tadjustSet(toColumn:number, newColumn:number, moveSemantics:MarkerMoveSemantics): void;\n\tfinish(delta:number, lineTextLength:number): void;\n}\n\nvar NO_OP_TOKENS_ADJUSTER: ITokensAdjuster = {\n\tadjust: () => {},\n\tfinish: () => {}\n};\nvar NO_OP_MARKERS_ADJUSTER: IMarkersAdjuster = {\n\tadjustDelta: () => {},\n\tadjustSet: () => {},\n\tfinish: () => {}\n};\n\nenum MarkerMoveSemantics {\n\tMarkerDefined = 0,\n\tForceMove = 1,\n\tForceStay = 2\n}\n\n/**\n * Returns:\n *  - 0 => the line consists of whitespace\n *  - otherwise => the indent level is returned value - 1\n */\nfunction computePlusOneIndentLevel(line: string, tabSize: number): number {\n\tlet indent = 0;\n\tlet i = 0;\n\tlet len = line.length;\n\n\twhile (i < len) {\n\t\tlet chCode = line.charCodeAt(i);\n\t\tif (chCode === 32 /*space*/) {\n\t\t\tindent++;\n\t\t} else if (chCode === 9 /*\\t*/) {\n\t\t\tindent = indent - indent % tabSize + tabSize;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\n\tif (i === len) {\n\t\treturn 0; // line only consists of whitespace\n\t}\n\n\treturn indent + 1;\n}\n\nexport class ModelLine {\n\tprivate _lineNumber:number;\n\tpublic get lineNumber():number { return this._lineNumber; }\n\n\tprivate _text:string;\n\tpublic get text():string { return this._text; }\n\n\t/**\n\t * bits 31 - 1 => indentLevel\n\t * bit 0 => isInvalid\n\t */\n\tprivate _metadata:number;\n\n\tpublic get isInvalid(): boolean {\n\t\treturn (this._metadata & 0x00000001) ? true : false;\n\t}\n\n\tpublic set isInvalid(value:boolean) {\n\t\tthis._metadata = (this._metadata & 0xfffffffe) | (value ? 1 : 0);\n\t}\n\n\t/**\n\t * Returns:\n\t *  - -1 => the line consists of whitespace\n\t *  - otherwise => the indent level is returned value\n\t */\n\tpublic getIndentLevel(): number {\n\t\treturn ((this._metadata & 0xfffffffe) >> 1) - 1;\n\t}\n\n\tprivate _setPlusOneIndentLevel(value:number): void {\n\t\tthis._metadata = (this._metadata & 0x00000001) | ((value & 0xefffffff) << 1);\n\t}\n\n\tpublic updateTabSize(tabSize:number): void {\n\t\tif (tabSize === 0) {\n\t\t\t// don't care mark\n\t\t\tthis._metadata = this._metadata & 0x00000001;\n\t\t} else {\n\t\t\tthis._setPlusOneIndentLevel(computePlusOneIndentLevel(this._text, tabSize));\n\t\t}\n\t}\n\n\tprivate _state:IState;\n\tprivate _modeTransitions: ModeTransition[];\n\tprivate _lineTokens: number[];\n\tprivate _markers:ILineMarker[];\n\n\tconstructor(lineNumber:number, text:string, tabSize:number) {\n\t\tthis._lineNumber = lineNumber|0;\n\t\tthis._metadata = 0;\n\t\tthis._setText(text, tabSize);\n\t\tthis._state = null;\n\t\tthis._modeTransitions = null;\n\t\tthis._lineTokens = null;\n\t\tthis._markers = null;\n\t}\n\n\t// --- BEGIN STATE\n\n\tpublic setState(state: IState): void {\n\t\tthis._state = state;\n\t}\n\n\tpublic getState(): IState {\n\t\treturn this._state || null;\n\t}\n\n\t// --- END STATE\n\n\t// --- BEGIN MODE TRANSITIONS\n\n\tpublic getModeTransitions(topLevelMode:IMode): ModeTransition[] {\n\t\tif (this._modeTransitions) {\n\t\t\treturn this._modeTransitions;\n\t\t} else {\n\t\t\treturn [new ModeTransition(0, topLevelMode)];\n\t\t}\n\t}\n\n\t// --- END MODE TRANSITIONS\n\n\t// --- BEGIN TOKENS\n\n\tpublic setTokens(map: TokensInflatorMap, tokens: LineToken[], topLevelMode:IMode, modeTransitions:ModeTransition[]): void {\n\t\tthis._lineTokens = toLineTokensFromInflated(map, tokens, this._text.length);\n\t\tthis._modeTransitions = toModeTransitions(topLevelMode, modeTransitions);\n\t}\n\n\tprivate _setLineTokensFromDeflated(tokens:number[]): void {\n\t\tthis._lineTokens = toLineTokensFromDeflated(tokens, this._text.length);\n\t}\n\n\tpublic getTokens(map:TokensInflatorMap): ILineTokens {\n\t\tif (this._lineTokens) {\n\t\t\treturn new LineTokens(map, this._lineTokens);\n\t\t}\n\t\tif (this._text.length === 0) {\n\t\t\treturn EmptyLineTokens.INSTANCE;\n\t\t}\n\t\treturn DefaultLineTokens.INSTANCE;\n\t}\n\n\t// --- END TOKENS\n\n\tprivate _createTokensAdjuster(): ITokensAdjuster {\n\t\tif (!this._lineTokens) {\n\t\t\t// This line does not have real tokens, so there is nothing to adjust\n\t\t\treturn NO_OP_TOKENS_ADJUSTER;\n\t\t}\n\n\t\tlet tokens = this._lineTokens;\n\t\tlet tokensLength = tokens.length;\n\t\tlet tokensIndex = 0;\n\t\tlet currentTokenStartIndex = 0;\n\n\t\tlet adjust = (toColumn:number, delta:number, minimumAllowedColumn:number) => {\n\t\t\t// console.log('before call: tokensIndex: ' + tokensIndex + ': ' + String(this.getTokens()));\n\t\t\t// console.log('adjustTokens: ' + toColumn + ' with delta: ' + delta + ' and [' + minimumAllowedColumn + ']');\n\t\t\t// console.log('currentTokenStartIndex: ' + currentTokenStartIndex);\n\t\t\tlet minimumAllowedIndex = minimumAllowedColumn - 1;\n\n\t\t\twhile (currentTokenStartIndex < toColumn && tokensIndex < tokensLength) {\n\n\t\t\t\tif (currentTokenStartIndex > 0 && delta !== 0) {\n\t\t\t\t\t// adjust token's `startIndex` by `delta`\n\t\t\t\t\tlet deflatedType = (tokens[tokensIndex] / TYPE_OFFSET) & TYPE_MASK;\n\t\t\t\t\tlet newStartIndex = Math.max(minimumAllowedIndex, currentTokenStartIndex + delta);\n\t\t\t\t\tlet newToken = deflatedType * TYPE_OFFSET + newStartIndex * START_INDEX_OFFSET;\n\n\t\t\t\t\tif (delta < 0) {\n\t\t\t\t\t\t// pop all previous tokens that have become `collapsed`\n\t\t\t\t\t\twhile (tokensIndex > 0) {\n\t\t\t\t\t\t\tlet prevTokenStartIndex = (tokens[tokensIndex - 1] / START_INDEX_OFFSET) & START_INDEX_MASK;\n\t\t\t\t\t\t\tif (prevTokenStartIndex >= newStartIndex) {\n\t\t\t\t\t\t\t\t// Token at `tokensIndex` - 1 is now `collapsed` => pop it\n\t\t\t\t\t\t\t\ttokens.splice(tokensIndex - 1, 1);\n\t\t\t\t\t\t\t\ttokensLength--;\n\t\t\t\t\t\t\t\ttokensIndex--;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttokens[tokensIndex] = newToken;\n\t\t\t\t}\n\n\t\t\t\ttokensIndex++;\n\n\t\t\t\tif (tokensIndex < tokensLength) {\n\t\t\t\t\tcurrentTokenStartIndex = (tokens[tokensIndex] / START_INDEX_OFFSET) & START_INDEX_MASK;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log('after call: tokensIndex: ' + tokensIndex + ': ' + String(this.getTokens()));\n\t\t};\n\n\t\tlet finish = (delta:number, lineTextLength:number) => {\n\t\t\tadjust(Number.MAX_VALUE, delta, 1);\n\t\t};\n\n\t\treturn {\n\t\t\tadjust: adjust,\n\t\t\tfinish: finish\n\t\t};\n\t}\n\n\tprivate _setText(text:string, tabSize:number): void {\n\t\tthis._text = text;\n\t\tif (tabSize === 0) {\n\t\t\t// don't care mark\n\t\t\tthis._metadata = this._metadata & 0x00000001;\n\t\t} else {\n\t\t\tthis._setPlusOneIndentLevel(computePlusOneIndentLevel(text, tabSize));\n\t\t}\n\n\t\tlet tokens = this._lineTokens;\n\t\tif (tokens) {\n\t\t\tlet lineTextLength = this._text.length;\n\n\t\t\t// Remove overflowing tokens\n\t\t\twhile (tokens.length > 0) {\n\t\t\t\tlet lastTokenStartIndex = (tokens[tokens.length - 1] / START_INDEX_OFFSET) & START_INDEX_MASK;\n\t\t\t\tif (lastTokenStartIndex < lineTextLength) {\n\t\t\t\t\t// Valid token\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// This token now overflows the text => remove it\n\t\t\t\ttokens.pop();\n\t\t\t}\n\n\t\t\tthis._setLineTokensFromDeflated(tokens);\n\t\t}\n\t}\n\n\t// private _printMarkers(): string {\n\t// \tif (!this._markers) {\n\t// \t\treturn '[]';\n\t// \t}\n\t// \tif (this._markers.length === 0) {\n\t// \t\treturn '[]';\n\t// \t}\n\n\t// \tvar markers = this._markers;\n\n\t// \tvar printMarker = (m:ILineMarker) => {\n\t// \t\tif (m.stickToPreviousCharacter) {\n\t// \t\t\treturn '|' + m.column;\n\t// \t\t}\n\t// \t\treturn m.column + '|';\n\t// \t};\n\t// \treturn '[' + markers.map(printMarker).join(', ') + ']';\n\t// }\n\n\tprivate _createMarkersAdjuster(changedMarkers:IChangedMarkers): IMarkersAdjuster {\n\t\tif (!this._markers) {\n\t\t\treturn NO_OP_MARKERS_ADJUSTER;\n\t\t}\n\t\tif (this._markers.length === 0) {\n\t\t\treturn NO_OP_MARKERS_ADJUSTER;\n\t\t}\n\n\t\tthis._markers.sort(ModelLine._compareMarkers);\n\n\t\tvar markers = this._markers;\n\t\tvar markersLength = markers.length;\n\t\tvar markersIndex = 0;\n\t\tvar marker = markers[markersIndex];\n\n\t\t// console.log('------------- INITIAL MARKERS: ' + this._printMarkers());\n\n\t\tlet adjustMarkerBeforeColumn = (toColumn:number, moveSemantics:MarkerMoveSemantics) => {\n\t\t\tif (marker.column < toColumn) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (marker.column > toColumn) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (moveSemantics === MarkerMoveSemantics.ForceMove) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (moveSemantics === MarkerMoveSemantics.ForceStay) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn marker.stickToPreviousCharacter;\n\t\t};\n\n\t\tlet adjustDelta = (toColumn:number, delta:number, minimumAllowedColumn:number, moveSemantics:MarkerMoveSemantics) => {\n\t\t\t// console.log('------------------------------');\n\t\t\t// console.log('adjustDelta called: toColumn: ' + toColumn + ', delta: ' + delta + ', minimumAllowedColumn: ' + minimumAllowedColumn + ', moveSemantics: ' + MarkerMoveSemantics[moveSemantics]);\n\t\t\t// console.log('BEFORE::: markersIndex: ' + markersIndex + ' : ' + this._printMarkers());\n\n\t\t\twhile (markersIndex < markersLength && adjustMarkerBeforeColumn(toColumn, moveSemantics)) {\n\t\t\t\tif (delta !== 0) {\n\t\t\t\t\tlet newColumn = Math.max(minimumAllowedColumn, marker.column + delta);\n\t\t\t\t\tif (marker.column !== newColumn) {\n\t\t\t\t\t\tchangedMarkers[marker.id] = true;\n\t\t\t\t\t\tmarker.oldLineNumber = marker.oldLineNumber || this._lineNumber;\n\t\t\t\t\t\tmarker.oldColumn = marker.oldColumn || marker.column;\n\t\t\t\t\t\tmarker.column = newColumn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmarkersIndex++;\n\t\t\t\tif (markersIndex < markersLength) {\n\t\t\t\t\tmarker = markers[markersIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// console.log('AFTER::: markersIndex: ' + markersIndex + ' : ' + this._printMarkers());\n\t\t};\n\n\t\tlet adjustSet = (toColumn:number, newColumn:number, moveSemantics:MarkerMoveSemantics) => {\n\t\t\t// console.log('------------------------------');\n\t\t\t// console.log('adjustSet called: toColumn: ' + toColumn + ', newColumn: ' + newColumn + ', moveSemantics: ' + MarkerMoveSemantics[moveSemantics]);\n\t\t\t// console.log('BEFORE::: markersIndex: ' + markersIndex + ' : ' + this._printMarkers());\n\n\t\t\twhile (markersIndex < markersLength && adjustMarkerBeforeColumn(toColumn, moveSemantics)) {\n\t\t\t\tif (marker.column !== newColumn) {\n\t\t\t\t\tchangedMarkers[marker.id] = true;\n\t\t\t\t\tmarker.oldLineNumber = marker.oldLineNumber || this._lineNumber;\n\t\t\t\t\tmarker.oldColumn = marker.oldColumn || marker.column;\n\t\t\t\t\tmarker.column = newColumn;\n\t\t\t\t}\n\n\t\t\t\tmarkersIndex++;\n\t\t\t\tif (markersIndex < markersLength) {\n\t\t\t\t\tmarker = markers[markersIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// console.log('AFTER::: markersIndex: ' + markersIndex + ' : ' + this._printMarkers());\n\t\t};\n\n\t\tlet finish = (delta:number, lineTextLength:number) => {\n\t\t\tadjustDelta(Number.MAX_VALUE, delta, 1, MarkerMoveSemantics.MarkerDefined);\n\n\t\t\t// console.log('------------- FINAL MARKERS: ' + this._printMarkers());\n\t\t};\n\n\t\treturn {\n\t\t\tadjustDelta: adjustDelta,\n\t\t\tadjustSet: adjustSet,\n\t\t\tfinish: finish\n\t\t};\n\t}\n\n\tpublic applyEdits(changedMarkers: IChangedMarkers, edits:ILineEdit[], tabSize:number): number {\n\t\tlet deltaColumn = 0;\n\t\tlet resultText = this._text;\n\n\t\tlet tokensAdjuster = this._createTokensAdjuster();\n\t\tlet markersAdjuster = this._createMarkersAdjuster(changedMarkers);\n\n\t\tfor (let i = 0, len = edits.length; i < len; i++) {\n\t\t\tlet edit = edits[i];\n\n\t\t\t// console.log();\n\t\t\t// console.log('=============================');\n\t\t\t// console.log('EDIT #' + i + ' [ ' + edit.startColumn + ' -> ' + edit.endColumn + ' ] : <<<' + edit.text + '>>>, forceMoveMarkers: ' + edit.forceMoveMarkers);\n\t\t\t// console.log('deltaColumn: ' + deltaColumn);\n\n\t\t\tlet startColumn = deltaColumn + edit.startColumn;\n\t\t\tlet endColumn = deltaColumn + edit.endColumn;\n\t\t\tlet deletingCnt = endColumn - startColumn;\n\t\t\tlet insertingCnt = edit.text.length;\n\n\t\t\t// Adjust tokens & markers before this edit\n\t\t\t// console.log('Adjust tokens & markers before this edit');\n\t\t\ttokensAdjuster.adjust(edit.startColumn - 1, deltaColumn, 1);\n\t\t\tmarkersAdjuster.adjustDelta(edit.startColumn, deltaColumn, 1, edit.forceMoveMarkers ? MarkerMoveSemantics.ForceMove : (deletingCnt > 0 ? MarkerMoveSemantics.ForceStay : MarkerMoveSemantics.MarkerDefined));\n\n\t\t\t// Adjust tokens & markers for the common part of this edit\n\t\t\tlet commonLength = Math.min(deletingCnt, insertingCnt);\n\t\t\tif (commonLength > 0) {\n\t\t\t\t// console.log('Adjust tokens & markers for the common part of this edit');\n\t\t\t\ttokensAdjuster.adjust(edit.startColumn - 1 + commonLength, deltaColumn, startColumn);\n\n\t\t\t\tif (!edit.forceMoveMarkers) {\n\t\t\t\t\tmarkersAdjuster.adjustDelta(edit.startColumn + commonLength, deltaColumn, startColumn, edit.forceMoveMarkers ? MarkerMoveSemantics.ForceMove : (deletingCnt > insertingCnt ? MarkerMoveSemantics.ForceStay : MarkerMoveSemantics.MarkerDefined));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Perform the edit & update `deltaColumn`\n\t\t\tresultText = resultText.substring(0, startColumn - 1) + edit.text + resultText.substring(endColumn - 1);\n\t\t\tdeltaColumn += insertingCnt - deletingCnt;\n\n\t\t\t// Adjust tokens & markers inside this edit\n\t\t\t// console.log('Adjust tokens & markers inside this edit');\n\t\t\ttokensAdjuster.adjust(edit.endColumn, deltaColumn, startColumn);\n\t\t\tmarkersAdjuster.adjustSet(edit.endColumn, startColumn + insertingCnt, edit.forceMoveMarkers ? MarkerMoveSemantics.ForceMove : MarkerMoveSemantics.MarkerDefined);\n\t\t}\n\n\t\t// Wrap up tokens & markers; adjust remaining if needed\n\t\ttokensAdjuster.finish(deltaColumn, resultText.length);\n\t\tmarkersAdjuster.finish(deltaColumn, resultText.length);\n\n\t\t// Save the resulting text\n\t\tthis._setText(resultText, tabSize);\n\n\t\treturn deltaColumn;\n\t}\n\n\tpublic split(changedMarkers: IChangedMarkers, splitColumn:number, forceMoveMarkers:boolean, tabSize:number): ModelLine {\n\t\t// console.log('--> split @ ' + splitColumn + '::: ' + this._printMarkers());\n\t\tvar myText = this._text.substring(0, splitColumn - 1);\n\t\tvar otherText = this._text.substring(splitColumn - 1);\n\n\t\tvar otherMarkers: ILineMarker[] = null;\n\n\t\tif (this._markers) {\n\t\t\tthis._markers.sort(ModelLine._compareMarkers);\n\t\t\tfor (let i = 0, len = this._markers.length; i < len; i++) {\n\t\t\t\tlet marker = this._markers[i];\n\n\t\t\t\tif (\n\t\t\t\t\tmarker.column > splitColumn\n\t\t\t\t\t|| (\n\t\t\t\t\t\tmarker.column === splitColumn\n\t\t\t\t\t\t&& (\n\t\t\t\t\t\t\tforceMoveMarkers\n\t\t\t\t\t\t\t|| !marker.stickToPreviousCharacter\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tlet myMarkers = this._markers.slice(0, i);\n\t\t\t\t\totherMarkers = this._markers.slice(i);\n\t\t\t\t\tthis._markers = myMarkers;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (otherMarkers) {\n\t\t\t\tfor (let i = 0, len = otherMarkers.length; i < len; i++) {\n\t\t\t\t\tlet marker = otherMarkers[i];\n\n\t\t\t\t\tchangedMarkers[marker.id] = true;\n\t\t\t\t\tmarker.oldLineNumber = marker.oldLineNumber || this._lineNumber;\n\t\t\t\t\tmarker.oldColumn = marker.oldColumn || marker.column;\n\t\t\t\t\tmarker.column -= splitColumn - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._setText(myText, tabSize);\n\n\t\tvar otherLine = new ModelLine(this._lineNumber + 1, otherText, tabSize);\n\t\tif (otherMarkers) {\n\t\t\totherLine.addMarkers(otherMarkers);\n\t\t}\n\t\treturn otherLine;\n\t}\n\n\tpublic append(changedMarkers: IChangedMarkers, other:ModelLine, tabSize:number): void {\n\t\t// console.log('--> append: THIS :: ' + this._printMarkers());\n\t\t// console.log('--> append: OTHER :: ' + this._printMarkers());\n\t\tvar thisTextLength = this._text.length;\n\t\tthis._setText(this._text + other._text, tabSize);\n\n\t\tlet otherTokens = other._lineTokens;\n\t\tif (otherTokens) {\n\t\t\t// Other has real tokens\n\n\t\t\t// Adjust other tokens\n\t\t\tif (thisTextLength > 0) {\n\t\t\t\tfor (let i = 0, len = otherTokens.length; i < len; i++) {\n\t\t\t\t\tlet token = otherTokens[i];\n\n\t\t\t\t\tlet deflatedStartIndex = (token / START_INDEX_OFFSET) & START_INDEX_MASK;\n\t\t\t\t\tlet deflatedType = (token / TYPE_OFFSET) & TYPE_MASK;\n\t\t\t\t\tlet newStartIndex = deflatedStartIndex + thisTextLength;\n\t\t\t\t\tlet newToken = deflatedType * TYPE_OFFSET + newStartIndex * START_INDEX_OFFSET;\n\n\t\t\t\t\totherTokens[i] = newToken;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Append other tokens\n\t\t\tlet myLineTokens = this._lineTokens;\n\t\t\tif (myLineTokens) {\n\t\t\t\t// I have real tokens\n\t\t\t\tthis._setLineTokensFromDeflated(myLineTokens.concat(otherTokens));\n\t\t\t} else {\n\t\t\t\t// I don't have real tokens\n\t\t\t\tthis._setLineTokensFromDeflated(otherTokens);\n\t\t\t}\n\t\t}\n\n\t\tif (other._markers) {\n\t\t\t// Other has markers\n\t\t\tlet otherMarkers = other._markers;\n\n\t\t\t// Adjust other markers\n\t\t\tfor (let i = 0, len = otherMarkers.length; i < len; i++) {\n\t\t\t\tlet marker = otherMarkers[i];\n\n\t\t\t\tchangedMarkers[marker.id] = true;\n\t\t\t\tmarker.oldLineNumber = marker.oldLineNumber || other.lineNumber;\n\t\t\t\tmarker.oldColumn = marker.oldColumn || marker.column;\n\t\t\t\tmarker.column += thisTextLength;\n\t\t\t}\n\n\t\t\tthis.addMarkers(otherMarkers);\n\t\t}\n\t}\n\n\tpublic addMarker(marker:ILineMarker): void {\n\t\tmarker.line = this;\n\t\tif (!this._markers) {\n\t\t\tthis._markers = [marker];\n\t\t} else {\n\t\t\tthis._markers.push(marker);\n\t\t}\n\t}\n\n\tpublic addMarkers(markers:ILineMarker[]): void {\n\t\tif (markers.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar i:number,\n\t\t\tlen:number;\n\n\t\tfor (i = 0, len = markers.length; i < len; i++) {\n\t\t\tmarkers[i].line = this;\n\t\t}\n\n\t\tif (!this._markers) {\n\t\t\tthis._markers = markers.slice(0);\n\t\t} else {\n\t\t\tthis._markers = this._markers.concat(markers);\n\t\t}\n\t}\n\n\tprivate static _compareMarkers(a:ILineMarker, b:ILineMarker): number {\n\t\tif (a.column === b.column) {\n\t\t\treturn (a.stickToPreviousCharacter ? 0 : 1) - (b.stickToPreviousCharacter ? 0 : 1);\n\t\t}\n\t\treturn a.column - b.column;\n\t}\n\n\tpublic removeMarker(marker:ILineMarker): void {\n\t\tif (!this._markers) {\n\t\t\treturn;\n\t\t}\n\t\tlet index = this._indexOfMarkerId(marker.id);\n\t\tif (index >= 0) {\n\t\t\tmarker.line = null;\n\t\t\tthis._markers.splice(index, 1);\n\t\t}\n\t\tif (this._markers.length === 0) {\n\t\t\tthis._markers = null;\n\t\t}\n\t}\n\n\tpublic removeMarkers(deleteMarkers: {[markerId:string]:boolean;}): void {\n\t\tif (!this._markers) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let i = 0, len = this._markers.length; i < len; i++) {\n\t\t\tlet marker = this._markers[i];\n\n\t\t\tif (deleteMarkers[marker.id]) {\n\t\t\t\tmarker.line = null;\n\t\t\t\tthis._markers.splice(i, 1);\n\t\t\t\tlen--;\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\tif (this._markers.length === 0) {\n\t\t\tthis._markers = null;\n\t\t}\n\t}\n\n\tpublic getMarkers(): ILineMarker[] {\n\t\tif (!this._markers) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this._markers.slice(0);\n\t}\n\n\tpublic updateLineNumber(changedMarkers: IChangedMarkers, newLineNumber: number): void {\n\t\tif (this._markers) {\n\t\t\tvar markers = this._markers,\n\t\t\t\ti: number,\n\t\t\t\tlen: number,\n\t\t\t\tmarker: ILineMarker;\n\n\t\t\tfor (i = 0, len = markers.length; i < len; i++) {\n\t\t\t\tmarker = markers[i];\n\n\t\t\t\tchangedMarkers[marker.id] = true;\n\t\t\t\tmarker.oldLineNumber = marker.oldLineNumber || this._lineNumber;\n\t\t\t}\n\t\t}\n\n\t\tthis._lineNumber = newLineNumber;\n\t}\n\n\tpublic deleteLine(changedMarkers: IChangedMarkers, setMarkersColumn:number, setMarkersOldLineNumber:number): ILineMarker[] {\n\t\t// console.log('--> deleteLine: ');\n\t\tif (this._markers) {\n\t\t\tvar markers = this._markers,\n\t\t\t\ti: number,\n\t\t\t\tlen: number,\n\t\t\t\tmarker: ILineMarker;\n\n\t\t\t// Mark all these markers as changed\n\t\t\tfor (i = 0, len = markers.length; i < len; i++) {\n\t\t\t\tmarker = markers[i];\n\n\t\t\t\tchangedMarkers[marker.id] = true;\n\t\t\t\tmarker.oldColumn = marker.oldColumn || marker.column;\n\t\t\t\tmarker.oldLineNumber = marker.oldLineNumber || setMarkersOldLineNumber;\n\t\t\t\tmarker.column = setMarkersColumn;\n\t\t\t}\n\n\t\t\treturn markers;\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate _indexOfMarkerId(markerId:string): number {\n\t\tlet markers = this._markers;\n\t\tfor (let i = 0, len = markers.length; i < len; i++) {\n\t\t\tif (markers[i].id === markerId) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction toLineTokensFromInflated(map:TokensInflatorMap, tokens:LineToken[], textLength:number): number[] {\n\tif (textLength === 0) {\n\t\treturn null;\n\t}\n\tif (!tokens || tokens.length === 0) {\n\t\treturn null;\n\t}\n\tif (tokens.length === 1) {\n\t\tif (tokens[0].startIndex === 0 && tokens[0].type === '') {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn TokensBinaryEncoding.deflateArr(map, tokens);\n}\n\nfunction toLineTokensFromDeflated(tokens:number[], textLength:number): number[] {\n\tif (textLength === 0) {\n\t\treturn null;\n\t}\n\tif (!tokens || tokens.length === 0) {\n\t\treturn null;\n\t}\n\tif (tokens.length === 1) {\n\t\tif (tokens[0] === 0) {\n\t\t\treturn null;\n\t\t}\n\t}\n\treturn tokens;\n}\n\nexport class LineTokens implements ILineTokens {\n\n\tprivate map:TokensInflatorMap;\n\tprivate _tokens:number[];\n\n\tconstructor(map:TokensInflatorMap, tokens:number[]) {\n\t\tthis.map = map;\n\t\tthis._tokens = tokens;\n\t}\n\n\tpublic getBinaryEncodedTokensMap(): TokensInflatorMap {\n\t\treturn this.map;\n\t}\n\n\tpublic getBinaryEncodedTokens(): number[] {\n\t\treturn this._tokens;\n\t}\n\n\tpublic getTokenCount(): number {\n\t\treturn this._tokens.length;\n\t}\n\n\tpublic getTokenStartIndex(tokenIndex:number): number {\n\t\treturn TokensBinaryEncoding.getStartIndex(this._tokens[tokenIndex]);\n\t}\n\n\tpublic getTokenType(tokenIndex:number): string {\n\t\treturn TokensBinaryEncoding.getType(this.map, this._tokens[tokenIndex]);\n\t}\n\n\tpublic getTokenEndIndex(tokenIndex:number, textLength:number): number {\n\t\tif (tokenIndex + 1 < this._tokens.length) {\n\t\t\treturn TokensBinaryEncoding.getStartIndex(this._tokens[tokenIndex + 1]);\n\t\t}\n\t\treturn textLength;\n\t}\n\n\tpublic equals(other:ILineTokens): boolean {\n\t\tif (other instanceof LineTokens) {\n\t\t\tif (this.map !== other.map) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this._tokens.length !== other._tokens.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this._tokens.length; i < len; i++) {\n\t\t\t\tif (this._tokens[i] !== other._tokens[i]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tif (!(other instanceof LineTokens)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic findIndexOfOffset(offset:number): number {\n\t\treturn TokensBinaryEncoding.findIndexOfOffset(this._tokens, offset);\n\t}\n\n\tpublic inflate(): ViewLineToken[] {\n\t\treturn TokensBinaryEncoding.inflateArr(this.map, this._tokens);\n\t}\n\n\tpublic sliceAndInflate(startOffset:number, endOffset:number, deltaStartIndex:number): ViewLineToken[] {\n\t\treturn TokensBinaryEncoding.sliceAndInflate(this.map, this._tokens, startOffset, endOffset, deltaStartIndex);\n\t}\n\n}\n\nclass EmptyLineTokens implements ILineTokens {\n\n\tpublic static INSTANCE = new EmptyLineTokens();\n\n\tpublic getTokenCount(): number {\n\t\treturn 0;\n\t}\n\n\tpublic getTokenStartIndex(tokenIndex:number): number {\n\t\treturn 0;\n\t}\n\n\tpublic getTokenType(tokenIndex:number): string {\n\t\treturn strings.empty;\n\t}\n\n\tpublic getTokenEndIndex(tokenIndex:number, textLength:number): number {\n\t\treturn 0;\n\t}\n\n\tpublic equals(other:ILineTokens): boolean {\n\t\treturn other === this;\n\t}\n\n\tpublic findIndexOfOffset(offset:number): number {\n\t\treturn 0;\n\t}\n\n\tpublic inflate(): ViewLineToken[] {\n\t\treturn [];\n\t}\n\n\tpublic sliceAndInflate(startOffset:number, endOffset:number, deltaStartIndex:number): ViewLineToken[] {\n\t\treturn [];\n\t}\n}\n\nexport class DefaultLineTokens implements ILineTokens {\n\n\tpublic static INSTANCE = new DefaultLineTokens();\n\n\tpublic getTokenCount(): number {\n\t\treturn 1;\n\t}\n\n\tpublic getTokenStartIndex(tokenIndex:number): number {\n\t\treturn 0;\n\t}\n\n\tpublic getTokenType(tokenIndex:number): string {\n\t\treturn strings.empty;\n\t}\n\n\tpublic getTokenEndIndex(tokenIndex:number, textLength:number): number {\n\t\treturn textLength;\n\t}\n\n\tpublic equals(other:ILineTokens): boolean {\n\t\treturn this === other;\n\t}\n\n\tpublic findIndexOfOffset(offset:number): number {\n\t\treturn 0;\n\t}\n\n\tpublic inflate(): ViewLineToken[] {\n\t\treturn [new ViewLineToken(0, '')];\n\t}\n\n\tpublic sliceAndInflate(startOffset:number, endOffset:number, deltaStartIndex:number): ViewLineToken[] {\n\t\treturn [new ViewLineToken(0, '')];\n\t}\n\n}\n\nfunction toModeTransitions(topLevelMode:IMode, modeTransitions:ModeTransition[]): ModeTransition[] {\n\n\tif (!modeTransitions || modeTransitions.length === 0) {\n\t\treturn null;\n\t} else if (modeTransitions.length === 1 && modeTransitions[0].startIndex === 0 && modeTransitions[0].mode === topLevelMode) {\n\t\treturn null;\n\t}\n\n\treturn modeTransitions;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {IReadOnlyModel} from 'vs/editor/common/editorCommon';\nimport {LanguageSelector, score} from 'vs/editor/common/modes/languageSelector';\n\ninterface Entry<T> {\n\tselector: LanguageSelector;\n\tprovider: T;\n\tisBuiltin: boolean;\n\t_score: number;\n\t_time: number;\n}\n\nexport default class LanguageFeatureRegistry<T> {\n\n\tprivate _clock: number = 0;\n\tprivate _entries: Entry<T>[] = [];\n\tprivate _onDidChange: Emitter<number> = new Emitter<number>();\n\n\tconstructor() {\n\t}\n\n\tget onDidChange(): Event<number> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tregister(selector: LanguageSelector, provider: T, isBuiltin = false): IDisposable {\n\n\t\tlet entry: Entry<T> = {\n\t\t\tselector,\n\t\t\tprovider,\n\t\t\tisBuiltin,\n\t\t\t_score: -1,\n\t\t\t_time: this._clock++\n\t\t};\n\n\t\tthis._entries.push(entry);\n\t\tthis._lastCandidate = undefined;\n\t\tthis._onDidChange.fire(this._entries.length);\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tif (entry) {\n\t\t\t\t\tlet idx = this._entries.indexOf(entry);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tthis._entries.splice(idx, 1);\n\t\t\t\t\t\tthis._lastCandidate = undefined;\n\t\t\t\t\t\tthis._onDidChange.fire(this._entries.length);\n\t\t\t\t\t\tentry = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\thas(model: IReadOnlyModel): boolean {\n\t\treturn this.all(model).length > 0;\n\t}\n\n\tall(model: IReadOnlyModel): T[] {\n\t\tif (!model || model.isTooLargeForHavingAMode()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis._updateScores(model);\n\t\tconst result: T[] = [];\n\n\t\t// from registry\n\t\tfor (let entry of this._entries) {\n\t\t\tif (entry._score > 0) {\n\t\t\t\tresult.push(entry.provider);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tordered(model: IReadOnlyModel): T[] {\n\t\tconst result: T[] = [];\n\t\tthis._orderedForEach(model, entry => result.push(entry.provider));\n\t\treturn result;\n\t}\n\n\torderedGroups(model: IReadOnlyModel): T[][] {\n\t\tconst result: T[][] = [];\n\t\tlet lastBucket: T[];\n\t\tlet lastBucketScore: number;\n\n\t\tthis._orderedForEach(model, entry => {\n\t\t\tif (lastBucket && lastBucketScore === entry._score) {\n\t\t\t\tlastBucket.push(entry.provider);\n\t\t\t} else {\n\t\t\t\tlastBucketScore = entry._score;\n\t\t\t\tlastBucket = [entry.provider];\n\t\t\t\tresult.push(lastBucket);\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprivate _orderedForEach(model: IReadOnlyModel, callback: (provider: Entry<T>) => any): void {\n\n\t\tif (!model || model.isTooLargeForHavingAMode()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateScores(model);\n\n\t\tfor (let from = 0; from < this._entries.length; from++) {\n\t\t\tlet entry = this._entries[from];\n\t\t\tif (entry._score > 0) {\n\t\t\t\tcallback(entry);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _lastCandidate: { uri: string; language: string; };\n\n\tprivate _updateScores(model: IReadOnlyModel): boolean {\n\n\t\tlet candidate = {\n\t\t\turi: model.uri.toString(),\n\t\t\tlanguage: model.getModeId()\n\t\t};\n\n\t\tif (this._lastCandidate\n\t\t\t&& this._lastCandidate.language === candidate.language\n\t\t\t&& this._lastCandidate.uri === candidate.uri) {\n\n\t\t\t// nothing has changed\n\t\t\treturn;\n\t\t}\n\n\t\tthis._lastCandidate = candidate;\n\n\t\tfor (let entry of this._entries) {\n\t\t\tentry._score = score(entry.selector, model.uri, model.getModeId());\n\t\t\tif (entry.isBuiltin && entry._score > 0) {\n\t\t\t\tentry._score = .5;\n\t\t\t\tentry._time = -1;\n\t\t\t}\n\t\t}\n\n\t\t// needs sorting\n\t\tthis._entries.sort(LanguageFeatureRegistry._compareByScoreAndTime);\n\t}\n\n\tprivate static _compareByScoreAndTime(a: Entry<any>, b: Entry<any>): number {\n\t\tif (a._score < b._score) {\n\t\t\treturn 1;\n\t\t} else if (a._score > b._score) {\n\t\t\treturn -1;\n\t\t} else if (a._time < b._time) {\n\t\t\treturn 1;\n\t\t} else if (a._time > b._time) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {MarkedString} from 'vs/base/common/htmlContent';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IFilter} from 'vs/base/common/filters';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {ModeTransition} from 'vs/editor/common/core/modeTransition';\nimport LanguageFeatureRegistry from 'vs/editor/common/modes/languageFeatureRegistry';\nimport {CancellationToken} from 'vs/base/common/cancellation';\nimport {Position} from 'vs/editor/common/core/position';\nimport {Range} from 'vs/editor/common/core/range';\n\n/**\n * @internal\n */\nexport interface ITokenizationResult {\n\ttype?:string;\n\tdontMergeWithPrev?:boolean;\n\tnextState?:IState;\n}\n\n/**\n * @internal\n */\nexport interface IState {\n\tclone():IState;\n\tequals(other:IState):boolean;\n\tgetMode():IMode;\n\ttokenize(stream:IStream):ITokenizationResult;\n\tgetStateData(): IState;\n\tsetStateData(state:IState):void;\n}\n\n/**\n * An IStream is a character & token stream abstraction over a line of text. It\n *  is never multi-line. The stream can be navigated character by character, or\n *  token by token, given some token rules.\n * @internal\n */\nexport interface IStream {\n\n\t/**\n\t * Returns the current character position of the stream on the line.\n\t */\n\tpos():number;\n\n\t/**\n\t * Returns true iff the stream is at the end of the line.\n\t */\n\teos():boolean;\n\n\t/**\n\t * Returns the next character in the stream.\n\t */\n\tpeek():string;\n\n\t/**\n\t * Returns the next character in the stream, and advances it by one character.\n\t */\n\tnext(): string;\n\tnext2(): void;\n\n\t/**\n\t * Advances the stream by `n` characters.\n\t */\n\tadvance(n:number):string;\n\n\t/**\n\t * Advances the stream until the end of the line.\n\t */\n\tadvanceToEOS():string;\n\n\t/**\n\t * Brings the stream back `n` characters.\n\t */\n\tgoBack(n:number):void;\n\n\t/**\n\t *  Advances the stream if the next characters validate a condition. A condition can be\n\t *\n\t *      - a regular expression (always starting with ^)\n\t * \t\t\tEXAMPLES: /^\\d+/, /^function|var|interface|class/\n\t *\n\t *  \t- a string\n\t * \t\t\tEXAMPLES: \"1954\", \"albert\"\n\t */\n\tadvanceIfCharCode(charCode: number): string;\n\tadvanceIfCharCode2(charCode:number): number;\n\n\tadvanceIfString(condition: string): string;\n\tadvanceIfString2(condition: string): number;\n\n\tadvanceIfStringCaseInsensitive(condition: string): string;\n\tadvanceIfStringCaseInsensitive2(condition: string): number;\n\n\tadvanceIfRegExp(condition: RegExp): string;\n\tadvanceIfRegExp2(condition:RegExp): number;\n\n\n\t/**\n\t * Advances the stream while the next characters validate a condition. Check #advanceIf for\n\t * details on the possible types for condition.\n\t */\n\tadvanceWhile(condition:string):string;\n\tadvanceWhile(condition:RegExp):string;\n\n\t/**\n\t * Advances the stream until the some characters validate a condition. Check #advanceIf for\n\t * details on the possible types for condition. The `including` boolean value indicates\n\t * whether the stream will advance the characters that matched the condition as well, or not.\n\t */\n\tadvanceUntil(condition: string, including: boolean): string;\n\tadvanceUntil(condition: RegExp, including: boolean): string;\n\n\tadvanceUntilString(condition: string, including: boolean): string;\n\tadvanceUntilString2(condition: string, including: boolean): number;\n\n\t/**\n\t * The token rules define how consecutive characters should be put together as a token,\n\t * or separated into two different tokens. They are given through a separator characters\n\t * string and a whitespace characters string. A separator is always one token. Consecutive\n\t * whitespace is always one token. Everything in between these two token types, is also a token.\n\t *\n\t * \tEXAMPLE: stream.setTokenRules(\"+-\", \" \");\n\t * \tSetting these token rules defines the tokens for the string \"123+456 -    7\" as being\n\t * \t\t[\"123\", \"+\", \"456\", \" \", \"-\", \"    \", \"7\"]\n\t */\n\tsetTokenRules(separators:string, whitespace:string):void;\n\n\t/**\n\t * Returns the next token, given that the stream was configured with token rules.\n\t */\n\tpeekToken():string;\n\n\t/**\n\t * Returns the next token, given that the stream was configured with token rules, and advances the\n\t * stream by the exact length of the found token.\n\t */\n\tnextToken():string;\n\n\t/**\n\t * Returns the next whitespace, if found. Returns an empty string otherwise.\n\t */\n\tpeekWhitespace():string;\n\n\t/**\n\t * Returns the next whitespace, if found, and advances the stream by the exact length of the found\n\t * whitespace. Returns an empty string otherwise.\n\t */\n\tskipWhitespace(): string;\n\tskipWhitespace2(): number;\n}\n\n/**\n * @internal\n */\nexport interface IModeDescriptor {\n\tid:string;\n}\n\n/**\n * @internal\n */\nexport interface ILineContext {\n\tgetLineContent(): string;\n\n\tmodeTransitions: ModeTransition[];\n\n\tgetTokenCount(): number;\n\tgetTokenStartIndex(tokenIndex:number): number;\n\tgetTokenType(tokenIndex:number): string;\n\tgetTokenText(tokenIndex:number): string;\n\tgetTokenEndIndex(tokenIndex:number): number;\n\tfindIndexOfOffset(offset:number): number;\n}\n\n/**\n * A mode. Will soon be obsolete.\n */\nexport interface IMode {\n\n\tgetId(): string;\n\n\t/**\n\t * Return a mode \"similar\" to this one that strips any \"smart\" supports.\n\t * @internal\n\t */\n\ttoSimplifiedMode(): IMode;\n\n\t/**\n\t * @internal\n\t */\n\taddSupportChangedListener?(callback: (e: editorCommon.IModeSupportChangedEvent) => void): IDisposable;\n\n\t/**\n\t * Register a support by name. Only optional.\n\t * @internal\n\t */\n\tsetTokenizationSupport?<T>(callback:(mode:IMode)=>T): IDisposable;\n\n\t/**\n\t * Optional adapter to support tokenization.\n\t * @internal\n\t */\n\ttokenizationSupport?: ITokenizationSupport;\n\n\t/**\n\t * Optional adapter to support configuring this mode.\n\t * @internal\n\t */\n\tconfigSupport?:IConfigurationSupport;\n}\n\n/**\n * Interface used for tokenization\n * @internal\n */\nexport interface IToken {\n\tstartIndex:number;\n\ttype:string;\n}\n\n/**\n * @internal\n */\nexport interface IModeTransition {\n\tstartIndex: number;\n\tmode: IMode;\n}\n\n/**\n * @internal\n */\nexport interface ILineTokens {\n\ttokens: IToken[];\n\tactualStopOffset: number;\n\tendState: IState;\n\tmodeTransitions: IModeTransition[];\n\tretokenize?:TPromise<void>;\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationSupport {\n\n\tgetInitialState():IState;\n\n\t// add offsetDelta to each of the returned indices\n\t// stop tokenizing at absolute value stopAtOffset (i.e. stream.pos() + offsetDelta > stopAtOffset)\n\ttokenize(line:string, state:IState, offsetDelta?:number, stopAtOffset?:number):ILineTokens;\n}\n\n/**\n * A token. Only supports a single scope, but will soon support a scope array.\n */\nexport interface IToken2 {\n\tstartIndex: number;\n\tscopes: string|string[];\n}\n/**\n * The result of a line tokenization.\n */\nexport interface ILineTokens2 {\n\t/**\n\t * The list of tokens on the line.\n\t */\n\ttokens: IToken2[];\n\t/**\n\t * The tokenization end state.\n\t * A pointer will be held to this and the object should not be modified by the tokenizer after the pointer is returned.\n\t */\n\tendState: IState2;\n\t/**\n\t * An optional promise to force the model to retokenize this line (e.g. missing information at the point of tokenization)\n\t */\n\tretokenize?: TPromise<void>;\n}\n/**\n * The state of the tokenizer between two lines.\n * It is useful to store flags such as in multiline comment, etc.\n * The model will clone the previous line's state and pass it in to tokenize the next line.\n */\nexport interface IState2 {\n\tclone():IState2;\n\tequals(other:IState2):boolean;\n}\n/**\n * A \"manual\" provider of tokens.\n */\nexport interface TokensProvider {\n\t/**\n\t * The initial state of a language. Will be the state passed in to tokenize the first line.\n\t */\n\tgetInitialState(): IState2;\n\t/**\n\t * Tokenize a line given the state at the beginning of the line.\n\t */\n\ttokenize(line:string, state:IState2): ILineTokens2;\n}\n\n/**\n * A hover represents additional information for a symbol or word. Hovers are\n * rendered in a tooltip-like widget.\n */\nexport interface Hover {\n\t/**\n\t * The contents of this hover.\n\t */\n\tcontents: MarkedString[];\n\n\t/**\n\t * The range to which this hover applies. When missing, the\n\t * editor will use the range at the current position or the\n\t * current position itself.\n\t */\n\trange: editorCommon.IRange;\n}\n\n/**\n * The hover provider interface defines the contract between extensions and\n * the [hover](https://code.visualstudio.com/docs/editor/editingevolved#_hover)-feature.\n */\nexport interface HoverProvider {\n\t/**\n\t * Provide a hover for the given position and document. Multiple hovers at the same\n\t * position will be merged by the editor. A hover can have a range which defaults\n\t * to the word range at the position when omitted.\n\t */\n\tprovideHover(model:editorCommon.IReadOnlyModel, position:Position, token:CancellationToken): Hover | Thenable<Hover>;\n}\n\n/**\n * @internal\n */\nexport type SuggestionType = 'method'\n\t| 'function'\n\t| 'constructor'\n\t| 'field'\n\t| 'variable'\n\t| 'class'\n\t| 'interface'\n\t| 'module'\n\t| 'property'\n\t| 'unit'\n\t| 'value'\n\t| 'enum'\n\t| 'keyword'\n\t| 'snippet'\n\t| 'text'\n\t| 'color'\n\t| 'file'\n\t| 'reference'\n\t| 'customcolor';\n\n/**\n * @internal\n */\nexport interface ISuggestion {\n\tlabel: string;\n\tcodeSnippet: string;\n\ttype: SuggestionType;\n\ttypeLabel?: string;\n\tdocumentationLabel?: string;\n\tfilterText?: string;\n\tsortText?: string;\n\tnoAutoAccept?: boolean;\n\toverwriteBefore?: number;\n\toverwriteAfter?: number;\n}\n\n/**\n * @internal\n */\nexport interface ISuggestResult {\n\tcurrentWord: string;\n\tsuggestions:ISuggestion[];\n\tincomplete?: boolean;\n}\n\n/**\n * @internal\n */\nexport interface ISuggestSupport {\n\n\ttriggerCharacters: string[];\n\n\tfilter?: IFilter;\n\n\tprovideCompletionItems(model:editorCommon.IReadOnlyModel, position:Position, token:CancellationToken): ISuggestResult | Thenable<ISuggestResult>;\n\n\tresolveCompletionItem?(model:editorCommon.IReadOnlyModel, position:Position, item: ISuggestion, token: CancellationToken): ISuggestion | Thenable<ISuggestion>;\n}\n\n/**\n * Interface used to quick fix typing errors while accesing member fields.\n */\nexport interface CodeAction {\n\tcommand: Command;\n\tscore: number;\n}\n/**\n * The code action interface defines the contract between extensions and\n * the [light bulb](https://code.visualstudio.com/docs/editor/editingevolved#_code-action) feature.\n * @internal\n */\nexport interface CodeActionProvider {\n\t/**\n\t * Provide commands for the given document and range.\n\t */\n\tprovideCodeActions(model:editorCommon.IReadOnlyModel, range:Range, token: CancellationToken): CodeAction[] | Thenable<CodeAction[]>;\n}\n\n/**\n * Represents a parameter of a callable-signature. A parameter can\n * have a label and a doc-comment.\n */\nexport interface ParameterInformation {\n\t/**\n\t * The label of this signature. Will be shown in\n\t * the UI.\n\t */\n\tlabel: string;\n\t/**\n\t * The human-readable doc-comment of this signature. Will be shown\n\t * in the UI but can be omitted.\n\t */\n\tdocumentation: string;\n}\n/**\n * Represents the signature of something callable. A signature\n * can have a label, like a function-name, a doc-comment, and\n * a set of parameters.\n */\nexport interface SignatureInformation {\n\t/**\n\t * The label of this signature. Will be shown in\n\t * the UI.\n\t */\n\tlabel: string;\n\t/**\n\t * The human-readable doc-comment of this signature. Will be shown\n\t * in the UI but can be omitted.\n\t */\n\tdocumentation: string;\n\t/**\n\t * The parameters of this signature.\n\t */\n\tparameters: ParameterInformation[];\n}\n/**\n * Signature help represents the signature of something\n * callable. There can be multiple signatures but only one\n * active and only one active parameter.\n */\nexport interface SignatureHelp {\n\t/**\n\t * One or more signatures.\n\t */\n\tsignatures: SignatureInformation[];\n\t/**\n\t * The active signature.\n\t */\n\tactiveSignature: number;\n\t/**\n\t * The active parameter of the active signature.\n\t */\n\tactiveParameter: number;\n}\n/**\n * The signature help provider interface defines the contract between extensions and\n * the [parameter hints](https://code.visualstudio.com/docs/editor/editingevolved#_parameter-hints)-feature.\n */\nexport interface SignatureHelpProvider {\n\n\tsignatureHelpTriggerCharacters: string[];\n\n\t/**\n\t * Provide help for the signature at the given position and document.\n\t */\n\tprovideSignatureHelp(model: editorCommon.IReadOnlyModel, position: Position, token: CancellationToken): SignatureHelp | Thenable<SignatureHelp>;\n}\n\n/**\n * A document highlight kind.\n */\nexport enum DocumentHighlightKind {\n\t/**\n\t * A textual occurrence.\n\t */\n\tText,\n\t/**\n\t * Read-access of a symbol, like reading a variable.\n\t */\n\tRead,\n\t/**\n\t * Write-access of a symbol, like writing to a variable.\n\t */\n\tWrite\n}\n/**\n * A document highlight is a range inside a text document which deserves\n * special attention. Usually a document highlight is visualized by changing\n * the background color of its range.\n */\nexport interface DocumentHighlight {\n\t/**\n\t * The range this highlight applies to.\n\t */\n\trange: editorCommon.IRange;\n\t/**\n\t * The highlight kind, default is [text](#DocumentHighlightKind.Text).\n\t */\n\tkind: DocumentHighlightKind;\n}\n/**\n * The document highlight provider interface defines the contract between extensions and\n * the word-highlight-feature.\n */\nexport interface DocumentHighlightProvider {\n\t/**\n\t * Provide a set of document highlights, like all occurrences of a variable or\n\t * all exit-points of a function.\n\t */\n\tprovideDocumentHighlights(model: editorCommon.IReadOnlyModel, position: Position, token: CancellationToken): DocumentHighlight[] | Thenable<DocumentHighlight[]>;\n}\n\n/**\n * Value-object that contains additional information when\n * requesting references.\n */\nexport interface ReferenceContext {\n\t/**\n\t * Include the declaration of the current symbol.\n\t */\n\tincludeDeclaration: boolean;\n}\n/**\n * The reference provider interface defines the contract between extensions and\n * the [find references](https://code.visualstudio.com/docs/editor/editingevolved#_peek)-feature.\n */\nexport interface ReferenceProvider {\n\t/**\n\t * Provide a set of project-wide references for the given position and document.\n\t */\n\tprovideReferences(model:editorCommon.IReadOnlyModel, position:Position, context: ReferenceContext, token: CancellationToken): Location[] | Thenable<Location[]>;\n}\n\n/**\n * Represents a location inside a resource, such as a line\n * inside a text file.\n */\nexport interface Location {\n\t/**\n\t * The resource identifier of this location.\n\t */\n\turi: URI;\n\t/**\n\t * The document range of this locations.\n\t */\n\trange: editorCommon.IRange;\n}\n/**\n * The definition of a symbol represented as one or many [locations](#Location).\n * For most programming languages there is only one location at which a symbol is\n * defined.\n */\nexport type Definition = Location | Location[];\n/**\n * The definition provider interface defines the contract between extensions and\n * the [go to definition](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-definition)\n * and peek definition features.\n */\nexport interface DefinitionProvider {\n\t/**\n\t * Provide the definition of the symbol at the given position and document.\n\t */\n\tprovideDefinition(model:editorCommon.IReadOnlyModel, position:Position, token:CancellationToken): Definition | Thenable<Definition>;\n}\n\n\n/**\n * A symbol kind.\n */\nexport enum SymbolKind {\n\tFile,\n\tModule,\n\tNamespace,\n\tPackage,\n\tClass,\n\tMethod,\n\tProperty,\n\tField,\n\tConstructor,\n\tEnum,\n\tInterface,\n\tFunction,\n\tVariable,\n\tConstant,\n\tString,\n\tNumber,\n\tBoolean,\n\tArray,\n\tObject,\n\tKey,\n\tNull\n}\n/**\n * @internal\n */\nexport namespace SymbolKind {\n\n\t/**\n\t * @internal\n\t */\n\texport function from(kind: number | SymbolKind): string {\n\t\tswitch (kind) {\n\t\t\tcase SymbolKind.Method:\n\t\t\t\treturn 'method';\n\t\t\tcase SymbolKind.Function:\n\t\t\t\treturn 'function';\n\t\t\tcase SymbolKind.Constructor:\n\t\t\t\treturn 'constructor';\n\t\t\tcase SymbolKind.Variable:\n\t\t\t\treturn 'variable';\n\t\t\tcase SymbolKind.Class:\n\t\t\t\treturn 'class';\n\t\t\tcase SymbolKind.Interface:\n\t\t\t\treturn 'interface';\n\t\t\tcase SymbolKind.Namespace:\n\t\t\t\treturn 'namespace';\n\t\t\tcase SymbolKind.Package:\n\t\t\t\treturn 'package';\n\t\t\tcase SymbolKind.Module:\n\t\t\t\treturn 'module';\n\t\t\tcase SymbolKind.Property:\n\t\t\t\treturn 'property';\n\t\t\tcase SymbolKind.Enum:\n\t\t\t\treturn 'enum';\n\t\t\tcase SymbolKind.String:\n\t\t\t\treturn 'string';\n\t\t\tcase SymbolKind.File:\n\t\t\t\treturn 'file';\n\t\t\tcase SymbolKind.Array:\n\t\t\t\treturn 'array';\n\t\t\tcase SymbolKind.Number:\n\t\t\t\treturn 'number';\n\t\t\tcase SymbolKind.Boolean:\n\t\t\t\treturn 'boolean';\n\t\t\tcase SymbolKind.Object:\n\t\t\t\treturn 'object';\n\t\t\tcase SymbolKind.Key:\n\t\t\t\treturn 'key';\n\t\t\tcase SymbolKind.Null:\n\t\t\t\treturn 'null';\n\t\t}\n\t\treturn 'property';\n\t}\n\n\t/**\n\t * @internal\n\t */\n\texport function to(type: string): SymbolKind {\n\t\tswitch (type) {\n\t\t\tcase 'method':\n\t\t\t\treturn SymbolKind.Method;\n\t\t\tcase 'function':\n\t\t\t\treturn SymbolKind.Function;\n\t\t\tcase 'constructor':\n\t\t\t\treturn SymbolKind.Constructor;\n\t\t\tcase 'variable':\n\t\t\t\treturn SymbolKind.Variable;\n\t\t\tcase 'class':\n\t\t\t\treturn SymbolKind.Class;\n\t\t\tcase 'interface':\n\t\t\t\treturn SymbolKind.Interface;\n\t\t\tcase 'namespace':\n\t\t\t\treturn SymbolKind.Namespace;\n\t\t\tcase 'package':\n\t\t\t\treturn SymbolKind.Package;\n\t\t\tcase 'module':\n\t\t\t\treturn SymbolKind.Module;\n\t\t\tcase 'property':\n\t\t\t\treturn SymbolKind.Property;\n\t\t\tcase 'enum':\n\t\t\t\treturn SymbolKind.Enum;\n\t\t\tcase 'string':\n\t\t\t\treturn SymbolKind.String;\n\t\t\tcase 'file':\n\t\t\t\treturn SymbolKind.File;\n\t\t\tcase 'array':\n\t\t\t\treturn SymbolKind.Array;\n\t\t\tcase 'number':\n\t\t\t\treturn SymbolKind.Number;\n\t\t\tcase 'boolean':\n\t\t\t\treturn SymbolKind.Boolean;\n\t\t\tcase 'object':\n\t\t\t\treturn SymbolKind.Object;\n\t\t\tcase 'key':\n\t\t\t\treturn SymbolKind.Key;\n\t\t\tcase 'null':\n\t\t\t\treturn SymbolKind.Null;\n\t\t}\n\t\treturn SymbolKind.Property;\n\t}\n}\n/**\n * Represents information about programming constructs like variables, classes,\n * interfaces etc.\n */\nexport interface SymbolInformation {\n\t/**\n\t * The name of this symbol.\n\t */\n\tname: string;\n\t/**\n\t * The name of the symbol containing this symbol.\n\t */\n\tcontainerName?: string;\n\t/**\n\t * The kind of this symbol.\n\t */\n\tkind: SymbolKind;\n\t/**\n\t * The location of this symbol.\n\t */\n\tlocation: Location;\n}\n/**\n * The document symbol provider interface defines the contract between extensions and\n * the [go to symbol](https://code.visualstudio.com/docs/editor/editingevolved#_goto-symbol)-feature.\n */\nexport interface DocumentSymbolProvider {\n\t/**\n\t * Provide symbol information for the given document.\n\t */\n\tprovideDocumentSymbols(model:editorCommon.IReadOnlyModel, token: CancellationToken): SymbolInformation[] | Thenable<SymbolInformation[]>;\n}\n\n/**\n * Interface used to format a model\n */\nexport interface FormattingOptions {\n\t/**\n\t * Size of a tab in spaces.\n\t */\n\ttabSize:number;\n\t/**\n\t * Prefer spaces over tabs.\n\t */\n\tinsertSpaces:boolean;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface DocumentFormattingEditProvider {\n\t/**\n\t * Provide formatting edits for a whole document.\n\t */\n\tprovideDocumentFormattingEdits(model: editorCommon.IReadOnlyModel, options: FormattingOptions, token: CancellationToken): editorCommon.ISingleEditOperation[] | Thenable<editorCommon.ISingleEditOperation[]>;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface DocumentRangeFormattingEditProvider {\n\t/**\n\t * Provide formatting edits for a range in a document.\n\t *\n\t * The given range is a hint and providers can decide to format a smaller\n\t * or larger range. Often this is done by adjusting the start and end\n\t * of the range to full syntax nodes.\n\t */\n\tprovideDocumentRangeFormattingEdits(model: editorCommon.IReadOnlyModel, range: Range, options: FormattingOptions, token: CancellationToken): editorCommon.ISingleEditOperation[] | Thenable<editorCommon.ISingleEditOperation[]>;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface OnTypeFormattingEditProvider {\n\tautoFormatTriggerCharacters: string[];\n\t/**\n\t * Provide formatting edits after a character has been typed.\n\t *\n\t * The given position and character should hint to the provider\n\t * what range the position to expand to, like find the matching `{`\n\t * when `}` has been entered.\n\t */\n\tprovideOnTypeFormattingEdits(model: editorCommon.IReadOnlyModel, position: Position, ch: string, options: FormattingOptions, token: CancellationToken): editorCommon.ISingleEditOperation[] | Thenable<editorCommon.ISingleEditOperation[]>;\n}\n\n/**\n * @internal\n */\nexport interface IInplaceReplaceSupportResult {\n\tvalue: string;\n\trange:editorCommon.IRange;\n}\n\n/**\n * A link inside the editor.\n */\nexport interface ILink {\n\trange: editorCommon.IRange;\n\turl: string;\n}\n/**\n * A provider of links.\n */\nexport interface LinkProvider {\n\tprovideLinks(model: editorCommon.IReadOnlyModel, token: CancellationToken): ILink[] | Thenable<ILink[]>;\n\tresolveLink?: (link: ILink, token: CancellationToken) => ILink | Thenable<ILink>;\n}\n\n\n/**\n * Interface used to define a configurable editor mode.\n * @internal\n */\nexport interface IConfigurationSupport {\n\tconfigure(options:any):TPromise<void>;\n}\n\n\nexport interface IResourceEdit {\n\tresource: URI;\n\trange: editorCommon.IRange;\n\tnewText: string;\n}\nexport interface WorkspaceEdit {\n\tedits: IResourceEdit[];\n\trejectReason?: string;\n}\nexport interface RenameProvider {\n\tprovideRenameEdits(model:editorCommon.IReadOnlyModel, position:Position, newName: string, token: CancellationToken): WorkspaceEdit | Thenable<WorkspaceEdit>;\n}\n\n\nexport interface Command {\n\tid: string;\n\ttitle: string;\n\targuments?: any[];\n}\nexport interface ICodeLensSymbol {\n\trange: editorCommon.IRange;\n\tid?: string;\n\tcommand?: Command;\n}\nexport interface CodeLensProvider {\n\tprovideCodeLenses(model:editorCommon.IReadOnlyModel, token: CancellationToken): ICodeLensSymbol[] | Thenable<ICodeLensSymbol[]>;\n\tresolveCodeLens?(model:editorCommon.IReadOnlyModel, codeLens: ICodeLensSymbol, token: CancellationToken): ICodeLensSymbol | Thenable<ICodeLensSymbol>;\n}\n\n/**\n * A tuple of two characters, like a pair of\n * opening and closing brackets.\n */\nexport type CharacterPair = [string, string];\n\nexport interface IAutoClosingPairConditional extends IAutoClosingPair {\n\tnotIn?: string[];\n\n}\n\n/**\n * Interface used to support electric characters\n * @internal\n */\nexport interface IElectricAction {\n\t// Only one of the following properties should be defined:\n\n\t// The line will be indented at the same level of the line\n\t// which contains the matching given bracket type.\n\tmatchOpenBracket?:string;\n\n\t// The text will be appended after the electric character.\n\tappendText?:string;\n\n\t// The number of characters to advance the cursor, useful with appendText\n\tadvanceCount?:number;\n}\n\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport enum IndentAction {\n\t/**\n\t * Insert new line and copy the previous line's indentation.\n\t */\n\tNone,\n\t/**\n\t * Insert new line and indent once (relative to the previous line's indentation).\n\t */\n\tIndent,\n\t/**\n\t * Insert two new lines:\n\t *  - the first one indented which will hold the cursor\n\t *  - the second one at the same indentation level\n\t */\n\tIndentOutdent,\n\t/**\n\t * Insert new line and outdent once (relative to the previous line's indentation).\n\t */\n\tOutdent\n}\n\n/**\n * Describes what to do when pressing Enter.\n */\nexport interface EnterAction {\n\t/**\n\t * Describe what to do with the indentation.\n\t */\n\tindentAction:IndentAction;\n\t/**\n\t * Describes text to be appended after the new line and after the indentation.\n\t */\n\tappendText?:string;\n\t/**\n\t * Describes the number of characters to remove from the new line's indentation.\n\t */\n\tremoveText?:number;\n}\n\n/**\n * @internal\n */\nexport interface IRichEditElectricCharacter {\n\tgetElectricCharacters():string[];\n\t// Should return opening bracket type to match indentation with\n\tonElectricCharacter(context:ILineContext, offset:number):IElectricAction;\n}\n\n/**\n * @internal\n */\nexport interface IRichEditOnEnter {\n\tonEnter(model:editorCommon.ITokenizedModel, position: editorCommon.IPosition): EnterAction;\n}\n\n/**\n * Interface used to support insertion of mode specific comments.\n * @internal\n */\nexport interface ICommentsConfiguration {\n\tlineCommentToken?:string;\n\tblockCommentStartToken?:string;\n\tblockCommentEndToken?:string;\n}\n\nexport interface IAutoClosingPair {\n\topen:string;\n\tclose:string;\n}\n\n/**\n * @internal\n */\nexport interface IRichEditCharacterPair {\n\tgetAutoClosingPairs():IAutoClosingPairConditional[];\n\tshouldAutoClosePair(character:string, context:ILineContext, offset:number):boolean;\n\tgetSurroundingPairs():IAutoClosingPair[];\n}\n\n/**\n * @internal\n */\nexport interface IRichEditBrackets {\n\tmaxBracketLength: number;\n\tforwardRegex: RegExp;\n\treversedRegex: RegExp;\n\tbrackets: editorCommon.IRichEditBracket[];\n\ttextIsBracket: {[text:string]:editorCommon.IRichEditBracket;};\n\ttextIsOpenBracket: {[text:string]:boolean;};\n}\n\n// --- feature registries ------\n\n/**\n * @internal\n */\nexport const ReferenceProviderRegistry = new LanguageFeatureRegistry<ReferenceProvider>();\n\n/**\n * @internal\n */\nexport const RenameProviderRegistry = new LanguageFeatureRegistry<RenameProvider>();\n\n/**\n * @internal\n */\nexport const SuggestRegistry = new LanguageFeatureRegistry<ISuggestSupport>();\n\n/**\n * @internal\n */\nexport const SignatureHelpProviderRegistry = new LanguageFeatureRegistry<SignatureHelpProvider>();\n\n/**\n * @internal\n */\nexport const HoverProviderRegistry = new LanguageFeatureRegistry<HoverProvider>();\n\n/**\n * @internal\n */\nexport const DocumentSymbolProviderRegistry = new LanguageFeatureRegistry<DocumentSymbolProvider>();\n\n/**\n * @internal\n */\nexport const DocumentHighlightProviderRegistry = new LanguageFeatureRegistry<DocumentHighlightProvider>();\n\n/**\n * @internal\n */\nexport const DefinitionProviderRegistry = new LanguageFeatureRegistry<DefinitionProvider>();\n\n/**\n * @internal\n */\nexport const CodeLensProviderRegistry = new LanguageFeatureRegistry<CodeLensProvider>();\n\n/**\n * @internal\n */\nexport const CodeActionProviderRegistry = new LanguageFeatureRegistry<CodeActionProvider>();\n\n/**\n * @internal\n */\nexport const DocumentFormattingEditProviderRegistry = new LanguageFeatureRegistry<DocumentFormattingEditProvider>();\n\n/**\n * @internal\n */\nexport const DocumentRangeFormattingEditProviderRegistry = new LanguageFeatureRegistry<DocumentRangeFormattingEditProvider>();\n\n/**\n * @internal\n */\nexport const OnTypeFormattingEditProviderRegistry = new LanguageFeatureRegistry<OnTypeFormattingEditProvider>();\n\n/**\n * @internal\n */\nexport const LinkProviderRegistry = new LanguageFeatureRegistry<LinkProvider>();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport * as strings from 'vs/base/common/strings';\nimport {IPosition, ITextModel, ITokenizedModel} from 'vs/editor/common/editorCommon';\nimport {EnterAction, ILineContext, IRichEditOnEnter, IndentAction, CharacterPair} from 'vs/editor/common/modes';\nimport {handleEvent} from 'vs/editor/common/modes/supports';\nimport {LanguageConfigurationRegistryImpl} from 'vs/editor/common/modes/languageConfigurationRegistry';\n\n/**\n * Describes indentation rules for a language.\n */\nexport interface IndentationRule {\n\t/**\n\t * If a line matches this pattern, then all the lines after it should be unindendented once (until another rule matches).\n\t */\n\tdecreaseIndentPattern: RegExp;\n\t/**\n\t * If a line matches this pattern, then all the lines after it should be indented once (until another rule matches).\n\t */\n\tincreaseIndentPattern: RegExp;\n\t/**\n\t * If a line matches this pattern, then **only the next line** after it should be indented once.\n\t */\n\tindentNextLinePattern?: RegExp;\n\t/**\n\t * If a line matches this pattern, then its indentation should not be changed and it should not be evaluated against the other rules.\n\t */\n\tunIndentedLinePattern?: RegExp;\n}\n\n/**\n * Describes a rule to be evaluated when pressing Enter.\n */\nexport interface OnEnterRule {\n\t/**\n\t * This rule will only execute if the text before the cursor matches this regular expression.\n\t */\n\tbeforeText: RegExp;\n\t/**\n\t * This rule will only execute if the text after the cursor matches this regular expression.\n\t */\n\tafterText?: RegExp;\n\t/**\n\t * The action to execute.\n\t */\n\taction: EnterAction;\n}\n\nexport interface IOnEnterSupportOptions {\n\tbrackets?: CharacterPair[];\n\tindentationRules?: IndentationRule;\n\tregExpRules?: OnEnterRule[];\n}\n\ninterface IProcessedBracketPair {\n\topen: string;\n\tclose: string;\n\topenRegExp: RegExp;\n\tcloseRegExp: RegExp;\n}\n\nexport class OnEnterSupport implements IRichEditOnEnter {\n\n\tprivate static _INDENT: EnterAction = { indentAction: IndentAction.Indent };\n\tprivate static _INDENT_OUTDENT: EnterAction = { indentAction: IndentAction.IndentOutdent };\n\tprivate static _OUTDENT: EnterAction = { indentAction: IndentAction.Outdent };\n\n\tprivate _registry: LanguageConfigurationRegistryImpl;\n\tprivate _modeId: string;\n\tprivate _brackets: IProcessedBracketPair[];\n\tprivate _indentationRules: IndentationRule;\n\tprivate _regExpRules: OnEnterRule[];\n\n\tconstructor(registry: LanguageConfigurationRegistryImpl, modeId: string, opts?:IOnEnterSupportOptions) {\n\t\tthis._registry = registry;\n\t\topts = opts || {};\n\t\topts.brackets = opts.brackets || [\n\t\t\t['(', ')'],\n\t\t\t['{', '}'],\n\t\t\t['[', ']']\n\t\t];\n\n\t\tthis._modeId = modeId;\n\t\tthis._brackets = opts.brackets.map((bracket) => {\n\t\t\treturn {\n\t\t\t\topen: bracket[0],\n\t\t\t\topenRegExp: OnEnterSupport._createOpenBracketRegExp(bracket[0]),\n\t\t\t\tclose: bracket[1],\n\t\t\t\tcloseRegExp: OnEnterSupport._createCloseBracketRegExp(bracket[1]),\n\t\t\t};\n\t\t});\n\t\tthis._regExpRules = opts.regExpRules || [];\n\t\tthis._indentationRules = opts.indentationRules;\n\t}\n\n\tpublic onEnter(model:ITokenizedModel, position: IPosition): EnterAction {\n\t\tvar context = model.getLineContext(position.lineNumber);\n\n\t\treturn handleEvent(context, position.column - 1, (nestedModeId:string, context:ILineContext, offset:number) => {\n\t\t\tif (this._modeId === nestedModeId) {\n\t\t\t\treturn this._onEnter(model, position);\n\t\t\t}\n\n\t\t\tlet onEnterSupport = this._registry.getOnEnterSupport(nestedModeId);\n\t\t\tif (onEnterSupport) {\n\t\t\t\treturn onEnterSupport.onEnter(model, position);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tprivate _onEnter(model:ITextModel, position: IPosition): EnterAction {\n\t\tlet lineText = model.getLineContent(position.lineNumber);\n\t\tlet beforeEnterText = lineText.substr(0, position.column - 1);\n\t\tlet afterEnterText = lineText.substr(position.column - 1);\n\n\t\tlet oneLineAboveText = position.lineNumber === 1 ? '' : model.getLineContent(position.lineNumber - 1);\n\n\t\treturn this._actualOnEnter(oneLineAboveText, beforeEnterText, afterEnterText);\n\t}\n\n\t_actualOnEnter(oneLineAboveText:string, beforeEnterText:string, afterEnterText:string): EnterAction {\n\t\t// (1): `regExpRules`\n\t\tfor (let i = 0, len = this._regExpRules.length; i < len; i++) {\n\t\t\tlet rule = this._regExpRules[i];\n\t\t\tif (rule.beforeText.test(beforeEnterText)) {\n\t\t\t\tif (rule.afterText) {\n\t\t\t\t\tif (rule.afterText.test(afterEnterText)) {\n\t\t\t\t\t\treturn rule.action;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn rule.action;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (2): Special indent-outdent\n\t\tif (beforeEnterText.length > 0 && afterEnterText.length > 0) {\n\t\t\tfor (let i = 0, len = this._brackets.length; i < len; i++) {\n\t\t\t\tlet bracket = this._brackets[i];\n\t\t\t\tif (bracket.openRegExp.test(beforeEnterText) && bracket.closeRegExp.test(afterEnterText)) {\n\t\t\t\t\treturn OnEnterSupport._INDENT_OUTDENT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (3): Indentation Support\n\t\tif (this._indentationRules) {\n\t\t\tif (this._indentationRules.increaseIndentPattern && this._indentationRules.increaseIndentPattern.test(beforeEnterText)) {\n\t\t\t\treturn OnEnterSupport._INDENT;\n\t\t\t}\n\t\t\tif (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(beforeEnterText)) {\n\t\t\t\treturn OnEnterSupport._INDENT;\n\t\t\t}\n\t\t\tif (/^\\s/.test(beforeEnterText)) {\n\t\t\t\t// No reason to run regular expressions if there is nothing to outdent from\n\t\t\t\tif (this._indentationRules.decreaseIndentPattern && this._indentationRules.decreaseIndentPattern.test(afterEnterText)) {\n\t\t\t\t\treturn OnEnterSupport._OUTDENT;\n\t\t\t\t}\n\t\t\t\tif (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(oneLineAboveText)) {\n\t\t\t\t\treturn OnEnterSupport._OUTDENT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (4): Open bracket based logic\n\t\tif (beforeEnterText.length > 0) {\n\t\t\tfor (let i = 0, len = this._brackets.length; i < len; i++) {\n\t\t\t\tlet bracket = this._brackets[i];\n\t\t\t\tif (bracket.openRegExp.test(beforeEnterText)) {\n\t\t\t\t\treturn OnEnterSupport._INDENT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _createOpenBracketRegExp(bracket:string): RegExp {\n\t\tvar str = strings.escapeRegExpCharacters(bracket);\n\t\tif (!/\\B/.test(str.charAt(0))) {\n\t\t\tstr = '\\\\b' + str;\n\t\t}\n\t\tstr += '\\\\s*$';\n\t\treturn OnEnterSupport._safeRegExp(str);\n\t}\n\n\tprivate static _createCloseBracketRegExp(bracket:string): RegExp {\n\t\tvar str = strings.escapeRegExpCharacters(bracket);\n\t\tif (!/\\B/.test(str.charAt(str.length - 1))) {\n\t\t\tstr = str + '\\\\b';\n\t\t}\n\t\tstr = '^\\\\s*' + str;\n\t\treturn OnEnterSupport._safeRegExp(str);\n\t}\n\n\tprivate static _safeRegExp(def:string): RegExp {\n\t\ttry {\n\t\t\treturn new RegExp(def);\n\t\t} catch(err) {\n\t\t\tonUnexpectedError(err);\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {ICommentsConfiguration, IRichEditBrackets, IRichEditCharacterPair, IAutoClosingPair,\n\tIAutoClosingPairConditional, IRichEditOnEnter, CharacterPair,\n\tIRichEditElectricCharacter, EnterAction, IndentAction} from 'vs/editor/common/modes';\nimport {CharacterPairSupport} from 'vs/editor/common/modes/supports/characterPair';\nimport {BracketElectricCharacterSupport, IBracketElectricCharacterContribution} from 'vs/editor/common/modes/supports/electricCharacter';\nimport {IndentationRule, OnEnterRule, IOnEnterSupportOptions, OnEnterSupport} from 'vs/editor/common/modes/supports/onEnter';\nimport {RichEditBrackets} from 'vs/editor/common/modes/supports/richEditBrackets';\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {ITokenizedModel} from 'vs/editor/common/editorCommon';\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport {Position} from 'vs/editor/common/core/position';\nimport * as strings from 'vs/base/common/strings';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {DEFAULT_WORD_REGEXP} from 'vs/editor/common/model/wordHelper';\n\n/**\n * Describes how comments for a language work.\n */\nexport interface CommentRule {\n\t/**\n\t * The line comment token, like `// this is a comment`\n\t */\n\tlineComment?: string;\n\t/**\n\t * The block comment character pair, like `/* block comment *&#47;`\n\t */\n\tblockComment?: CharacterPair;\n}\n\n/**\n * The language configuration interface defines the contract between extensions and\n * various editor features, like automatic bracket insertion, automatic indentation etc.\n */\nexport interface LanguageConfiguration {\n\t/**\n\t * The language's comment settings.\n\t */\n\tcomments?: CommentRule;\n\t/**\n\t * The language's brackets.\n\t * This configuration implicitly affects pressing Enter around these brackets.\n\t */\n\tbrackets?: CharacterPair[];\n\t/**\n\t * The language's word definition.\n\t * If the language supports Unicode identifiers (e.g. JavaScript), it is preferable\n\t * to provide a word definition that uses exclusion of known separators.\n\t * e.g.: A regex that matches anything except known separators (and dot is allowed to occur in a floating point number):\n\t *   /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n\t */\n\twordPattern?: RegExp;\n\t/**\n\t * The language's indentation settings.\n\t */\n\tindentationRules?: IndentationRule;\n\t/**\n\t\t * The language's rules to be evaluated when pressing Enter.\n\t\t */\n\tonEnterRules?: OnEnterRule[];\n\t/**\n\t * The language's auto closing pairs. The 'close' character is automatically inserted with the\n\t * 'open' character is typed. If not set, the configured brackets will be used.\n\t */\n\tautoClosingPairs?: IAutoClosingPairConditional[];\n\t/**\n\t * The language's surrounding pairs. When the 'open' character is typed on a selection, the\n\t * selected string is surrounded by the open and close characters. If not set, the autoclosing pairs\n\t * settings will be used.\n\t */\n\tsurroundingPairs?: IAutoClosingPair[];\n\t/**\n\t * **Deprecated** Do not use.\n\t *\n\t * @deprecated Will be replaced by a better API soon.\n\t */\n\t__electricCharacterSupport?: IBracketElectricCharacterContribution;\n}\n\nexport class RichEditSupport {\n\n\tprivate _conf: LanguageConfiguration;\n\n\tpublic electricCharacter: BracketElectricCharacterSupport;\n\tpublic comments: ICommentsConfiguration;\n\tpublic characterPair: IRichEditCharacterPair;\n\tpublic wordDefinition: RegExp;\n\tpublic onEnter: IRichEditOnEnter;\n\tpublic brackets: IRichEditBrackets;\n\n\tconstructor(modeId:string, previous:RichEditSupport, rawConf:LanguageConfiguration) {\n\n\t\tlet prev:LanguageConfiguration = null;\n\t\tif (previous) {\n\t\t\tprev = previous._conf;\n\t\t}\n\n\t\tthis._conf = RichEditSupport._mergeConf(prev, rawConf);\n\n\t\tif (this._conf.brackets) {\n\t\t\tthis.brackets = new RichEditBrackets(modeId, this._conf.brackets);\n\t\t}\n\n\t\tthis._handleOnEnter(modeId, this._conf);\n\n\t\tthis._handleComments(modeId, this._conf);\n\n\t\tthis.characterPair = new CharacterPairSupport(LanguageConfigurationRegistry, modeId, this._conf);\n\t\tthis.electricCharacter = new BracketElectricCharacterSupport(LanguageConfigurationRegistry, modeId, this.brackets, this.characterPair.getAutoClosingPairs(), this._conf.__electricCharacterSupport);\n\n\t\tthis.wordDefinition = this._conf.wordPattern || DEFAULT_WORD_REGEXP;\n\t}\n\n\tprivate static _mergeConf(prev:LanguageConfiguration, current:LanguageConfiguration): LanguageConfiguration {\n\t\treturn {\n\t\t\tcomments: (prev ? current.comments || prev.comments : current.comments),\n\t\t\tbrackets: (prev ? current.brackets || prev.brackets : current.brackets),\n\t\t\twordPattern: (prev ? current.wordPattern || prev.wordPattern : current.wordPattern),\n\t\t\tindentationRules: (prev ? current.indentationRules || prev.indentationRules : current.indentationRules),\n\t\t\tonEnterRules: (prev ? current.onEnterRules || prev.onEnterRules : current.onEnterRules),\n\t\t\tautoClosingPairs: (prev ? current.autoClosingPairs || prev.autoClosingPairs : current.autoClosingPairs),\n\t\t\tsurroundingPairs: (prev ? current.surroundingPairs || prev.surroundingPairs : current.surroundingPairs),\n\t\t\t__electricCharacterSupport: (prev ? current.__electricCharacterSupport || prev.__electricCharacterSupport : current.__electricCharacterSupport),\n\t\t};\n\t}\n\n\tprivate _handleOnEnter(modeId:string, conf:LanguageConfiguration): void {\n\t\t// on enter\n\t\tlet onEnter: IOnEnterSupportOptions = {};\n\t\tlet empty = true;\n\n\t\tif (conf.brackets) {\n\t\t\tempty = false;\n\t\t\tonEnter.brackets = conf.brackets;\n\t\t}\n\t\tif (conf.indentationRules) {\n\t\t\tempty = false;\n\t\t\tonEnter.indentationRules = conf.indentationRules;\n\t\t}\n\t\tif (conf.onEnterRules) {\n\t\t\tempty = false;\n\t\t\tonEnter.regExpRules = conf.onEnterRules;\n\t\t}\n\n\t\tif (!empty) {\n\t\t\tthis.onEnter = new OnEnterSupport(LanguageConfigurationRegistry, modeId, onEnter);\n\t\t}\n\t}\n\n\tprivate _handleComments(modeId:string, conf:LanguageConfiguration): void {\n\t\tlet commentRule = conf.comments;\n\n\t\t// comment configuration\n\t\tif (commentRule) {\n\t\t\tthis.comments = {};\n\n\t\t\tif (commentRule.lineComment) {\n\t\t\t\tthis.comments.lineCommentToken = commentRule.lineComment;\n\t\t\t}\n\t\t\tif (commentRule.blockComment) {\n\t\t\t\tlet [blockStart, blockEnd] = commentRule.blockComment;\n\t\t\t\tthis.comments.blockCommentStartToken = blockStart;\n\t\t\t\tthis.comments.blockCommentEndToken = blockEnd;\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport class LanguageConfigurationRegistryImpl {\n\n\tprivate _entries: {[languageId:string]:RichEditSupport;};\n\n\tprivate _onDidChange: Emitter<void> = new Emitter<void>();\n\tpublic onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor() {\n\t\tthis._entries = Object.create(null);\n\t}\n\n\tpublic register(languageId:string, configuration:LanguageConfiguration): IDisposable {\n\t\tlet previous = this._entries[languageId] || null;\n\t\tthis._entries[languageId] = new RichEditSupport(languageId, previous, configuration);\n\t\tthis._onDidChange.fire(void 0);\n\t\treturn {\n\t\t\tdispose: () => {}\n\t\t};\n\t}\n\n\tprivate _getRichEditSupport(modeId:string): RichEditSupport {\n\t\treturn this._entries[modeId];\n\t}\n\n\tpublic getElectricCharacterSupport(modeId:string): IRichEditElectricCharacter {\n\t\tlet value = this._getRichEditSupport(modeId);\n\t\tif (!value) {\n\t\t\treturn null;\n\t\t}\n\t\treturn value.electricCharacter || null;\n\t}\n\n\tpublic getComments(modeId:string): ICommentsConfiguration {\n\t\tlet value = this._getRichEditSupport(modeId);\n\t\tif (!value) {\n\t\t\treturn null;\n\t\t}\n\t\treturn value.comments || null;\n\t}\n\n\tpublic getCharacterPairSupport(modeId:string): IRichEditCharacterPair {\n\t\tlet value = this._getRichEditSupport(modeId);\n\t\tif (!value) {\n\t\t\treturn null;\n\t\t}\n\t\treturn value.characterPair || null;\n\t}\n\n\tpublic getWordDefinition(modeId:string): RegExp {\n\t\tlet value = this._getRichEditSupport(modeId);\n\t\tif (!value) {\n\t\t\treturn null;\n\t\t}\n\t\treturn value.wordDefinition || null;\n\t}\n\n\tpublic getOnEnterSupport(modeId:string): IRichEditOnEnter {\n\t\tlet value = this._getRichEditSupport(modeId);\n\t\tif (!value) {\n\t\t\treturn null;\n\t\t}\n\t\treturn value.onEnter || null;\n\t}\n\n\tpublic getRawEnterActionAtPosition(model:ITokenizedModel, lineNumber:number, column:number): EnterAction {\n\t\tlet result:EnterAction;\n\n\t\tlet onEnterSupport = this.getOnEnterSupport(model.getMode().getId());\n\n\t\tif (onEnterSupport) {\n\t\t\ttry {\n\t\t\t\tresult = onEnterSupport.onEnter(model, new Position(lineNumber, column));\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic getEnterActionAtPosition(model:ITokenizedModel, lineNumber:number, column:number): { enterAction: EnterAction; indentation: string; } {\n\t\tlet lineText = model.getLineContent(lineNumber);\n\t\tlet indentation = strings.getLeadingWhitespace(lineText);\n\t\tif (indentation.length > column - 1) {\n\t\t\tindentation = indentation.substring(0, column - 1);\n\t\t}\n\n\t\tlet enterAction = this.getRawEnterActionAtPosition(model, lineNumber, column);\n\t\tif (!enterAction) {\n\t\t\tenterAction = {\n\t\t\t\tindentAction: IndentAction.None,\n\t\t\t\tappendText: '',\n\t\t\t};\n\t\t} else {\n\t\t\tif(!enterAction.appendText) {\n\t\t\t\tif (\n\t\t\t\t\t(enterAction.indentAction === IndentAction.Indent) ||\n\t\t\t\t\t(enterAction.indentAction === IndentAction.IndentOutdent)\n\t\t\t\t) {\n\t\t\t\t\tenterAction.appendText = '\\t';\n\t\t\t\t} else {\n\t\t\t\t\tenterAction.appendText = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (enterAction.removeText) {\n\t\t\tindentation = indentation.substring(0, indentation.length - 1);\n\t\t}\n\n\t\treturn {\n\t\t\tenterAction: enterAction,\n\t\t\tindentation: indentation\n\t\t};\n\t}\n\n\tpublic getBracketsSupport(modeId:string): IRichEditBrackets {\n\t\tlet value = this._getRichEditSupport(modeId);\n\t\tif (!value) {\n\t\t\treturn null;\n\t\t}\n\t\treturn value.brackets || null;\n\t}\n}\n\nexport const LanguageConfigurationRegistry = new LanguageConfigurationRegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IPosition, IWordAtPosition} from 'vs/editor/common/editorCommon';\nimport {IMode, IModeTransition} from 'vs/editor/common/modes';\nimport {ModeTransition} from 'vs/editor/common/core/modeTransition';\nimport {LanguageConfigurationRegistry} from 'vs/editor/common/modes/languageConfigurationRegistry';\nimport {getWordAtText, ensureValidWordDefinition} from 'vs/editor/common/model/wordHelper';\n\nexport interface ITextSource {\n\n\t_lineIsTokenized(lineNumber:number): boolean;\n\n\tgetLineContent(lineNumber:number): string;\n\n\tgetMode(): IMode;\n\n\t_getLineModeTransitions(lineNumber:number): ModeTransition[];\n}\n\nexport interface INonWordTokenMap {\n\t[key:string]:boolean;\n}\n\nexport class WordHelper {\n\n\tprivate static _safeGetWordDefinition(mode:IMode): RegExp {\n\t\treturn LanguageConfigurationRegistry.getWordDefinition(mode.getId());\n\t}\n\n\tpublic static massageWordDefinitionOf(mode:IMode): RegExp {\n\t\treturn ensureValidWordDefinition(WordHelper._safeGetWordDefinition(mode));\n\t}\n\n\tprivate static _getWordAtColumn(txt:string, column:number, modeIndex: number, modeTransitions:IModeTransition[]): IWordAtPosition {\n\t\tvar modeStartIndex = modeTransitions[modeIndex].startIndex,\n\t\t\tmodeEndIndex = (modeIndex + 1 < modeTransitions.length ? modeTransitions[modeIndex + 1].startIndex : txt.length),\n\t\t\tmode = modeTransitions[modeIndex].mode;\n\n\t\treturn getWordAtText(\n\t\t\tcolumn, WordHelper.massageWordDefinitionOf(mode),\n\t\t\ttxt.substring(modeStartIndex, modeEndIndex), modeStartIndex\n\t\t);\n\t}\n\n\tpublic static getWordAtPosition(textSource:ITextSource, position:IPosition): IWordAtPosition {\n\n\t\tif (!textSource._lineIsTokenized(position.lineNumber)) {\n\t\t\treturn getWordAtText(position.column, WordHelper.massageWordDefinitionOf(textSource.getMode()), textSource.getLineContent(position.lineNumber), 0);\n\t\t}\n\n\t\tvar result: IWordAtPosition = null;\n\t\tvar txt = textSource.getLineContent(position.lineNumber),\n\t\t\tmodeTransitions = textSource._getLineModeTransitions(position.lineNumber),\n\t\t\tcolumnIndex = position.column - 1,\n\t\t\tmodeIndex = ModeTransition.findIndexInSegmentsArray(modeTransitions, columnIndex);\n\n\t\tresult = WordHelper._getWordAtColumn(txt, position.column, modeIndex, modeTransitions);\n\n\t\tif (!result && modeIndex > 0 && modeTransitions[modeIndex].startIndex === columnIndex) {\n\t\t\t// The position is right at the beginning of `modeIndex`, so try looking at `modeIndex` - 1 too\n\t\t\tresult = WordHelper._getWordAtColumn(txt, position.column, modeIndex - 1, modeTransitions);\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IReadOnlyModel} from 'vs/editor/common/editorCommon';\nimport {ISuggestResult, ISuggestSupport} from 'vs/editor/common/modes';\nimport {IFilter, matchesPrefix, fuzzyContiguousFilter} from 'vs/base/common/filters';\nimport {IEditorWorkerService} from 'vs/editor/common/services/editorWorkerService';\nimport {IConfigurationService} from 'vs/platform/configuration/common/configuration';\nimport {CancellationToken} from 'vs/base/common/cancellation';\nimport {wireCancellationToken} from 'vs/base/common/async';\nimport {Position} from 'vs/editor/common/core/position';\n\nexport class TextualSuggestSupport implements ISuggestSupport {\n\n\tpublic get triggerCharacters(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic get filter(): IFilter {\n\t\treturn matchesPrefix;\n\t}\n\n\tprivate _editorWorkerService: IEditorWorkerService;\n\tprivate _configurationService: IConfigurationService;\n\n\tconstructor(editorWorkerService: IEditorWorkerService, configurationService: IConfigurationService) {\n\t\tthis._editorWorkerService = editorWorkerService;\n\t\tthis._configurationService = configurationService;\n\t}\n\n\tpublic provideCompletionItems(model:IReadOnlyModel, position:Position, token:CancellationToken): Thenable<ISuggestResult> {\n\t\tlet config = this._configurationService.getConfiguration<{ wordBasedSuggestions: boolean }>('editor');\n\t\tif (!config || config.wordBasedSuggestions) {\n\t\t\treturn wireCancellationToken(token, this._editorWorkerService.textualSuggest(model.uri, position));\n\t\t}\n\t}\n}\n\nexport function filterSuggestions(value: ISuggestResult): ISuggestResult {\n\tif (!value) {\n\t\treturn;\n\t}\n\n\treturn {\n\t\tcurrentWord: value.currentWord,\n\t\tsuggestions: value.suggestions.filter((element) => !!fuzzyContiguousFilter(value.currentWord, element.label)),\n\t\tincomplete: value.incomplete\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport strings = require('vs/base/common/strings');\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tvar _error = 'error',\n\t\t_warning = 'warning',\n\t\t_warn = 'warn',\n\t\t_info = 'info';\n\n\tvar _displayStrings: { [value: number]: string; } = Object.create(null);\n\t_displayStrings[Severity.Error] = nls.localize('sev.error', \"Error\");\n\t_displayStrings[Severity.Warning] = nls.localize('sev.warning', \"Warning\");\n\t_displayStrings[Severity.Info] = nls.localize('sev.info', \"Info\");\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\n\t\treturn Severity.Ignore;\n\t}\n\n\texport function toString(value: Severity): string {\n\t\treturn _displayStrings[value] || strings.empty;\n\t}\n\n\texport function compare(a: Severity, b: Severity): number {\n\t\treturn b - a;\n\t}\n}\n\nexport default Severity;","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport {IEditorOptions} from 'vs/editor/common/editorCommon';\nimport * as platform from 'vs/base/common/platform';\nimport {USUAL_WORD_SEPARATORS} from 'vs/editor/common/model/wordHelper';\n\nexport interface IConfiguration {\n\teditor:IEditorOptions;\n}\n\nexport const DEFAULT_INDENTATION = {\n\ttabSize: 4,\n\tinsertSpaces: true,\n\tdetectIndentation: true\n};\nexport const DEFAULT_TRIM_AUTO_WHITESPACE = true;\n\nconst DEFAULT_WINDOWS_FONT_FAMILY = 'Consolas, \\'Courier New\\', monospace';\nconst DEFAULT_MAC_FONT_FAMILY = 'Menlo, Monaco, \\'Courier New\\', monospace';\nconst DEFAULT_LINUX_FONT_FAMILY = '\\'Droid Sans Mono\\', \\'Courier New\\', monospace, \\'Droid Sans Fallback\\'';\n\n/**\n * Determined from empirical observations.\n */\nexport const GOLDEN_LINE_HEIGHT_RATIO = platform.isMacintosh ? 1.5 : 1.35;\n\nclass ConfigClass implements IConfiguration {\n\n\tpublic editor: IEditorOptions;\n\n\tconstructor() {\n\t\tthis.editor = {\n\t\t\texperimentalScreenReader: true,\n\t\t\trulers: [],\n\t\t\twordSeparators: USUAL_WORD_SEPARATORS,\n\t\t\tselectionClipboard: true,\n\t\t\tariaLabel: nls.localize('editorViewAccessibleLabel', \"Editor content\"),\n\t\t\tlineNumbers: true,\n\t\t\tselectOnLineNumbers: true,\n\t\t\tlineNumbersMinChars: 5,\n\t\t\tglyphMargin: false,\n\t\t\tlineDecorationsWidth: 10,\n\t\t\trevealHorizontalRightPadding: 30,\n\t\t\troundedSelection: true,\n\t\t\ttheme: 'vs',\n\t\t\treadOnly: false,\n\t\t\tscrollbar: {\n\t\t\t\tverticalScrollbarSize: 14,\n\t\t\t\thorizontal: 'auto',\n\t\t\t\tuseShadows: true,\n\t\t\t\tverticalHasArrows: false,\n\t\t\t\thorizontalHasArrows: false\n\t\t\t},\n\t\t\toverviewRulerLanes: 2,\n\t\t\tcursorBlinking: 'blink',\n\t\t\tmouseWheelZoom: false,\n\t\t\tcursorStyle: 'line',\n\t\t\tfontLigatures: false,\n\t\t\tdisableTranslate3d: false,\n\t\t\thideCursorInOverviewRuler: false,\n\t\t\tscrollBeyondLastLine: true,\n\t\t\tautomaticLayout: false,\n\t\t\twrappingColumn: 300,\n\t\t\twrappingIndent: 'same',\n\t\t\twordWrapBreakBeforeCharacters: '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋',\n\t\t\twordWrapBreakAfterCharacters: ' \\t})]?|&,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ’”〉》」』】〕）］｝｣',\n\t\t\twordWrapBreakObtrusiveCharacters: '.',\n\n\t\t\t// Features\n\t\t\thover: true,\n\t\t\tcontextmenu: true,\n\t\t\tmouseWheelScrollSensitivity: 1,\n\t\t\tquickSuggestions: true,\n\t\t\tquickSuggestionsDelay: 10,\n\t\t\tparameterHints: true,\n\t\t\ticonsInSuggestions: true,\n\t\t\tautoClosingBrackets: true,\n\t\t\tformatOnType: false,\n\t\t\tsuggestOnTriggerCharacters: true,\n\t\t\tacceptSuggestionOnEnter: true,\n\t\t\tsnippetSuggestions: 'inline',\n\t\t\ttabCompletion: false,\n\t\t\twordBasedSuggestions: true,\n\t\t\tselectionHighlight: true,\n\t\t\tcodeLens: true,\n\t\t\treferenceInfos: true,\n\t\t\tfolding: true,\n\t\t\trenderWhitespace: false,\n\t\t\trenderControlCharacters: false,\n\t\t\trenderIndentGuides: false,\n\t\t\tuseTabStops: true,\n\n\t\t\tfontFamily: (\n\t\t\t\tplatform.isMacintosh ? DEFAULT_MAC_FONT_FAMILY : (platform.isLinux ? DEFAULT_LINUX_FONT_FAMILY : DEFAULT_WINDOWS_FONT_FAMILY)\n\t\t\t),\n\t\t\tfontSize: (\n\t\t\t\tplatform.isMacintosh ? 12 : 14\n\t\t\t),\n\t\t\tlineHeight: 0\n\t\t};\n\t}\n}\n\nexport var DefaultConfig: IConfiguration = new ConfigClass();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {EventEmitter} from 'vs/base/common/eventEmitter';\nimport {IEventService} from './event';\n\n// --- implementation ------------------------------------------\n\nexport class EventService extends EventEmitter implements IEventService {\n\tpublic _serviceBrand: any;\n\tconstructor() {\n\t\tsuper();\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {illegalArgument} from 'vs/base/common/errors';\nimport * as instantiation from './instantiation';\n\nexport class AbstractDescriptor<T> {\n\n\tconstructor(private _staticArguments: any[]) {\n\t\t// empty\n\t}\n\n\tpublic appendStaticArguments(more: any[]): void {\n\t\tthis._staticArguments.push.apply(this._staticArguments, more);\n\t}\n\n\tpublic staticArguments(): any[];\n\tpublic staticArguments(nth: number): any;\n\tpublic staticArguments(nth?: number): any[] {\n\t\tif (isNaN(nth)) {\n\t\t\treturn this._staticArguments.slice(0);\n\t\t} else {\n\t\t\treturn this._staticArguments[nth];\n\t\t}\n\t}\n\n\t_validate(type: T): void {\n\t\tif (!type) {\n\t\t\tthrow illegalArgument('can not be falsy');\n\t\t}\n\t}\n}\n\nexport class SyncDescriptor<T> extends AbstractDescriptor<T> {\n\n\tconstructor(private _ctor: any, ...staticArguments: any[]) {\n\t\tsuper(staticArguments);\n\t}\n\n\tpublic get ctor(): any {\n\t\treturn this._ctor;\n\t}\n\n\tprotected bind(...moreStaticArguments): SyncDescriptor<T> {\n\t\tlet allArgs = [];\n\t\tallArgs = allArgs.concat(this.staticArguments());\n\t\tallArgs = allArgs.concat(moreStaticArguments);\n\t\treturn new SyncDescriptor<T>(this._ctor, ...allArgs);\n\t}\n}\n\nexport interface CreateSyncFunc {\n\n\t<T>(ctor: instantiation.IConstructorSignature0<T>): SyncDescriptor0<T>;\n\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>): SyncDescriptor1<A1, T>;\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>, a1: A1): SyncDescriptor0<T>;\n\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>): SyncDescriptor2<A1, A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1): SyncDescriptor1<A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1, a2: A2): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>): SyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1): SyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>): SyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>): SyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>): SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>): SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>): SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\nexport const createSyncDescriptor: CreateSyncFunc = <T>(ctor: any, ...staticArguments: any[]): any => {\n\treturn new SyncDescriptor<T>(ctor, ...staticArguments);\n};\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n\nexport class AsyncDescriptor<T> extends AbstractDescriptor<T> implements AsyncDescriptor0<T> {\n\n\tpublic static create<T>(moduleName: string, ctorName: string): AsyncDescriptor<T> {\n\t\treturn new AsyncDescriptor<T>(moduleName, ctorName);\n\t}\n\n\tconstructor(private _moduleName: string, private _ctorName?: string, ...staticArguments: any[]) {\n\t\tsuper(staticArguments);\n\t\tif (typeof _moduleName !== 'string') {\n\t\t\tthrow new Error('Invalid AsyncDescriptor arguments, expected `moduleName` to be a string!');\n\t\t}\n\t}\n\n\tpublic get moduleName(): string {\n\t\treturn this._moduleName;\n\t}\n\n\tpublic get ctorName(): string {\n\t\treturn this._ctorName;\n\t}\n\n\tbind(...moreStaticArguments): AsyncDescriptor<T> {\n\t\tlet allArgs = [];\n\t\tallArgs = allArgs.concat(this.staticArguments());\n\t\tallArgs = allArgs.concat(moreStaticArguments);\n\t\treturn new AsyncDescriptor<T>(this.moduleName, this.ctorName, ...allArgs);\n\t}\n}\n\nexport interface CreateAsyncFunc0 {\n\t<T>(moduleName: string, ctorName: string): AsyncDescriptor0<T>;\n\t<A1, T>(moduleName: string, ctorName: string, a1: A1): AsyncDescriptor0<T>;\n\t<A1, A2, T>(moduleName: string, ctorName: string, a1: A1, a2: A2): AsyncDescriptor0<T>;\n\t<A1, A2, A3, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3): AsyncDescriptor0<T>;\n\t<A1, A2, A3, A4, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor0<T>;\n\t<A1, A2, A3, A4, A5, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): AsyncDescriptor0<T>;\n\t<A1, A2, A3, A4, A5, A6, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): AsyncDescriptor0<T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): AsyncDescriptor0<T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): AsyncDescriptor0<T>;\n}\n\nexport interface CreateAsyncFunc1 {\n\t<A1, T>(moduleName: string, ctorName: string): AsyncDescriptor1<A1, T>;\n\t<A1, A2, T>(moduleName: string, ctorName: string, a1: A1): AsyncDescriptor1<A2, T>;\n\t<A1, A2, A3, T>(moduleName: string, ctorName: string, a1: A1, a2: A2): AsyncDescriptor1<A3, T>;\n\t<A1, A2, A3, A4, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3): AsyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, A5, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): AsyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): AsyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): AsyncDescriptor1<A8, T>;\n}\n\nexport interface CreateAsyncFunc2 {\n\t<A1, A2, T>(moduleName: string, ctorName: string): AsyncDescriptor2<A1, A2, T>;\n\t<A1, A2, A3, T>(moduleName: string, ctorName: string, a1: A1): AsyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, A4, T>(moduleName: string, ctorName: string, a1: A1, a2: A2): AsyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, A5, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3): AsyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): AsyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): AsyncDescriptor2<A7, A8, T>;\n}\n\nexport interface CreateAsyncFunc3 {\n\t<A1, A2, A3, T>(moduleName: string, ctorName: string): AsyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, A4, T>(moduleName: string, ctorName: string, a1: A1): AsyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, A5, T>(moduleName: string, ctorName: string, a1: A1, a2: A2): AsyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3): AsyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): AsyncDescriptor3<A6, A7, A8, T>;\n}\n\nexport interface CreateAsyncFunc4 {\n\t<A1, A2, A3, A4, T>(moduleName: string, ctorName: string): AsyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, A5, T>(moduleName: string, ctorName: string, a1: A1): AsyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(moduleName: string, ctorName: string, a1: A1, a2: A2): AsyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3): AsyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor4<A5, A6, A7, A8, T>;\n}\n\nexport interface CreateAsyncFunc5 {\n\t<A1, A2, A3, A4, A5, T>(moduleName: string, ctorName: string): AsyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(moduleName: string, ctorName: string, a1: A1): AsyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(moduleName: string, ctorName: string, a1: A1, a2: A2): AsyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName: string, ctorName: string, a1: A1, a2: A2, a3: A3): AsyncDescriptor5<A4, A5, A6, A7, A8, T>;\n}\n\nexport interface CreateAsyncFunc6 {\n\t<A1, A2, A3, A4, A5, A6, T>(moduleName: string, ctorName: string): AsyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(moduleName: string, ctorName: string, a1: A1): AsyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName: string, ctorName: string, a1: A1, a2: A2): AsyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n}\n\nexport interface CreateAsyncFunc7 {\n\t<A1, A2, A3, A4, A5, A6, A7, T>(moduleName: string, ctorName: string): AsyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName: string, ctorName: string, a1: A1): AsyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n}\n\nexport interface CreateAsyncFunc8 {\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName: string, ctorName: string): AsyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n}\n\nlet _createAsyncDescriptor = <T>(moduleName: string, ctorName: string, ...staticArguments: any[]): any => {\n\treturn new AsyncDescriptor<T>(moduleName, ctorName, ...staticArguments);\n};\nexport const createAsyncDescriptor0: CreateAsyncFunc0 = _createAsyncDescriptor;\nexport const createAsyncDescriptor1: CreateAsyncFunc1 = _createAsyncDescriptor;\nexport const createAsyncDescriptor2: CreateAsyncFunc2 = _createAsyncDescriptor;\nexport const createAsyncDescriptor3: CreateAsyncFunc3 = _createAsyncDescriptor;\nexport const createAsyncDescriptor4: CreateAsyncFunc4 = _createAsyncDescriptor;\nexport const createAsyncDescriptor5: CreateAsyncFunc5 = _createAsyncDescriptor;\nexport const createAsyncDescriptor6: CreateAsyncFunc6 = _createAsyncDescriptor;\nexport const createAsyncDescriptor7: CreateAsyncFunc7 = _createAsyncDescriptor;\n\nexport interface AsyncDescriptor0<T> {\n\tmoduleName: string;\n\tbind(): AsyncDescriptor0<T>;\n}\nexport interface AsyncDescriptor1<A1, T> {\n\tmoduleName: string;\n\tbind(a1: A1): AsyncDescriptor0<T>;\n}\nexport interface AsyncDescriptor2<A1, A2, T> {\n\tmoduleName: string;\n\tbind(a1: A1): AsyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): AsyncDescriptor0<T>;\n}\nexport interface AsyncDescriptor3<A1, A2, A3, T> {\n\tmoduleName: string;\n\tbind(a1: A1): AsyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): AsyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): AsyncDescriptor0<T>;\n}\nexport interface AsyncDescriptor4<A1, A2, A3, A4, T> {\n\tmoduleName: string;\n\tbind(a1: A1): AsyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): AsyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): AsyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor0<T>;\n}\nexport interface AsyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tmoduleName: string;\n\tbind(a1: A1): AsyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): AsyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): AsyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): AsyncDescriptor0<T>;\n}\nexport interface AsyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tmoduleName: string;\n\tbind(a1: A1): AsyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): AsyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): AsyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): AsyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): AsyncDescriptor0<T>;\n}\nexport interface AsyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tmoduleName: string;\n\tbind(a1: A1): AsyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): AsyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): AsyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): AsyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): AsyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): AsyncDescriptor0<T>;\n}\nexport interface AsyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tmoduleName: string;\n\tbind(a1: A1): AsyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): AsyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): AsyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): AsyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): AsyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): AsyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): AsyncDescriptor0<T>;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {ServiceCollection} from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport interface IConstructorSignature0<T> {\n\tnew (...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew (first: A1, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew (first: A1, second: A2, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew (first: A1, second: A2, third: A3, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew (first: A1, second: A2, third: A3, forth: A4, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew (first: A1, second: A2, third: A3, forth: A4, fifth: A5, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew (first: A1, second: A2, third: A3, forth: A4, fifth: A5, sixth: A6, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew (first: A1, second: A2, third: A3, forth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew (first: A1, second: A2, third: A3, forth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>, isOptional?: typeof optional): T;\n}\n\nexport interface IFunctionSignature0<R> {\n\t(accessor: ServicesAccessor): R;\n}\n\nexport interface IFunctionSignature1<A1, R> {\n\t(accessor: ServicesAccessor, first: A1): R;\n}\n\nexport interface IFunctionSignature2<A1, A2, R> {\n\t(accessor: ServicesAccessor, first: A1, second: A2): R;\n}\n\nexport interface IFunctionSignature3<A1, A2, A3, R> {\n\t(accessor: ServicesAccessor, first: A1, second: A2, third: A3): R;\n}\n\nexport interface IFunctionSignature4<A1, A2, A3, A4, R> {\n\t(accessor: ServicesAccessor, first: A1, second: A2, third: A3, forth: A4): R;\n}\n\nexport interface IFunctionSignature5<A1, A2, A3, A4, A5, R> {\n\t(accessor: ServicesAccessor, first: A1, second: A2, third: A3, forth: A4, fifth: A5): R;\n}\n\nexport interface IFunctionSignature6<A1, A2, A3, A4, A5, A6, R> {\n\t(accessor: ServicesAccessor, first: A1, second: A2, third: A3, forth: A4, fifth: A5, sixth: A6): R;\n}\n\nexport interface IFunctionSignature7<A1, A2, A3, A4, A5, A6, A7, R> {\n\t(accessor: ServicesAccessor, first: A1, second: A2, third: A3, forth: A4, fifth: A5, sixth: A6, seventh: A7): R;\n}\n\nexport interface IFunctionSignature8<A1, A2, A3, A4, A5, A6, A7, A8, R> {\n\t(accessor: ServicesAccessor, first: A1, second: A2, third: A3, forth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): R;\n}\n\nexport var IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\nexport interface IInstantiationService {\n\n\t_serviceBrand: any;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<T>(ctor: IConstructorSignature0<T>): T;\n\tcreateInstance<A1, T>(ctor: IConstructorSignature1<A1, T>, first: A1): T;\n\tcreateInstance<A1, A2, T>(ctor: IConstructorSignature2<A1, A2, T>, first: A1, second: A2): T;\n\tcreateInstance<A1, A2, A3, T>(ctor: IConstructorSignature3<A1, A2, A3, T>, first: A1, second: A2, third: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(ctor: IConstructorSignature4<A1, A2, A3, A4, T>, first: A1, second: A2, third: A3, fourth: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(ctor: IConstructorSignature5<A1, A2, A3, A4, A5, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(ctor: IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor: IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): T;\n\n\t/**\n\t * Asynchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.AsyncDescriptor0<T>): TPromise<T>;\n\tcreateInstance<A1, T>(descriptor: descriptors.AsyncDescriptor1<A1, T>, a1: A1): TPromise<T>;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.AsyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): TPromise<T>;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.AsyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.AsyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.AsyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.AsyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.AsyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.AsyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): TPromise<T>;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R>(ctor: IFunctionSignature0<R>): R;\n\tinvokeFunction<A1, R>(ctor: IFunctionSignature1<A1, R>, first: A1): R;\n\tinvokeFunction<A1, A2, R>(ctor: IFunctionSignature2<A1, A2, R>, first: A1, second: A2): R;\n\tinvokeFunction<A1, A2, A3, R>(ctor: IFunctionSignature3<A1, A2, A3, R>, first: A1, second: A2, third: A3): R;\n\tinvokeFunction<A1, A2, A3, A4, R>(ctor: IFunctionSignature4<A1, A2, A3, A4, R>, first: A1, second: A2, third: A3, fourth: A4): R;\n\tinvokeFunction<A1, A2, A3, A4, A5, R>(ctor: IFunctionSignature5<A1, A2, A3, A4, A5, R>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5): R;\n\tinvokeFunction<A1, A2, A3, A4, A5, A6, R>(ctor: IFunctionSignature6<A1, A2, A3, A4, A5, A6, R>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6): R;\n\tinvokeFunction<A1, A2, A3, A4, A5, A6, A7, R>(ctor: IFunctionSignature7<A1, A2, A3, A4, A5, A6, A7, R>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7): R;\n\tinvokeFunction<A1, A2, A3, A4, A5, A6, A7, A8, R>(ctor: IFunctionSignature8<A1, A2, A3, A4, A5, A6, A7, A8, R>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif (target[_util.DI_TARGET] === target) {\n\t\ttarget[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\ttarget[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\ttarget[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * A *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): { (...args: any[]): void; type: T; } {\n\n\tlet id = function(target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\treturn <any>id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number){\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {createDecorator} from 'vs/platform/instantiation/common/instantiation';\nimport {IRawText} from 'vs/editor/common/editorCommon';\n\nexport var ICompatWorkerService = createDecorator<ICompatWorkerService>('compatWorkerService');\n\nexport interface IRawModelData {\n\turl: URI;\n\tversionId: number;\n\tvalue: IRawText;\n\tmodeId: string;\n}\n\nexport interface ICompatMode {\n\tgetId(): string;\n\tcompatWorkerService: ICompatWorkerService;\n}\n\nexport interface ICompatWorkerService {\n\t_serviceBrand: any;\n\tisInMainThread: boolean;\n\tregisterCompatMode(compatMode:ICompatMode): void;\n\tCompatWorker(obj: ICompatMode, methodName: string, target: Function, param: any[]): TPromise<any>;\n}\n\nfunction findMember(proto: any, target: any): string {\n\tfor (let i in proto) {\n\t\tif (proto[i] === target) {\n\t\t\treturn i;\n\t\t}\n\t}\n\tthrow new Error('Member not found in prototype');\n}\n\nexport function CompatWorkerAttr(type: Function, target: Function): void {\n\tlet methodName = findMember(type.prototype, target);\n\ttype.prototype[methodName] = function(...param: any[]) {\n\t\tlet obj = <ICompatMode>this;\n\t\treturn obj.compatWorkerService.CompatWorker(obj, methodName, target, param);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {createDecorator} from 'vs/platform/instantiation/common/instantiation';\nimport {IChange, ILineChange, IPosition, IRange} from 'vs/editor/common/editorCommon';\nimport {IInplaceReplaceSupportResult, ISuggestResult} from 'vs/editor/common/modes';\n\nexport var ID_EDITOR_WORKER_SERVICE = 'editorWorkerService';\nexport var IEditorWorkerService = createDecorator<IEditorWorkerService>(ID_EDITOR_WORKER_SERVICE);\n\nexport interface IEditorWorkerService {\n\t_serviceBrand: any;\n\n\tcomputeDiff(original:URI, modified:URI, ignoreTrimWhitespace:boolean):TPromise<ILineChange[]>;\n\tcomputeDirtyDiff(original:URI, modified:URI, ignoreTrimWhitespace:boolean):TPromise<IChange[]>;\n\ttextualSuggest(resource: URI, position: IPosition): TPromise<ISuggestResult>;\n\tnavigateValueSet(resource: URI, range:IRange, up:boolean): TPromise<IInplaceReplaceSupportResult>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Event from 'vs/base/common/event';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {createDecorator} from 'vs/platform/instantiation/common/instantiation';\nimport * as modes from 'vs/editor/common/modes';\n\nexport var IModeService = createDecorator<IModeService>('modeService');\n\nexport interface IModeLookupResult {\n\tmodeId: string;\n\tisInstantiated: boolean;\n}\n\nexport interface ILanguageExtensionPoint {\n\tid: string;\n\textensions?: string[];\n\tfilenames?: string[];\n\tfilenamePatterns?: string[];\n\tfirstLine?: string;\n\taliases?: string[];\n\tmimetypes?: string[];\n\tconfiguration?: string;\n}\n\nexport interface IValidLanguageExtensionPoint {\n\tid: string;\n\textensions: string[];\n\tfilenames: string[];\n\tfilenamePatterns: string[];\n\tfirstLine: string;\n\taliases: string[];\n\tmimetypes: string[];\n\tconfiguration: string;\n}\n\nexport interface IModeService {\n\t_serviceBrand: any;\n\n\tonDidAddModes: Event<string[]>;\n\tonDidCreateMode: Event<modes.IMode>;\n\n\tconfigureMode(modeName: string, options: any): void;\n\tconfigureModeById(modeId: string, options: any): void;\n\tgetConfigurationForMode(modeId:string): any;\n\n\t// --- reading\n\tisRegisteredMode(mimetypeOrModeId: string): boolean;\n\tisCompatMode(modeId: string): boolean;\n\tgetRegisteredModes(): string[];\n\tgetRegisteredLanguageNames(): string[];\n\tgetExtensions(alias: string): string[];\n\tgetMimeForMode(modeId: string): string;\n\tgetLanguageName(modeId:string): string;\n\tgetModeIdForLanguageName(alias: string): string;\n\tgetModeIdByFilenameOrFirstLine(filename: string, firstLine?: string): string;\n\tgetModeId(commaSeparatedMimetypesOrCommaSeparatedIds: string): string;\n\tgetConfigurationFiles(modeId: string): string[];\n\n\t// --- instantiation\n\tlookup(commaSeparatedMimetypesOrCommaSeparatedIds: string): IModeLookupResult[];\n\tgetMode(commaSeparatedMimetypesOrCommaSeparatedIds: string): modes.IMode;\n\tgetOrCreateMode(commaSeparatedMimetypesOrCommaSeparatedIds: string): TPromise<modes.IMode>;\n\tgetOrCreateModeByLanguageName(languageName: string): TPromise<modes.IMode>;\n\tgetOrCreateModeByFilenameOrFirstLine(filename: string, firstLine?:string): TPromise<modes.IMode>;\n\n\tregisterTokenizationSupport(modeId: string, callback: (mode: modes.IMode) => modes.ITokenizationSupport): IDisposable;\n\tregisterTokenizationSupport2(modeId: string, support: modes.TokensProvider): IDisposable;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Event from 'vs/base/common/event';\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {createDecorator} from 'vs/platform/instantiation/common/instantiation';\nimport {IModel, IRawText, ITextModelCreationOptions} from 'vs/editor/common/editorCommon';\nimport {IMode} from 'vs/editor/common/modes';\n\nexport var IModelService = createDecorator<IModelService>('modelService');\n\nexport interface IModelService {\n\t_serviceBrand: any;\n\n\tcreateModel(value:string | IRawText, modeOrPromise:TPromise<IMode>|IMode, resource: URI): IModel;\n\n\tdestroyModel(resource: URI): void;\n\n\tgetModels(): IModel[];\n\n\tgetCreationOptions(): ITextModelCreationOptions;\n\n\tgetModel(resource: URI): IModel;\n\n\tonModelAdded: Event<IModel>;\n\n\tonModelRemoved: Event<IModel>;\n\n\tonModelModeChanged: Event<{ model: IModel; oldModeId: string; }>;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {EmitterEvent, ListenerCallback} from 'vs/base/common/eventEmitter';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport URI from 'vs/base/common/uri';\nimport {createDecorator} from 'vs/platform/instantiation/common/instantiation';\nimport {IMirrorModel} from 'vs/editor/common/editorCommon';\n\n// Resource Service\n\nexport var ResourceEvents = {\n\tADDED: 'resource.added',\n\tREMOVED: 'resource.removed',\n\tCHANGED: 'resource.changed'\n};\n\nexport interface IResourceAddedEvent {\n\turl: URI;\n\taddedElement: IMirrorModel;\n}\n\nexport interface IResourceRemovedEvent {\n\turl: URI;\n\tremovedElement: IMirrorModel;\n}\n\nexport interface IResourceChangedEvent {\n\turl: URI;\n\toriginalEvents: EmitterEvent[];\n}\n\nexport var IResourceService = createDecorator<IResourceService>('resourceService');\n\nexport interface IResourceService {\n\t_serviceBrand: any;\n\tinsert(url: URI, element: IMirrorModel): void;\n\tget(url: URI): IMirrorModel;\n\tall(): IMirrorModel[];\n\tcontains(url: URI): boolean;\n\tremove(url: URI): void;\n\taddListener2_(eventType: 'resource.added', listener: (event: IResourceAddedEvent) => void): IDisposable;\n\taddListener2_(eventType: 'resource.removed', listener: (event: IResourceRemovedEvent) => void): IDisposable;\n\taddListener2_(eventType: 'resource.changed', listener: (event: IResourceChangedEvent) => void): IDisposable;\n\taddListener2_(eventType: string, listener: ListenerCallback): IDisposable;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {EventEmitter, EmitterEvent, ListenerCallback} from 'vs/base/common/eventEmitter';\nimport {IDisposable, dispose} from 'vs/base/common/lifecycle';\nimport URI from 'vs/base/common/uri';\nimport {IMirrorModel} from 'vs/editor/common/editorCommon';\nimport {IResourceAddedEvent, IResourceChangedEvent, IResourceRemovedEvent, IResourceService, ResourceEvents} from 'vs/editor/common/services/resourceService';\n\nexport class ResourceService extends EventEmitter implements IResourceService {\n\tpublic _serviceBrand: any;\n\tprivate data:{[url:string]:IMirrorModel;};\n\tprivate unbinds:{[url:string]:IDisposable[];};\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.data = {};\n\t\tthis.unbinds = {};\n\t}\n\n\tpublic addListener2_(eventType: string, listener: ListenerCallback): IDisposable {\n\t\treturn super.addListener2(eventType, listener);\n\t}\n\n\tprivate _anonymousModelId(input:string): string {\n\t\tvar r = '';\n\t\tfor (var i = 0; i < input.length; i++) {\n\t\t\tvar ch = input[i];\n\t\t\tif (ch >= '0' && ch <= '9') {\n\t\t\t\tr += '0';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 'a' && ch <= 'z') {\n\t\t\t\tr += 'a';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 'A' && ch <= 'Z') {\n\t\t\t\tr += 'A';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tr += ch;\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic insert(url:URI, element:IMirrorModel): void {\n\t\t// console.log('INSERT: ' + url.toString());\n\t\tif (this.contains(url)) {\n\t\t\t// There already exists a model with this id => this is a programmer error\n\t\t\tthrow new Error('ResourceService: Cannot add model ' + this._anonymousModelId(url.toString()) + ' because it already exists!');\n\t\t}\n\n\t\t// add resource\n\t\tvar key = url.toString();\n\t\tthis.data[key] = element;\n\t\tthis.unbinds[key] = [];\n\t\tthis.unbinds[key].push(element.addBulkListener2((value:EmitterEvent[]) => {\n\t\t\tthis.emit(ResourceEvents.CHANGED, <IResourceChangedEvent>{ url: url, originalEvents: value });\n\t\t}));\n\n\t\t// event\n\t\tthis.emit(ResourceEvents.ADDED, <IResourceAddedEvent>{ url: url, addedElement: element });\n\t}\n\n\tpublic get(url:URI):IMirrorModel {\n\t\tif(!this.data[url.toString()]) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.data[url.toString()];\n\t}\n\n\tpublic all():IMirrorModel[] {\n\t\treturn Object.keys(this.data).map((key) => {\n\t\t\treturn this.data[key];\n\t\t});\n\t}\n\n\tpublic contains(url:URI):boolean {\n\t\treturn !!this.data[url.toString()];\n\t}\n\n\tpublic remove(url:URI):void {\n\t\t// console.log('REMOVE: ' + url.toString());\n\t\tif(!this.contains(url)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar key = url.toString(),\n\t\t\telement = this.data[key];\n\n\t\t// stop listen\n\t\tthis.unbinds[key] = dispose(this.unbinds[key]);\n\n\t\t// removal\n\t\tdelete this.unbinds[key];\n\t\tdelete this.data[key];\n\n\t\t// event\n\t\tthis.emit(ResourceEvents.REMOVED, <IResourceRemovedEvent>{ url: url, removedElement: element });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {createDecorator} from 'vs/platform/instantiation/common/instantiation';\nimport Event from 'vs/base/common/event';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {JSONPath} from 'vs/base/common/json';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport interface IConfigurationService {\n\t_serviceBrand: any;\n\n\t/**\n\t * Fetches the appropriate section of the configuration JSON file.\n\t * This will be an object keyed off the section name.\n\t */\n\tgetConfiguration<T>(section?: string): T;\n\n\t/**\n\t * Similar to #getConfiguration() but ensures that the latest configuration\n\t * from disk is fetched.\n\t */\n\tloadConfiguration<T>(section?: string): TPromise<T>;\n\n\t/**\n\t * Returns iff the workspace has configuration or not.\n\t */\n\thasWorkspaceConfiguration(): boolean;\n\n\t/**\n\t * Event that fires when the configuration changes.\n\t */\n\tonDidUpdateConfiguration: Event<IConfigurationServiceEvent>;\n\n\t/**\n\t * Sets a user configuration. An the setting does not yet exist in the settings, it will be\n\t * added.\n\t */\n\tsetUserConfiguration(key: string | JSONPath, value: any) : Thenable<void>;\n}\n\nexport interface IConfigurationServiceEvent {\n\tconfig: any;\n}\n\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (let i = 0; i < path.length; i++) {\n\t\t\tcurrent = current[path[i]];\n\t\t\tif (!current) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t\treturn <T> current;\n\t}\n\n\tlet path = settingPath.split('.');\n\tlet result = accessSetting(config, path);\n\treturn typeof result === 'undefined'\n\t\t? defaultValue\n\t\t: result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {EventEmitter} from 'vs/base/common/eventEmitter';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {AsyncDescriptor1, createAsyncDescriptor1} from 'vs/platform/instantiation/common/descriptors';\nimport {IInstantiationService, optional} from 'vs/platform/instantiation/common/instantiation';\nimport {IConfigurationService} from 'vs/platform/configuration/common/configuration';\nimport {IModeSupportChangedEvent} from 'vs/editor/common/editorCommon';\nimport * as modes from 'vs/editor/common/modes';\nimport {TextualSuggestSupport} from 'vs/editor/common/modes/supports/suggestSupport';\nimport {IEditorWorkerService} from 'vs/editor/common/services/editorWorkerService';\nimport * as wordHelper from 'vs/editor/common/model/wordHelper';\nimport {ICompatWorkerService, ICompatMode} from 'vs/editor/common/services/compatWorkerService';\n\nexport function createWordRegExp(allowInWords:string = ''): RegExp {\n\treturn wordHelper.createWordRegExp(allowInWords);\n}\n\nexport class ModeWorkerManager<W> {\n\n\tprivate _descriptor: modes.IModeDescriptor;\n\tprivate _workerDescriptor: AsyncDescriptor1<string, W>;\n\tprivate _superWorkerModuleId: string;\n\tprivate _instantiationService: IInstantiationService;\n\tprivate _workerPiecePromise:TPromise<W>;\n\n\tconstructor(\n\t\tdescriptor:modes.IModeDescriptor,\n\t\tworkerModuleId:string,\n\t\tworkerClassName:string,\n\t\tsuperWorkerModuleId:string,\n\t\tinstantiationService: IInstantiationService\n\t) {\n\t\tthis._descriptor = descriptor;\n\t\tthis._workerDescriptor = createAsyncDescriptor1(workerModuleId, workerClassName);\n\t\tthis._superWorkerModuleId = superWorkerModuleId;\n\t\tthis._instantiationService = instantiationService;\n\t\tthis._workerPiecePromise = null;\n\t}\n\n\tpublic worker<T>(runner:(worker:W)=>TPromise<T>): TPromise<T>\n\tpublic worker<T>(runner:(worker:W)=>T): TPromise<T> {\n\t\treturn this._getOrCreateWorker().then(runner);\n\t}\n\n\tprivate _getOrCreateWorker(): TPromise<W> {\n\t\tif (!this._workerPiecePromise) {\n\t\t\t// TODO@Alex: workaround for missing `bundles` config\n\n\t\t\t// First, load the code of the worker super class\n\t\t\tlet superWorkerCodePromise = (this._superWorkerModuleId ? ModeWorkerManager._loadModule(this._superWorkerModuleId) : TPromise.as(null));\n\n\t\t\tthis._workerPiecePromise = superWorkerCodePromise.then(() => {\n\t\t\t\t// Second, load the code of the worker (without instantiating it)\n\t\t\t\treturn ModeWorkerManager._loadModule(this._workerDescriptor.moduleName);\n\t\t\t}).then(() => {\n\t\t\t\t// Finally, create the mode worker instance\n\t\t\t\treturn this._instantiationService.createInstance<string, W>(this._workerDescriptor, this._descriptor.id);\n\t\t\t});\n\t\t}\n\n\t\treturn this._workerPiecePromise;\n\t}\n\n\tprivate static _loadModule(moduleName:string): TPromise<any> {\n\t\treturn new TPromise((c, e, p) => {\n\t\t\t// Use the global require to be sure to get the global config\n\t\t\t(<any>self).require([moduleName], c, e);\n\t\t}, () => {\n\t\t\t// Cannot cancel loading code\n\t\t});\n\t}\n}\n\nexport abstract class AbstractMode implements modes.IMode {\n\n\tprivate _modeId: string;\n\tprivate _eventEmitter: EventEmitter;\n\tprivate _simplifiedMode: modes.IMode;\n\n\tconstructor(modeId:string) {\n\t\tthis._modeId = modeId;\n\t\tthis._eventEmitter = new EventEmitter();\n\t\tthis._simplifiedMode = null;\n\t}\n\n\tpublic getId(): string {\n\t\treturn this._modeId;\n\t}\n\n\tpublic toSimplifiedMode(): modes.IMode {\n\t\tif (!this._simplifiedMode) {\n\t\t\tthis._simplifiedMode = new SimplifiedMode(this);\n\t\t}\n\t\treturn this._simplifiedMode;\n\t}\n\n\tpublic addSupportChangedListener(callback: (e: IModeSupportChangedEvent) => void) : IDisposable {\n\t\treturn this._eventEmitter.addListener2('modeSupportChanged', callback);\n\t}\n\n\tpublic setTokenizationSupport<T>(callback:(mode:modes.IMode) => T) : IDisposable {\n\t\tvar supportImpl = callback(this);\n\t\tthis['tokenizationSupport'] = supportImpl;\n\t\tthis._eventEmitter.emit('modeSupportChanged', _createModeSupportChangedEvent());\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tif (this['tokenizationSupport'] === supportImpl) {\n\t\t\t\t\tdelete this['tokenizationSupport'];\n\t\t\t\t\tthis._eventEmitter.emit('modeSupportChanged', _createModeSupportChangedEvent());\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport abstract class CompatMode extends AbstractMode implements ICompatMode {\n\n\tpublic compatWorkerService:ICompatWorkerService;\n\n\tconstructor(modeId:string, compatWorkerService:ICompatWorkerService) {\n\t\tsuper(modeId);\n\t\tthis.compatWorkerService = compatWorkerService;\n\n\t\tif (this.compatWorkerService) {\n\t\t\tthis.compatWorkerService.registerCompatMode(this);\n\t\t}\n\t}\n\n}\n\nclass SimplifiedMode implements modes.IMode {\n\n\ttokenizationSupport: modes.ITokenizationSupport;\n\n\tprivate _sourceMode: modes.IMode;\n\tprivate _eventEmitter: EventEmitter;\n\tprivate _id: string;\n\n\tconstructor(sourceMode: modes.IMode) {\n\t\tthis._sourceMode = sourceMode;\n\t\tthis._eventEmitter = new EventEmitter();\n\t\tthis._id = 'vs.editor.modes.simplifiedMode:' + sourceMode.getId();\n\t\tthis._assignSupports();\n\n\t\tif (this._sourceMode.addSupportChangedListener) {\n\t\t\tthis._sourceMode.addSupportChangedListener((e) => {\n\t\t\t\tthis._assignSupports();\n\t\t\t\tthis._eventEmitter.emit('modeSupportChanged', e);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic getId(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic toSimplifiedMode(): modes.IMode {\n\t\treturn this;\n\t}\n\n\tprivate _assignSupports(): void {\n\t\tthis.tokenizationSupport = this._sourceMode.tokenizationSupport;\n\t}\n}\n\nexport var isDigit:(character:string, base:number)=>boolean = (function () {\n\n\tvar _0 = '0'.charCodeAt(0),\n\t\t_1 = '1'.charCodeAt(0),\n\t\t_2 = '2'.charCodeAt(0),\n\t\t_3 = '3'.charCodeAt(0),\n\t\t_4 = '4'.charCodeAt(0),\n\t\t_5 = '5'.charCodeAt(0),\n\t\t_6 = '6'.charCodeAt(0),\n\t\t_7 = '7'.charCodeAt(0),\n\t\t_8 = '8'.charCodeAt(0),\n\t\t_9 = '9'.charCodeAt(0),\n\t\t_a = 'a'.charCodeAt(0),\n\t\t_b = 'b'.charCodeAt(0),\n\t\t_c = 'c'.charCodeAt(0),\n\t\t_d = 'd'.charCodeAt(0),\n\t\t_e = 'e'.charCodeAt(0),\n\t\t_f = 'f'.charCodeAt(0),\n\t\t_A = 'A'.charCodeAt(0),\n\t\t_B = 'B'.charCodeAt(0),\n\t\t_C = 'C'.charCodeAt(0),\n\t\t_D = 'D'.charCodeAt(0),\n\t\t_E = 'E'.charCodeAt(0),\n\t\t_F = 'F'.charCodeAt(0);\n\n\treturn function isDigit(character:string, base:number):boolean {\n\t\tvar c = character.charCodeAt(0);\n\t\tswitch (base) {\n\t\t\tcase 1:\n\t\t\t\treturn c === _0;\n\t\t\tcase 2:\n\t\t\t\treturn c >= _0 && c <= _1;\n\t\t\tcase 3:\n\t\t\t\treturn c >= _0 && c <= _2;\n\t\t\tcase 4:\n\t\t\t\treturn c >= _0 && c <= _3;\n\t\t\tcase 5:\n\t\t\t\treturn c >= _0 && c <= _4;\n\t\t\tcase 6:\n\t\t\t\treturn c >= _0 && c <= _5;\n\t\t\tcase 7:\n\t\t\t\treturn c >= _0 && c <= _6;\n\t\t\tcase 8:\n\t\t\t\treturn c >= _0 && c <= _7;\n\t\t\tcase 9:\n\t\t\t\treturn c >= _0 && c <= _8;\n\t\t\tcase 10:\n\t\t\t\treturn c >= _0 && c <= _9;\n\t\t\tcase 11:\n\t\t\t\treturn (c >= _0 && c <= _9) || (c === _a) || (c === _A);\n\t\t\tcase 12:\n\t\t\t\treturn (c >= _0 && c <= _9) || (c >= _a && c <= _b) || (c >= _A && c <= _B);\n\t\t\tcase 13:\n\t\t\t\treturn (c >= _0 && c <= _9) || (c >= _a && c <= _c) || (c >= _A && c <= _C);\n\t\t\tcase 14:\n\t\t\t\treturn (c >= _0 && c <= _9) || (c >= _a && c <= _d) || (c >= _A && c <= _D);\n\t\t\tcase 15:\n\t\t\t\treturn (c >= _0 && c <= _9) || (c >= _a && c <= _e) || (c >= _A && c <= _E);\n\t\t\tdefault:\n\t\t\t\treturn (c >= _0 && c <= _9) || (c >= _a && c <= _f) || (c >= _A && c <= _F);\n\t\t}\n\t};\n})();\n\nexport class FrankensteinMode extends AbstractMode {\n\n\tconstructor(\n\t\tdescriptor: modes.IModeDescriptor,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@optional(IEditorWorkerService) editorWorkerService: IEditorWorkerService\n\t) {\n\t\tsuper(descriptor.id);\n\n\t\tif (editorWorkerService) {\n\t\t\tmodes.SuggestRegistry.register(this.getId(), new TextualSuggestSupport(editorWorkerService, configurationService), true);\n\t\t}\n\t}\n}\n\nfunction _createModeSupportChangedEvent(): IModeSupportChangedEvent {\n\treturn {\n\t\ttokenizationSupport: true\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {createDecorator} from 'vs/platform/instantiation/common/instantiation';\nimport Event from 'vs/base/common/event';\n\nexport enum ContextKeyExprType {\n\tDefined = 1,\n\tNot = 2,\n\tEquals = 3,\n\tNotEquals = 4,\n\tAnd = 5\n}\n\nexport abstract class ContextKeyExpr {\n\n\tpublic static has(key: string): ContextKeyExpr {\n\t\treturn new ContextKeyDefinedExpr(key);\n\t}\n\n\tpublic static equals(key: string, value: any): ContextKeyExpr {\n\t\treturn new ContextKeyEqualsExpr(key, value);\n\t}\n\n\tpublic static notEquals(key: string, value: any): ContextKeyExpr {\n\t\treturn new ContextKeyNotEqualsExpr(key, value);\n\t}\n\n\tpublic static not(key: string): ContextKeyExpr {\n\t\treturn new ContextKeyNotExpr(key);\n\t}\n\n\tpublic static and(...expr: ContextKeyExpr[]): ContextKeyExpr {\n\t\treturn new ContextKeyAndExpr(expr);\n\t}\n\n\tpublic static deserialize(serialized: string): ContextKeyExpr {\n\t\tif (!serialized) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet pieces = serialized.split('&&');\n\t\tlet result = new ContextKeyAndExpr(pieces.map(p => this._deserializeOne(p)));\n\t\treturn result.normalize();\n\t}\n\n\tprivate static _deserializeOne(serializedOne: string): ContextKeyExpr {\n\t\tserializedOne = serializedOne.trim();\n\n\t\tif (serializedOne.indexOf('!=') >= 0) {\n\t\t\tlet pieces = serializedOne.split('!=');\n\t\t\treturn new ContextKeyNotEqualsExpr(pieces[0].trim(), this._deserializeValue(pieces[1]));\n\t\t}\n\n\t\tif (serializedOne.indexOf('==') >= 0) {\n\t\t\tlet pieces = serializedOne.split('==');\n\t\t\treturn new ContextKeyEqualsExpr(pieces[0].trim(), this._deserializeValue(pieces[1]));\n\t\t}\n\n\t\tif (/^\\!\\s*/.test(serializedOne)) {\n\t\t\treturn new ContextKeyNotExpr(serializedOne.substr(1).trim());\n\t\t}\n\n\t\treturn new ContextKeyDefinedExpr(serializedOne);\n\t}\n\n\tprivate static _deserializeValue(serializedValue: string): any {\n\t\tserializedValue = serializedValue.trim();\n\n\t\tif (serializedValue === 'true') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (serializedValue === 'false') {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet m = /^'([^']*)'$/.exec(serializedValue);\n\t\tif (m) {\n\t\t\treturn m[1].trim();\n\t\t}\n\n\t\treturn serializedValue;\n\t}\n\n\tpublic abstract getType(): ContextKeyExprType;\n\tpublic abstract equals(other: ContextKeyExpr): boolean;\n\tpublic abstract evaluate(context: any): boolean;\n\tpublic abstract normalize(): ContextKeyExpr;\n\tpublic abstract serialize(): string;\n\tpublic abstract keys(): string[];\n}\n\nfunction cmp(a:ContextKeyExpr, b:ContextKeyExpr): number {\n\tlet aType = a.getType();\n\tlet bType = b.getType();\n\tif (aType !== bType) {\n\t\treturn aType - bType;\n\t}\n\tswitch(aType) {\n\t\tcase ContextKeyExprType.Defined:\n\t\t\treturn (<ContextKeyDefinedExpr>a).cmp(<ContextKeyDefinedExpr>b);\n\t\tcase ContextKeyExprType.Not:\n\t\t\treturn (<ContextKeyNotExpr>a).cmp(<ContextKeyNotExpr>b);\n\t\tcase ContextKeyExprType.Equals:\n\t\t\treturn (<ContextKeyEqualsExpr>a).cmp(<ContextKeyEqualsExpr>b);\n\t\tcase ContextKeyExprType.NotEquals:\n\t\t\treturn (<ContextKeyNotEqualsExpr>a).cmp(<ContextKeyNotEqualsExpr>b);\n\t\tdefault:\n\t\t\tthrow new Error('Unknown ContextKeyExpr!');\n\t}\n}\n\nexport class ContextKeyDefinedExpr implements ContextKeyExpr {\n\tconstructor(protected key: string) {\n\t}\n\n\tpublic getType(): ContextKeyExprType {\n\t\treturn ContextKeyExprType.Defined;\n\t}\n\n\tpublic cmp(other:ContextKeyDefinedExpr): number {\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpr): boolean {\n\t\tif (other instanceof ContextKeyDefinedExpr) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: any): boolean {\n\t\treturn (!!context[this.key]);\n\t}\n\n\tpublic normalize(): ContextKeyExpr {\n\t\treturn this;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key;\n\t}\n\n\tpublic keys(): string[]{\n\t\treturn [this.key];\n\t}\n}\n\nexport class ContextKeyEqualsExpr implements ContextKeyExpr {\n\tconstructor(private key: string, private value: any) {\n\t}\n\n\tpublic getType(): ContextKeyExprType {\n\t\treturn ContextKeyExprType.Equals;\n\t}\n\n\tpublic cmp(other:ContextKeyEqualsExpr): number {\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (this.value < other.value) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.value > other.value) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpr): boolean {\n\t\tif (other instanceof ContextKeyEqualsExpr) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: any): boolean {\n\t\t/* tslint:disable:triple-equals */\n\t\t// Intentional ==\n\t\treturn (context[this.key] == this.value);\n\t\t/* tslint:enable:triple-equals */\n\t}\n\n\tpublic normalize(): ContextKeyExpr {\n\t\tif (typeof this.value === 'boolean') {\n\t\t\tif (this.value) {\n\t\t\t\treturn new ContextKeyDefinedExpr(this.key);\n\t\t\t}\n\t\t\treturn new ContextKeyNotExpr(this.key);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic serialize(): string {\n\t\tif (typeof this.value === 'boolean') {\n\t\t\treturn this.normalize().serialize();\n\t\t}\n\n\t\treturn this.key + ' == \\'' + this.value + '\\'';\n\t}\n\n\tpublic keys(): string[]{\n\t\treturn [this.key];\n\t}\n}\n\nexport class ContextKeyNotEqualsExpr implements ContextKeyExpr {\n\tconstructor(private key: string, private value: any) {\n\t}\n\n\tpublic getType(): ContextKeyExprType {\n\t\treturn ContextKeyExprType.NotEquals;\n\t}\n\n\tpublic cmp(other:ContextKeyNotEqualsExpr): number {\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (this.value < other.value) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.value > other.value) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpr): boolean {\n\t\tif (other instanceof ContextKeyNotEqualsExpr) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: any): boolean {\n\t\t/* tslint:disable:triple-equals */\n\t\t// Intentional !=\n\t\treturn (context[this.key] != this.value);\n\t\t/* tslint:enable:triple-equals */\n\t}\n\n\tpublic normalize(): ContextKeyExpr {\n\t\tif (typeof this.value === 'boolean') {\n\t\t\tif (this.value) {\n\t\t\t\treturn new ContextKeyNotExpr(this.key);\n\t\t\t}\n\t\t\treturn new ContextKeyDefinedExpr(this.key);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic serialize(): string {\n\t\tif (typeof this.value === 'boolean') {\n\t\t\treturn this.normalize().serialize();\n\t\t}\n\n\t\treturn this.key + ' != \\'' + this.value + '\\'';\n\t}\n\n\tpublic keys(): string[]{\n\t\treturn [this.key];\n\t}\n}\n\nexport class ContextKeyNotExpr implements ContextKeyExpr {\n\tconstructor(private key: string) {\n\t}\n\n\tpublic getType(): ContextKeyExprType {\n\t\treturn ContextKeyExprType.Not;\n\t}\n\n\tpublic cmp(other:ContextKeyNotExpr): number {\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpr): boolean {\n\t\tif (other instanceof ContextKeyNotExpr) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: any): boolean {\n\t\treturn (!context[this.key]);\n\t}\n\n\tpublic normalize(): ContextKeyExpr {\n\t\treturn this;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn '!' + this.key;\n\t}\n\n\tpublic keys(): string[]{\n\t\treturn [this.key];\n\t}\n}\n\nexport class ContextKeyAndExpr implements ContextKeyExpr {\n\tprivate expr: ContextKeyExpr[];\n\n\tconstructor(expr: ContextKeyExpr[]) {\n\t\tthis.expr = ContextKeyAndExpr._normalizeArr(expr);\n\t}\n\n\tpublic getType(): ContextKeyExprType {\n\t\treturn ContextKeyExprType.And;\n\t}\n\n\tpublic equals(other: ContextKeyExpr): boolean {\n\t\tif (other instanceof ContextKeyAndExpr) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic evaluate(context: any): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (!this.expr[i].evaluate(context)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _normalizeArr(arr:ContextKeyExpr[]): ContextKeyExpr[] {\n\t\tlet expr: ContextKeyExpr[] = [];\n\n\t\tif (arr) {\n\t\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\t\tlet e = arr[i];\n\t\t\t\tif (!e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\te = e.normalize();\n\t\t\t\tif (!e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e instanceof ContextKeyAndExpr) {\n\t\t\t\t\texpr = expr.concat(e.expr);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\texpr.push(e);\n\t\t\t}\n\n\t\t\texpr.sort(cmp);\n\t\t}\n\n\t\treturn expr;\n\t}\n\n\tpublic normalize(): ContextKeyExpr {\n\t\tif (this.expr.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.expr.length === 1) {\n\t\t\treturn this.expr[0];\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic serialize(): string {\n\t\tif (this.expr.length === 0) {\n\t\t\treturn '';\n\t\t}\n\t\tif (this.expr.length === 1) {\n\t\t\treturn this.normalize().serialize();\n\t\t}\n\t\treturn this.expr.map(e => e.serialize()).join(' && ');\n\t}\n\n\tpublic keys(): string[]{\n\t\tconst result: string[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class RawContextKey<T> extends ContextKeyDefinedExpr {\n\n\tprivate _defaultValue: T;\n\n\tconstructor(key:string, defaultValue:T) {\n\t\tsuper(key);\n\t\tthis._defaultValue = defaultValue;\n\t}\n\n\tpublic bindTo(target:IContextKeyService): IContextKey<T> {\n\t\treturn target.createKey(this.key, this._defaultValue);\n\t}\n\n\tpublic getValue(target:IContextKeyService): T {\n\t\treturn target.getContextKeyValue<T>(this.key);\n\t}\n\n\tpublic toNegated(): ContextKeyExpr {\n\t\treturn ContextKeyExpr.not(this.key);\n\t}\n\n\tpublic isEqualTo(value:string): ContextKeyExpr {\n\t\treturn ContextKeyExpr.equals(this.key, value);\n\t}\n}\n\nexport interface IContextKey<T> {\n\tset(value: T): void;\n\treset(): void;\n\tget(): T;\n}\n\nexport interface IContextKeyServiceTarget {\n\tparentElement: IContextKeyServiceTarget;\n\tsetAttribute(attr: string, value: string): void;\n\tremoveAttribute(attr: string): void;\n\thasAttribute(attr: string): boolean;\n\tgetAttribute(attr: string): string;\n}\n\nexport let IContextKeyService = createDecorator<IContextKeyService>('contextKeyService');\n\nexport interface IContextKeyService {\n\t_serviceBrand: any;\n\tdispose(): void;\n\n\tonDidChangeContext: Event<string[]>;\n\tcreateKey<T>(key: string, defaultValue: T): IContextKey<T>;\n\tcontextMatchesRules(rules: ContextKeyExpr): boolean;\n\tgetContextKeyValue<T>(key: string): T;\n\n\tcreateScoped(target: IContextKeyServiceTarget): IContextKeyService;\n\tgetContextValue(target: IContextKeyServiceTarget): any;\n}\n\nexport const SET_CONTEXT_COMMAND_ID = 'setContext';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IEventEmitter, BulkListenerCallback} from 'vs/base/common/eventEmitter';\nimport {MarkedString} from 'vs/base/common/htmlContent';\nimport * as types from 'vs/base/common/types';\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {ServicesAccessor, IInstantiationService, IConstructorSignature1, IConstructorSignature2} from 'vs/platform/instantiation/common/instantiation';\nimport {ILineContext, IMode, IToken} from 'vs/editor/common/modes';\nimport {ViewLineToken} from 'vs/editor/common/core/viewLineToken';\nimport {ScrollbarVisibility} from 'vs/base/common/scrollable';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {Position} from 'vs/editor/common/core/position';\nimport {Range} from 'vs/editor/common/core/range';\nimport {Selection} from 'vs/editor/common/core/selection';\nimport {ModeTransition} from 'vs/editor/common/core/modeTransition';\nimport {IndentRange} from 'vs/editor/common/model/indentRanges';\nimport {ICommandHandlerDescription} from 'vs/platform/commands/common/commands';\nimport {ContextKeyExpr, RawContextKey} from 'vs/platform/contextkey/common/contextkey';\n\n/**\n * @internal\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArg?: any): IDisposable;\n}\n\n// --- position & range\n\n/**\n * A position in the editor. This interface is suitable for serialization.\n */\nexport interface IPosition {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tlineNumber:number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tcolumn:number;\n}\n\n/**\n * A range in the editor. This interface is suitable for serialization.\n */\nexport interface IRange {\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tstartLineNumber:number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tstartColumn:number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tendLineNumber:number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tendColumn:number;\n}\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport interface ISelection {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\tselectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\tselectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\tpositionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\tpositionColumn: number;\n}\n\n/**\n * Configuration options for editor scrollbars\n */\nexport interface IEditorScrollbarOptions {\n\t/**\n\t * The size of arrows (if displayed).\n\t * Defaults to 11.\n\t */\n\tarrowSize?:number;\n\t/**\n\t * Render vertical scrollbar.\n\t * Accepted values: 'auto', 'visible', 'hidden'.\n\t * Defaults to 'auto'.\n\t */\n\tvertical?:string;\n\t/**\n\t * Render horizontal scrollbar.\n\t * Accepted values: 'auto', 'visible', 'hidden'.\n\t * Defaults to 'auto'.\n\t */\n\thorizontal?:string;\n\t/**\n\t * Cast horizontal and vertical shadows when the content is scrolled.\n\t * Defaults to false.\n\t */\n\tuseShadows?:boolean;\n\t/**\n\t * Render arrows at the top and bottom of the vertical scrollbar.\n\t * Defaults to false.\n\t */\n\tverticalHasArrows?:boolean;\n\t/**\n\t * Render arrows at the left and right of the horizontal scrollbar.\n\t * Defaults to false.\n\t */\n\thorizontalHasArrows?:boolean;\n\t/**\n\t * Listen to mouse wheel events and react to them by scrolling.\n\t * Defaults to true.\n\t */\n\thandleMouseWheel?: boolean;\n\t/**\n\t * Height in pixels for the horizontal scrollbar.\n\t * Defaults to 10 (px).\n\t */\n\thorizontalScrollbarSize?: number;\n\t/**\n\t * Width in pixels for the vertical scrollbar.\n\t * Defaults to 10 (px).\n\t */\n\tverticalScrollbarSize?: number;\n\t/**\n\t * Width in pixels for the vertical slider.\n\t * Defaults to `verticalScrollbarSize`.\n\t */\n\tverticalSliderSize?: number;\n\t/**\n\t * Height in pixels for the horizontal slider.\n\t * Defaults to `horizontalScrollbarSize`.\n\t */\n\thorizontalSliderSize?: number;\n}\n\n/**\n * Describes how to indent wrapped lines.\n */\nexport enum WrappingIndent {\n\t/**\n\t * No indentation => wrapped lines begin at column 1.\n\t */\n\tNone = 0,\n\t/**\n\t * Same => wrapped lines get the same indentation as the parent.\n\t */\n\tSame = 1,\n\t/**\n\t * Indent => wrapped lines get +1 indentation as the parent.\n\t */\n\tIndent = 2\n}\n\n/**\n * Configuration options for the editor.\n */\nexport interface IEditorOptions {\n\t/**\n\t * Enable experimental screen reader support.\n\t * Defaults to `true`.\n\t */\n\texperimentalScreenReader?: boolean;\n\t/**\n\t * The aria label for the editor's textarea (when it is focused).\n\t */\n\tariaLabel?: string;\n\t/**\n\t * Render vertical lines at the specified columns.\n\t * Defaults to empty array.\n\t */\n\trulers?: number[];\n\t/**\n\t * A string containing the word separators used when doing word navigation.\n\t * Defaults to `~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?\n\t */\n\twordSeparators?: string;\n\t/**\n\t * Enable Linux primary clipboard.\n\t * Defaults to true.\n\t */\n\tselectionClipboard?: boolean;\n\t/**\n\t * Control the rendering of line numbers.\n\t * If it is a function, it will be invoked when rendering a line number and the return value will be rendered.\n\t * Otherwise, if it is a truey, line numbers will be rendered normally (equivalent of using an identity function).\n\t * Otherwise, line numbers will not be rendered.\n\t * Defaults to true.\n\t */\n\tlineNumbers?:any;\n\t/**\n\t * Should the corresponding line be selected when clicking on the line number?\n\t * Defaults to true.\n\t */\n\tselectOnLineNumbers?:boolean;\n\t/**\n\t * Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits.\n\t * Defaults to 5.\n\t */\n\tlineNumbersMinChars?:number;\n\t/**\n\t * Enable the rendering of the glyph margin.\n\t * Defaults to false.\n\t */\n\tglyphMargin?:boolean;\n\t/**\n\t * The width reserved for line decorations (in px).\n\t * Line decorations are placed between line numbers and the editor content.\n\t * Defaults to 10.\n\t */\n\tlineDecorationsWidth?:number;\n\t/**\n\t * When revealing the cursor, a virtual padding (px) is added to the cursor, turning it into a rectangle.\n\t * This virtual padding ensures that the cursor gets revealed before hitting the edge of the viewport.\n\t * Defaults to 30 (px).\n\t */\n\trevealHorizontalRightPadding?:number;\n\t/**\n\t * Render the editor selection with rounded borders.\n\t * Defaults to true.\n\t */\n\troundedSelection?:boolean;\n\t/**\n\t * Theme to be used for rendering. Consists of two parts, the UI theme and the syntax theme,\n\t * separated by a space.\n\t * The current available UI themes are: 'vs' (default), 'vs-dark', 'hc-black'\n\t * The syntax themes are contributed. The default is 'default-theme'\n\t */\n\ttheme?:string;\n\t/**\n\t * Should the editor be read only.\n\t * Defaults to false.\n\t */\n\treadOnly?:boolean;\n\t/**\n\t * Control the behavior and rendering of the scrollbars.\n\t */\n\tscrollbar?:IEditorScrollbarOptions;\n\t/**\n\t * The number of vertical lanes the overview ruler should render.\n\t * Defaults to 2.\n\t */\n\toverviewRulerLanes?:number;\n\t/**\n\t * Control the cursor animation style, possible values are 'blink', 'smooth', 'phase', 'expand' and 'solid'.\n\t * Defaults to 'blink'.\n\t */\n\tcursorBlinking?:string;\n\t/**\n\t * Zoom the font in the editor when using the mouse wheel in combination with holding Ctrl.\n\t * Defaults to false.\n\t */\n\tmouseWheelZoom?: boolean;\n\t/**\n\t * Control the cursor style, either 'block' or 'line'.\n\t * Defaults to 'line'.\n\t */\n\tcursorStyle?:string;\n\t/**\n\t * Enable font ligatures.\n\t * Defaults to false.\n\t */\n\tfontLigatures?:boolean;\n\t/**\n\t * Disable the use of `translate3d`.\n\t * Defaults to false.\n\t */\n\tdisableTranslate3d?:boolean;\n\t/**\n\t * Should the cursor be hidden in the overview ruler.\n\t * Defaults to false.\n\t */\n\thideCursorInOverviewRuler?:boolean;\n\t/**\n\t * Enable that scrolling can go one screen size after the last line.\n\t * Defaults to true.\n\t */\n\tscrollBeyondLastLine?:boolean;\n\t/**\n\t * Enable that the editor will install an interval to check if its container dom node size has changed.\n\t * Enabling this might have a severe performance impact.\n\t * Defaults to false.\n\t */\n\tautomaticLayout?:boolean;\n\t/**\n\t * Control the wrapping strategy of the editor.\n\t * Using -1 means no wrapping whatsoever.\n\t * Using 0 means viewport width wrapping (ajusts with the resizing of the editor).\n\t * Using a positive number means wrapping after a fixed number of characters.\n\t * Defaults to 300.\n\t */\n\twrappingColumn?:number;\n\t/**\n\t * Control indentation of wrapped lines. Can be: 'none', 'same' or 'indent'.\n\t * Defaults to 'none'.\n\t */\n\twrappingIndent?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced before these characters.\n\t * Defaults to '{([+'.\n\t */\n\twordWrapBreakBeforeCharacters?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced after these characters.\n\t * Defaults to ' \\t})]?|&,;'.\n\t */\n\twordWrapBreakAfterCharacters?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced after these characters only if no `wordWrapBreakBeforeCharacters` or `wordWrapBreakAfterCharacters` were found.\n\t * Defaults to '.'.\n\t */\n\twordWrapBreakObtrusiveCharacters?: string;\n\n\t/**\n\t * Performance guard: Stop rendering a line after x characters.\n\t * Defaults to 10000 if wrappingColumn is -1. Defaults to -1 if wrappingColumn is >= 0.\n\t * Use -1 to never stop rendering\n\t */\n\tstopRenderingLineAfter?:number;\n\t/**\n\t * Enable hover.\n\t * Defaults to true.\n\t */\n\thover?:boolean;\n\t/**\n\t * Enable custom contextmenu.\n\t * Defaults to true.\n\t */\n\tcontextmenu?:boolean;\n\t/**\n\t * A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\n\t * Defaults to 1.\n\t */\n\tmouseWheelScrollSensitivity?: number;\n\t/**\n\t * Enable quick suggestions (shadow suggestions)\n\t * Defaults to true.\n\t */\n\tquickSuggestions?:boolean;\n\t/**\n\t * Quick suggestions show delay (in ms)\n\t * Defaults to 500 (ms)\n\t */\n\tquickSuggestionsDelay?:number;\n\t/**\n\t * Enables parameter hints\n\t */\n\tparameterHints?:boolean;\n\t/**\n\t * Render icons in suggestions box.\n\t * Defaults to true.\n\t */\n\ticonsInSuggestions?:boolean;\n\t/**\n\t * Enable auto closing brackets.\n\t * Defaults to true.\n\t */\n\tautoClosingBrackets?:boolean;\n\t/**\n\t * Enable format on type.\n\t * Defaults to false.\n\t */\n\tformatOnType?:boolean;\n\t/**\n\t * Enable the suggestion box to pop-up on trigger characters.\n\t * Defaults to true.\n\t */\n\tsuggestOnTriggerCharacters?: boolean;\n\t/**\n\t * Accept suggestions on ENTER.\n\t * Defaults to true.\n\t */\n\tacceptSuggestionOnEnter?: boolean;\n\t/**\n\t * Enable snippet suggestions. Default to 'true'.\n\t */\n\tsnippetSuggestions?: 'top' | 'bottom' | 'inline' | 'none';\n\t/**\n\t * Enable tab completion. Defaults to 'false'\n\t */\n\ttabCompletion?: boolean;\n\t/**\n\t * Enable word based suggestions. Defaults to 'true'\n\t */\n\twordBasedSuggestions?: boolean;\n\t/**\n\t * Enable selection highlight.\n\t * Defaults to true.\n\t */\n\tselectionHighlight?:boolean;\n\t/**\n\t * Show code lens\n\t * Defaults to true.\n\t */\n\tcodeLens?: boolean;\n\t/**\n\t * @deprecated - use codeLens instead\n\t * @internal\n\t */\n\treferenceInfos?: boolean;\n\t/**\n\t * Enable code folding\n\t * Defaults to true.\n\t */\n\tfolding?: boolean;\n\t/**\n\t * Enable rendering of leading whitespace.\n\t * Defaults to false.\n\t */\n\trenderWhitespace?: boolean;\n\t/**\n\t * Enable rendering of control characters.\n\t * Defaults to false.\n\t */\n\trenderControlCharacters?: boolean;\n\t/**\n\t * Enable rendering of indent guides.\n\t * Defaults to true.\n\t */\n\trenderIndentGuides?: boolean;\n\t/**\n\t * Inserting and deleting whitespace follows tab stops.\n\t */\n\tuseTabStops?: boolean;\n\t/**\n\t * The font family\n\t */\n\tfontFamily?: string;\n\t/**\n\t * The font size\n\t */\n\tfontSize?: number;\n\t/**\n\t * The line height\n\t */\n\tlineHeight?: number;\n}\n\n/**\n * Configuration options for the diff editor.\n */\nexport interface IDiffEditorOptions extends IEditorOptions {\n\t/**\n\t * Allow the user to resize the diff editor split view.\n\t * Defaults to true.\n\t */\n\tenableSplitViewResizing?: boolean;\n\t/**\n\t * Render the differences in two side-by-side editors.\n\t * Defaults to true.\n\t */\n\trenderSideBySide?: boolean;\n\t/**\n\t * Compute the diff by ignoring leading/trailing whitespace\n\t * Defaults to true.\n\t */\n\tignoreTrimWhitespace?: boolean;\n\t/**\n\t * Original model should be editable?\n\t * Defaults to false.\n\t */\n\toriginalEditable?: boolean;\n}\n\nexport class InternalEditorScrollbarOptions {\n\t_internalEditorScrollbarOptionsBrand: void;\n\n\tarrowSize:number;\n\tvertical:ScrollbarVisibility;\n\thorizontal:ScrollbarVisibility;\n\tuseShadows:boolean;\n\tverticalHasArrows:boolean;\n\thorizontalHasArrows:boolean;\n\thandleMouseWheel: boolean;\n\thorizontalScrollbarSize: number;\n\thorizontalSliderSize: number;\n\tverticalScrollbarSize: number;\n\tverticalSliderSize: number;\n\tmouseWheelScrollSensitivity: number;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(source:{\n\t\tarrowSize:number;\n\t\tvertical:ScrollbarVisibility;\n\t\thorizontal:ScrollbarVisibility;\n\t\tuseShadows:boolean;\n\t\tverticalHasArrows:boolean;\n\t\thorizontalHasArrows:boolean;\n\t\thandleMouseWheel: boolean;\n\t\thorizontalScrollbarSize: number;\n\t\thorizontalSliderSize: number;\n\t\tverticalScrollbarSize: number;\n\t\tverticalSliderSize: number;\n\t\tmouseWheelScrollSensitivity: number;\n\t}) {\n\t\tthis.arrowSize = source.arrowSize|0;\n\t\tthis.vertical = source.vertical|0;\n\t\tthis.horizontal = source.horizontal|0;\n\t\tthis.useShadows = Boolean(source.useShadows);\n\t\tthis.verticalHasArrows = Boolean(source.verticalHasArrows);\n\t\tthis.horizontalHasArrows = Boolean(source.horizontalHasArrows);\n\t\tthis.handleMouseWheel = Boolean(source.handleMouseWheel);\n\t\tthis.horizontalScrollbarSize = source.horizontalScrollbarSize|0;\n\t\tthis.horizontalSliderSize = source.horizontalSliderSize|0;\n\t\tthis.verticalScrollbarSize = source.verticalScrollbarSize|0;\n\t\tthis.verticalSliderSize = source.verticalSliderSize|0;\n\t\tthis.mouseWheelScrollSensitivity = Number(source.mouseWheelScrollSensitivity);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other:InternalEditorScrollbarOptions): boolean {\n\t\treturn (\n\t\t\tthis.arrowSize === other.arrowSize\n\t\t\t&& this.vertical === other.vertical\n\t\t\t&& this.horizontal === other.horizontal\n\t\t\t&& this.useShadows === other.useShadows\n\t\t\t&& this.verticalHasArrows === other.verticalHasArrows\n\t\t\t&& this.horizontalHasArrows === other.horizontalHasArrows\n\t\t\t&& this.handleMouseWheel === other.handleMouseWheel\n\t\t\t&& this.horizontalScrollbarSize === other.horizontalScrollbarSize\n\t\t\t&& this.horizontalSliderSize === other.horizontalSliderSize\n\t\t\t&& this.verticalScrollbarSize === other.verticalScrollbarSize\n\t\t\t&& this.verticalSliderSize === other.verticalSliderSize\n\t\t\t&& this.mouseWheelScrollSensitivity === other.mouseWheelScrollSensitivity\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clone(): InternalEditorScrollbarOptions {\n\t\treturn new InternalEditorScrollbarOptions(this);\n\t}\n}\n\nexport class EditorWrappingInfo {\n\t_editorWrappingInfoBrand: void;\n\n\tisViewportWrapping: boolean;\n\twrappingColumn: number;\n\twrappingIndent: WrappingIndent;\n\twordWrapBreakBeforeCharacters: string;\n\twordWrapBreakAfterCharacters: string;\n\twordWrapBreakObtrusiveCharacters: string;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(source:{\n\t\tisViewportWrapping: boolean;\n\t\twrappingColumn: number;\n\t\twrappingIndent: WrappingIndent;\n\t\twordWrapBreakBeforeCharacters: string;\n\t\twordWrapBreakAfterCharacters: string;\n\t\twordWrapBreakObtrusiveCharacters: string;\n\t}) {\n\t\tthis.isViewportWrapping = Boolean(source.isViewportWrapping);\n\t\tthis.wrappingColumn = source.wrappingColumn|0;\n\t\tthis.wrappingIndent = source.wrappingIndent|0;\n\t\tthis.wordWrapBreakBeforeCharacters = String(source.wordWrapBreakBeforeCharacters);\n\t\tthis.wordWrapBreakAfterCharacters = String(source.wordWrapBreakAfterCharacters);\n\t\tthis.wordWrapBreakObtrusiveCharacters = String(source.wordWrapBreakObtrusiveCharacters);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other:EditorWrappingInfo): boolean {\n\t\treturn (\n\t\t\tthis.isViewportWrapping === other.isViewportWrapping\n\t\t\t&& this.wrappingColumn === other.wrappingColumn\n\t\t\t&& this.wrappingIndent === other.wrappingIndent\n\t\t\t&& this.wordWrapBreakBeforeCharacters === other.wordWrapBreakBeforeCharacters\n\t\t\t&& this.wordWrapBreakAfterCharacters === other.wordWrapBreakAfterCharacters\n\t\t\t&& this.wordWrapBreakObtrusiveCharacters === other.wordWrapBreakObtrusiveCharacters\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clone(): EditorWrappingInfo {\n\t\treturn new EditorWrappingInfo(this);\n\t}\n}\n\nexport class InternalEditorViewOptions {\n\t_internalEditorViewOptionsBrand: void;\n\n\ttheme:string;\n\tcanUseTranslate3d:boolean;\n\texperimentalScreenReader: boolean;\n\trulers: number[];\n\tariaLabel: string;\n\tlineNumbers:any;\n\tselectOnLineNumbers:boolean;\n\tglyphMargin:boolean;\n\trevealHorizontalRightPadding:number;\n\troundedSelection:boolean;\n\toverviewRulerLanes:number;\n\tcursorBlinking:TextEditorCursorBlinkingStyle;\n\tmouseWheelZoom:boolean;\n\tcursorStyle:TextEditorCursorStyle;\n\thideCursorInOverviewRuler:boolean;\n\tscrollBeyondLastLine:boolean;\n\teditorClassName: string;\n\tstopRenderingLineAfter: number;\n\trenderWhitespace: boolean;\n\trenderControlCharacters: boolean;\n\trenderIndentGuides: boolean;\n\tscrollbar:InternalEditorScrollbarOptions;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(source:{\n\t\ttheme:string;\n\t\tcanUseTranslate3d:boolean;\n\t\texperimentalScreenReader: boolean;\n\t\trulers: number[];\n\t\tariaLabel: string;\n\t\tlineNumbers:any;\n\t\tselectOnLineNumbers:boolean;\n\t\tglyphMargin:boolean;\n\t\trevealHorizontalRightPadding:number;\n\t\troundedSelection:boolean;\n\t\toverviewRulerLanes:number;\n\t\tcursorBlinking:TextEditorCursorBlinkingStyle;\n\t\tmouseWheelZoom:boolean;\n\t\tcursorStyle:TextEditorCursorStyle;\n\t\thideCursorInOverviewRuler:boolean;\n\t\tscrollBeyondLastLine:boolean;\n\t\teditorClassName: string;\n\t\tstopRenderingLineAfter: number;\n\t\trenderWhitespace: boolean;\n\t\trenderControlCharacters: boolean;\n\t\trenderIndentGuides: boolean;\n\t\tscrollbar:InternalEditorScrollbarOptions;\n\t}) {\n\t\tthis.theme = String(source.theme);\n\t\tthis.canUseTranslate3d = Boolean(source.canUseTranslate3d);\n\t\tthis.experimentalScreenReader = Boolean(source.experimentalScreenReader);\n\t\tthis.rulers = InternalEditorViewOptions._toSortedIntegerArray(source.rulers);\n\t\tthis.ariaLabel = String(source.ariaLabel);\n\t\tthis.lineNumbers = source.lineNumbers;\n\t\tthis.selectOnLineNumbers = Boolean(source.selectOnLineNumbers);\n\t\tthis.glyphMargin = Boolean(source.glyphMargin);\n\t\tthis.revealHorizontalRightPadding = source.revealHorizontalRightPadding|0;\n\t\tthis.roundedSelection = Boolean(source.roundedSelection);\n\t\tthis.overviewRulerLanes = source.overviewRulerLanes|0;\n\t\tthis.cursorBlinking = source.cursorBlinking|0;\n\t\tthis.mouseWheelZoom = Boolean(source.mouseWheelZoom);\n\t\tthis.cursorStyle = source.cursorStyle|0;\n\t\tthis.hideCursorInOverviewRuler = Boolean(source.hideCursorInOverviewRuler);\n\t\tthis.scrollBeyondLastLine = Boolean(source.scrollBeyondLastLine);\n\t\tthis.editorClassName = String(source.editorClassName);\n\t\tthis.stopRenderingLineAfter = source.stopRenderingLineAfter|0;\n\t\tthis.renderWhitespace = Boolean(source.renderWhitespace);\n\t\tthis.renderControlCharacters = Boolean(source.renderControlCharacters);\n\t\tthis.renderIndentGuides = Boolean(source.renderIndentGuides);\n\t\tthis.scrollbar = source.scrollbar.clone();\n\t}\n\n\tprivate static _toSortedIntegerArray(source:any): number[] {\n\t\tif (!Array.isArray(source)) {\n\t\t\treturn [];\n\t\t}\n\t\tlet arrSource = <any[]>source;\n\t\tlet result = arrSource.map(el => {\n\t\t\tlet r = parseInt(el, 10);\n\t\t\tif (isNaN(r)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn r;\n\t\t});\n\t\tresult.sort();\n\t\treturn result;\n\t}\n\n\tprivate static _numberArraysEqual(a:number[], b:number[]): boolean {\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tif (a[i] !== b[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other:InternalEditorViewOptions): boolean {\n\t\treturn (\n\t\t\tthis.theme === other.theme\n\t\t\t&& this.canUseTranslate3d === other.canUseTranslate3d\n\t\t\t&& this.experimentalScreenReader === other.experimentalScreenReader\n\t\t\t&& InternalEditorViewOptions._numberArraysEqual(this.rulers, other.rulers)\n\t\t\t&& this.ariaLabel === other.ariaLabel\n\t\t\t&& this.lineNumbers === other.lineNumbers\n\t\t\t&& this.selectOnLineNumbers === other.selectOnLineNumbers\n\t\t\t&& this.glyphMargin === other.glyphMargin\n\t\t\t&& this.revealHorizontalRightPadding === other.revealHorizontalRightPadding\n\t\t\t&& this.roundedSelection === other.roundedSelection\n\t\t\t&& this.overviewRulerLanes === other.overviewRulerLanes\n\t\t\t&& this.cursorBlinking === other.cursorBlinking\n\t\t\t&& this.mouseWheelZoom === other.mouseWheelZoom\n\t\t\t&& this.cursorStyle === other.cursorStyle\n\t\t\t&& this.hideCursorInOverviewRuler === other.hideCursorInOverviewRuler\n\t\t\t&& this.scrollBeyondLastLine === other.scrollBeyondLastLine\n\t\t\t&& this.editorClassName === other.editorClassName\n\t\t\t&& this.stopRenderingLineAfter === other.stopRenderingLineAfter\n\t\t\t&& this.renderWhitespace === other.renderWhitespace\n\t\t\t&& this.renderControlCharacters === other.renderControlCharacters\n\t\t\t&& this.renderIndentGuides === other.renderIndentGuides\n\t\t\t&& this.scrollbar.equals(other.scrollbar)\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic createChangeEvent(newOpts:InternalEditorViewOptions): IViewConfigurationChangedEvent {\n\t\treturn {\n\t\t\ttheme: this.theme !== newOpts.theme,\n\t\t\tcanUseTranslate3d: this.canUseTranslate3d !== newOpts.canUseTranslate3d,\n\t\t\texperimentalScreenReader: this.experimentalScreenReader !== newOpts.experimentalScreenReader,\n\t\t\trulers: (!InternalEditorViewOptions._numberArraysEqual(this.rulers, newOpts.rulers)),\n\t\t\tariaLabel: this.ariaLabel !== newOpts.ariaLabel,\n\t\t\tlineNumbers: this.lineNumbers !== newOpts.lineNumbers,\n\t\t\tselectOnLineNumbers: this.selectOnLineNumbers !== newOpts.selectOnLineNumbers,\n\t\t\tglyphMargin: this.glyphMargin !== newOpts.glyphMargin,\n\t\t\trevealHorizontalRightPadding: this.revealHorizontalRightPadding !== newOpts.revealHorizontalRightPadding,\n\t\t\troundedSelection: this.roundedSelection !== newOpts.roundedSelection,\n\t\t\toverviewRulerLanes: this.overviewRulerLanes !== newOpts.overviewRulerLanes,\n\t\t\tcursorBlinking: this.cursorBlinking !== newOpts.cursorBlinking,\n\t\t\tmouseWheelZoom: this.mouseWheelZoom !== newOpts.mouseWheelZoom,\n\t\t\tcursorStyle: this.cursorStyle !== newOpts.cursorStyle,\n\t\t\thideCursorInOverviewRuler: this.hideCursorInOverviewRuler !== newOpts.hideCursorInOverviewRuler,\n\t\t\tscrollBeyondLastLine: this.scrollBeyondLastLine !== newOpts.scrollBeyondLastLine,\n\t\t\teditorClassName: this.editorClassName !== newOpts.editorClassName,\n\t\t\tstopRenderingLineAfter: this.stopRenderingLineAfter !== newOpts.stopRenderingLineAfter,\n\t\t\trenderWhitespace: this.renderWhitespace !== newOpts.renderWhitespace,\n\t\t\trenderControlCharacters: this.renderControlCharacters !== newOpts.renderControlCharacters,\n\t\t\trenderIndentGuides: this.renderIndentGuides !== newOpts.renderIndentGuides,\n\t\t\tscrollbar: (!this.scrollbar.equals(newOpts.scrollbar)),\n\t\t};\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clone(): InternalEditorViewOptions {\n\t\treturn new InternalEditorViewOptions(this);\n\t}\n}\n\nexport interface IViewConfigurationChangedEvent {\n\ttheme: boolean;\n\tcanUseTranslate3d: boolean;\n\texperimentalScreenReader: boolean;\n\trulers: boolean;\n\tariaLabel:  boolean;\n\tlineNumbers: boolean;\n\tselectOnLineNumbers: boolean;\n\tglyphMargin: boolean;\n\trevealHorizontalRightPadding: boolean;\n\troundedSelection: boolean;\n\toverviewRulerLanes: boolean;\n\tcursorBlinking: boolean;\n\tmouseWheelZoom: boolean;\n\tcursorStyle: boolean;\n\thideCursorInOverviewRuler: boolean;\n\tscrollBeyondLastLine: boolean;\n\teditorClassName:  boolean;\n\tstopRenderingLineAfter:  boolean;\n\trenderWhitespace:  boolean;\n\trenderControlCharacters: boolean;\n\trenderIndentGuides:  boolean;\n\tscrollbar: boolean;\n}\n\nexport class EditorContribOptions {\n\tselectionClipboard: boolean;\n\thover:boolean;\n\tcontextmenu:boolean;\n\tquickSuggestions:boolean;\n\tquickSuggestionsDelay:number;\n\tparameterHints: boolean;\n\ticonsInSuggestions:boolean;\n\tformatOnType:boolean;\n\tsuggestOnTriggerCharacters: boolean;\n\tacceptSuggestionOnEnter: boolean;\n\tsnippetSuggestions: 'top' | 'bottom' | 'inline' | 'none';\n\ttabCompletion: boolean;\n\twordBasedSuggestions: boolean;\n\tselectionHighlight:boolean;\n\tcodeLens: boolean;\n\tfolding: boolean;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(source:{\n\t\tselectionClipboard: boolean;\n\t\thover:boolean;\n\t\tcontextmenu:boolean;\n\t\tquickSuggestions:boolean;\n\t\tquickSuggestionsDelay:number;\n\t\tparameterHints:boolean;\n\t\ticonsInSuggestions:boolean;\n\t\tformatOnType:boolean;\n\t\tsuggestOnTriggerCharacters: boolean;\n\t\tacceptSuggestionOnEnter: boolean;\n\t\tsnippetSuggestions: 'top' | 'bottom' | 'inline' | 'none';\n\t\ttabCompletion: boolean;\n\t\twordBasedSuggestions: boolean;\n\t\tselectionHighlight:boolean;\n\t\tcodeLens: boolean;\n\t\tfolding: boolean;\n\t}) {\n\t\tthis.selectionClipboard = Boolean(source.selectionClipboard);\n\t\tthis.hover = Boolean(source.hover);\n\t\tthis.contextmenu = Boolean(source.contextmenu);\n\t\tthis.quickSuggestions = Boolean(source.quickSuggestions);\n\t\tthis.quickSuggestionsDelay = source.quickSuggestionsDelay||0;\n\t\tthis.parameterHints = Boolean(source.parameterHints);\n\t\tthis.iconsInSuggestions = Boolean(source.iconsInSuggestions);\n\t\tthis.formatOnType = Boolean(source.formatOnType);\n\t\tthis.suggestOnTriggerCharacters = Boolean(source.suggestOnTriggerCharacters);\n\t\tthis.acceptSuggestionOnEnter = Boolean(source.acceptSuggestionOnEnter);\n\t\tthis.snippetSuggestions = source.snippetSuggestions;\n\t\tthis.tabCompletion = source.tabCompletion;\n\t\tthis.wordBasedSuggestions = source.wordBasedSuggestions;\n\t\tthis.selectionHighlight = Boolean(source.selectionHighlight);\n\t\tthis.codeLens = Boolean(source.codeLens);\n\t\tthis.folding = Boolean(source.folding);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other: EditorContribOptions): boolean {\n\t\treturn (\n\t\t\tthis.selectionClipboard === other.selectionClipboard\n\t\t\t&& this.hover === other.hover\n\t\t\t&& this.contextmenu === other.contextmenu\n\t\t\t&& this.quickSuggestions === other.quickSuggestions\n\t\t\t&& this.quickSuggestionsDelay === other.quickSuggestionsDelay\n\t\t\t&& this.parameterHints === other.parameterHints\n\t\t\t&& this.iconsInSuggestions === other.iconsInSuggestions\n\t\t\t&& this.formatOnType === other.formatOnType\n\t\t\t&& this.suggestOnTriggerCharacters === other.suggestOnTriggerCharacters\n\t\t\t&& this.acceptSuggestionOnEnter === other.acceptSuggestionOnEnter\n\t\t\t&& this.snippetSuggestions === other.snippetSuggestions\n\t\t\t&& this.tabCompletion === other.tabCompletion\n\t\t\t&& this.wordBasedSuggestions === other.wordBasedSuggestions\n\t\t\t&& this.selectionHighlight === other.selectionHighlight\n\t\t\t&& this.codeLens === other.codeLens\n\t\t\t&& this.folding === other.folding\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clone(): EditorContribOptions {\n\t\treturn new EditorContribOptions(this);\n\t}\n}\n\n/**\n * Internal configuration options (transformed or computed) for the editor.\n */\nexport class InternalEditorOptions {\n\t_internalEditorOptionsBrand: void;\n\n\tlineHeight:number; // todo: move to fontInfo\n\n\treadOnly:boolean;\n\t// ---- cursor options\n\twordSeparators: string;\n\tautoClosingBrackets:boolean;\n\tuseTabStops: boolean;\n\ttabFocusMode:boolean;\n\t// ---- grouped options\n\tlayoutInfo: EditorLayoutInfo;\n\tfontInfo: FontInfo;\n\tviewInfo: InternalEditorViewOptions;\n\twrappingInfo: EditorWrappingInfo;\n\tcontribInfo: EditorContribOptions;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(source: {\n\t\tlineHeight:number;\n\t\treadOnly:boolean;\n\t\twordSeparators: string;\n\t\tautoClosingBrackets:boolean;\n\t\tuseTabStops: boolean;\n\t\ttabFocusMode:boolean;\n\t\tlayoutInfo: EditorLayoutInfo;\n\t\tfontInfo: FontInfo;\n\t\tviewInfo: InternalEditorViewOptions;\n\t\twrappingInfo: EditorWrappingInfo;\n\t\tcontribInfo: EditorContribOptions;\n\t}) {\n\t\tthis.lineHeight = source.lineHeight|0;\n\t\tthis.readOnly = Boolean(source.readOnly);\n\t\tthis.wordSeparators = String(source.wordSeparators);\n\t\tthis.autoClosingBrackets = Boolean(source.autoClosingBrackets);\n\t\tthis.useTabStops = Boolean(source.useTabStops);\n\t\tthis.tabFocusMode = Boolean(source.tabFocusMode);\n\t\tthis.layoutInfo = source.layoutInfo.clone();\n\t\tthis.fontInfo = source.fontInfo.clone();\n\t\tthis.viewInfo = source.viewInfo.clone();\n\t\tthis.wrappingInfo = source.wrappingInfo.clone();\n\t\tthis.contribInfo = source.contribInfo.clone();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other:InternalEditorOptions): boolean {\n\t\treturn (\n\t\t\tthis.lineHeight === other.lineHeight\n\t\t\t&& this.readOnly === other.readOnly\n\t\t\t&& this.wordSeparators === other.wordSeparators\n\t\t\t&& this.autoClosingBrackets === other.autoClosingBrackets\n\t\t\t&& this.useTabStops === other.useTabStops\n\t\t\t&& this.tabFocusMode === other.tabFocusMode\n\t\t\t&& this.layoutInfo.equals(other.layoutInfo)\n\t\t\t&& this.fontInfo.equals(other.fontInfo)\n\t\t\t&& this.viewInfo.equals(other.viewInfo)\n\t\t\t&& this.wrappingInfo.equals(other.wrappingInfo)\n\t\t\t&& this.contribInfo.equals(other.contribInfo)\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic createChangeEvent(newOpts:InternalEditorOptions): IConfigurationChangedEvent {\n\t\treturn {\n\t\t\tlineHeight: (this.lineHeight !== newOpts.lineHeight),\n\t\t\treadOnly: (this.readOnly !== newOpts.readOnly),\n\t\t\twordSeparators: (this.wordSeparators !== newOpts.wordSeparators),\n\t\t\tautoClosingBrackets: (this.autoClosingBrackets !== newOpts.autoClosingBrackets),\n\t\t\tuseTabStops: (this.useTabStops !== newOpts.useTabStops),\n\t\t\ttabFocusMode: (this.tabFocusMode !== newOpts.tabFocusMode),\n\t\t\tlayoutInfo: (!this.layoutInfo.equals(newOpts.layoutInfo)),\n\t\t\tfontInfo: (!this.fontInfo.equals(newOpts.fontInfo)),\n\t\t\tviewInfo: this.viewInfo.createChangeEvent(newOpts.viewInfo),\n\t\t\twrappingInfo: (!this.wrappingInfo.equals(newOpts.wrappingInfo)),\n\t\t\tcontribInfo: (!this.contribInfo.equals(newOpts.contribInfo)),\n\t\t};\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clone(): InternalEditorOptions {\n\t\treturn new InternalEditorOptions(this);\n\t}\n}\n\n/**\n * An event describing that the configuration of the editor has changed.\n */\nexport interface IConfigurationChangedEvent {\n\tlineHeight: boolean;\n\treadOnly: boolean;\n\twordSeparators: boolean;\n\tautoClosingBrackets: boolean;\n\tuseTabStops: boolean;\n\ttabFocusMode: boolean;\n\tlayoutInfo: boolean;\n\tfontInfo: boolean;\n\tviewInfo: IViewConfigurationChangedEvent;\n\twrappingInfo: boolean;\n\tcontribInfo: boolean;\n}\n\n/**\n * An event describing that one or more supports of a mode have changed.\n * @internal\n */\nexport interface IModeSupportChangedEvent {\n\ttokenizationSupport:boolean;\n}\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\n/**\n * Options for rendering a model decoration in the overview ruler.\n */\nexport interface IModelDecorationOverviewRulerOptions {\n\t/**\n\t * CSS color to render in the overview ruler.\n\t * e.g.: rgba(100, 100, 100, 0.5)\n\t */\n\tcolor: string;\n\t/**\n\t * CSS color to render in the overview ruler.\n\t * e.g.: rgba(100, 100, 100, 0.5)\n\t */\n\tdarkColor: string;\n\t/**\n\t * The position in the overview ruler.\n\t */\n\tposition: OverviewRulerLane;\n}\n\n/**\n * Options for a model decoration.\n */\nexport interface IModelDecorationOptions {\n\t/**\n\t * Customize the growing behaviour of the decoration when typing at the edges of the decoration.\n\t * Defaults to TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges\n\t */\n\tstickiness?:TrackedRangeStickiness;\n\t/**\n\t * CSS class name describing the decoration.\n\t */\n\tclassName?:string;\n\t/**\n\t * Message to be rendered when hovering over the glyph margin decoration.\n\t * @internal\n\t */\n\tglyphMarginHoverMessage?:string;\n\t/**\n\t * Array of MarkedString to render as the decoration message.\n\t */\n\thoverMessage?:MarkedString | MarkedString[];\n\t/**\n\t * Should the decoration expand to encompass a whole line.\n\t */\n\tisWholeLine?:boolean;\n\t/**\n\t * @deprecated : Use `overviewRuler` instead\n\t */\n\tshowInOverviewRuler?:string;\n\t/**\n\t * If set, render this decoration in the overview ruler.\n\t */\n\toverviewRuler?:IModelDecorationOverviewRulerOptions;\n\t/**\n\t * If set, the decoration will be rendered in the glyph margin with this CSS class name.\n\t */\n\tglyphMarginClassName?:string;\n\t/**\n\t * If set, the decoration will be rendered in the lines decorations with this CSS class name.\n\t */\n\tlinesDecorationsClassName?:string;\n\t/**\n\t * If set, the decoration will be rendered inline with the text with this CSS class name.\n\t * Please use this only for CSS rules that must impact the text. For example, use `className`\n\t * to have a background color decoration.\n\t */\n\tinlineClassName?:string;\n\t/**\n\t * If set, the decoration will be rendered before the text with this CSS class name.\n\t */\n\tbeforeContentClassName?:string;\n\t/**\n\t * If set, the decoration will be rendered after the text with this CSS class name.\n\t */\n\tafterContentClassName?:string;\n}\n\n/**\n * New model decorations.\n */\nexport interface IModelDeltaDecoration {\n\t/**\n\t * Range that this decoration covers.\n\t */\n\trange: IRange;\n\t/**\n\t * Options associated with this decoration.\n\t */\n\toptions: IModelDecorationOptions;\n}\n\n/**\n * A tracked range in the model.\n * @internal\n */\nexport interface IModelTrackedRange {\n\t/**\n\t * Identifier for a tracked range\n\t */\n\tid: string;\n\t/**\n\t * Range that this tracked range covers\n\t */\n\trange: Range;\n}\n\n/**\n * A decoration in the model.\n */\nexport interface IModelDecoration {\n\t/**\n\t * Identifier for a decoration.\n\t */\n\tid: string;\n\t/**\n\t * Identifier for a decoration's owener.\n\t */\n\townerId: number;\n\t/**\n\t * Range that this decoration covers.\n\t */\n\trange: Range;\n\t/**\n\t * Options associated with this decoration.\n\t */\n\toptions: IModelDecorationOptions;\n}\n\n/**\n * An accessor that can add, change or remove model decorations.\n * @internal\n */\nexport interface IModelDecorationsChangeAccessor {\n\t/**\n\t * Add a new decoration.\n\t * @param range Range that this decoration covers.\n\t * @param options Options associated with this decoration.\n\t * @return An unique identifier associated with this decoration.\n\t */\n\taddDecoration(range:IRange, options:IModelDecorationOptions): string;\n\t/**\n\t * Change the range that an existing decoration covers.\n\t * @param id The unique identifier associated with the decoration.\n\t * @param newRange The new range that this decoration covers.\n\t */\n\tchangeDecoration(id:string, newRange:IRange): void;\n\t/**\n\t * Change the options associated with an existing decoration.\n\t * @param id The unique identifier associated with the decoration.\n\t * @param newOptions The new options associated with this decoration.\n\t */\n\tchangeDecorationOptions(id: string, newOptions:IModelDecorationOptions): void;\n\t/**\n\t * Remove an existing decoration.\n\t * @param id The unique identifier associated with the decoration.\n\t */\n\tremoveDecoration(id:string): void;\n\t/**\n\t * Perform a minimum ammount of operations, in order to transform the decorations\n\t * identified by `oldDecorations` to the decorations described by `newDecorations`\n\t * and returns the new identifiers associated with the resulting decorations.\n\t *\n\t * @param oldDecorations Array containing previous decorations identifiers.\n\t * @param newDecorations Array describing what decorations should result after the call.\n\t * @return An array containing the new decorations identifiers.\n\t */\n\tdeltaDecorations(oldDecorations:string[], newDecorations:IModelDeltaDecoration[]): string[];\n}\n\n/**\n * Word inside a model.\n */\nexport interface IWordAtPosition {\n\t/**\n\t * The word.\n\t */\n\tword: string;\n\t/**\n\t * The column where the word starts.\n\t */\n\tstartColumn: number;\n\t/**\n\t * The column where the word ends.\n\t */\n\tendColumn: number;\n}\n\n/**\n * Range of a word inside a model.\n * @internal\n */\nexport interface IWordRange {\n\t/**\n\t * The index where the word starts.\n\t */\n\tstart:number;\n\t/**\n\t * The index where the word ends.\n\t */\n\tend:number;\n}\n\n/**\n * @internal\n */\nexport interface ITokenInfo {\n\ttoken: IToken;\n\tlineNumber: number;\n\tstartColumn: number;\n\tendColumn: number;\n}\n\n/**\n * @internal\n */\nexport interface ITokenIterator {\n\thasNext(): boolean;\n\tnext(): ITokenInfo;\n\thasPrev(): boolean;\n\tprev(): ITokenInfo;\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLinePreference {\n\t/**\n\t * Use the end of line character identified in the text buffer.\n\t */\n\tTextDefined = 0,\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * The default end of line to use when instantiating models.\n */\nexport enum DefaultEndOfLine {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLineSequence {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 0,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 1\n}\n\n/**\n * A read-only line marker in the model.\n * @internal\n */\nexport interface IReadOnlyLineMarker {\n\tid: string;\n\tcolumn: number;\n}\n\n/**\n * And identifier for a single edit operation.\n */\nexport interface ISingleEditOperationIdentifier {\n\t/**\n\t * Identifier major\n\t */\n\tmajor:number;\n\t/**\n\t * Identifier minor\n\t */\n\tminor:number;\n}\n\n/**\n * A builder and helper for edit operations for a command.\n */\nexport interface IEditOperationBuilder {\n\t/**\n\t * Add a new edit operation (a replace operation).\n\t * @param range The range to replace (delete). May be empty to represent a simple insert.\n\t * @param text The text to replace with. May be null to represent a simple delete.\n\t */\n\taddEditOperation(range:Range, text:string): void;\n\n\t/**\n\t * Track `selection` when applying edit operations.\n\t * A best effort will be made to not grow/expand the selection.\n\t * An empty selection will clamp to a nearby character.\n\t * @param selection The selection to track.\n\t * @param trackPreviousOnEmpty If set, and the selection is empty, indicates whether the selection\n\t *           should clamp to the previous or the next character.\n\t * @return A unique identifer.\n\t */\n\ttrackSelection(selection:Selection, trackPreviousOnEmpty?:boolean): string;\n}\n\n/**\n * A helper for computing cursor state after a command.\n */\nexport interface ICursorStateComputerData {\n\t/**\n\t * Get the inverse edit operations of the added edit operations.\n\t */\n\tgetInverseEditOperations(): IIdentifiedSingleEditOperation[];\n\t/**\n\t * Get a previously tracked selection.\n\t * @param id The unique identifier returned by `trackSelection`.\n\t * @return The selection.\n\t */\n\tgetTrackedSelection(id:string): Selection;\n}\n\n/**\n * A command that modifies text / cursor state on a model.\n */\nexport interface ICommand {\n\t/**\n\t * Get the edit operations needed to execute this command.\n\t * @param model The model the command will execute on.\n\t * @param builder A helper to collect the needed edit operations and to track selections.\n\t */\n\tgetEditOperations(model:ITokenizedModel, builder:IEditOperationBuilder): void;\n\t/**\n\t * Compute the cursor state after the edit operations were applied.\n\t * @param model The model the commad has executed on.\n\t * @param helper A helper to get inverse edit operations and to get previously tracked selections.\n\t * @return The cursor state after the command executed.\n\t */\n\tcomputeCursorState(model:ITokenizedModel, helper:ICursorStateComputerData): Selection;\n}\n\n/**\n * A single edit operation, that acts as a simple replace.\n * i.e. Replace text at `range` with `text` in model.\n */\nexport interface ISingleEditOperation {\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: IRange;\n\t/**\n\t * The text to replace with. This can be null to emulate a simple delete.\n\t */\n\ttext: string;\n\t/**\n\t * This indicates that this operation has \"insert\" semantics.\n\t * i.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved.\n\t */\n\tforceMoveMarkers?: boolean;\n}\n\n/**\n * A single edit operation, that has an identifier.\n */\nexport interface IIdentifiedSingleEditOperation {\n\t/**\n\t * An identifier associated with this single edit operation.\n\t */\n\tidentifier: ISingleEditOperationIdentifier;\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: Range;\n\t/**\n\t * The text to replace with. This can be null to emulate a simple delete.\n\t */\n\ttext: string;\n\t/**\n\t * This indicates that this operation has \"insert\" semantics.\n\t * i.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved.\n\t */\n\tforceMoveMarkers: boolean;\n\t/**\n\t * This indicates that this operation is inserting automatic whitespace\n\t * that can be removed on next model edit operation if `config.trimAutoWhitespace` is true.\n\t */\n\tisAutoWhitespaceEdit?: boolean;\n}\n\n/**\n * A callback that can compute the cursor state after applying a series of edit operations.\n */\nexport interface ICursorStateComputer {\n\t/**\n\t * A callback that can compute the resulting cursors state after some edit operations have been executed.\n\t */\n\t(inverseEditOperations:IIdentifiedSingleEditOperation[]): Selection[];\n}\n\n/**\n * A list of tokens on a line.\n * @internal\n */\nexport interface ILineTokens {\n\tgetTokenCount(): number;\n\tgetTokenStartIndex(tokenIndex:number): number;\n\tgetTokenType(tokenIndex:number): string;\n\tgetTokenEndIndex(tokenIndex:number, textLength:number): number;\n\n\t/**\n\t * Check if tokens have changed. This is called by the view to validate rendered lines\n\t * and decide which lines need re-rendering.\n\t */\n\tequals(other:ILineTokens): boolean;\n\n\t/**\n\t * Find the token containing offset `offset`.\n\t *    For example, with the following tokens [0, 5), [5, 9), [9, infinity)\n\t *    Searching for 0, 1, 2, 3 or 4 will return 0.\n\t *    Searching for 5, 6, 7 or 8 will return 1.\n\t *    Searching for 9, 10, 11, ... will return 2.\n\t * @param offset The search offset\n\t * @return The index of the token containing the offset.\n\t */\n\tfindIndexOfOffset(offset:number): number;\n\n\t/**\n\t * @internal\n\t */\n\tsliceAndInflate(startOffset:number, endOffset:number, deltaStartIndex:number): ViewLineToken[];\n\n\t/**\n\t * @internal\n\t */\n\tinflate(): ViewLineToken[];\n}\n\nexport interface ITextModelResolvedOptions {\n\ttabSize: number;\n\tinsertSpaces: boolean;\n\tdefaultEOL: DefaultEndOfLine;\n\ttrimAutoWhitespace: boolean;\n}\n\n/**\n * @internal\n */\nexport interface ITextModelCreationOptions {\n\ttabSize: number;\n\tinsertSpaces: boolean;\n\tdetectIndentation: boolean;\n\ttrimAutoWhitespace: boolean;\n\tdefaultEOL: DefaultEndOfLine;\n}\n\nexport interface ITextModelUpdateOptions {\n\ttabSize?: number;\n\tinsertSpaces?: boolean;\n\ttrimAutoWhitespace?: boolean;\n}\n\nexport interface IModelOptionsChangedEvent {\n\ttabSize: boolean;\n\tinsertSpaces: boolean;\n\ttrimAutoWhitespace: boolean;\n}\n\n/**\n * A textual read-only model.\n */\nexport interface ITextModel {\n\n\tgetOptions(): ITextModelResolvedOptions;\n\n\t/**\n\t * Get the current version id of the model.\n\t * Anytime a change happens to the model (even undo/redo),\n\t * the version id is incremented.\n\t */\n\tgetVersionId(): number;\n\n\t/**\n\t * Get the alternative version id of the model.\n\t * This alternative version id is not always incremented,\n\t * it will return the same values in the case of undo-redo.\n\t */\n\tgetAlternativeVersionId(): number;\n\n\t/**\n\t * Replace the entire text buffer value contained in this model.\n\t */\n\tsetValue(newValue:string): void;\n\n\t/**\n\t * Replace the entire text buffer value contained in this model.\n\t */\n\tsetValueFromRawText(newValue:IRawText): void;\n\n\t/**\n\t * Get the text stored in this model.\n\t * @param eol The end of line character preference. Defaults to `EndOfLinePreference.TextDefined`.\n\t * @param preserverBOM Preserve a BOM character if it was detected when the model was constructed.\n\t * @return The text.\n\t */\n\tgetValue(eol?:EndOfLinePreference, preserveBOM?:boolean): string;\n\n\t/**\n\t * Get the length of the text stored in this model.\n\t */\n\tgetValueLength(eol?:EndOfLinePreference, preserveBOM?:boolean): number;\n\n\t/**\n\t * Get the raw text stored in this model.\n\t */\n\ttoRawText(): IRawText;\n\n\t/**\n\t * Check if the raw text stored in this model equals another raw text.\n\t */\n\tequals(other:IRawText): boolean;\n\n\t/**\n\t * Get the text in a certain range.\n\t * @param range The range describing what text to get.\n\t * @param eol The end of line character preference. This will only be used for multiline ranges. Defaults to `EndOfLinePreference.TextDefined`.\n\t * @return The text.\n\t */\n\tgetValueInRange(range:IRange, eol?:EndOfLinePreference): string;\n\n\t/**\n\t * Get the length of text in a certain range.\n\t * @param range The range describing what text length to get.\n\t * @return The text length.\n\t */\n\tgetValueLengthInRange(range:IRange): number;\n\n\t/**\n\t * Splits characters in two buckets. First bucket (A) is of characters that\n\t * sit in lines with length < `LONG_LINE_BOUNDARY`. Second bucket (B) is of\n\t * characters that sit in lines with length >= `LONG_LINE_BOUNDARY`.\n\t * If count(B) > count(A) return true. Returns false otherwise.\n\t * @internal\n\t */\n\tisDominatedByLongLines(): boolean;\n\n\t/**\n\t * Get the number of lines in the model.\n\t */\n\tgetLineCount(): number;\n\n\t/**\n\t * Get the text for a certain line.\n\t */\n\tgetLineContent(lineNumber:number): string;\n\n\t/**\n\t * @internal\n\t */\n\tgetIndentLevel(lineNumber:number): number;\n\n\t/**\n\t * @internal\n\t */\n\tgetIndentRanges(): IndentRange[];\n\n\t/**\n\t * @internal\n\t */\n\tgetLineIndentGuide(lineNumber:number): number;\n\n\t/**\n\t * Get the text for all lines.\n\t */\n\tgetLinesContent(): string[];\n\n\t/**\n\t * Get the end of line sequence predominantly used in the text buffer.\n\t * @return EOL char sequence (e.g.: '\\n' or '\\r\\n').\n\t */\n\tgetEOL(): string;\n\n\t/**\n\t * Change the end of line sequence used in the text buffer.\n\t */\n\tsetEOL(eol: EndOfLineSequence): void;\n\n\t/**\n\t * Get the minimum legal column for line at `lineNumber`\n\t */\n\tgetLineMinColumn(lineNumber:number): number;\n\n\t/**\n\t * Get the maximum legal column for line at `lineNumber`\n\t */\n\tgetLineMaxColumn(lineNumber:number): number;\n\n\t/**\n\t * Returns the column before the first non whitespace character for line at `lineNumber`.\n\t * Returns 0 if line is empty or contains only whitespace.\n\t */\n\tgetLineFirstNonWhitespaceColumn(lineNumber:number): number;\n\n\t/**\n\t * Returns the column after the last non whitespace character for line at `lineNumber`.\n\t * Returns 0 if line is empty or contains only whitespace.\n\t */\n\tgetLineLastNonWhitespaceColumn(lineNumber:number): number;\n\n\t/**\n\t * Create a valid position,\n\t */\n\tvalidatePosition(position:IPosition): Position;\n\n\t/**\n\t * Advances the given position by the given offest (negative offsets are also accepted)\n\t * and returns it as a new valid position.\n\t *\n\t * If the offset and position are such that their combination goes beyond the beginning or\n\t * end of the model, throws an exception.\n\t *\n\t * If the ofsset is such that the new position would be in the middle of a multi-byte\n\t * line terminator, throws an exception.\n\t */\n\tmodifyPosition(position: IPosition, offset: number): Position;\n\n\t/**\n\t * Create a valid range.\n\t */\n\tvalidateRange(range:IRange): Range;\n\n\t/**\n\t * Converts the position to a zero-based offset.\n\t *\n\t * The position will be [adjusted](#TextDocument.validatePosition).\n\t *\n\t * @param position A position.\n\t * @return A valid zero-based offset.\n\t */\n\tgetOffsetAt(position: IPosition): number;\n\n\t/**\n\t * Converts a zero-based offset to a position.\n\t *\n\t * @param offset A zero-based offset.\n\t * @return A valid [position](#Position).\n\t */\n\tgetPositionAt(offset: number): Position;\n\n\t/**\n\t * Get a range covering the entire model\n\t */\n\tgetFullModelRange(): Range;\n\n\t/**\n\t * Returns iff the model was disposed or not.\n\t */\n\tisDisposed(): boolean;\n\n\t/**\n\t * No mode supports allowed on this model because it is simply too large.\n\t * (even tokenization would cause too much memory pressure)\n\t * @internal\n\t */\n\tisTooLargeForHavingAMode(): boolean;\n\n\t/**\n\t * Only basic mode supports allowed on this model because it is simply too large.\n\t * (tokenization is allowed and other basic supports)\n\t * @internal\n\t */\n\tisTooLargeForHavingARichMode(): boolean;\n}\n\nexport interface IReadOnlyModel extends ITextModel {\n\t/**\n\t * Gets the resource associated with this editor model.\n\t */\n\turi: URI;\n\n\t/**\n\t * Get the language associated with this model.\n\t */\n\tgetModeId(): string;\n\n\t/**\n\t * Get the word under or besides `position`.\n\t * @param position The position to look for a word.\n\t * @param skipSyntaxTokens Ignore syntax tokens, as identified by the mode.\n\t * @return The word under or besides `position`. Might be null.\n\t */\n\tgetWordAtPosition(position:IPosition): IWordAtPosition;\n\n\t/**\n\t * Get the word under or besides `position` trimmed to `position`.column\n\t * @param position The position to look for a word.\n\t * @param skipSyntaxTokens Ignore syntax tokens, as identified by the mode.\n\t * @return The word under or besides `position`. Will never be null.\n\t */\n\tgetWordUntilPosition(position:IPosition): IWordAtPosition;\n}\n\n/**\n * @internal\n */\nexport interface IRichEditBracket {\n\tmodeId: string;\n\topen: string;\n\tclose: string;\n\tforwardRegex: RegExp;\n\treversedRegex: RegExp;\n}\n\n/**\n * @internal\n */\nexport interface IFoundBracket {\n\trange: Range;\n\topen: string;\n\tclose: string;\n\tisOpen: boolean;\n}\n\n/**\n * A model that is tokenized.\n */\nexport interface ITokenizedModel extends ITextModel {\n\n\t/**\n\t * Tokenize if necessary and get the tokens for the line `lineNumber`.\n\t * @param lineNumber The line number\n\t * @param inaccurateTokensAcceptable Are inaccurate tokens acceptable? Defaults to false\n\t * @internal\n\t */\n\tgetLineTokens(lineNumber:number, inaccurateTokensAcceptable?:boolean): ILineTokens;\n\n\t/**\n\t * Tokenize if necessary and get the tokenization result for the line `lineNumber`, as returned by the language mode.\n\t * @internal\n\t */\n\tgetLineContext(lineNumber:number): ILineContext;\n\n\t/**\n\t * @internal\n\t */\n\t_getLineModeTransitions(lineNumber:number): ModeTransition[];\n\n\t/**\n\t * Get the current language mode associated with the model.\n\t */\n\tgetMode(): IMode;\n\n\t/**\n\t * Set the current language mode associated with the model.\n\t */\n\tsetMode(newMode:IMode|TPromise<IMode>): void;\n\n\t/**\n\t * A mode can be currently pending loading if a promise is used when constructing a model or calling setMode().\n\t *\n\t * If there is no currently pending loading mode, then the result promise will complete immediately.\n\t * Otherwise, the result will complete once the currently pending loading mode is loaded.\n\t * @internal\n\t */\n\twhenModeIsReady(): TPromise<IMode>;\n\n\t/**\n\t * Returns the true (inner-most) language mode at a given position.\n\t * @internal\n\t */\n\tgetModeIdAtPosition(lineNumber:number, column:number): string;\n\n\t/**\n\t * Get the word under or besides `position`.\n\t * @param position The position to look for a word.\n\t * @param skipSyntaxTokens Ignore syntax tokens, as identified by the mode.\n\t * @return The word under or besides `position`. Might be null.\n\t */\n\tgetWordAtPosition(position:IPosition): IWordAtPosition;\n\n\t/**\n\t * Get the word under or besides `position` trimmed to `position`.column\n\t * @param position The position to look for a word.\n\t * @param skipSyntaxTokens Ignore syntax tokens, as identified by the mode.\n\t * @return The word under or besides `position`. Will never be null.\n\t */\n\tgetWordUntilPosition(position:IPosition): IWordAtPosition;\n\n\t/**\n\t * Returns an iterator that can be used to read\n\t * next and previous tokens from the provided position.\n\t * The iterator is made available through the callback\n\t * function and can't be used afterwards.\n\t * @internal\n\t */\n\ttokenIterator(position: IPosition, callback: (it: ITokenIterator) =>any): any;\n\n\t/**\n\t * Find the matching bracket of `request` up, counting brackets.\n\t * @param request The bracket we're searching for\n\t * @param position The position at which to start the search.\n\t * @return The range of the matching bracket, or null if the bracket match was not found.\n\t * @internal\n\t */\n\tfindMatchingBracketUp(bracket:string, position:IPosition): Range;\n\n\t// /**\n\t//  * Find the first bracket in the model before `position`.\n\t//  * @param position The position at which to start the search.\n\t//  * @return The info for the first bracket before `position`, or null if there are no more brackets before `positions`.\n\t//  */\n\t// findPrevBracket(position:IPosition): IFoundBracket;\n\n\t// /**\n\t//  * Find the first bracket in the model after `position`.\n\t//  * @param position The position at which to start the search.\n\t//  * @return The info for the first bracket after `position`, or null if there are no more brackets after `positions`.\n\t//  */\n\t// findNextBracket(position:IPosition): IFoundBracket;\n\n\t/**\n\t * Given a `position`, if the position is on top or near a bracket,\n\t * find the matching bracket of that bracket and return the ranges of both brackets.\n\t * @param position The position at which to look for a bracket.\n\t * @internal\n\t */\n\tmatchBracket(position:IPosition): [Range,Range];\n}\n\n/**\n * A model that can track markers.\n */\nexport interface ITextModelWithMarkers extends ITextModel {\n\t/**\n\t * @internal\n\t */\n\t_addMarker(lineNumber:number, column:number, stickToPreviousCharacter:boolean): string;\n\t/**\n\t * @internal\n\t */\n\t_changeMarker(id:string, newLineNumber:number, newColumn:number): void;\n\t/**\n\t * @internal\n\t */\n\t_changeMarkerStickiness(id:string, newStickToPreviousCharacter:boolean): void;\n\t/**\n\t * @internal\n\t */\n\t_getMarker(id:string): Position;\n\t/**\n\t * @internal\n\t */\n\t_removeMarker(id:string): void;\n\t/**\n\t * @internal\n\t */\n\t_getLineMarkers(lineNumber: number): IReadOnlyLineMarker[];\n}\n\n/**\n * A map of changed ranges used during the model internal processing\n * @internal\n */\nexport interface IChangedTrackedRanges {\n\t[key:string]:IRange;\n}\n\n/**\n * Describes the behaviour of decorations when typing/editing near their edges.\n */\nexport enum TrackedRangeStickiness {\n\tAlwaysGrowsWhenTypingAtEdges = 0,\n\tNeverGrowsWhenTypingAtEdges = 1,\n\tGrowsOnlyWhenTypingBefore = 2,\n\tGrowsOnlyWhenTypingAfter = 3,\n}\n\n/**\n * A model that can track ranges.\n */\nexport interface ITextModelWithTrackedRanges extends ITextModel {\n\t/**\n\t * Start tracking a range (across edit operations).\n\t * @param range The range to start tracking.\n\t * @param stickiness The behaviour when typing at the edges of the range.\n\t * @return A unique identifier for the tracked range.\n\t * @internal\n\t */\n\taddTrackedRange(range:IRange, stickiness:TrackedRangeStickiness): string;\n\n\t/**\n\t * Change the range of a tracked range.\n\t * @param id The id of the tracked range, as returned by a `addTrackedRange` call.\n\t * @param newRange The new range of the tracked range.\n\t * @internal\n\t */\n\tchangeTrackedRange(id:string, newRange:IRange): void;\n\n\t/**\n\t * Change the stickiness (behaviour when typing at the edges of the range) for a tracked range.\n\t * @param id The id of the tracked range, as returned by a `addTrackedRange` call.\n\t * @param newStickiness The new behaviour when typing at the edges of the range.\n\t * @internal\n\t */\n\tchangeTrackedRangeStickiness(id:string, newStickiness:TrackedRangeStickiness): void;\n\n\t/**\n\t * Remove a tracked range.\n\t * @param id The id of the tracked range, as returned by a `addTrackedRaneg` call.\n\t * @internal\n\t */\n\tremoveTrackedRange(id:string): void;\n\n\t/**\n\t * Get the range of a tracked range.\n\t * @param id The id of the tracked range, as returned by a `addTrackedRaneg` call.\n\t * @internal\n\t */\n\tgetTrackedRange(id:string): Range;\n\n\t/**\n\t * Gets all the tracked ranges for the lines between `startLineNumber` and `endLineNumber` as an array.\n\t * @param startLineNumber The start line number\n\t * @param endLineNumber The end line number\n\t * @return An array with the tracked ranges\n\t * @internal\n\t */\n\tgetLinesTrackedRanges(startLineNumber:number, endLineNumber:number): IModelTrackedRange[];\n}\n\n/**\n * A model that can have decorations.\n */\nexport interface ITextModelWithDecorations {\n\t/**\n\t * Change the decorations. The callback will be called with a change accessor\n\t * that becomes invalid as soon as the callback finishes executing.\n\t * This allows for all events to be queued up until the change\n\t * is completed. Returns whatever the callback returns.\n\t * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.\n\t * @internal\n\t */\n\tchangeDecorations(callback: (changeAccessor:IModelDecorationsChangeAccessor)=>any, ownerId?:number): any;\n\n\t/**\n\t * Perform a minimum ammount of operations, in order to transform the decorations\n\t * identified by `oldDecorations` to the decorations described by `newDecorations`\n\t * and returns the new identifiers associated with the resulting decorations.\n\t *\n\t * @param oldDecorations Array containing previous decorations identifiers.\n\t * @param newDecorations Array describing what decorations should result after the call.\n\t * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.\n\t * @return An array containing the new decorations identifiers.\n\t */\n\tdeltaDecorations(oldDecorations:string[], newDecorations:IModelDeltaDecoration[], ownerId?:number): string[];\n\n\t/**\n\t * Remove all decorations that have been added with this specific ownerId.\n\t * @param ownerId The owner id to search for.\n\t * @internal\n\t */\n\tremoveAllDecorationsWithOwnerId(ownerId:number): void;\n\n\t/**\n\t * Get the options associated with a decoration.\n\t * @param id The decoration id.\n\t * @return The decoration options or null if the decoration was not found.\n\t */\n\tgetDecorationOptions(id:string): IModelDecorationOptions;\n\n\t/**\n\t * Get the range associated with a decoration.\n\t * @param id The decoration id.\n\t * @return The decoration range or null if the decoration was not found.\n\t */\n\tgetDecorationRange(id:string): Range;\n\n\t/**\n\t * Gets all the decorations for the line `lineNumber` as an array.\n\t * @param lineNumber The line number\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetLineDecorations(lineNumber:number, ownerId?:number, filterOutValidation?:boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations for the lines between `startLineNumber` and `endLineNumber` as an array.\n\t * @param startLineNumber The start line number\n\t * @param endLineNumber The end line number\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetLinesDecorations(startLineNumber:number, endLineNumber:number, ownerId?:number, filterOutValidation?:boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the deocorations in a range as an array. Only `startLineNumber` and `endLineNumber` from `range` are used for filtering.\n\t * So for now it returns all the decorations on the same line as `range`.\n\t * @param range The range to search in\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetDecorationsInRange(range:IRange, ownerId?:number, filterOutValidation?:boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations as an array.\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t */\n\tgetAllDecorations(ownerId?:number, filterOutValidation?:boolean): IModelDecoration[];\n}\n\n/**\n * An editable text model.\n */\nexport interface IEditableTextModel extends ITextModelWithMarkers {\n\n\t/**\n\t * Normalize a string containing whitespace according to indentation rules (converts to spaces or to tabs).\n\t */\n\tnormalizeIndentation(str:string): string;\n\n\t/**\n\t * Get what is considered to be one indent (e.g. a tab character or 4 spaces, etc.).\n\t */\n\tgetOneIndent(): string;\n\n\t/**\n\t * Change the options of this model.\n\t */\n\tupdateOptions(newOpts:ITextModelUpdateOptions): void;\n\n\t/**\n\t * Detect the indentation options for this model from its content.\n\t */\n\tdetectIndentation(defaultInsertSpaces:boolean, defaultTabSize:number): void;\n\n\t/**\n\t * Push a stack element onto the undo stack. This acts as an undo/redo point.\n\t * The idea is to use `pushEditOperations` to edit the model and then to\n\t * `pushStackElement` to create an undo/redo stop point.\n\t */\n\tpushStackElement(): void;\n\n\t/**\n\t * Push edit operations, basically editing the model. This is the preferred way\n\t * of editing the model. The edit operations will land on the undo stack.\n\t * @param beforeCursorState The cursor state before the edit operaions. This cursor state will be returned when `undo` or `redo` are invoked.\n\t * @param editOperations The edit operations.\n\t * @param cursorStateComputer A callback that can compute the resulting cursors state after the edit operations have been executed.\n\t * @return The cursor state returned by the `cursorStateComputer`.\n\t */\n\tpushEditOperations(beforeCursorState:Selection[], editOperations:IIdentifiedSingleEditOperation[], cursorStateComputer:ICursorStateComputer): Selection[];\n\n\t/**\n\t * Edit the model without adding the edits to the undo stack.\n\t * This can have dire consequences on the undo stack! See @pushEditOperations for the preferred way.\n\t * @param operations The edit operations.\n\t * @return The inverse edit operations, that, when applied, will bring the model back to the previous state.\n\t */\n\tapplyEdits(operations:IIdentifiedSingleEditOperation[]): IIdentifiedSingleEditOperation[];\n\n\t/**\n\t * Undo edit operations until the first previous stop point created by `pushStackElement`.\n\t * The inverse edit operations will be pushed on the redo stack.\n\t * @internal\n\t */\n\tundo(): Selection[];\n\n\t/**\n\t * Redo edit operations until the next stop point created by `pushStackElement`.\n\t * The inverse edit operations will be pushed on the undo stack.\n\t * @internal\n\t */\n\tredo(): Selection[];\n\n\t/**\n\t * Set an editable range on the model.\n\t * @internal\n\t */\n\tsetEditableRange(range:IRange): void;\n\n\t/**\n\t * Check if the model has an editable range.\n\t * @internal\n\t */\n\thasEditableRange(): boolean;\n\n\t/**\n\t * Get the editable range on the model.\n\t * @internal\n\t */\n\tgetEditableRange(): Range;\n}\n\n/**\n * A model.\n */\nexport interface IModel extends IReadOnlyModel, IEditableTextModel, ITextModelWithMarkers, ITokenizedModel, ITextModelWithTrackedRanges, ITextModelWithDecorations, IEditorModel {\n\t/**\n\t * @deprecated Please use `onDidChangeContent` instead.\n\t * An event emitted when the contents of the model have changed.\n\t * @internal\n\t */\n\tonDidChangeRawContent(listener: (e:IModelContentChangedEvent)=>void): IDisposable;\n\t/**\n\t * An event emitted when the contents of the model have changed.\n\t */\n\tonDidChangeContent(listener: (e:IModelContentChangedEvent2)=>void): IDisposable;\n\t/**\n\t * @internal\n\t */\n\tonDidChangeModeSupport(listener: (e:IModeSupportChangedEvent)=>void): IDisposable;\n\t/**\n\t * An event emitted when decorations of the model have changed.\n\t */\n\tonDidChangeDecorations(listener: (e:IModelDecorationsChangedEvent)=>void): IDisposable;\n\t/**\n\t * An event emitted when the model options have changed.\n\t */\n\tonDidChangeOptions(listener: (e:IModelOptionsChangedEvent)=>void): IDisposable;\n\t/**\n\t * An event emitted when the language associated with the model has changed.\n\t */\n\tonDidChangeMode(listener: (e:IModelModeChangedEvent)=>void): IDisposable;\n\t/**\n\t * An event emitted right before disposing the model.\n\t */\n\tonWillDispose(listener: ()=>void): IDisposable;\n\n\t/**\n\t * @internal\n\t */\n\taddBulkListener(listener:BulkListenerCallback):IDisposable;\n\n\t/**\n\t * A unique identifier associated with this model.\n\t */\n\tid: string;\n\n\t/**\n\t * Destroy this model. This will unbind the model from the mode\n\t * and make all necessary clean-up to release this object to the GC.\n\t * @internal\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Destroy this model. This will unbind the model from the mode\n\t * and make all necessary clean-up to release this object to the GC.\n\t */\n\tdispose(): void;\n\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchOnlyEditableRange Limit the searching to only search inside the editable range of the model.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wholeWord Force the matching to match entire words only.\n\t * @param limitResultCount Limit the number of results\n\t * @return The ranges where the matches are. It is empty if not matches have been found.\n\t */\n\tfindMatches(searchString:string, searchOnlyEditableRange:boolean, isRegex:boolean, matchCase:boolean, wholeWord:boolean, limitResultCount?:number): Range[];\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchScope Limit the searching to only search inside this range.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wholeWord Force the matching to match entire words only.\n\t * @param limitResultCount Limit the number of results\n\t * @return The ranges where the matches are. It is empty if no matches have been found.\n\t */\n\tfindMatches(searchString:string, searchScope:IRange, isRegex:boolean, matchCase:boolean, wholeWord:boolean, limitResultCount?:number): Range[];\n\t/**\n\t * Search the model for the next match. Loops to the beginning of the model if needed.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchStart Start the searching at the specified position.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wholeWord Force the matching to match entire words only.\n\t * @return The range where the next match is. It is null if no next match has been found.\n\t */\n\tfindNextMatch(searchString:string, searchStart:IPosition, isRegex:boolean, matchCase:boolean, wholeWord:boolean): Range;\n\t/**\n\t * Search the model for the previous match. Loops to the end of the model if needed.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchStart Start the searching at the specified position.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wholeWord Force the matching to match entire words only.\n\t * @return The range where the previous match is. It is null if no previous match has been found.\n\t */\n\tfindPreviousMatch(searchString:string, searchStart:IPosition, isRegex:boolean, matchCase:boolean, wholeWord:boolean): Range;\n\n\t/**\n\t * @internal\n\t */\n\tonBeforeAttached(): void;\n\n\t/**\n\t * @internal\n\t */\n\tonBeforeDetached(): void;\n\n\t/**\n\t * Returns iff this model is attached to an editor or not.\n\t * @internal\n\t */\n\tisAttachedToEditor(): boolean;\n}\n\n/**\n * @internal\n */\nexport interface IRangeWithText {\n\ttext:string;\n\trange:IRange;\n}\n\n/**\n * @internal\n */\nexport interface IMirrorModel extends IEventEmitter, ITokenizedModel {\n\turi: URI;\n\n\tgetOffsetFromPosition(position:IPosition): number;\n\tgetPositionFromOffset(offset:number): Position;\n\tgetOffsetAndLengthFromRange(range:IRange): {offset:number; length:number;};\n\tgetRangeFromOffsetAndLength(offset:number, length:number): Range;\n\tgetLineStart(lineNumber:number): number;\n\n\tgetAllWordsWithRange(): IRangeWithText[];\n\tgetAllUniqueWords(skipWordOnce?:string): string[];\n\n\tgetModeId(): string;\n}\n\n/**\n * An event describing that the current mode associated with a model has changed.\n */\nexport interface IModelModeChangedEvent {\n\t/**\n\t * Previous mode\n\t */\n\toldMode:IMode;\n\t/**\n\t * New mode\n\t */\n\tnewMode:IMode;\n}\n\n/**\n * An event describing a change in the text of a model.\n */\nexport interface IModelContentChangedEvent2 {\n\t/**\n\t * The range that got replaced.\n\t */\n\trange: IRange;\n\t/**\n\t * The length of the range that got replaced.\n\t */\n\trangeLength: number;\n\t/**\n\t * The new text for the range.\n\t */\n\ttext: string;\n\t/**\n\t * The (new) end-of-line character.\n\t */\n\teol: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\tversionId: number;\n\t/**\n\t * Flag that indicates that this event was generated while undoing.\n\t */\n\tisUndoing: boolean;\n\t/**\n\t * Flag that indicates that this event was generated while redoing.\n\t */\n\tisRedoing: boolean;\n}\n/**\n * An event describing a change in the text of a model.\n * @internal\n */\nexport interface IModelContentChangedEvent {\n\t/**\n\t * The event type. It can be used to detect the actual event type:\n\t * \t\tEditorCommon.EventType.ModelContentChangedFlush => IModelContentChangedFlushEvent\n\t * \t\tEditorCommon.EventType.ModelContentChangedLinesDeleted => IModelContentChangedLineChangedEvent\n\t * \t\tEditorCommon.EventType.ModelContentChangedLinesInserted => IModelContentChangedLinesDeletedEvent\n\t * \t\tEditorCommon.EventType.ModelContentChangedLineChanged => IModelContentChangedLinesInsertedEvent\n\t */\n\tchangeType: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\tversionId: number;\n\t/**\n\t * Flag that indicates that this event was generated while undoing.\n\t */\n\tisUndoing: boolean;\n\t/**\n\t * Flag that indicates that this event was generated while redoing.\n\t */\n\tisRedoing: boolean;\n}\n\n/**\n * The raw text backing a model.\n */\nexport interface IRawText {\n\t/**\n\t * The entire text length.\n\t */\n\tlength: number;\n\t/**\n\t * The text split into lines.\n\t */\n\tlines: string[];\n\t/**\n\t * The BOM (leading character sequence of the file).\n\t */\n\tBOM: string;\n\t/**\n\t * The end of line sequence.\n\t */\n\tEOL: string;\n\t/**\n\t * The options associated with this text.\n\t */\n\toptions: ITextModelResolvedOptions;\n}\n\n/**\n * An event describing that a model has been reset to a new value.\n * @internal\n */\nexport interface IModelContentChangedFlushEvent extends IModelContentChangedEvent {\n\t/**\n\t * The new text content of the model.\n\t */\n\tdetail: IRawText;\n}\n/**\n * An event describing that a line has changed in a model.\n * @internal\n */\nexport interface IModelContentChangedLineChangedEvent extends IModelContentChangedEvent {\n\t/**\n\t * The line that has changed.\n\t */\n\tlineNumber: number;\n\t/**\n\t * The new value of the line.\n\t */\n\tdetail: string;\n}\n/**\n * An event describing that line(s) have been deleted in a model.\n * @internal\n */\nexport interface IModelContentChangedLinesDeletedEvent extends IModelContentChangedEvent {\n\t/**\n\t * At what line the deletion began (inclusive).\n\t */\n\tfromLineNumber: number;\n\t/**\n\t * At what line the deletion stopped (inclusive).\n\t */\n\ttoLineNumber: number;\n}\n/**\n * An event describing that line(s) have been inserted in a model.\n * @internal\n */\nexport interface IModelContentChangedLinesInsertedEvent extends IModelContentChangedEvent {\n\t/**\n\t * Before what line did the insertion begin\n\t */\n\tfromLineNumber: number;\n\t/**\n\t * `toLineNumber` - `fromLineNumber` + 1 denotes the number of lines that were inserted\n\t */\n\ttoLineNumber: number;\n\t/**\n\t * The text that was inserted\n\t */\n\tdetail: string;\n}\n/**\n * Decoration data associated with a model decorations changed event.\n */\nexport interface IModelDecorationsChangedEventDecorationData {\n\t/**\n\t * The id of the decoration.\n\t */\n\tid:string;\n\t/**\n\t * The owner id of the decoration.\n\t */\n\townerId:number;\n\t/**\n\t * The range of the decoration.\n\t */\n\trange:IRange;\n\t/**\n\t * A flag describing if this is a problem decoration (e.g. warning/error).\n\t */\n\tisForValidation:boolean;\n\t/**\n\t * The options for this decoration.\n\t */\n\toptions:IModelDecorationOptions;\n}\n/**\n * An event describing that model decorations have changed.\n */\nexport interface IModelDecorationsChangedEvent {\n\t/**\n\t * A summary with ids of decorations that have changed.\n\t */\n\tids:string[];\n\t/**\n\t * Lists of details for added or changed decorations.\n\t */\n\taddedOrChangedDecorations:IModelDecorationsChangedEventDecorationData[];\n\t/**\n\t * List of ids for removed decorations.\n\t */\n\tremovedDecorations:string[];\n\t/**\n\t * Details regarding old options.\n\t */\n\toldOptions:{[decorationId:string]:IModelDecorationOptions;};\n\t/**\n\t * Details regarding old ranges.\n\t */\n\toldRanges:{[decorationId:string]:IRange;};\n}\n/**\n * An event describing that a range of lines has been tokenized\n */\nexport interface IModelTokensChangedEvent {\n\t/**\n\t * The start of the range (inclusive)\n\t */\n\tfromLineNumber:number;\n\t/**\n\t * The end of the range (inclusive)\n\t */\n\ttoLineNumber:number;\n}\n\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport enum CursorChangeReason {\n\t/**\n\t * Unknown or not set.\n\t */\n\tNotSet = 0,\n\t/**\n\t * A `model.setValue()` was called.\n\t */\n\tContentFlush = 1,\n\t/**\n\t * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n\t */\n\tRecoverFromMarkers = 2,\n\t/**\n\t * There was an explicit user gesture.\n\t */\n\tExplicit = 3,\n\t/**\n\t * There was a Paste.\n\t */\n\tPaste = 4,\n\t/**\n\t * There was an Undo.\n\t */\n\tUndo = 5,\n\t/**\n\t * There was a Redo.\n\t */\n\tRedo = 6,\n}\n/**\n * An event describing that the cursor position has changed.\n */\nexport interface ICursorPositionChangedEvent {\n\t/**\n\t * Primary cursor's position.\n\t */\n\tposition:Position;\n\t/**\n\t * Primary cursor's view position\n\t */\n\tviewPosition:Position;\n\t/**\n\t * Secondary cursors' position.\n\t */\n\tsecondaryPositions:Position[];\n\t/**\n\t * Secondary cursors' view position.\n\t */\n\tsecondaryViewPositions:Position[];\n\t/**\n\t * Reason.\n\t */\n\treason:CursorChangeReason;\n\t/**\n\t * Source of the call that caused the event.\n\t */\n\tsource:string;\n\t/**\n\t * Is the primary cursor in the editable range?\n\t */\n\tisInEditableRange:boolean;\n}\n/**\n * An event describing that the cursor selection has changed.\n */\nexport interface ICursorSelectionChangedEvent {\n\t/**\n\t * The primary selection.\n\t */\n\tselection:Selection;\n\t/**\n\t * The primary selection in view coordinates.\n\t */\n\tviewSelection:Selection;\n\t/**\n\t * The secondary selections.\n\t */\n\tsecondarySelections:Selection[];\n\t/**\n\t * The secondary selections in view coordinates.\n\t */\n\tsecondaryViewSelections:Selection[];\n\t/**\n\t * Source of the call that caused the event.\n\t */\n\tsource:string;\n\t/**\n\t * Reason.\n\t */\n\treason:CursorChangeReason;\n}\n/**\n * @internal\n */\nexport enum VerticalRevealType {\n\tSimple = 0,\n\tCenter = 1,\n\tCenterIfOutsideViewport = 2\n}\n/**\n * An event describing a request to reveal a specific range in the view of the editor.\n * @internal\n */\nexport interface ICursorRevealRangeEvent {\n\t/**\n\t * Range to be reavealed.\n\t */\n\trange:Range;\n\t/**\n\t * View range to be reavealed.\n\t */\n\tviewRange:Range;\n\n\tverticalType: VerticalRevealType;\n\t/**\n\t * If true: there should be a horizontal & vertical revealing\n\t * If false: there should be just a vertical revealing\n\t */\n\trevealHorizontal:boolean;\n}\n\n/**\n * @internal\n */\nexport interface ICursorScrollRequestEvent {\n\tdeltaLines: number;\n}\n\n/**\n * An event describing that an editor has had its model reset (i.e. `editor.setModel()`).\n */\nexport interface IModelChangedEvent {\n\t/**\n\t * The `uri` of the previous model or null.\n\t */\n\toldModelUrl: URI;\n\t/**\n\t * The `uri` of the new model or null.\n\t */\n\tnewModelUrl: URI;\n}\n\n/**\n * @internal\n */\nexport interface IEditorWhitespace {\n\tid:number;\n\tafterLineNumber:number;\n\theightInLines:number;\n}\n\n/**\n * A description for the overview ruler position.\n */\nexport class OverviewRulerPosition {\n\t_overviewRulerPositionBrand: void;\n\n\t/**\n\t * Width of the overview ruler\n\t */\n\twidth:number;\n\t/**\n\t * Height of the overview ruler\n\t */\n\theight:number;\n\t/**\n\t * Top position for the overview ruler\n\t */\n\ttop:number;\n\t/**\n\t * Right position for the overview ruler\n\t */\n\tright:number;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(source:{\n\t\twidth:number;\n\t\theight:number;\n\t\ttop:number;\n\t\tright:number;\n\t}) {\n\t\tthis.width = source.width|0;\n\t\tthis.height = source.height|0;\n\t\tthis.top = source.top|0;\n\t\tthis.right = source.right|0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other:OverviewRulerPosition): boolean {\n\t\treturn (\n\t\t\tthis.width === other.width\n\t\t\t&& this.height === other.height\n\t\t\t&& this.top === other.top\n\t\t\t&& this.right === other.right\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clone(): OverviewRulerPosition {\n\t\treturn new OverviewRulerPosition(this);\n\t}\n}\n\n/**\n * The internal layout details of the editor.\n */\nexport class EditorLayoutInfo {\n\t_editorLayoutInfoBrand: void;\n\n\t/**\n\t * Full editor width.\n\t */\n\twidth:number;\n\t/**\n\t * Full editor height.\n\t */\n\theight:number;\n\n\t/**\n\t * Left position for the glyph margin.\n\t */\n\tglyphMarginLeft:number;\n\t/**\n\t * The width of the glyph margin.\n\t */\n\tglyphMarginWidth:number;\n\t/**\n\t * The height of the glyph margin.\n\t */\n\tglyphMarginHeight:number;\n\n\t/**\n\t * Left position for the line numbers.\n\t */\n\tlineNumbersLeft:number;\n\t/**\n\t * The width of the line numbers.\n\t */\n\tlineNumbersWidth:number;\n\t/**\n\t * The height of the line numbers.\n\t */\n\tlineNumbersHeight:number;\n\n\t/**\n\t * Left position for the line decorations.\n\t */\n\tdecorationsLeft:number;\n\t/**\n\t * The width of the line decorations.\n\t */\n\tdecorationsWidth:number;\n\t/**\n\t * The height of the line decorations.\n\t */\n\tdecorationsHeight:number;\n\n\t/**\n\t * Left position for the content (actual text)\n\t */\n\tcontentLeft:number;\n\t/**\n\t * The width of the content (actual text)\n\t */\n\tcontentWidth:number;\n\t/**\n\t * The height of the content (actual height)\n\t */\n\tcontentHeight:number;\n\n\t/**\n\t * The width of the vertical scrollbar.\n\t */\n\tverticalScrollbarWidth:number;\n\t/**\n\t * The height of the horizontal scrollbar.\n\t */\n\thorizontalScrollbarHeight:number;\n\n\t/**\n\t * The position of the overview ruler.\n\t */\n\toverviewRuler:OverviewRulerPosition;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(source:{\n\t\twidth:number;\n\t\theight:number;\n\t\tglyphMarginLeft:number;\n\t\tglyphMarginWidth:number;\n\t\tglyphMarginHeight:number;\n\t\tlineNumbersLeft:number;\n\t\tlineNumbersWidth:number;\n\t\tlineNumbersHeight:number;\n\t\tdecorationsLeft:number;\n\t\tdecorationsWidth:number;\n\t\tdecorationsHeight:number;\n\t\tcontentLeft:number;\n\t\tcontentWidth:number;\n\t\tcontentHeight:number;\n\t\tverticalScrollbarWidth:number;\n\t\thorizontalScrollbarHeight:number;\n\t\toverviewRuler:OverviewRulerPosition;\n\t}) {\n\t\tthis.width = source.width|0;\n\t\tthis.height = source.height|0;\n\t\tthis.glyphMarginLeft = source.glyphMarginLeft|0;\n\t\tthis.glyphMarginWidth = source.glyphMarginWidth|0;\n\t\tthis.glyphMarginHeight = source.glyphMarginHeight|0;\n\t\tthis.lineNumbersLeft = source.lineNumbersLeft|0;\n\t\tthis.lineNumbersWidth = source.lineNumbersWidth|0;\n\t\tthis.lineNumbersHeight = source.lineNumbersHeight|0;\n\t\tthis.decorationsLeft = source.decorationsLeft|0;\n\t\tthis.decorationsWidth = source.decorationsWidth|0;\n\t\tthis.decorationsHeight = source.decorationsHeight|0;\n\t\tthis.contentLeft = source.contentLeft|0;\n\t\tthis.contentWidth = source.contentWidth|0;\n\t\tthis.contentHeight = source.contentHeight|0;\n\t\tthis.verticalScrollbarWidth = source.verticalScrollbarWidth|0;\n\t\tthis.horizontalScrollbarHeight = source.horizontalScrollbarHeight|0;\n\t\tthis.overviewRuler = source.overviewRuler.clone();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other:EditorLayoutInfo): boolean {\n\t\treturn (\n\t\t\tthis.width === other.width\n\t\t\t&& this.height === other.height\n\t\t\t&& this.glyphMarginLeft === other.glyphMarginLeft\n\t\t\t&& this.glyphMarginWidth === other.glyphMarginWidth\n\t\t\t&& this.glyphMarginHeight === other.glyphMarginHeight\n\t\t\t&& this.lineNumbersLeft === other.lineNumbersLeft\n\t\t\t&& this.lineNumbersWidth === other.lineNumbersWidth\n\t\t\t&& this.lineNumbersHeight === other.lineNumbersHeight\n\t\t\t&& this.decorationsLeft === other.decorationsLeft\n\t\t\t&& this.decorationsWidth === other.decorationsWidth\n\t\t\t&& this.decorationsHeight === other.decorationsHeight\n\t\t\t&& this.contentLeft === other.contentLeft\n\t\t\t&& this.contentWidth === other.contentWidth\n\t\t\t&& this.contentHeight === other.contentHeight\n\t\t\t&& this.verticalScrollbarWidth === other.verticalScrollbarWidth\n\t\t\t&& this.horizontalScrollbarHeight === other.horizontalScrollbarHeight\n\t\t\t&& this.overviewRuler.equals(other.overviewRuler)\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clone(): EditorLayoutInfo {\n\t\treturn new EditorLayoutInfo(this);\n\t}\n}\n\n/**\n * Options for creating the editor.\n */\nexport interface ICodeEditorWidgetCreationOptions extends IEditorOptions {\n\t/**\n\t * The initial model associated with this code editor.\n\t */\n\tmodel?:IModel;\n}\n\n/**\n * An editor model.\n */\nexport interface IEditorModel {\n}\n/**\n * An editor view state.\n */\nexport interface IEditorViewState {\n}\nexport interface IDimension {\n\twidth:number;\n\theight:number;\n}\n\n/**\n * A (serializable) state of the cursors.\n */\nexport interface ICursorState {\n\tinSelectionMode:boolean;\n\tselectionStart:IPosition;\n\tposition:IPosition;\n}\n/**\n * A (serializable) state of the view.\n */\nexport interface IViewState {\n\tscrollTop: number;\n\tscrollTopWithoutViewZones: number;\n\tscrollLeft: number;\n}\n/**\n * A (serializable) state of the code editor.\n */\nexport interface ICodeEditorViewState extends IEditorViewState {\n\tcursorState:ICursorState[];\n\tviewState:IViewState;\n\tcontributionsState: {[id:string]:any};\n}\n\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport enum MouseTargetType {\n\t/**\n\t * Mouse is on top of an unknown element.\n\t */\n\tUNKNOWN,\n\t/**\n\t * Mouse is on top of the textarea used for input.\n\t */\n\tTEXTAREA,\n\t/**\n\t * Mouse is on top of the glyph margin\n\t */\n\tGUTTER_GLYPH_MARGIN,\n\t/**\n\t * Mouse is on top of the line numbers\n\t */\n\tGUTTER_LINE_NUMBERS,\n\t/**\n\t * Mouse is on top of the line decorations\n\t */\n\tGUTTER_LINE_DECORATIONS,\n\t/**\n\t * Mouse is on top of the whitespace left in the gutter by a view zone.\n\t */\n\tGUTTER_VIEW_ZONE,\n\t/**\n\t * Mouse is on top of text in the content.\n\t */\n\tCONTENT_TEXT,\n\t/**\n\t * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n\t */\n\tCONTENT_EMPTY,\n\t/**\n\t * Mouse is on top of a view zone in the content.\n\t */\n\tCONTENT_VIEW_ZONE,\n\t/**\n\t * Mouse is on top of a content widget.\n\t */\n\tCONTENT_WIDGET,\n\t/**\n\t * Mouse is on top of the decorations overview ruler.\n\t */\n\tOVERVIEW_RULER,\n\t/**\n\t * Mouse is on top of a scrollbar.\n\t */\n\tSCROLLBAR,\n\t/**\n\t * Mouse is on top of an overlay widget.\n\t */\n\tOVERLAY_WIDGET\n}\n\n/**\n * A model for the diff editor.\n */\nexport interface IDiffEditorModel extends IEditorModel {\n\t/**\n\t * Original model.\n\t */\n\toriginal: IModel;\n\t/**\n\t * Modified model.\n\t */\n\tmodified: IModel;\n}\n/**\n * (Serializable) View state for the diff editor.\n */\nexport interface IDiffEditorViewState extends IEditorViewState {\n\toriginal: ICodeEditorViewState;\n\tmodified: ICodeEditorViewState;\n}\n/**\n * A change\n */\nexport interface IChange {\n\toriginalStartLineNumber:number;\n\toriginalEndLineNumber:number;\n\tmodifiedStartLineNumber:number;\n\tmodifiedEndLineNumber:number;\n}\n/**\n * A character level change.\n */\nexport interface ICharChange extends IChange {\n\toriginalStartColumn:number;\n\toriginalEndColumn:number;\n\tmodifiedStartColumn:number;\n\tmodifiedEndColumn:number;\n}\n/**\n * A line change\n */\nexport interface ILineChange extends IChange {\n\tcharChanges:ICharChange[];\n}\n/**\n * Information about a line in the diff editor\n * @internal\n */\nexport interface IDiffLineInformation {\n\tequivalentLineNumber: number;\n}\n\n/**\n * @internal\n */\nexport namespace EditorContextKeys {\n\t/**\n\t * A context key that is set when the editor's text has focus (cursor is blinking).\n\t * @internal\n\t */\n\texport const TextFocus = new RawContextKey<boolean>('editorTextFocus', false);\n\t/**\n\t * A context key that is set when the editor's text or an editor's widget has focus.\n\t * @internal\n\t */\n\texport const Focus = new RawContextKey<boolean>('editorFocus', false);\n\n\t/**\n\t * A context key that is set when the editor's text is readonly.\n\t * @internal\n\t */\n\texport const ReadOnly = new RawContextKey<boolean>('editorReadonly', false);\n\n\t/**\n\t * @internal\n\t */\n\texport const Writable:ContextKeyExpr = ReadOnly.toNegated();\n\n\t/**\n\t * A context key that is set when the editor has a non-collapsed selection.\n\t * @internal\n\t */\n\texport const HasNonEmptySelection = new RawContextKey<boolean>('editorHasSelection', false);\n\t/**\n\t * @internal\n\t */\n\texport const HasOnlyEmptySelection:ContextKeyExpr = HasNonEmptySelection.toNegated();\n\n\t/**\n\t * A context key that is set when the editor has multiple selections (multiple cursors).\n\t * @internal\n\t */\n\texport const HasMultipleSelections = new RawContextKey<boolean>('editorHasMultipleSelections', false);\n\t/**\n\t * @internal\n\t */\n\texport const HasSingleSelection:ContextKeyExpr = HasMultipleSelections.toNegated();\n\n\t/**\n\t * @internal\n\t */\n\texport const TabMovesFocus = new RawContextKey<boolean>('editorTabMovesFocus', false);\n\t/**\n\t * @internal\n\t */\n\texport const TabDoesNotMoveFocus:ContextKeyExpr = TabMovesFocus.toNegated();\n\n\t/**\n\t * A context key that is set to the language associated with the model associated with the editor.\n\t * @internal\n\t */\n\texport const LanguageId = new RawContextKey<string>('editorLangId', undefined);\n\n};\n\n\n/**\n * @internal\n */\nexport namespace ModeContextKeys {\n\t/**\n\t * @internal\n\t */\n\texport const hasCompletionItemProvider = new RawContextKey<boolean>('editorHasCompletionItemProvider', undefined);\n\t/**\n\t * @internal\n\t */\n\texport const hasCodeActionsProvider = new RawContextKey<boolean>('editorHasCodeActionsProvider', undefined);\n\t/**\n\t * @internal\n\t */\n\texport const hasCodeLensProvider = new RawContextKey<boolean>('editorHasCodeLensProvider', undefined);\n\t/**\n\t * @internal\n\t */\n\texport const hasDefinitionProvider = new RawContextKey<boolean>('editorHasDefinitionProvider', undefined);\n\t/**\n\t * @internal\n\t */\n\texport const hasHoverProvider = new RawContextKey<boolean>('editorHasHoverProvider', undefined);\n\t/**\n\t * @internal\n\t */\n\texport const hasDocumentHighlightProvider = new RawContextKey<boolean>('editorHasDocumentHighlightProvider', undefined);\n\t/**\n\t * @internal\n\t */\n\texport const hasDocumentSymbolProvider = new RawContextKey<boolean>('editorHasDocumentSymbolProvider', undefined);\n\t/**\n\t * @internal\n\t */\n\texport const hasReferenceProvider = new RawContextKey<boolean>('editorHasReferenceProvider', undefined);\n\t/**\n\t * @internal\n\t */\n\texport const hasRenameProvider = new RawContextKey<boolean>('editorHasRenameProvider', undefined);\n\t/**\n\t * @internal\n\t */\n\texport const hasFormattingProvider = new RawContextKey<boolean>('editorHasFormattingProvider', undefined);\n\t/**\n\t * @internal\n\t */\n\texport const hasSignatureHelpProvider = new RawContextKey<boolean>('editorHasSignatureHelpProvider', undefined);\n}\n\nexport class BareFontInfo {\n\t_bareFontInfoBrand: void;\n\n\tfontFamily: string;\n\tfontSize: number;\n\tlineHeight: number;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(opts: {\n\t\tfontFamily: string;\n\t\tfontSize: number;\n\t\tlineHeight: number;\n\t}) {\n\t\tthis.fontFamily = String(opts.fontFamily);\n\t\tthis.fontSize = opts.fontSize;\n\t\tthis.lineHeight = opts.lineHeight|0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic getId(): string {\n\t\treturn this.fontFamily + '-' + this.fontSize + '-' + this.lineHeight;\n\t}\n}\n\nexport class FontInfo extends BareFontInfo {\n\t_editorStylingBrand: void;\n\n\ttypicalHalfwidthCharacterWidth:number;\n\ttypicalFullwidthCharacterWidth:number;\n\tspaceWidth:number;\n\tmaxDigitWidth: number;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(opts:{\n\t\tfontFamily: string;\n\t\tfontSize: number;\n\t\tlineHeight: number;\n\t\ttypicalHalfwidthCharacterWidth:number;\n\t\ttypicalFullwidthCharacterWidth:number;\n\t\tspaceWidth:number;\n\t\tmaxDigitWidth: number;\n\t}) {\n\t\tsuper(opts);\n\t\tthis.typicalHalfwidthCharacterWidth = opts.typicalHalfwidthCharacterWidth;\n\t\tthis.typicalFullwidthCharacterWidth = opts.typicalFullwidthCharacterWidth;\n\t\tthis.spaceWidth = opts.spaceWidth;\n\t\tthis.maxDigitWidth = opts.maxDigitWidth;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other:FontInfo): boolean {\n\t\treturn (\n\t\t\tthis.fontFamily === other.fontFamily\n\t\t\t&& this.fontSize === other.fontSize\n\t\t\t&& this.lineHeight === other.lineHeight\n\t\t\t&& this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\n\t\t\t&& this.typicalFullwidthCharacterWidth === other.typicalFullwidthCharacterWidth\n\t\t\t&& this.spaceWidth === other.spaceWidth\n\t\t\t&& this.maxDigitWidth === other.maxDigitWidth\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clone(): FontInfo {\n\t\treturn new FontInfo(this);\n\t}\n}\n\n/**\n * @internal\n */\nexport interface IConfiguration {\n\tonDidChange: Event<IConfigurationChangedEvent>;\n\n\teditor:InternalEditorOptions;\n\n\tsetMaxLineNumber(maxLineNumber:number): void;\n}\n\n// --- view\n\n/**\n * @internal\n */\nexport interface IViewEventNames {\n\tModelFlushedEvent: string;\n\tLinesDeletedEvent: string;\n\tLinesInsertedEvent: string;\n\tLineChangedEvent: string;\n\tTokensChangedEvent: string;\n\tDecorationsChangedEvent: string;\n\tCursorPositionChangedEvent: string;\n\tCursorSelectionChangedEvent: string;\n\tRevealRangeEvent: string;\n\tLineMappingChangedEvent: string;\n}\n\n/**\n * @internal\n */\nexport var ViewEventNames = {\n\tModelFlushedEvent: 'modelFlushedEvent',\n\tLinesDeletedEvent: 'linesDeletedEvent',\n\tLinesInsertedEvent: 'linesInsertedEvent',\n\tLineChangedEvent: 'lineChangedEvent',\n\tTokensChangedEvent: 'tokensChangedEvent',\n\tDecorationsChangedEvent: 'decorationsChangedEvent',\n\tCursorPositionChangedEvent: 'cursorPositionChangedEvent',\n\tCursorSelectionChangedEvent: 'cursorSelectionChangedEvent',\n\tRevealRangeEvent: 'revealRangeEvent',\n\tLineMappingChangedEvent: 'lineMappingChangedEvent',\n\tScrollRequestEvent: 'scrollRequestEvent'\n};\n\nexport interface IScrollEvent {\n\tscrollTop: number;\n\tscrollLeft: number;\n\tscrollWidth: number;\n\tscrollHeight: number;\n\n\tscrollTopChanged: boolean;\n\tscrollLeftChanged: boolean;\n\tscrollWidthChanged: boolean;\n\tscrollHeightChanged: boolean;\n}\n\nexport interface INewScrollPosition {\n\tscrollLeft?: number;\n\tscrollTop?: number;\n}\n\n/**\n * @internal\n */\nexport interface IViewLinesDeletedEvent {\n\t/**\n\t * At what line the deletion began (inclusive).\n\t */\n\tfromLineNumber: number;\n\t/**\n\t * At what line the deletion stopped (inclusive).\n\t */\n\ttoLineNumber: number;\n}\n\n/**\n * @internal\n */\nexport interface IViewLinesInsertedEvent {\n\t/**\n\t * Before what line did the insertion begin\n\t */\n\tfromLineNumber: number;\n\t/**\n\t * `toLineNumber` - `fromLineNumber` + 1 denotes the number of lines that were inserted\n\t */\n\ttoLineNumber: number;\n}\n\n/**\n * @internal\n */\nexport interface IViewLineChangedEvent {\n\t/**\n\t * The line that has changed.\n\t */\n\tlineNumber: number;\n}\n\n/**\n * @internal\n */\nexport interface IViewTokensChangedEvent {\n\t/**\n\t * Start line number of range\n\t */\n\tfromLineNumber: number;\n\t/**\n\t * End line number of range\n\t */\n\ttoLineNumber: number;\n}\n\n/**\n * @internal\n */\nexport interface IViewDecorationsChangedEvent {\n\t/**\n\t * signals that at least one inline decoration has changed\n\t */\n\tinlineDecorationsChanged: boolean;\n}\n\n/**\n * @internal\n */\nexport interface IViewCursorPositionChangedEvent {\n\t/**\n\t * Primary cursor's position.\n\t */\n\tposition: Position;\n\t/**\n\t * Secondary cursors' position.\n\t */\n\tsecondaryPositions: Position[];\n\t/**\n\t * Is the primary cursor in the editable range?\n\t */\n\tisInEditableRange: boolean;\n}\n\n/**\n * @internal\n */\nexport interface IViewCursorSelectionChangedEvent {\n\t/**\n\t * The primary selection.\n\t */\n\tselection: Selection;\n\t/**\n\t * The secondary selections.\n\t */\n\tsecondarySelections: Selection[];\n}\n\n/**\n * @internal\n */\nexport interface IViewRevealRangeEvent {\n\t/**\n\t * Range to be reavealed.\n\t */\n\trange: Range;\n\n\tverticalType: VerticalRevealType;\n\t/**\n\t * If true: there should be a horizontal & vertical revealing\n\t * If false: there should be just a vertical revealing\n\t */\n\trevealHorizontal: boolean;\n}\n\n/**\n * @internal\n */\nexport interface IViewScrollRequestEvent {\n\tdeltaLines: number;\n}\n\n/**\n * @internal\n */\nexport interface IViewWhitespaceViewportData {\n\tid:number;\n\tafterLineNumber:number;\n\tverticalOffset:number;\n\theight:number;\n}\n\n/**\n * @internal\n */\nexport class Viewport {\n\t_viewportBrand: void;\n\n\ttop: number;\n\tleft: number;\n\twidth: number;\n\theight: number;\n\n\tconstructor(top:number, left:number, width:number, height:number) {\n\t\tthis.top = top|0;\n\t\tthis.left = left|0;\n\t\tthis.width = width|0;\n\t\tthis.height = height|0;\n\t}\n}\n\n/**\n * Description of an action contribution\n */\nexport interface IActionDescriptor {\n\t/**\n\t * An unique identifier of the contributed action.\n\t */\n\tid: string;\n\t/**\n\t * A label of the action that will be presented to the user.\n\t */\n\tlabel: string;\n\t/**\n\t * An array of keybindings for the action.\n\t */\n\tkeybindings?: number[];\n\t/**\n\t * The keybinding rule.\n\t */\n\tkeybindingContext?: string;\n\t/**\n\t * Method that will be executed when the action is triggered.\n\t * @param editor The editor instance is passed in as a convinience\n\t */\n\trun:(editor:ICommonCodeEditor)=>TPromise<void>;\n}\n\n/**\n * Data associated with an editor action contribution\n * @internal\n */\nexport interface IEditorActionDescriptorData {\n\tid:string;\n\tlabel:string;\n\talias?:string;\n}\n\n/**\n * @internal\n */\nexport type IEditorActionContributionCtor = IConstructorSignature2<IEditorActionDescriptorData, ICommonCodeEditor, IEditorContribution>;\n\n/**\n * @internal\n */\nexport type ICommonEditorContributionCtor = IConstructorSignature1<ICommonCodeEditor, IEditorContribution>;\n\n/**\n * An editor contribution descriptor that will be used to construct editor contributions\n * @internal\n */\nexport interface ICommonEditorContributionDescriptor {\n\t/**\n\t * Create an instance of the contribution\n\t */\n\tcreateInstance(instantiationService:IInstantiationService, editor:ICommonCodeEditor): IEditorContribution;\n}\n\nexport interface IEditorAction {\n\tid: string;\n\tlabel: string;\n\talias: string;\n\tisSupported():boolean;\n\trun(): TPromise<void>;\n}\n\n/**\n * An editor.\n */\nexport interface IEditor {\n\t/**\n\t * @deprecated. Please use `onDidChangeModelContent` instead.\n\t * An event emitted when the content of the current model has changed.\n\t * @internal\n\t */\n\tonDidChangeModelRawContent(listener: (e:IModelContentChangedEvent)=>void): IDisposable;\n\t/**\n\t * An event emitted when the content of the current model has changed.\n\t */\n\tonDidChangeModelContent(listener: (e:IModelContentChangedEvent2)=>void): IDisposable;\n\t/**\n\t * An event emitted when the language of the current model has changed.\n\t */\n\tonDidChangeModelMode(listener: (e:IModelModeChangedEvent)=>void): IDisposable;\n\t/**\n\t * An event emitted when the options of the current model has changed.\n\t */\n\tonDidChangeModelOptions(listener: (e:IModelOptionsChangedEvent)=>void): IDisposable;\n\t/**\n\t * An event emitted when the configuration of the editor has changed. (e.g. `editor.updateOptions()`)\n\t */\n\tonDidChangeConfiguration(listener: (e:IConfigurationChangedEvent)=>void): IDisposable;\n\t/**\n\t * An event emitted when the cursor position has changed.\n\t */\n\tonDidChangeCursorPosition(listener: (e:ICursorPositionChangedEvent)=>void): IDisposable;\n\t/**\n\t * An event emitted when the cursor selection has changed.\n\t */\n\tonDidChangeCursorSelection(listener: (e:ICursorSelectionChangedEvent)=>void): IDisposable;\n\t/**\n\t * An event emitted when the editor has been disposed.\n\t */\n\tonDidDispose(listener: ()=>void): IDisposable;\n\n\t/**\n\t * Dispose the editor.\n\t */\n\tdispose(): void;\n\n\t/**\n\t * Get a unique id for this editor instance.\n\t */\n\tgetId(): string;\n\n\t/**\n\t * Get the editor type. Please see `EditorType`.\n\t * This is to avoid an instanceof check\n\t */\n\tgetEditorType(): string;\n\n\t/**\n\t * Destroy the editor.\n\t * @internal\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Update the editor's options after the editor has been created.\n\t */\n\tupdateOptions(newOptions: IEditorOptions): void;\n\n\t/**\n\t * Indicates that the editor becomes visible.\n\t * @internal\n\t */\n\tonVisible(): void;\n\n\t/**\n\t * Indicates that the editor becomes hidden.\n\t * @internal\n\t */\n\tonHide(): void;\n\n\t/**\n\t * Instructs the editor to remeasure its container. This method should\n\t * be called when the container of the editor gets resized.\n\t */\n\tlayout(dimension?:IDimension): void;\n\n\t/**\n\t * Brings browser focus to the editor text\n\t */\n\tfocus(): void;\n\n\t/**\n\t * Returns true if this editor has keyboard focus (e.g. cursor is blinking).\n\t */\n\tisFocused(): boolean;\n\n\t/**\n\t * Add a new action to this editor.\n\t */\n\taddAction(descriptor:IActionDescriptor): void;\n\n\t/**\n\t * Returns all actions associated with this editor.\n\t */\n\tgetActions(): IEditorAction[];\n\n\t/**\n\t * Returns all actions associated with this editor.\n\t */\n\tgetSupportedActions(): IEditorAction[];\n\n\t/**\n\t * Saves current view state of the editor in a serializable object.\n\t */\n\tsaveViewState(): IEditorViewState;\n\n\t/**\n\t * Restores the view state of the editor from a serializable object generated by `saveViewState`.\n\t */\n\trestoreViewState(state: IEditorViewState): void;\n\n\t/**\n\t * Given a position, returns a column number that takes tab-widths into account.\n\t */\n\tgetVisibleColumnFromPosition(position:IPosition): number;\n\n\t/**\n\t * Returns the primary position of the cursor.\n\t */\n\tgetPosition(): Position;\n\n\t/**\n\t * Set the primary position of the cursor. This will remove any secondary cursors.\n\t * @param position New primary cursor's position\n\t */\n\tsetPosition(position:IPosition): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal a line.\n\t */\n\trevealLine(lineNumber: number): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal a line centered vertically.\n\t */\n\trevealLineInCenter(lineNumber: number): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal a line centered vertically only if it lies outside the viewport.\n\t */\n\trevealLineInCenterIfOutsideViewport(lineNumber: number): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a position.\n\t */\n\trevealPosition(position: IPosition): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a position centered vertically.\n\t */\n\trevealPositionInCenter(position: IPosition): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a position centered vertically only if it lies outside the viewport.\n\t */\n\trevealPositionInCenterIfOutsideViewport(position: IPosition): void;\n\n\t/**\n\t * Returns the primary selection of the editor.\n\t */\n\tgetSelection(): Selection;\n\n\t/**\n\t * Returns all the selections of the editor.\n\t */\n\tgetSelections(): Selection[];\n\n\t/**\n\t * Set the primary selection of the editor. This will remove any secondary cursors.\n\t * @param selection The new selection\n\t */\n\tsetSelection(selection:IRange): void;\n\t/**\n\t * Set the primary selection of the editor. This will remove any secondary cursors.\n\t * @param selection The new selection\n\t */\n\tsetSelection(selection:Range): void;\n\t/**\n\t * Set the primary selection of the editor. This will remove any secondary cursors.\n\t * @param selection The new selection\n\t */\n\tsetSelection(selection:ISelection): void;\n\t/**\n\t * Set the primary selection of the editor. This will remove any secondary cursors.\n\t * @param selection The new selection\n\t */\n\tsetSelection(selection:Selection): void;\n\n\t/**\n\t * Set the selections for all the cursors of the editor.\n\t * Cursors will be removed or added, as necessary.\n\t */\n\tsetSelections(selections:ISelection[]): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal lines.\n\t */\n\trevealLines(startLineNumber: number, endLineNumber: number): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal lines centered vertically.\n\t */\n\trevealLinesInCenter(lineNumber: number, endLineNumber: number): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal lines centered vertically only if it lies outside the viewport.\n\t */\n\trevealLinesInCenterIfOutsideViewport(lineNumber: number, endLineNumber: number): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a range.\n\t */\n\trevealRange(range: IRange): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a range centered vertically.\n\t */\n\trevealRangeInCenter(range: IRange): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a range centered vertically only if it lies outside the viewport.\n\t */\n\trevealRangeInCenterIfOutsideViewport(range: IRange): void;\n\n\n\t/**\n\t * Directly trigger a handler or an editor action.\n\t * @param source The source of the call.\n\t * @param handlerId The id of the handler or the id of a contribution.\n\t * @param payload Extra data to be sent to the handler.\n\t */\n\ttrigger(source:string, handlerId:string, payload:any): void;\n\n\t/**\n\t * Gets the current model attached to this editor.\n\t */\n\tgetModel(): IEditorModel;\n\n\t/**\n\t * Sets the current model attached to this editor.\n\t * If the previous model was created by the editor via the value key in the options\n\t * literal object, it will be destroyed. Otherwise, if the previous model was set\n\t * via setModel, or the model key in the options literal object, the previous model\n\t * will not be destroyed.\n\t * It is safe to call setModel(null) to simply detach the current model from the editor.\n\t */\n\tsetModel(model:IEditorModel): void;\n\n\t/**\n\t * Change the decorations. All decorations added through this changeAccessor\n\t * will get the ownerId of the editor (meaning they will not show up in other\n\t * editors).\n\t * @see IModel.changeDecorations\n\t * @internal\n\t */\n\tchangeDecorations(callback: (changeAccessor:IModelDecorationsChangeAccessor)=>any): any;\n}\n\n/**\n * @internal\n */\nexport interface ICodeEditorState {\n\tvalidate(editor:ICommonCodeEditor): boolean;\n}\n\n/**\n * @internal\n */\nexport enum CodeEditorStateFlag {\n\tValue,\n\tSelection,\n\tPosition,\n\tScroll\n}\n\n/**\n * An editor contribution that gets created every time a new editor gets created and gets disposed when the editor gets disposed.\n */\nexport interface IEditorContribution {\n\t/**\n\t * Get a unique identifier for this contribution.\n\t */\n\tgetId(): string;\n\t/**\n\t * Dispose this contribution.\n\t */\n\tdispose(): void;\n\t/**\n\t * Store view state.\n\t */\n\tsaveViewState?(): any;\n\t/**\n\t * Restore view state.\n\t */\n\trestoreViewState?(state: any): void;\n}\n\n/**\n * @internal\n */\nexport interface IThemeDecorationRenderOptions {\n\tbackgroundColor?: string;\n\n\toutline?: string;\n\toutlineColor?: string;\n\toutlineStyle?: string;\n\toutlineWidth?: string;\n\n\tborder?:string;\n\tborderColor?: string;\n\tborderRadius?: string;\n\tborderSpacing?: string;\n\tborderStyle?: string;\n\tborderWidth?: string;\n\n\ttextDecoration?: string;\n\tcursor?: string;\n\tcolor?: string;\n\tletterSpacing?: string;\n\n\tgutterIconPath?: string;\n\tgutterIconSize?: string;\n\n\toverviewRulerColor?: string;\n\n\tbefore?: IContentDecorationRenderOptions;\n\tafter?: IContentDecorationRenderOptions;\n}\n\n/**\n * @internal\n */\nexport interface IContentDecorationRenderOptions {\n\tcontentText?: string;\n\tcontentIconPath?: string;\n\n\tborder?: string;\n\ttextDecoration?: string;\n\tcolor?: string;\n\tbackgroundColor?: string;\n\n\tmargin?: string;\n\twidth?: string;\n\theight?: string;\n}\n\n/**\n * @internal\n */\nexport interface IDecorationRenderOptions extends IThemeDecorationRenderOptions {\n\tisWholeLine?: boolean;\n\toverviewRulerLane?: OverviewRulerLane;\n\n\tlight?: IThemeDecorationRenderOptions;\n\tdark?: IThemeDecorationRenderOptions;\n}\n\n/**\n * @internal\n */\nexport interface IThemeDecorationInstanceRenderOptions {\n\tbefore?: IContentDecorationRenderOptions;\n\tafter?: IContentDecorationRenderOptions;\n}\n\n/**\n * @internal\n */\nexport interface IDecorationInstanceRenderOptions extends IThemeDecorationInstanceRenderOptions {\n\tlight?: IThemeDecorationInstanceRenderOptions;\n\tdark?: IThemeDecorationInstanceRenderOptions;\n}\n\n/**\n * @internal\n */\nexport interface IDecorationOptions {\n\trange: IRange;\n\thoverMessage?: MarkedString | MarkedString[];\n\trenderOptions? : IDecorationInstanceRenderOptions;\n}\n\n\nexport interface ICommonCodeEditor extends IEditor {\n\t/**\n\t * An event emitted when the model of this editor has changed (e.g. `editor.setModel()`).\n\t */\n\tonDidChangeModel(listener: (e:IModelChangedEvent)=>void): IDisposable;\n\t/**\n\t * @internal\n\t */\n\tonDidChangeModelModeSupport(listener: (e:IModeSupportChangedEvent)=>void): IDisposable;\n\t/**\n\t * An event emitted when the decorations of the current model have changed.\n\t */\n\tonDidChangeModelDecorations(listener: (e:IModelDecorationsChangedEvent)=>void): IDisposable;\n\t/**\n\t * An event emitted when the text inside this editor gained focus (i.e. cursor blinking).\n\t */\n\tonDidFocusEditorText(listener: ()=>void): IDisposable;\n\t/**\n\t * An event emitted when the text inside this editor lost focus.\n\t */\n\tonDidBlurEditorText(listener: ()=>void): IDisposable;\n\t/**\n\t * An event emitted when the text inside this editor or an editor widget gained focus.\n\t */\n\tonDidFocusEditor(listener: ()=>void): IDisposable;\n\t/**\n\t * An event emitted when the text inside this editor or an editor widget lost focus.\n\t */\n\tonDidBlurEditor(listener: ()=>void): IDisposable;\n\n\t/**\n\t * Returns true if this editor or one of its widgets has keyboard focus.\n\t */\n\thasWidgetFocus(): boolean;\n\n\t/**\n\t * Get a contribution of this editor.\n\t * @id Unique identifier of the contribution.\n\t * @return The contribution or null if contribution not found.\n\t */\n\tgetContribution(id: string): IEditorContribution;\n\n\t/**\n\t * @internal\n\t */\n\tcaptureState(...flags:CodeEditorStateFlag[]): ICodeEditorState;\n\n\t/**\n\t * Execute `fn` with the editor's services.\n\t * @internal\n\t */\n\tinvokeWithinContext<T>(fn:(accessor:ServicesAccessor)=>T): T;\n\n\t/**\n\t * Type the getModel() of IEditor.\n\t */\n\tgetModel(): IModel;\n\n\t/**\n\t * Returns the current editor's configuration\n\t */\n\tgetConfiguration(): InternalEditorOptions;\n\n\t/**\n\t * Returns the 'raw' editor's configuration, as it was applied over the defaults, but without any computed members.\n\t * @internal\n\t */\n\tgetRawConfiguration(): IEditorOptions;\n\n\t/**\n\t * Get value of the current model attached to this editor.\n\t * @see IModel.getValue\n\t */\n\tgetValue(options?: { preserveBOM: boolean; lineEnding: string; }): string;\n\n\t/**\n\t * Set the value of the current model attached to this editor.\n\t * @see IModel.setValue\n\t */\n\tsetValue(newValue: string): void;\n\n\t/**\n\t * Get the scrollWidth of the editor's viewport.\n\t */\n\tgetScrollWidth(): number;\n\t/**\n\t * Get the scrollLeft of the editor's viewport.\n\t */\n\tgetScrollLeft(): number;\n\n\t/**\n\t * Get the scrollHeight of the editor's viewport.\n\t */\n\tgetScrollHeight(): number;\n\t/**\n\t * Get the scrollTop of the editor's viewport.\n\t */\n\tgetScrollTop(): number;\n\n\t/**\n\t * Change the scrollLeft of the editor's viewport.\n\t */\n\tsetScrollLeft(newScrollLeft: number): void;\n\t/**\n\t * Change the scrollTop of the editor's viewport.\n\t */\n\tsetScrollTop(newScrollTop: number): void;\n\t/**\n\t * Change the scroll position of the editor's viewport.\n\t */\n\tsetScrollPosition(position: INewScrollPosition): void;\n\n\t/**\n\t * Get an action that is a contribution to this editor.\n\t * @id Unique identifier of the contribution.\n\t * @return The action or null if action not found.\n\t */\n\tgetAction(id: string): IEditorAction;\n\n\t/**\n\t * Execute a command on the editor.\n\t * @param source The source of the call.\n\t * @param command The command to execute\n\t */\n\texecuteCommand(source: string, command: ICommand): void;\n\n\t/**\n\t * Push an \"undo stop\" in the undo-redo stack.\n\t */\n\tpushUndoStop(): boolean;\n\n\t/**\n\t * Execute a command on the editor.\n\t * @param source The source of the call.\n\t * @param command The command to execute\n\t */\n\texecuteEdits(source: string, edits: IIdentifiedSingleEditOperation[]): boolean;\n\n\t/**\n\t * Execute multiple (concommitent) commands on the editor.\n\t * @param source The source of the call.\n\t * @param command The commands to execute\n\t */\n\texecuteCommands(source: string, commands: ICommand[]): void;\n\n\t/**\n\t * Get all the decorations on a line (filtering out decorations from other editors).\n\t */\n\tgetLineDecorations(lineNumber: number): IModelDecoration[];\n\n\t/**\n\t * All decorations added through this call will get the ownerId of this editor.\n\t * @see IModel.deltaDecorations\n\t */\n\tdeltaDecorations(oldDecorations: string[], newDecorations: IModelDeltaDecoration[]): string[];\n\n\t/**\n\t * @internal\n\t */\n\tsetDecorations(decorationTypeKey: string, ranges: IDecorationOptions[]): void;\n\n\t/**\n\t * @internal\n\t */\n\tremoveDecorations(decorationTypeKey:string): void;\n\n\t/**\n\t * Get the layout info for the editor.\n\t */\n\tgetLayoutInfo(): EditorLayoutInfo;\n\n\t/**\n\t * Prevent the editor from sending a widgetFocusLost event,\n\t * set it in a state where it believes that focus is in one of its widgets.\n\t * Use this method with care and always add a matching `endForcedWidgetFocus`\n\t * @internal\n\t */\n\tbeginForcedWidgetFocus(): void;\n\n\t/**\n\t * End the preventing of sending a widgetFocusLost event.\n\t * @internal\n\t */\n\tendForcedWidgetFocus(): void;\n\n\t/**\n\t * This listener is notified when a keypress produces a visible character.\n\t * The callback should not do operations on the view, as the view might not be updated to reflect previous typed characters.\n\t * @param character Character to listen to.\n\t * @param callback Function to call when `character` is typed.\n\t * @internal\n\t */\n\taddTypingListener(character: string, callback: () => void): IDisposable;\n\n}\n\nexport interface ICommonDiffEditor extends IEditor {\n\t/**\n\t * An event emitted when the diff information computed by this diff editor has been updated.\n\t */\n\tonDidUpdateDiff(listener: ()=>void): IDisposable;\n\n\t/**\n\t * Type the getModel() of IEditor.\n\t */\n\tgetModel(): IDiffEditorModel;\n\n\t/**\n\t * Get the `original` editor.\n\t */\n\tgetOriginalEditor(): ICommonCodeEditor;\n\n\t/**\n\t * Get the `modified` editor.\n\t */\n\tgetModifiedEditor(): ICommonCodeEditor;\n\n\t/**\n\t * Get the computed diff information.\n\t */\n\tgetLineChanges(): ILineChange[];\n\n\t/**\n\t * Get information based on computed diff about a line number from the original model.\n\t * If the diff computation is not finished or the model is missing, will return null.\n\t * @internal\n\t */\n\tgetDiffLineInformationForOriginal(lineNumber:number): IDiffLineInformation;\n\n\t/**\n\t * Get information based on computed diff about a line number from the modified model.\n\t * If the diff computation is not finished or the model is missing, will return null.\n\t * @internal\n\t */\n\tgetDiffLineInformationForModified(lineNumber:number): IDiffLineInformation;\n\n\t/**\n\t * @see ICodeEditor.getValue\n\t */\n\tgetValue(options?:{ preserveBOM:boolean; lineEnding:string; }): string;\n\n\t/**\n\t * Returns whether the diff editor is ignoring trim whitespace or not.\n\t * @internal\n\t */\n\tignoreTrimWhitespace: boolean;\n\n\t/**\n\t * Returns whether the diff editor is rendering side by side or not.\n\t * @internal\n\t */\n\trenderSideBySide: boolean;\n}\n\n/**\n * The type of the `IEditor`.\n */\nexport var EditorType = {\n\tICodeEditor: 'vs.editor.ICodeEditor',\n\tIDiffEditor: 'vs.editor.IDiffEditor'\n};\n\n/**\n * @internal\n */\nexport var ClassName = {\n\tEditorWarningDecoration: 'greensquiggly',\n\tEditorErrorDecoration: 'redsquiggly'\n};\n\n/**\n * @internal\n */\nexport var EventType = {\n\tDisposed: 'disposed',\n\n\tConfigurationChanged: 'configurationChanged',\n\n\tModelDispose: 'modelDispose',\n\n\tModelChanged: 'modelChanged',\n\n\tModelTokensChanged: 'modelTokensChanged',\n\tModelModeChanged: 'modelsModeChanged',\n\tModelModeSupportChanged: 'modelsModeSupportChanged',\n\tModelOptionsChanged: 'modelOptionsChanged',\n\tModelRawContentChanged: 'contentChanged',\n\tModelContentChanged2: 'contentChanged2',\n\tModelRawContentChangedFlush: 'flush',\n\tModelRawContentChangedLinesDeleted: 'linesDeleted',\n\tModelRawContentChangedLinesInserted: 'linesInserted',\n\tModelRawContentChangedLineChanged: 'lineChanged',\n\n\tEditorTextBlur: 'blur',\n\tEditorTextFocus: 'focus',\n\tEditorFocus: 'widgetFocus',\n\tEditorBlur: 'widgetBlur',\n\n\tModelDecorationsChanged: 'decorationsChanged',\n\n\tCursorPositionChanged: 'positionChanged',\n\tCursorSelectionChanged: 'selectionChanged',\n\tCursorRevealRange: 'revealRange',\n\tCursorScrollRequest: 'scrollRequest',\n\n\tViewFocusGained: 'focusGained',\n\tViewFocusLost: 'focusLost',\n\tViewFocusChanged: 'focusChanged',\n\tViewScrollChanged: 'scrollChanged',\n\tViewZonesChanged: 'zonesChanged',\n\n\tViewLayoutChanged: 'viewLayoutChanged',\n\n\tContextMenu: 'contextMenu',\n\tMouseDown: 'mousedown',\n\tMouseUp: 'mouseup',\n\tMouseMove: 'mousemove',\n\tMouseLeave: 'mouseleave',\n\tKeyDown: 'keydown',\n\tKeyUp: 'keyup',\n\n\tEditorLayout: 'editorLayout',\n\n\tDiffUpdated: 'diffUpdated'\n};\n\n/**\n * Positions in the view for cursor move command.\n */\nexport const CursorMovePosition = {\n\tLeft: 'left',\n\tRight: 'right',\n\tUp: 'up',\n\tDown: 'down',\n\n\tWrappedLineStart: 'wrappedLineStart',\n\tWrappedLineFirstNonWhitespaceCharacter: 'wrappedLineFirstNonWhitespaceCharacter',\n\tWrappedLineColumnCenter: 'wrappedLineColumnCenter',\n\tWrappedLineEnd: 'wrappedLineEnd',\n\tWrappedLineLastNonWhitespaceCharacter: 'wrappedLineLastNonWhitespaceCharacter',\n\n\tViewPortTop: 'viewPortTop',\n\tViewPortCenter: 'viewPortCenter',\n\tViewPortBottom: 'viewPortBottom',\n};\n\n/**\n * Units for Cursor move 'by' argument\n */\nexport const CursorMoveByUnit = {\n\tLine: 'line',\n\tWrappedLine: 'wrappedLine',\n\tCharacter: 'character',\n\tHalfLine: 'halfLine'\n};\n\n/**\n * Arguments for Cursor move command\n */\nexport interface CursorMoveArguments {\n\tto: string;\n\tselect?: boolean;\n\tby?: string;\n\tvalue?: number;\n};\n\n/**\n * @internal\n */\nlet isCursorMoveArgs= function(arg): boolean  {\n\tif (!types.isObject(arg)) {\n\t\treturn false;\n\t}\n\n\tlet cursorMoveArg: CursorMoveArguments = arg;\n\n\tif (!types.isString(cursorMoveArg.to)) {\n\t\treturn false;\n\t}\n\n\tif (!types.isUndefined(cursorMoveArg.select) && !types.isBoolean(cursorMoveArg.select)) {\n\t\treturn false;\n\t}\n\n\tif (!types.isUndefined(cursorMoveArg.by) && !types.isString(cursorMoveArg.by)) {\n\t\treturn false;\n\t}\n\n\tif (!types.isUndefined(cursorMoveArg.value) && !types.isNumber(cursorMoveArg.value)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\n/**\n * Directions in the view for editor scroll command.\n */\nexport const EditorScrollDirection = {\n\tUp: 'up',\n\tDown: 'down',\n};\n\n/**\n * Units for editor scroll 'by' argument\n */\nexport const EditorScrollByUnit = {\n\tLine: 'line',\n\tWrappedLine: 'wrappedLine',\n\tPage: 'page',\n\tHalfPage: 'halfPage'\n};\n\n/**\n * Arguments for editor scroll command\n */\nexport interface EditorScrollArguments {\n\tto: string;\n\tby?: string;\n\tvalue?: number;\n};\n\n/**\n * @internal\n */\nlet isEditorScrollArgs= function(arg): boolean  {\n\tif (!types.isObject(arg)) {\n\t\treturn false;\n\t}\n\n\tlet scrollArg: EditorScrollArguments = arg;\n\n\tif (!types.isString(scrollArg.to)) {\n\t\treturn false;\n\t}\n\n\tif (!types.isUndefined(scrollArg.by) && !types.isString(scrollArg.by)) {\n\t\treturn false;\n\t}\n\n\tif (!types.isUndefined(scrollArg.value) && !types.isNumber(scrollArg.value)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\n/**\n * @internal\n */\nexport var CommandDescription = {\n\tCursorMove: <ICommandHandlerDescription>{\n\t\tdescription: 'Move cursor to a logical position in the view',\n\t\targs: [\n\t\t\t{\n\t\t\t\tname: 'Cursor move argument object',\n\t\t\t\tdescription: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t'to': A mandatory logical position value providing where to move the cursor.\n\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'left', 'right', 'up', 'down',\n\t\t\t\t\t\t'wrappedLineStart', 'wrappedLineFirstNonWhitespaceCharacter', 'wrappedLineColumnCenter', 'wrappedLineEnd' ,'wrappedLineLastNonWhitespaceCharacter',\n\t\t\t\t\t\t'viewPortTop', 'viewPortCenter', 'viewPortBottom'\n\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t'by': Unit to move. Default is computed based on 'to' value.\n\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'line', 'wrappedLine', 'character', 'halfLine'\n\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t'value': Number of units to move. Default is '1'.\n\t\t\t\t\t'select': If 'true' makes the selection. Default is 'false'.\n\t\t\t\t`,\n\t\t\t\tconstraint: isCursorMoveArgs\n\t\t\t}\n\t\t]\n\t},\n\tEditorScroll: <ICommandHandlerDescription>{\n\t\tdescription: 'Scroll editor in the given direction',\n\t\targs: [\n\t\t\t{\n\t\t\t\tname: 'Editor scroll argument object',\n\t\t\t\tdescription: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t'to': A mandatory direction value.\n\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'up', 'down'\n\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t'by': Unit to move. Default is computed based on 'to' value.\n\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'line', 'wrappedLine', page', 'halfPage'\n\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t'value': Number of units to move. Default is '1'.\n\t\t\t\t`,\n\t\t\t\tconstraint: isEditorScrollArgs\n\t\t\t}\n\t\t]\n\t}\n};\n\n/**\n * Built-in commands.\n */\nexport var Handler = {\n\tExecuteCommand:\t\t\t\t'executeCommand',\n\tExecuteCommands:\t\t\t'executeCommands',\n\n\tCursorLeft:\t\t\t\t\t'cursorLeft',\n\tCursorLeftSelect:\t\t\t'cursorLeftSelect',\n\n\tCursorWordLeft:\t\t\t\t'cursorWordLeft',\n\tCursorWordStartLeft:\t\t'cursorWordStartLeft',\n\tCursorWordEndLeft:\t\t\t'cursorWordEndLeft',\n\n\tCursorWordLeftSelect:\t\t'cursorWordLeftSelect',\n\tCursorWordStartLeftSelect:\t'cursorWordStartLeftSelect',\n\tCursorWordEndLeftSelect:\t'cursorWordEndLeftSelect',\n\n\tCursorRight:\t\t\t\t'cursorRight',\n\tCursorRightSelect:\t\t\t'cursorRightSelect',\n\n\tCursorWordRight:\t\t\t'cursorWordRight',\n\tCursorWordStartRight:\t\t'cursorWordStartRight',\n\tCursorWordEndRight:\t\t\t'cursorWordEndRight',\n\n\tCursorWordRightSelect:\t\t'cursorWordRightSelect',\n\tCursorWordStartRightSelect:\t'cursorWordStartRightSelect',\n\tCursorWordEndRightSelect:\t'cursorWordEndRightSelect',\n\n\tCursorUp:\t\t\t\t\t'cursorUp',\n\tCursorUpSelect:\t\t\t\t'cursorUpSelect',\n\tCursorDown:\t\t\t\t\t'cursorDown',\n\tCursorDownSelect:\t\t\t'cursorDownSelect',\n\n\tCursorPageUp:\t\t\t\t'cursorPageUp',\n\tCursorPageUpSelect:\t\t\t'cursorPageUpSelect',\n\tCursorPageDown:\t\t\t\t'cursorPageDown',\n\tCursorPageDownSelect:\t\t'cursorPageDownSelect',\n\n\tCursorHome:\t\t\t\t\t'cursorHome',\n\tCursorHomeSelect:\t\t\t'cursorHomeSelect',\n\n\tCursorEnd:\t\t\t\t\t'cursorEnd',\n\tCursorEndSelect:\t\t\t'cursorEndSelect',\n\n\tExpandLineSelection:\t\t'expandLineSelection',\n\n\tCursorTop:\t\t\t\t\t'cursorTop',\n\tCursorTopSelect:\t\t\t'cursorTopSelect',\n\tCursorBottom:\t\t\t\t'cursorBottom',\n\tCursorBottomSelect:\t\t\t'cursorBottomSelect',\n\n\tCursorColumnSelectLeft:\t\t'cursorColumnSelectLeft',\n\tCursorColumnSelectRight:\t'cursorColumnSelectRight',\n\tCursorColumnSelectUp:\t\t'cursorColumnSelectUp',\n\tCursorColumnSelectPageUp:\t'cursorColumnSelectPageUp',\n\tCursorColumnSelectDown:\t\t'cursorColumnSelectDown',\n\tCursorColumnSelectPageDown:\t'cursorColumnSelectPageDown',\n\n\tCursorMove:\t\t\t\t\t'cursorMove',\n\n\tAddCursorDown:\t\t\t\t'addCursorDown',\n\tAddCursorUp:\t\t\t\t'addCursorUp',\n\tCursorUndo:\t\t\t\t\t'cursorUndo',\n\tMoveTo:\t\t\t\t\t\t'moveTo',\n\tMoveToSelect:\t\t\t\t'moveToSelect',\n\tColumnSelect:\t\t\t\t'columnSelect',\n\tCreateCursor:\t\t\t\t'createCursor',\n\tLastCursorMoveToSelect:\t\t'lastCursorMoveToSelect',\n\n\tJumpToBracket:\t\t\t\t'jumpToBracket',\n\n\tType:\t\t\t\t\t\t'type',\n\tReplacePreviousChar:\t\t'replacePreviousChar',\n\tCompositionStart:\t\t\t'compositionStart',\n\tCompositionEnd:\t\t\t\t'compositionEnd',\n\tPaste:\t\t\t\t\t\t'paste',\n\n\tTab:\t\t\t\t\t\t'tab',\n\tIndent:\t\t\t\t\t\t'indent',\n\tOutdent:\t\t\t\t\t'outdent',\n\n\tDeleteLeft:\t\t\t\t\t'deleteLeft',\n\tDeleteRight:\t\t\t\t'deleteRight',\n\n\tDeleteWordLeft:\t\t\t\t'deleteWordLeft',\n\tDeleteWordStartLeft:\t\t'deleteWordStartLeft',\n\tDeleteWordEndLeft:\t\t\t'deleteWordEndLeft',\n\n\tDeleteWordRight:\t\t\t'deleteWordRight',\n\tDeleteWordStartRight:\t\t'deleteWordStartRight',\n\tDeleteWordEndRight:\t\t\t'deleteWordEndRight',\n\n\tDeleteAllLeft:\t\t\t\t'deleteAllLeft',\n\tDeleteAllRight:\t\t\t\t'deleteAllRight',\n\n\tRemoveSecondaryCursors: \t'removeSecondaryCursors',\n\tCancelSelection:\t\t\t'cancelSelection',\n\n\tCut:\t\t\t\t\t\t'cut',\n\n\tUndo:\t\t\t\t\t\t'undo',\n\tRedo:\t\t\t\t\t\t'redo',\n\n\tWordSelect:\t\t\t\t\t'wordSelect',\n\tWordSelectDrag:\t\t\t\t'wordSelectDrag',\n\tLastCursorWordSelect: \t\t'lastCursorWordSelect',\n\n\tLineSelect:\t\t\t\t\t'lineSelect',\n\tLineSelectDrag:\t\t\t\t'lineSelectDrag',\n\tLastCursorLineSelect:\t\t'lastCursorLineSelect',\n\tLastCursorLineSelectDrag:\t'lastCursorLineSelectDrag',\n\tLineInsertBefore:\t\t\t'lineInsertBefore',\n\tLineInsertAfter:\t\t\t'lineInsertAfter',\n\tLineBreakInsert:\t\t\t'lineBreakInsert',\n\n\tSelectAll:\t\t\t\t\t'selectAll',\n\n\tEditorScroll:\t\t\t\t'editorScroll',\n\n\tScrollLineUp:\t\t\t\t'scrollLineUp',\n\tScrollLineDown:\t\t\t\t'scrollLineDown',\n\n\tScrollPageUp:\t\t\t\t'scrollPageUp',\n\tScrollPageDown:\t\t\t\t'scrollPageDown'\n};\n\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorStyle {\n\t/**\n\t * As a vertical line (sitting between two characters).\n\t */\n\tLine = 1,\n\t/**\n\t * As a block (sitting on top of a character).\n\t */\n\tBlock = 2,\n\t/**\n\t * As a horizontal line (sitting under a character).\n\t */\n\tUnderline = 3\n}\n\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorBlinkingStyle {\n\t/**\n\t * Hidden\n\t */\n\tHidden = 0,\n\t/**\n\t * Blinking\n\t */\n\tBlink = 1,\n\t/**\n\t * Blinking with smooth fading\n\t */\n\tSmooth = 2,\n\t/**\n\t * Blinking with prolonged filled state and smooth fading\n\t */\n\tPhase = 3,\n\t/**\n\t * Expand collapse animation on the y axis\n\t */\n\tExpand = 4,\n\t/**\n\t * No-Blinking\n\t */\n\tSolid = 5\n}\n\n/**\n * @internal\n */\nexport function cursorStyleToString(cursorStyle:TextEditorCursorStyle): string {\n\tif (cursorStyle === TextEditorCursorStyle.Line) {\n\t\treturn 'line';\n\t} else if (cursorStyle === TextEditorCursorStyle.Block) {\n\t\treturn 'block';\n\t} else if (cursorStyle === TextEditorCursorStyle.Underline) {\n\t\treturn 'underline';\n\t} else {\n\t\tthrow new Error('cursorStyleToString: Unknown cursorStyle');\n\t}\n}\n\n/**\n * @internal\n */\nexport class ColorZone {\n\t_colorZoneBrand: void;\n\n\tfrom: number;\n\tto: number;\n\tcolorId: number;\n\tposition: OverviewRulerLane;\n\n\tconstructor(from:number, to:number, colorId:number, position: OverviewRulerLane) {\n\t\tthis.from = from|0;\n\t\tthis.to = to|0;\n\t\tthis.colorId = colorId|0;\n\t\tthis.position = position|0;\n\t}\n}\n\n/**\n * A zone in the overview ruler\n * @internal\n */\nexport class OverviewRulerZone {\n\t_overviewRulerZoneBrand: void;\n\n\tstartLineNumber: number;\n\tendLineNumber: number;\n\tposition: OverviewRulerLane;\n\tforceHeight: number;\n\n\tprivate _color: string;\n\tprivate _darkColor: string;\n\n\tprivate _colorZones: ColorZone[];\n\n\tconstructor(\n\t\tstartLineNumber: number, endLineNumber: number,\n\t\tposition: OverviewRulerLane,\n\t\tforceHeight: number,\n\t\tcolor: string, darkColor: string\n\t) {\n\t\tthis.startLineNumber = startLineNumber;\n\t\tthis.endLineNumber = endLineNumber;\n\t\tthis.position = position;\n\t\tthis.forceHeight = forceHeight;\n\t\tthis._color = color;\n\t\tthis._darkColor = darkColor;\n\t\tthis._colorZones = null;\n\t}\n\n\tpublic getColor(useDarkColor:boolean): string {\n\t\tif (useDarkColor) {\n\t\t\treturn this._darkColor;\n\t\t}\n\t\treturn this._color;\n\t}\n\n\tpublic equals(other:OverviewRulerZone): boolean {\n\t\treturn (\n\t\t\tthis.startLineNumber === other.startLineNumber\n\t\t\t&& this.endLineNumber === other.endLineNumber\n\t\t\t&& this.position === other.position\n\t\t\t&& this.forceHeight === other.forceHeight\n\t\t\t&& this._color === other._color\n\t\t\t&& this._darkColor === other._darkColor\n\t\t);\n\t}\n\n\tpublic compareTo(other:OverviewRulerZone): number {\n\t\tif (this.startLineNumber === other.startLineNumber) {\n\t\t\tif (this.endLineNumber === other.endLineNumber) {\n\t\t\t\tif (this.forceHeight === other.forceHeight) {\n\t\t\t\t\tif (this.position === other.position) {\n\t\t\t\t\t\tif (this._darkColor === other._darkColor) {\n\t\t\t\t\t\t\tif (this._color === other._color) {\n\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn this._color < other._color ? -1 : 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this._darkColor < other._darkColor ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.position - other.position;\n\t\t\t\t}\n\t\t\t\treturn this.forceHeight - other.forceHeight;\n\t\t\t}\n\t\t\treturn this.endLineNumber - other.endLineNumber;\n\t\t}\n\t\treturn this.startLineNumber - other.startLineNumber;\n\t}\n\n\tpublic setColorZones(colorZones:ColorZone[]): void {\n\t\tthis._colorZones = colorZones;\n\t}\n\n\tpublic getColorZones(): ColorZone[] {\n\t\treturn this._colorZones;\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {OrderGuaranteeEventEmitter} from 'vs/base/common/eventEmitter';\nimport * as strings from 'vs/base/common/strings';\nimport {Position} from 'vs/editor/common/core/position';\nimport {Range} from 'vs/editor/common/core/range';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {ModelLine} from 'vs/editor/common/model/modelLine';\nimport {guessIndentation} from 'vs/editor/common/model/indentationGuesser';\nimport {DEFAULT_INDENTATION, DEFAULT_TRIM_AUTO_WHITESPACE} from 'vs/editor/common/config/defaultConfig';\nimport {PrefixSumComputer} from 'vs/editor/common/viewModel/prefixSumComputer';\nimport {IndentRange, computeRanges} from 'vs/editor/common/model/indentRanges';\n\nconst LIMIT_FIND_COUNT = 999;\nexport const LONG_LINE_BOUNDARY = 1000;\n\nexport interface IParsedSearchRequest {\n\tregex: RegExp;\n\tisMultiline: boolean;\n}\n\nexport class TextModel extends OrderGuaranteeEventEmitter implements editorCommon.ITextModel {\n\tprivate static MODEL_SYNC_LIMIT = 5 * 1024 * 1024; // 5 MB\n\tprivate static MODEL_TOKENIZATION_LIMIT = 20 * 1024 * 1024; // 20 MB\n\n\tpublic static DEFAULT_CREATION_OPTIONS: editorCommon.ITextModelCreationOptions = {\n\t\ttabSize: DEFAULT_INDENTATION.tabSize,\n\t\tinsertSpaces: DEFAULT_INDENTATION.insertSpaces,\n\t\tdetectIndentation: false,\n\t\tdefaultEOL: editorCommon.DefaultEndOfLine.LF,\n\t\ttrimAutoWhitespace: DEFAULT_TRIM_AUTO_WHITESPACE,\n\t};\n\n\t/*protected*/ _lines:ModelLine[];\n\tprotected _EOL:string;\n\tprotected _isDisposed:boolean;\n\tprotected _isDisposing:boolean;\n\tprotected _options: editorCommon.ITextModelResolvedOptions;\n\tprotected _lineStarts: PrefixSumComputer;\n\tprivate _indentRanges: IndentRange[];\n\n\tprivate _versionId:number;\n\t/**\n\t * Unlike, versionId, this can go down (via undo) or go to previous values (via redo)\n\t */\n\tprivate _alternativeVersionId: number;\n\tprivate _BOM:string;\n\n\tprivate _shouldSimplifyMode: boolean;\n\tprivate _shouldDenyMode: boolean;\n\n\tconstructor(allowedEventTypes:string[], rawText:editorCommon.IRawText) {\n\t\tallowedEventTypes.push(editorCommon.EventType.ModelRawContentChanged, editorCommon.EventType.ModelOptionsChanged);\n\t\tsuper(allowedEventTypes);\n\n\t\tthis._shouldSimplifyMode = (rawText.length > TextModel.MODEL_SYNC_LIMIT);\n\t\tthis._shouldDenyMode = (rawText.length > TextModel.MODEL_TOKENIZATION_LIMIT);\n\n\t\tthis._options = rawText.options;\n\t\tthis._constructLines(rawText);\n\t\tthis._setVersionId(1);\n\t\tthis._isDisposed = false;\n\t\tthis._isDisposing = false;\n\t}\n\n\tpublic isTooLargeForHavingAMode(): boolean {\n\t\treturn this._shouldDenyMode;\n\t}\n\n\tpublic isTooLargeForHavingARichMode(): boolean {\n\t\treturn this._shouldSimplifyMode;\n\t}\n\n\tpublic getOptions(): editorCommon.ITextModelResolvedOptions {\n\t\treturn this._options;\n\t}\n\n\tpublic updateOptions(newOpts:editorCommon.ITextModelUpdateOptions): void {\n\t\tlet somethingChanged = false;\n\t\tlet changed:editorCommon.IModelOptionsChangedEvent = {\n\t\t\ttabSize: false,\n\t\t\tinsertSpaces: false,\n\t\t\ttrimAutoWhitespace: false\n\t\t};\n\n\t\tif (typeof newOpts.insertSpaces !== 'undefined') {\n\t\t\tif (this._options.insertSpaces !== newOpts.insertSpaces) {\n\t\t\t\tsomethingChanged = true;\n\t\t\t\tchanged.insertSpaces = true;\n\t\t\t\tthis._options.insertSpaces = newOpts.insertSpaces;\n\t\t\t}\n\t\t}\n\t\tif (typeof newOpts.tabSize !== 'undefined') {\n\t\t\tlet newTabSize = newOpts.tabSize | 0;\n\t\t\tif (this._options.tabSize !== newTabSize) {\n\t\t\t\tsomethingChanged = true;\n\t\t\t\tchanged.tabSize = true;\n\t\t\t\tthis._options.tabSize = newTabSize;\n\n\t\t\t\tfor (let i = 0, len = this._lines.length; i < len; i++) {\n\t\t\t\t\tthis._lines[i].updateTabSize(newTabSize);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (typeof newOpts.trimAutoWhitespace !== 'undefined') {\n\t\t\tif (this._options.trimAutoWhitespace !== newOpts.trimAutoWhitespace) {\n\t\t\t\tsomethingChanged = true;\n\t\t\t\tchanged.trimAutoWhitespace = true;\n\t\t\t\tthis._options.trimAutoWhitespace = newOpts.trimAutoWhitespace;\n\t\t\t}\n\t\t}\n\n\t\tif (somethingChanged) {\n\t\t\tthis.emit(editorCommon.EventType.ModelOptionsChanged, changed);\n\t\t}\n\t}\n\n\tpublic detectIndentation(defaultInsertSpaces:boolean, defaultTabSize:number): void {\n\t\tlet lines = this._lines.map(line => line.text);\n\t\tlet guessedIndentation = guessIndentation(lines, defaultTabSize, defaultInsertSpaces);\n\t\tthis.updateOptions({\n\t\t\tinsertSpaces: guessedIndentation.insertSpaces,\n\t\t\ttabSize: guessedIndentation.tabSize\n\t\t});\n\t}\n\n\tprivate _normalizeIndentationFromWhitespace(str:string): string {\n\t\tlet tabSize = this._options.tabSize;\n\t\tlet insertSpaces = this._options.insertSpaces;\n\n\t\tlet spacesCnt = 0;\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tif (str.charAt(i) === '\\t') {\n\t\t\t\tspacesCnt += tabSize;\n\t\t\t} else {\n\t\t\t\tspacesCnt++;\n\t\t\t}\n\t\t}\n\n\t\tlet result = '';\n\t\tif (!insertSpaces) {\n\t\t\tlet tabsCnt = Math.floor(spacesCnt / tabSize);\n\t\t\tspacesCnt = spacesCnt % tabSize;\n\t\t\tfor (let i = 0; i < tabsCnt; i++) {\n\t\t\t\tresult += '\\t';\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < spacesCnt; i++) {\n\t\t\tresult += ' ';\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic normalizeIndentation(str:string): string {\n\t\tlet firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(str);\n\t\tif (firstNonWhitespaceIndex === -1) {\n\t\t\tfirstNonWhitespaceIndex = str.length;\n\t\t}\n\t\treturn this._normalizeIndentationFromWhitespace(str.substring(0, firstNonWhitespaceIndex)) + str.substring(firstNonWhitespaceIndex);\n\t}\n\n\tpublic getOneIndent(): string {\n\t\tlet tabSize = this._options.tabSize;\n\t\tlet insertSpaces = this._options.insertSpaces;\n\n\t\tif (insertSpaces) {\n\t\t\tlet result = '';\n\t\t\tfor (let i = 0; i < tabSize; i++) {\n\t\t\t\tresult += ' ';\n\t\t\t}\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn '\\t';\n\t\t}\n\t}\n\n\tpublic getVersionId(): number {\n\t\treturn this._versionId;\n\t}\n\n\tpublic getAlternativeVersionId(): number {\n\t\treturn this._alternativeVersionId;\n\t}\n\n\tprivate _ensureLineStarts(): void {\n\t\tif (!this._lineStarts) {\n\t\t\tconst lineStartValues:number[] = [];\n\t\t\tconst eolLength = this._EOL.length;\n\t\t\tfor (let i = 0, len = this._lines.length; i < len; i++) {\n\t\t\t\tlineStartValues.push(this._lines[i].text.length + eolLength);\n\t\t\t}\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\n\t\t}\n\t}\n\n\tpublic getOffsetAt(rawPosition: editorCommon.IPosition): number {\n\t\tlet position = this.validatePosition(rawPosition);\n\t\tthis._ensureLineStarts();\n\t\treturn this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + position.column - 1;\n\t}\n\n\tpublic getPositionAt(offset: number): Position {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tthis._ensureLineStarts();\n\t\tlet out = this._lineStarts.getIndexOf(offset);\n\n\t\tlet lineLength = this._lines[out.index].text.length;\n\n\t\t// Ensure we return a valid position\n\t\treturn new Position(out.index + 1, Math.min(out.remainder + 1, lineLength + 1));\n\t}\n\n\t_increaseVersionId(): void {\n\t\tthis._setVersionId(this._versionId + 1);\n\t}\n\n\t_setVersionId(newVersionId:number): void {\n\t\tthis._versionId = newVersionId;\n\t\tthis._alternativeVersionId = this._versionId;\n\t}\n\n\t_overwriteAlternativeVersionId(newAlternativeVersionId:number): void {\n\t\tthis._alternativeVersionId = newAlternativeVersionId;\n\t}\n\n\tpublic isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\t// Null out members, such that any use of a disposed model will throw exceptions sooner rather than later\n\t\tthis._lines = null;\n\t\tthis._EOL = null;\n\t\tthis._BOM = null;\n\n\t\tsuper.dispose();\n\t}\n\n\t_createContentChangedFlushEvent(): editorCommon.IModelContentChangedFlushEvent {\n\t\treturn {\n\t\t\tchangeType: editorCommon.EventType.ModelRawContentChangedFlush,\n\t\t\tdetail: null,\n\t\t\t// TODO@Alex -> remove these fields from here\n\t\t\tversionId: -1,\n\t\t\tisUndoing: false,\n\t\t\tisRedoing: false\n\t\t};\n\t}\n\n\tprotected _emitContentChanged2(startLineNumber:number, startColumn:number, endLineNumber:number, endColumn:number, rangeLength:number, text:string, isUndoing:boolean, isRedoing:boolean): void {\n\t\tvar e:editorCommon.IModelContentChangedEvent2 = {\n\t\t\trange: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n\t\t\trangeLength: rangeLength,\n\t\t\ttext: text,\n\t\t\teol: this._EOL,\n\t\t\tversionId: this.getVersionId(),\n\t\t\tisUndoing: isUndoing,\n\t\t\tisRedoing: isRedoing\n\t\t};\n\t\tif (!this._isDisposing) {\n\t\t\tthis.emit(editorCommon.EventType.ModelContentChanged2, e);\n\t\t}\n\t}\n\n\t_resetValue(e:editorCommon.IModelContentChangedFlushEvent, newValue:editorCommon.IRawText): void {\n\t\tthis._constructLines(newValue);\n\n\t\tthis._increaseVersionId();\n\n\t\te.detail = this.toRawText();\n\t\te.versionId = this._versionId;\n\t}\n\n\tpublic toRawText(): editorCommon.IRawText {\n\t\treturn {\n\t\t\tBOM: this._BOM,\n\t\t\tEOL: this._EOL,\n\t\t\tlines: this.getLinesContent(),\n\t\t\tlength: this.getValueLength(),\n\t\t\toptions: this._options\n\t\t};\n\t}\n\n\tpublic equals(other: editorCommon.IRawText): boolean {\n\t\tif (this._BOM !== other.BOM) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._EOL !== other.EOL) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._lines.length !== other.lines.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = this._lines.length; i < len; i++) {\n\t\t\tif (this._lines[i].text !== other.lines[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic setValue(value:string): void {\n\t\tif (value === null) {\n\t\t\t// There's nothing to do\n\t\t\treturn;\n\t\t}\n\t\tlet rawText: editorCommon.IRawText = null;\n\t\trawText = TextModel.toRawText(value, {\n\t\t\ttabSize: this._options.tabSize,\n\t\t\tinsertSpaces: this._options.insertSpaces,\n\t\t\ttrimAutoWhitespace: this._options.trimAutoWhitespace,\n\t\t\tdetectIndentation: false,\n\t\t\tdefaultEOL: this._options.defaultEOL\n\t\t});\n\t\tthis.setValueFromRawText(rawText);\n\t}\n\n\tpublic setValueFromRawText(newValue:editorCommon.IRawText): void {\n\t\tif (newValue === null) {\n\t\t\t// There's nothing to do\n\t\t\treturn;\n\t\t}\n\t\tvar oldFullModelRange = this.getFullModelRange();\n\t\tvar oldModelValueLength = this.getValueLengthInRange(oldFullModelRange);\n\t\tvar endLineNumber = this.getLineCount();\n\t\tvar endColumn = this.getLineMaxColumn(endLineNumber);\n\t\tvar e = this._createContentChangedFlushEvent();\n\n\t\tthis._resetValue(e, newValue);\n\t\tthis._emitModelContentChangedFlushEvent(e);\n\t\tthis._emitContentChanged2(1, 1, endLineNumber, endColumn, oldModelValueLength, this.getValue(), false, false);\n\t}\n\n\tpublic getValue(eol?:editorCommon.EndOfLinePreference, preserveBOM:boolean=false): string {\n\t\tvar fullModelRange = this.getFullModelRange();\n\t\tvar fullModelValue = this.getValueInRange(fullModelRange, eol);\n\n\t\tif (preserveBOM) {\n\t\t\treturn this._BOM + fullModelValue;\n\t\t}\n\n\t\treturn fullModelValue;\n\t}\n\n\tpublic getValueLength(eol?: editorCommon.EndOfLinePreference, preserveBOM: boolean = false): number {\n\t\tvar fullModelRange = this.getFullModelRange();\n\t\tvar fullModelValue = this.getValueLengthInRange(fullModelRange, eol);\n\n\t\tif (preserveBOM) {\n\t\t\treturn this._BOM.length + fullModelValue;\n\t\t}\n\n\t\treturn fullModelValue;\n\t}\n\n\tpublic getEmptiedValueInRange(rawRange:editorCommon.IRange, fillCharacter: string = '', eol:editorCommon.EndOfLinePreference=editorCommon.EndOfLinePreference.TextDefined): string {\n\t\tvar range = this.validateRange(rawRange);\n\n\t\tif (range.isEmpty()) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._repeatCharacter(fillCharacter, range.endColumn - range.startColumn);\n\t\t}\n\n\t\tvar lineEnding = this._getEndOfLine(eol),\n\t\t\tstartLineIndex = range.startLineNumber - 1,\n\t\t\tendLineIndex = range.endLineNumber - 1,\n\t\t\tresultLines:string[] = [];\n\n\t\tresultLines.push(this._repeatCharacter(fillCharacter, this._lines[startLineIndex].text.length - range.startColumn + 1));\n\t\tfor (var i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._repeatCharacter(fillCharacter, this._lines[i].text.length));\n\t\t}\n\t\tresultLines.push(this._repeatCharacter(fillCharacter, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tprivate _repeatCharacter(fillCharacter:string, count:number): string {\n\t\tvar r = '';\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tr += fillCharacter;\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic getValueInRange(rawRange:editorCommon.IRange, eol:editorCommon.EndOfLinePreference=editorCommon.EndOfLinePreference.TextDefined): string {\n\t\tvar range = this.validateRange(rawRange);\n\n\t\tif (range.isEmpty()) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._lines[range.startLineNumber - 1].text.substring(range.startColumn - 1, range.endColumn - 1);\n\t\t}\n\n\t\tvar lineEnding = this._getEndOfLine(eol),\n\t\t\tstartLineIndex = range.startLineNumber - 1,\n\t\t\tendLineIndex = range.endLineNumber - 1,\n\t\t\tresultLines:string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].text.substring(range.startColumn - 1));\n\t\tfor (var i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i].text);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].text.substring(0, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tpublic getValueLengthInRange(rawRange:editorCommon.IRange, eol:editorCommon.EndOfLinePreference=editorCommon.EndOfLinePreference.TextDefined): number {\n\t\tvar range = this.validateRange(rawRange);\n\n\t\tif (range.isEmpty()) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn (range.endColumn - range.startColumn);\n\t\t}\n\n\t\tlet startOffset = this.getOffsetAt(new Position(range.startLineNumber, range.startColumn));\n\t\tlet endOffset = this.getOffsetAt(new Position(range.endLineNumber, range.endColumn));\n\t\treturn endOffset - startOffset;\n\t}\n\n\tpublic isDominatedByLongLines(): boolean {\n\t\tvar smallLineCharCount = 0,\n\t\t\tlongLineCharCount = 0,\n\t\t\ti: number,\n\t\t\tlen: number,\n\t\t\tlines = this._lines,\n\t\t\tlineLength: number;\n\n\t\tfor (i = 0, len = this._lines.length; i < len; i++) {\n\t\t\tlineLength = lines[i].text.length;\n\t\t\tif (lineLength >= LONG_LINE_BOUNDARY) {\n\t\t\t\tlongLineCharCount += lineLength;\n\t\t\t} else {\n\t\t\t\tsmallLineCharCount += lineLength;\n\t\t\t}\n\t\t}\n\n\t\treturn (longLineCharCount > smallLineCharCount);\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getLineContent(lineNumber:number): string {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n\t\t}\n\n\t\treturn this._lines[lineNumber - 1].text;\n\t}\n\n\tpublic getIndentLevel(lineNumber:number): number {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n\t\t}\n\n\t\treturn this._lines[lineNumber - 1].getIndentLevel();\n\t}\n\n\tprotected _resetIndentRanges(): void {\n\t\tthis._indentRanges = null;\n\t}\n\n\tprivate _getIndentRanges(): IndentRange[] {\n\t\tif (!this._indentRanges) {\n\t\t\tthis._indentRanges = computeRanges(this);\n\t\t}\n\t\treturn this._indentRanges;\n\t}\n\n\tpublic getIndentRanges(): IndentRange[] {\n\t\tlet indentRanges = this._getIndentRanges();\n\t\treturn IndentRange.deepCloneArr(indentRanges);\n\t}\n\n\tpublic getLineIndentGuide(lineNumber:number): number {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n\t\t}\n\n\t\tlet indentRanges = this._getIndentRanges();\n\n\t\tfor (let i = indentRanges.length - 1; i >= 0; i--) {\n\t\t\tlet rng = indentRanges[i];\n\n\t\t\tif (rng.startLineNumber === lineNumber) {\n\t\t\t\treturn  Math.ceil(rng.indent / this._options.tabSize);\n\t\t\t}\n\t\t\tif (rng.startLineNumber < lineNumber && lineNumber <= rng.endLineNumber) {\n\t\t\t\treturn 1 + Math.floor(rng.indent / this._options.tabSize);\n\t\t\t}\n\t\t\tif (rng.endLineNumber + 1 === lineNumber) {\n\t\t\t\tif (i === 0 || indentRanges[i - 1].endLineNumber + 1 !== lineNumber) {\n\t\t\t\t\t// For endLineNumber matches, we need to find the outermost indent range\n\t\t\t\t\treturn  Math.ceil(rng.indent / this._options.tabSize);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\tvar r: string[] = [];\n\t\tfor (var i = 0, len = this._lines.length; i < len; i++) {\n\t\t\tr[i] = this._lines[i].text;\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic getEOL(): string {\n\t\treturn this._EOL;\n\t}\n\n\tpublic setEOL(eol: editorCommon.EndOfLineSequence): void {\n\t\tvar newEOL = (eol === editorCommon.EndOfLineSequence.CRLF ? '\\r\\n' : '\\n');\n\t\tif (this._EOL === newEOL) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tvar oldFullModelRange = this.getFullModelRange();\n\t\tvar oldModelValueLength = this.getValueLengthInRange(oldFullModelRange);\n\t\tvar endLineNumber = this.getLineCount();\n\t\tvar endColumn = this.getLineMaxColumn(endLineNumber);\n\n\t\tthis._EOL = newEOL;\n\t\tthis._lineStarts = null;\n\t\tthis._increaseVersionId();\n\n\t\tvar e = this._createContentChangedFlushEvent();\n\t\te.detail = this.toRawText();\n\t\te.versionId = this._versionId;\n\n\t\tthis._emitModelContentChangedFlushEvent(e);\n\t\tthis._emitContentChanged2(1, 1, endLineNumber, endColumn, oldModelValueLength, this.getValue(), false, false);\n\t}\n\n\tpublic getLineMinColumn(lineNumber:number): number {\n\t\treturn 1;\n\t}\n\n\tpublic getLineMaxColumn(lineNumber:number): number {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n\t\t}\n\n\t\treturn this._lines[lineNumber - 1].text.length + 1;\n\t}\n\n\tpublic getLineFirstNonWhitespaceColumn(lineNumber: number): number {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n\t\t}\n\n\t\tvar result = strings.firstNonWhitespaceIndex(this._lines[lineNumber - 1].text);\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 1;\n\t}\n\n\tpublic getLineLastNonWhitespaceColumn(lineNumber: number): number {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n\t\t}\n\n\t\tvar result = strings.lastNonWhitespaceIndex(this._lines[lineNumber - 1].text);\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 2;\n\t}\n\n\tpublic validateLineNumber(lineNumber:number): number {\n\t\tif (lineNumber < 1) {\n\t\t\tlineNumber = 1;\n\t\t}\n\t\tif (lineNumber > this._lines.length) {\n\t\t\tlineNumber = this._lines.length;\n\t\t}\n\t\treturn lineNumber;\n\t}\n\n\tpublic validatePosition(position:editorCommon.IPosition): Position {\n\t\tvar lineNumber = position.lineNumber ? position.lineNumber : 1;\n\t\tvar column = position.column ? position.column : 1;\n\n\t\tif (lineNumber < 1) {\n\t\t\tlineNumber = 1;\n\t\t\tcolumn = 1;\n\t\t}\n\t\telse if (lineNumber > this._lines.length) {\n\t\t\tlineNumber = this._lines.length;\n\t\t\tcolumn = this.getLineMaxColumn(lineNumber);\n\t\t}\n\t\telse {\n\t\t\tvar maxColumn = this.getLineMaxColumn(lineNumber);\n\t\t\tif (column < 1) {\n\t\t\t\tcolumn = 1;\n\t\t\t}\n\t\t\telse if (column > maxColumn) {\n\t\t\t\tcolumn = maxColumn;\n\t\t\t}\n\t\t}\n\n\t\treturn new Position(lineNumber, column);\n\t}\n\n\tpublic validateRange(range:editorCommon.IRange): Range {\n\t\tvar start = this.validatePosition(new Position(range.startLineNumber, range.startColumn));\n\t\tvar end = this.validatePosition(new Position(range.endLineNumber, range.endColumn));\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\tpublic modifyPosition(rawPosition: editorCommon.IPosition, offset: number) : Position {\n\t\treturn this.getPositionAt(this.getOffsetAt(rawPosition) + offset);\n\t}\n\n\tpublic getFullModelRange(): Range {\n\t\tvar lineCount = this.getLineCount();\n\t\treturn new Range(1, 1, lineCount, this.getLineMaxColumn(lineCount));\n\t}\n\n\t_emitModelContentChangedFlushEvent(e:editorCommon.IModelContentChangedFlushEvent): void {\n\t\tif (!this._isDisposing) {\n\t\t\tthis.emit(editorCommon.EventType.ModelRawContentChanged, e);\n\t\t}\n\t}\n\n\tpublic static toRawText(rawText:string, opts:editorCommon.ITextModelCreationOptions): editorCommon.IRawText {\n\t\t// Count the number of lines that end with \\r\\n\n\t\tvar carriageReturnCnt = 0,\n\t\t\tlastCarriageReturnIndex = -1;\n\t\twhile ((lastCarriageReturnIndex = rawText.indexOf('\\r', lastCarriageReturnIndex + 1)) !== -1) {\n\t\t\tcarriageReturnCnt++;\n\t\t}\n\n\t\t// Split the text into lines\n\t\tvar lines = rawText.split(/\\r\\n|\\r|\\n/);\n\n\t\t// Remove the BOM (if present)\n\t\tvar BOM = '';\n\t\tif (strings.startsWithUTF8BOM(lines[0])) {\n\t\t\tBOM = strings.UTF8_BOM_CHARACTER;\n\t\t\tlines[0] = lines[0].substr(1);\n\t\t}\n\n\t\tvar lineFeedCnt = lines.length - 1;\n\t\tvar EOL = '';\n\t\tif (lineFeedCnt === 0) {\n\t\t\t// This is an empty file or a file with precisely one line\n\t\t\tEOL = (opts.defaultEOL === editorCommon.DefaultEndOfLine.LF ? '\\n' : '\\r\\n');\n\t\t} else if (carriageReturnCnt > lineFeedCnt / 2) {\n\t\t\t// More than half of the file contains \\r\\n ending lines\n\t\t\tEOL = '\\r\\n';\n\t\t} else {\n\t\t\t// At least one line more ends in \\n\n\t\t\tEOL = '\\n';\n\t\t}\n\n\t\tlet resolvedOpts: editorCommon.ITextModelResolvedOptions;\n\t\tif (opts.detectIndentation) {\n\t\t\tlet guessedIndentation = guessIndentation(lines, opts.tabSize, opts.insertSpaces);\n\t\t\tresolvedOpts = {\n\t\t\t\ttabSize: guessedIndentation.tabSize,\n\t\t\t\tinsertSpaces: guessedIndentation.insertSpaces,\n\t\t\t\ttrimAutoWhitespace: opts.trimAutoWhitespace,\n\t\t\t\tdefaultEOL: opts.defaultEOL\n\t\t\t};\n\t\t} else {\n\t\t\tresolvedOpts = {\n\t\t\t\ttabSize: opts.tabSize,\n\t\t\t\tinsertSpaces: opts.insertSpaces,\n\t\t\t\ttrimAutoWhitespace: opts.trimAutoWhitespace,\n\t\t\t\tdefaultEOL: opts.defaultEOL\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tBOM: BOM,\n\t\t\tEOL: EOL,\n\t\t\tlines: lines,\n\t\t\tlength: rawText.length,\n\t\t\toptions: resolvedOpts\n\t\t};\n\t}\n\n\t_constructLines(rawText:editorCommon.IRawText): void {\n\t\tconst tabSize = rawText.options.tabSize;\n\t\tlet rawLines = rawText.lines;\n\t\tlet modelLines: ModelLine[] = [];\n\n\t\tfor (let i = 0, len = rawLines.length; i < len; i++) {\n\t\t\tmodelLines[i] = new ModelLine(i + 1, rawLines[i], tabSize);\n\t\t}\n\t\tthis._BOM = rawText.BOM;\n\t\tthis._EOL = rawText.EOL;\n\t\tthis._lines = modelLines;\n\t\tthis._lineStarts = null;\n\t\tthis._resetIndentRanges();\n\t}\n\n\tprivate _getEndOfLine(eol:editorCommon.EndOfLinePreference): string {\n\t\tswitch (eol) {\n\t\t\tcase editorCommon.EndOfLinePreference.LF:\n\t\t\t\treturn '\\n';\n\t\t\tcase editorCommon.EndOfLinePreference.CRLF:\n\t\t\t\treturn '\\r\\n';\n\t\t\tcase editorCommon.EndOfLinePreference.TextDefined:\n\t\t\t\treturn this.getEOL();\n\t\t}\n\t\tthrow new Error('Unknown EOL preference');\n\t}\n\n\tprivate static _isMultiline(searchString:string): boolean {\n\t\tconst BACKSLASH_CHAR_CODE = '\\\\'.charCodeAt(0);\n\t\tconst n_CHAR_CODE = 'n'.charCodeAt(0);\n\t\tconst r_CHAR_CODE = 'r'.charCodeAt(0);\n\n\t\tif (!searchString || searchString.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let i = 0, len = searchString.length; i < len; i++) {\n\t\t\tlet chCode = searchString.charCodeAt(i);\n\n\t\t\tif (chCode === BACKSLASH_CHAR_CODE) {\n\n\t\t\t\t// move to next char\n\t\t\t\ti++;\n\n\t\t\t\tif (i >= len) {\n\t\t\t\t\t// string ends with a \\\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet nextChCode = searchString.charCodeAt(i);\n\t\t\t\tif (nextChCode === n_CHAR_CODE || nextChCode === r_CHAR_CODE) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic static parseSearchRequest(searchString:string, isRegex:boolean, matchCase:boolean, wholeWord:boolean): IParsedSearchRequest {\n\t\tif (searchString === '') {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Try to create a RegExp out of the params\n\t\tvar regex:RegExp = null;\n\t\ttry {\n\t\t\tregex = strings.createRegExp(searchString, isRegex, matchCase, wholeWord, true);\n\t\t} catch (err) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!regex) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tregex: regex,\n\t\t\tisMultiline: isRegex && TextModel._isMultiline(searchString)\n\t\t};\n\t}\n\n\tpublic findMatches(searchString:string, rawSearchScope:any, isRegex:boolean, matchCase:boolean, wholeWord:boolean, limitResultCount:number = LIMIT_FIND_COUNT): Range[] {\n\t\tlet r = TextModel.parseSearchRequest(searchString, isRegex, matchCase, wholeWord);\n\t\tif (!r) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet searchRange:Range;\n\t\tif (Range.isIRange(rawSearchScope)) {\n\t\t\tsearchRange = rawSearchScope;\n\t\t} else {\n\t\t\tsearchRange = this.getFullModelRange();\n\t\t}\n\n\t\tif (r.isMultiline) {\n\t\t\treturn this._doFindMatchesMultiline(searchRange, r.regex, limitResultCount);\n\t\t}\n\t\treturn this._doFindMatchesLineByLine(searchRange, r.regex, limitResultCount);\n\t}\n\n\tprivate _doFindMatchesMultiline(searchRange:Range, searchRegex:RegExp, limitResultCount:number): Range[] {\n\t\tlet deltaOffset = this.getOffsetAt(searchRange.getStartPosition());\n\t\tlet text = this.getValueInRange(searchRange);\n\n\t\tlet result: Range[] = [];\n\t\tlet prevStartOffset = 0;\n\t\tlet prevEndOffset = 0;\n\t\tlet counter = 0;\n\n\t\tlet m:RegExpExecArray;\n\t\twhile ((m = searchRegex.exec(text))) {\n\t\t\tlet startOffset = deltaOffset + m.index;\n\t\t\tlet endOffset = startOffset + m[0].length;\n\n\t\t\tif (prevStartOffset === startOffset && prevEndOffset === endOffset) {\n\t\t\t\t// Exit early if the regex matches the same range\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tlet startPosition = this.getPositionAt(startOffset);\n\t\t\tlet endPosition = this.getPositionAt(endOffset);\n\n\t\t\tresult[counter++] = new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n\t\t\tif (counter >= limitResultCount) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tprevStartOffset = startOffset;\n\t\t\tprevEndOffset = endOffset;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _doFindMatchesLineByLine(searchRange:Range, searchRegex:RegExp, limitResultCount:number): Range[] {\n\t\tlet result:Range[] = [];\n\t\tlet text: string;\n\t\tlet counter = 0;\n\n\t\t// Early case for a search range that starts & stops on the same line number\n\t\tif (searchRange.startLineNumber === searchRange.endLineNumber) {\n\t\t\ttext = this._lines[searchRange.startLineNumber - 1].text.substring(searchRange.startColumn - 1, searchRange.endColumn - 1);\n\t\t\tcounter = this._findMatchesInLine(searchRegex, text, searchRange.startLineNumber, searchRange.startColumn - 1, counter, result, limitResultCount);\n\t\t\treturn result;\n\t\t}\n\n\t\t// Collect results from first line\n\t\ttext = this._lines[searchRange.startLineNumber - 1].text.substring(searchRange.startColumn - 1);\n\t\tcounter = this._findMatchesInLine(searchRegex, text, searchRange.startLineNumber, searchRange.startColumn - 1, counter, result, limitResultCount);\n\n\t\t// Collect results from middle lines\n\t\tfor (let lineNumber = searchRange.startLineNumber + 1; lineNumber < searchRange.endLineNumber && counter < limitResultCount; lineNumber++) {\n\t\t\tcounter = this._findMatchesInLine(searchRegex, this._lines[lineNumber - 1].text, lineNumber, 0, counter, result, limitResultCount);\n\t\t}\n\n\t\t// Collect results from last line\n\t\tif (counter < limitResultCount) {\n\t\t\ttext = this._lines[searchRange.endLineNumber - 1].text.substring(0, searchRange.endColumn - 1);\n\t\t\tcounter = this._findMatchesInLine(searchRegex, text, searchRange.endLineNumber, 0, counter, result, limitResultCount);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic findNextMatch(searchString:string, rawSearchStart:editorCommon.IPosition, isRegex:boolean, matchCase:boolean, wholeWord:boolean): Range {\n\t\tlet r = TextModel.parseSearchRequest(searchString, isRegex, matchCase, wholeWord);\n\t\tif (!r) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet searchStart = this.validatePosition(rawSearchStart);\n\t\tif (r.isMultiline) {\n\t\t\treturn this._doFindNextMatchMultiline(searchStart, r.regex);\n\t\t}\n\t\treturn this._doFindNextMatchLineByLine(searchStart, r.regex);\n\n\t}\n\n\tprivate _doFindNextMatchMultiline(searchStart:Position, searchRegex:RegExp): Range {\n\t\tlet deltaOffset = this.getOffsetAt(searchStart);\n\t\tlet text = this.getValueInRange(new Range(searchStart.lineNumber, searchStart.column, this.getLineCount(), this.getLineMaxColumn(this.getLineCount())));\n\n\t\tlet m = searchRegex.exec(text);\n\t\tif (m) {\n\t\t\tlet startOffset = deltaOffset + m.index;\n\t\t\tlet endOffset = startOffset + m[0].length;\n\t\t\tlet startPosition = this.getPositionAt(startOffset);\n\t\t\tlet endPosition = this.getPositionAt(endOffset);\n\t\t\treturn new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n\t\t}\n\n\t\tif (searchStart.lineNumber !== 1 || searchStart.column !== -1) {\n\t\t\t// Try again from the top\n\t\t\treturn this._doFindNextMatchMultiline(new Position(1, 1), searchRegex);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _doFindNextMatchLineByLine(searchStart:Position, searchRegex:RegExp): Range {\n\t\tlet lineCount = this.getLineCount();\n\t\tlet startLineNumber = searchStart.lineNumber;\n\t\tlet text: string;\n\t\tlet r: Range;\n\n\t\t// Look in first line\n\t\ttext = this._lines[startLineNumber - 1].text.substring(searchStart.column - 1);\n\t\tr = this._findFirstMatchInLine(searchRegex, text, startLineNumber, searchStart.column - 1);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\n\t\tfor (let i = 1; i <= lineCount; i++) {\n\t\t\tlet lineIndex = (startLineNumber + i - 1) % lineCount;\n\t\t\ttext = this._lines[lineIndex].text;\n\t\t\tr = this._findFirstMatchInLine(searchRegex, text, lineIndex + 1, 0);\n\t\t\tif (r) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic findPreviousMatch(searchString:string, rawSearchStart:editorCommon.IPosition, isRegex:boolean, matchCase:boolean, wholeWord:boolean): Range {\n\t\tlet r = TextModel.parseSearchRequest(searchString, isRegex, matchCase, wholeWord);\n\t\tif (!r) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet searchStart = this.validatePosition(rawSearchStart);\n\t\tif (r.isMultiline) {\n\t\t\treturn this._doFindPreviousMatchMultiline(searchStart, r.regex);\n\t\t}\n\t\treturn this._doFindPreviousMatchLineByLine(searchStart, r.regex);\n\t}\n\n\tprivate _doFindPreviousMatchMultiline(searchStart:Position, searchRegex:RegExp): Range {\n\t\tlet matches = this._doFindMatchesMultiline(new Range(1, 1, searchStart.lineNumber, searchStart.column), searchRegex, 10 * LIMIT_FIND_COUNT);\n\t\tif (matches.length > 0) {\n\t\t\treturn matches[matches.length - 1];\n\t\t}\n\n\t\tif (searchStart.lineNumber !== this.getLineCount() || searchStart.column !== this.getLineMaxColumn(this.getLineCount())) {\n\t\t\t// Try again with all content\n\t\t\treturn this._doFindPreviousMatchMultiline(new Position(this.getLineCount(), this.getLineMaxColumn(this.getLineCount())), searchRegex);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _doFindPreviousMatchLineByLine(searchStart:Position, searchRegex:RegExp): Range {\n\t\tlet lineCount = this.getLineCount();\n\t\tlet startLineNumber = searchStart.lineNumber;\n\t\tlet text: string;\n\t\tlet r: Range;\n\n\t\t// Look in first line\n\t\ttext = this._lines[startLineNumber - 1].text.substring(0, searchStart.column - 1);\n\t\tr = this._findLastMatchInLine(searchRegex, text, startLineNumber);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\n\t\tfor (var i = 1; i <= lineCount; i++) {\n\t\t\tvar lineIndex = (lineCount + startLineNumber - i - 1) % lineCount;\n\t\t\ttext = this._lines[lineIndex].text;\n\t\t\tr = this._findLastMatchInLine(searchRegex, text, lineIndex + 1);\n\t\t\tif (r) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _findFirstMatchInLine(searchRegex:RegExp, text:string, lineNumber:number, deltaOffset:number): Range {\n\t\tvar m = searchRegex.exec(text);\n\t\tif (!m) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset);\n\t}\n\n\tprivate _findLastMatchInLine(searchRegex:RegExp, text:string, lineNumber:number): Range {\n\t\tlet bestResult: Range = null;\n\t\tlet m:RegExpExecArray;\n\t\twhile ((m = searchRegex.exec(text))) {\n\t\t\tlet result = new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length);\n\t\t\tif (result.equalsRange(bestResult)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbestResult = result;\n\t\t\tif (m.index + m[0].length === text.length) {\n\t\t\t\t// Reached the end of the line\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn bestResult;\n\t}\n\n\tprivate _findMatchesInLine(searchRegex:RegExp, text:string, lineNumber:number, deltaOffset:number, counter:number, result:Range[], limitResultCount:number): number {\n\t\tvar m:RegExpExecArray;\n\t\t// Reset regex to search from the beginning\n\t\tsearchRegex.lastIndex = 0;\n\t\tdo {\n\t\t\tm = searchRegex.exec(text);\n\t\t\tif (m) {\n\t\t\t\tvar range = new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset);\n\t\t\t\tif (range.equalsRange(result[result.length - 1])) {\n\t\t\t\t\t// Exit early if the regex matches the same range\n\t\t\t\t\treturn counter;\n\t\t\t\t}\n\t\t\t\tresult.push(range);\n\t\t\t\tcounter++;\n\t\t\t\tif (counter >= limitResultCount) {\n\t\t\t\t\treturn counter;\n\t\t\t\t}\n\t\t\t\tif (m.index + m[0].length === text.length) {\n\t\t\t\t\t// Reached the end of the line\n\t\t\t\t\treturn counter;\n\t\t\t\t}\n\t\t\t}\n\t\t} while(m);\n\t\treturn counter;\n\t}\n}\n\nexport class RawText {\n\n\tpublic static fromString(rawText:string, opts:editorCommon.ITextModelCreationOptions): editorCommon.IRawText {\n\t\treturn TextModel.toRawText(rawText, opts);\n\t}\n\n\tpublic static fromStringWithModelOptions(rawText:string, model:editorCommon.IModel): editorCommon.IRawText {\n\t\tlet opts = model.getOptions();\n\t\treturn TextModel.toRawText(rawText, {\n\t\t\ttabSize: opts.tabSize,\n\t\t\tinsertSpaces: opts.insertSpaces,\n\t\t\ttrimAutoWhitespace: opts.trimAutoWhitespace,\n\t\t\tdetectIndentation: false,\n\t\t\tdefaultEOL: opts.defaultEOL\n\t\t});\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport {RunOnceScheduler} from 'vs/base/common/async';\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport {IDisposable, dispose} from 'vs/base/common/lifecycle';\nimport {StopWatch} from 'vs/base/common/stopwatch';\nimport * as timer from 'vs/base/common/timer';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Range} from 'vs/editor/common/core/range';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {ModelLine} from 'vs/editor/common/model/modelLine';\nimport {TextModel} from 'vs/editor/common/model/textModel';\nimport {WordHelper} from 'vs/editor/common/model/textModelWithTokensHelpers';\nimport {TokenIterator} from 'vs/editor/common/model/tokenIterator';\nimport {ILineContext, ILineTokens, IToken, IModeTransition, IMode, IState} from 'vs/editor/common/modes';\nimport {NullMode, NullState, nullTokenize} from 'vs/editor/common/modes/nullMode';\nimport {ignoreBracketsInToken} from 'vs/editor/common/modes/supports';\nimport {BracketsUtils} from 'vs/editor/common/modes/supports/richEditBrackets';\nimport {ModeTransition} from 'vs/editor/common/core/modeTransition';\nimport {LineToken} from 'vs/editor/common/model/lineToken';\nimport {TokensInflatorMap} from 'vs/editor/common/model/tokensBinaryEncoding';\nimport {Position} from 'vs/editor/common/core/position';\nimport {LanguageConfigurationRegistry} from 'vs/editor/common/modes/languageConfigurationRegistry';\n\nclass ModeToModelBinder implements IDisposable {\n\n\tprivate _modePromise:TPromise<IMode>;\n\tprivate _externalModePromise:TPromise<boolean>;\n\tprivate _externalModePromise_c:(value:boolean)=>void;\n\tprivate _externalModePromise_e:(err:any)=>void;\n\tprivate _model:TextModelWithTokens;\n\tprivate _isDisposed:boolean;\n\n\tconstructor(modePromise:TPromise<IMode>, model:TextModelWithTokens) {\n\t\tthis._modePromise = modePromise;\n\t\t// Create an external mode promise that fires after the mode is set to the model\n\t\tthis._externalModePromise = new TPromise<boolean>((c, e, p) => {\n\t\t\tthis._externalModePromise_c = c;\n\t\t\tthis._externalModePromise_e = e;\n\t\t}, () => {\n\t\t\t// this promise cannot be canceled\n\t\t});\n\t\tthis._model = model;\n\t\tthis._isDisposed = false;\n\n\t\t// Ensure asynchronicity\n\t\tTPromise.timeout(0).then(() => {\n\t\t\treturn this._modePromise;\n\t\t}).then((mode:IMode) => {\n\t\t\tif (this._isDisposed) {\n\t\t\t\tthis._externalModePromise_c(false);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar model = this._model;\n\t\t\tthis.dispose();\n\t\t\tmodel.setMode(mode);\n\t\t\tmodel._warmUpTokens();\n\t\t\tthis._externalModePromise_c(true);\n\t\t}).done(null, (err) => {\n\t\t\tthis._externalModePromise_e(err);\n\t\t\tonUnexpectedError(err);\n\t\t});\n\t}\n\n\tpublic getModePromise(): TPromise<boolean> {\n\t\treturn this._externalModePromise;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._modePromise = null;\n\t\tthis._model = null;\n\t\tthis._isDisposed = true;\n\t}\n}\n\nexport interface IRetokenizeRequest extends IDisposable {\n\n\tisFulfilled: boolean;\n\n\t/**\n\t * If null, the entire model will be retokenzied, use null with caution\n\t */\n\tgetRange(): editorCommon.IRange;\n}\n\nexport class FullModelRetokenizer implements IRetokenizeRequest {\n\n\tpublic isFulfilled: boolean;\n\n\t_model:TextModelWithTokens;\n\tprivate _retokenizePromise:TPromise<void>;\n\tprivate _isDisposed: boolean;\n\n\tconstructor(retokenizePromise:TPromise<void>, model:TextModelWithTokens) {\n\t\tthis._retokenizePromise = retokenizePromise;\n\t\tthis._model = model;\n\t\tthis._isDisposed = false;\n\t\tthis.isFulfilled = false;\n\n\t\t// Ensure asynchronicity\n\t\tTPromise.timeout(0).then(() => {\n\t\t\treturn this._retokenizePromise;\n\t\t}).then(() => {\n\t\t\tif (this._isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.isFulfilled = true;\n\t\t\tthis._model.onRetokenizerFulfilled();\n\t\t}).done(null, onUnexpectedError);\n\t}\n\n\tpublic getRange(): editorCommon.IRange {\n\t\treturn null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._retokenizePromise = null;\n\t\tthis._model = null;\n\t\tthis._isDisposed = true;\n\t}\n}\n\nclass LineContext implements ILineContext {\n\n\tpublic modeTransitions:ModeTransition[];\n\tprivate _text:string;\n\tprivate _lineTokens:editorCommon.ILineTokens;\n\n\tconstructor (topLevelMode:IMode, line:ModelLine, map:TokensInflatorMap) {\n\t\tthis.modeTransitions = line.getModeTransitions(topLevelMode);\n\t\tthis._text = line.text;\n\t\tthis._lineTokens = line.getTokens(map);\n\t}\n\n\tpublic getLineContent(): string {\n\t\treturn this._text;\n\t}\n\n\tpublic getTokenCount(): number {\n\t\treturn this._lineTokens.getTokenCount();\n\t}\n\n\tpublic getTokenStartIndex(tokenIndex:number): number {\n\t\treturn this._lineTokens.getTokenStartIndex(tokenIndex);\n\t}\n\n\tpublic getTokenEndIndex(tokenIndex:number): number {\n\t\treturn this._lineTokens.getTokenEndIndex(tokenIndex, this._text.length);\n\t}\n\n\tpublic getTokenType(tokenIndex:number): string {\n\t\treturn this._lineTokens.getTokenType(tokenIndex);\n\t}\n\n\tpublic getTokenText(tokenIndex:number): string {\n\t\tvar startIndex = this._lineTokens.getTokenStartIndex(tokenIndex);\n\t\tvar endIndex = this._lineTokens.getTokenEndIndex(tokenIndex, this._text.length);\n\t\treturn this._text.substring(startIndex, endIndex);\n\t}\n\n\tpublic findIndexOfOffset(offset:number): number {\n\t\treturn this._lineTokens.findIndexOfOffset(offset);\n\t}\n}\n\nexport class TextModelWithTokens extends TextModel implements editorCommon.ITokenizedModel {\n\n\tprivate static MODE_TOKENIZATION_FAILED_MSG = nls.localize('mode.tokenizationSupportFailed', \"The mode has failed while tokenizing the input.\");\n\n\tprivate _mode: IMode;\n\tprivate _modeListener: IDisposable;\n\tprivate _modeToModelBinder:ModeToModelBinder;\n\tprivate _tokensInflatorMap:TokensInflatorMap;\n\n\tprivate _invalidLineStartIndex:number;\n\tprivate _lastState:IState;\n\n\tprivate _revalidateTokensTimeout:number;\n\tprivate _scheduleRetokenizeNow: RunOnceScheduler;\n\tprivate _retokenizers:IRetokenizeRequest[];\n\n\tconstructor(allowedEventTypes:string[], rawText:editorCommon.IRawText, modeOrPromise:IMode|TPromise<IMode>) {\n\t\tallowedEventTypes.push(editorCommon.EventType.ModelTokensChanged);\n\t\tallowedEventTypes.push(editorCommon.EventType.ModelModeChanged);\n\t\tallowedEventTypes.push(editorCommon.EventType.ModelModeSupportChanged);\n\t\tsuper(allowedEventTypes, rawText);\n\n\t\tthis._mode = null;\n\t\tthis._modeListener = null;\n\t\tthis._modeToModelBinder = null;\n\t\tthis._tokensInflatorMap = null;\n\n\t\tthis._invalidLineStartIndex = 0;\n\t\tthis._lastState = null;\n\n\t\tthis._revalidateTokensTimeout = -1;\n\t\tthis._scheduleRetokenizeNow = null;\n\t\tthis._retokenizers = null;\n\n\t\tif (!modeOrPromise) {\n\t\t\tthis._mode = new NullMode();\n\t\t} else if (TPromise.is(modeOrPromise)) {\n\t\t\t// TODO@Alex: To avoid mode id changes, we check if this promise is resolved\n\t\t\tlet promiseValue = <IMode>(<any>modeOrPromise)._value;\n\n\t\t\tif (promiseValue && typeof promiseValue.getId === 'function') {\n\t\t\t\t// The promise is already resolved\n\t\t\t\tthis._mode = this._massageMode(promiseValue);\n\t\t\t\tthis._resetModeListener(this._mode);\n\t\t\t} else {\n\t\t\t\tvar modePromise = <TPromise<IMode>>modeOrPromise;\n\t\t\t\tthis._modeToModelBinder = new ModeToModelBinder(modePromise, this);\n\t\t\t\tthis._mode = new NullMode();\n\t\t\t}\n\t\t} else {\n\t\t\tthis._mode = this._massageMode(<IMode>modeOrPromise);\n\t\t\tthis._resetModeListener(this._mode);\n\t\t}\n\n\t\tthis._revalidateTokensTimeout = -1;\n\t\tthis._scheduleRetokenizeNow = new RunOnceScheduler(() => this._retokenizeNow(), 200);\n\t\tthis._retokenizers = [];\n\n\t\tthis._resetTokenizationState();\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._modeToModelBinder) {\n\t\t\tthis._modeToModelBinder.dispose();\n\t\t\tthis._modeToModelBinder = null;\n\t\t}\n\t\tthis._resetModeListener(null);\n\t\tthis._clearTimers();\n\t\tthis._mode = null;\n\t\tthis._lastState = null;\n\t\tthis._tokensInflatorMap = null;\n\t\tthis._retokenizers = dispose(this._retokenizers);\n\t\tthis._scheduleRetokenizeNow.dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\tprotected _shouldAutoTokenize(): boolean {\n\t\treturn false;\n\t}\n\n\tprivate _massageMode(mode: IMode): IMode {\n\t\tif (this.isTooLargeForHavingAMode()) {\n\t\t\treturn new NullMode();\n\t\t}\n\t\tif (this.isTooLargeForHavingARichMode()) {\n\t\t\treturn mode.toSimplifiedMode();\n\t\t}\n\t\treturn mode;\n\t}\n\n\tpublic whenModeIsReady(): TPromise<IMode> {\n\t\tif (this._modeToModelBinder) {\n\t\t\t// Still waiting for some mode to load\n\t\t\treturn this._modeToModelBinder.getModePromise().then(() => this._mode);\n\t\t}\n\t\treturn TPromise.as(this._mode);\n\t}\n\n\tpublic onRetokenizerFulfilled(): void {\n\t\tthis._scheduleRetokenizeNow.schedule();\n\t}\n\n\tprivate _retokenizeNow(): void {\n\t\tvar fulfilled = this._retokenizers.filter(r => r.isFulfilled);\n\t\tthis._retokenizers = this._retokenizers.filter(r => !r.isFulfilled);\n\n\t\tvar hasFullModel = false;\n\t\tfor (var i = 0; i < fulfilled.length; i++) {\n\t\t\tif (!fulfilled[i].getRange()) {\n\t\t\t\thasFullModel = true;\n\t\t\t}\n\t\t}\n\n\t\tif (hasFullModel) {\n\t\t\t// Just invalidate all the lines\n\t\t\tfor (var i = 0, len = this._lines.length; i < len; i++) {\n\t\t\t\tthis._lines[i].isInvalid = true;\n\t\t\t}\n\t\t\tthis._invalidLineStartIndex = 0;\n\t\t} else {\n\t\t\tvar minLineNumber = Number.MAX_VALUE;\n\t\t\tfor (var i = 0; i < fulfilled.length; i++) {\n\t\t\t\tvar range = fulfilled[i].getRange();\n\t\t\t\tminLineNumber = Math.min(minLineNumber, range.startLineNumber);\n\t\t\t\tfor (var lineNumber = range.startLineNumber; lineNumber <= range.endLineNumber; lineNumber++) {\n\t\t\t\t\tthis._lines[lineNumber - 1].isInvalid = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (minLineNumber - 1 < this._invalidLineStartIndex) {\n\t\t\t\tif (this._invalidLineStartIndex < this._lines.length) {\n\t\t\t\t\tthis._lines[this._invalidLineStartIndex].isInvalid = true;\n\t\t\t\t}\n\t\t\t\tthis._invalidLineStartIndex = minLineNumber - 1;\n\t\t\t}\n\t\t}\n\n\t\tthis._beginBackgroundTokenization();\n\n\t\tfor (var i = 0; i < fulfilled.length; i++) {\n\t\t\tfulfilled[i].dispose();\n\t\t}\n\t}\n\n\t_createRetokenizer(retokenizePromise:TPromise<void>, lineNumber:number): IRetokenizeRequest {\n\t\treturn new FullModelRetokenizer(retokenizePromise, this);\n\t}\n\n\t_resetValue(e:editorCommon.IModelContentChangedFlushEvent, newValue:editorCommon.IRawText): void {\n\t\tsuper._resetValue(e, newValue);\n\t\t// Cancel tokenization, clear all tokens and begin tokenizing\n\t\tthis._resetTokenizationState();\n\t}\n\n\t_resetMode(e:editorCommon.IModelModeChangedEvent, newMode:IMode): void {\n\t\t// Cancel tokenization, clear all tokens and begin tokenizing\n\t\tthis._mode = newMode;\n\t\tthis._resetModeListener(newMode);\n\t\tthis._resetTokenizationState();\n\n\t\tthis.emitModelTokensChangedEvent(1, this.getLineCount());\n\t}\n\n\tprivate _resetModeListener(newMode: IMode): void {\n\t\tif (this._modeListener) {\n\t\t\tthis._modeListener.dispose();\n\t\t\tthis._modeListener = null;\n\t\t}\n\t\tif (newMode && typeof newMode.addSupportChangedListener === 'function') {\n\t\t\tthis._modeListener = newMode.addSupportChangedListener( (e) => this._onModeSupportChanged(e) );\n\t\t}\n\t}\n\n\tprivate _onModeSupportChanged(e: editorCommon.IModeSupportChangedEvent): void {\n\t\tthis._emitModelModeSupportChangedEvent(e);\n\t\tif (e.tokenizationSupport) {\n\t\t\tthis._resetTokenizationState();\n\t\t\tthis.emitModelTokensChangedEvent(1, this.getLineCount());\n\t\t}\n\t}\n\n\t_resetTokenizationState(): void {\n\t\tthis._retokenizers = dispose(this._retokenizers);\n\t\tthis._scheduleRetokenizeNow.cancel();\n\t\tthis._clearTimers();\n\t\tfor (var i = 0; i < this._lines.length; i++) {\n\t\t\tthis._lines[i].setState(null);\n\t\t}\n\t\tthis._initializeTokenizationState();\n\t}\n\n\tprivate _clearTimers(): void {\n\t\tif (this._revalidateTokensTimeout !== -1) {\n\t\t\tclearTimeout(this._revalidateTokensTimeout);\n\t\t\tthis._revalidateTokensTimeout = -1;\n\t\t}\n\t}\n\n\tprivate _initializeTokenizationState(): void {\n\t\t// Initialize tokenization states\n\t\tvar initialState:IState = null;\n\t\tif (this._mode.tokenizationSupport) {\n\t\t\ttry {\n\t\t\t\tinitialState = this._mode.tokenizationSupport.getInitialState();\n\t\t\t} catch (e) {\n\t\t\t\te.friendlyMessage = TextModelWithTokens.MODE_TOKENIZATION_FAILED_MSG;\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tthis._mode = new NullMode();\n\t\t\t}\n\t\t}\n\t\tif (!initialState) {\n\t\t\tinitialState = new NullState(this._mode, null);\n\t\t}\n\n\t\tthis._lines[0].setState(initialState);\n\t\tthis._lastState = null;\n\t\tthis._tokensInflatorMap = new TokensInflatorMap();\n\t\tthis._invalidLineStartIndex = 0;\n\t\tthis._beginBackgroundTokenization();\n\t}\n\n\tpublic getLineTokens(lineNumber:number, inaccurateTokensAcceptable:boolean = false): editorCommon.ILineTokens {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n\t\t}\n\n\t\tif (!inaccurateTokensAcceptable) {\n\t\t\tthis._updateTokensUntilLine(lineNumber, true);\n\t\t}\n\t\treturn this._lines[lineNumber - 1].getTokens(this._tokensInflatorMap);\n\t}\n\n\tpublic getLineContext(lineNumber:number): ILineContext {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n\t\t}\n\n\t\tthis._updateTokensUntilLine(lineNumber, true);\n\n\t\treturn new LineContext(this._mode, this._lines[lineNumber - 1], this._tokensInflatorMap);\n\t}\n\n\t_getInternalTokens(lineNumber:number): editorCommon.ILineTokens {\n\t\tthis._updateTokensUntilLine(lineNumber, true);\n\t\treturn this._lines[lineNumber - 1].getTokens(this._tokensInflatorMap);\n\t}\n\n\tpublic getMode(): IMode {\n\t\treturn this._mode;\n\t}\n\n\tpublic setMode(newModeOrPromise:IMode|TPromise<IMode>): void {\n\t\tif (!newModeOrPromise) {\n\t\t\t// There's nothing to do\n\t\t\treturn;\n\t\t}\n\t\tif (this._modeToModelBinder) {\n\t\t\tthis._modeToModelBinder.dispose();\n\t\t\tthis._modeToModelBinder = null;\n\t\t}\n\t\tif (TPromise.is(newModeOrPromise)) {\n\t\t\tthis._modeToModelBinder = new ModeToModelBinder(<TPromise<IMode>>newModeOrPromise, this);\n\t\t} else {\n\t\t\tvar actualNewMode = this._massageMode(<IMode>newModeOrPromise);\n\t\t\tif (this._mode !== actualNewMode) {\n\t\t\t\tvar e2:editorCommon.IModelModeChangedEvent = {\n\t\t\t\t\toldMode: this._mode,\n\t\t\t\t\tnewMode: actualNewMode\n\t\t\t\t};\n\t\t\t\tthis._resetMode(e2, actualNewMode);\n\t\t\t\tthis._emitModelModeChangedEvent(e2);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getModeIdAtPosition(_lineNumber:number, _column:number): string {\n\t\tvar validPosition = this.validatePosition({\n\t\t\tlineNumber: _lineNumber,\n\t\t\tcolumn: _column\n\t\t});\n\n\t\tvar lineNumber = validPosition.lineNumber;\n\t\tvar column = validPosition.column;\n\n\t\tif (column === 1) {\n\t\t\treturn this.getStateBeforeLine(lineNumber).getMode().getId();\n\t\t} else if (column === this.getLineMaxColumn(lineNumber)) {\n\t\t\treturn this.getStateAfterLine(lineNumber).getMode().getId();\n\t\t} else {\n\t\t\tvar modeTransitions = this._getLineModeTransitions(lineNumber);\n\t\t\tvar modeTransitionIndex = ModeTransition.findIndexInSegmentsArray(modeTransitions, column - 1);\n\t\t\treturn modeTransitions[modeTransitionIndex].modeId;\n\t\t}\n\t}\n\n\t_invalidateLine(lineIndex:number): void {\n\t\tthis._lines[lineIndex].isInvalid = true;\n\t\tif (lineIndex < this._invalidLineStartIndex) {\n\t\t\tif (this._invalidLineStartIndex < this._lines.length) {\n\t\t\t\tthis._lines[this._invalidLineStartIndex].isInvalid = true;\n\t\t\t}\n\t\t\tthis._invalidLineStartIndex = lineIndex;\n\t\t\tthis._beginBackgroundTokenization();\n\t\t}\n\t}\n\n\tprivate static _toLineTokens(tokens:IToken[]): LineToken[] {\n\t\tif (!tokens || tokens.length === 0) {\n\t\t\treturn [];\n\t\t}\n\t\tif (tokens[0] instanceof LineToken) {\n\t\t\treturn <LineToken[]>tokens;\n\t\t}\n\t\tlet result:LineToken[] = [];\n\t\tfor (let i = 0, len = tokens.length; i < len; i++) {\n\t\t\tresult[i] = new LineToken(tokens[i].startIndex, tokens[i].type);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _toModeTransitions(modeTransitions:IModeTransition[]): ModeTransition[] {\n\t\tif (!modeTransitions || modeTransitions.length === 0) {\n\t\t\treturn [];\n\t\t}\n\t\tif (modeTransitions[0] instanceof ModeTransition) {\n\t\t\treturn <ModeTransition[]>modeTransitions;\n\t\t}\n\t\tlet result:ModeTransition[] = [];\n\t\tfor (let i = 0, len = modeTransitions.length; i < len; i++) {\n\t\t\tresult[i] = new ModeTransition(modeTransitions[i].startIndex, modeTransitions[i].mode);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _updateLineTokens(lineIndex:number, map:TokensInflatorMap, topLevelMode:IMode, r:ILineTokens): void {\n\t\tthis._lines[lineIndex].setTokens(map, TextModelWithTokens._toLineTokens(r.tokens), topLevelMode, TextModelWithTokens._toModeTransitions(r.modeTransitions));\n\t}\n\n\tprivate _beginBackgroundTokenization(): void {\n\t\tif (this._shouldAutoTokenize() && this._revalidateTokensTimeout === -1) {\n\t\t\tthis._revalidateTokensTimeout = setTimeout(() => {\n\t\t\t\tthis._revalidateTokensTimeout = -1;\n\t\t\t\tthis._revalidateTokensNow();\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\t_warmUpTokens(): void {\n\t\t// Warm up first 100 lines (if it takes less than 50ms)\n\t\tvar maxLineNumber = Math.min(100, this.getLineCount());\n\t\tvar toLineNumber = maxLineNumber;\n\t\tfor (var lineNumber = 1; lineNumber <= maxLineNumber; lineNumber++) {\n\t\t\tvar text = this._lines[lineNumber - 1].text;\n\t\t\tif (text.length >= 200) {\n\t\t\t\t// This line is over 200 chars long, so warm up without it\n\t\t\t\ttoLineNumber = lineNumber - 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis._revalidateTokensNow(toLineNumber);\n\n\t\tif (this._invalidLineStartIndex < this._lines.length) {\n\t\t\tthis._beginBackgroundTokenization();\n\t\t}\n\t}\n\n\tprivate _revalidateTokensNow(toLineNumber:number = this._invalidLineStartIndex + 1000000): void {\n\n\t\tvar t1 = timer.start(timer.Topic.EDITOR, 'backgroundTokenization');\n\t\ttoLineNumber = Math.min(this._lines.length, toLineNumber);\n\n\t\tvar MAX_ALLOWED_TIME = 20,\n\t\t\tfromLineNumber = this._invalidLineStartIndex + 1,\n\t\t\ttokenizedChars = 0,\n\t\t\tcurrentCharsToTokenize = 0,\n\t\t\tcurrentEstimatedTimeToTokenize = 0,\n\t\t\tsw = StopWatch.create(false),\n\t\t\telapsedTime: number;\n\n\t\t// Tokenize at most 1000 lines. Estimate the tokenization speed per character and stop when:\n\t\t// - MAX_ALLOWED_TIME is reached\n\t\t// - tokenizing the next line would go above MAX_ALLOWED_TIME\n\n\t\tfor (var lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n\t\t\telapsedTime = sw.elapsed();\n\t\t\tif (elapsedTime > MAX_ALLOWED_TIME) {\n\t\t\t\t// Stop if MAX_ALLOWED_TIME is reached\n\t\t\t\ttoLineNumber = lineNumber - 1;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Compute how many characters will be tokenized for this line\n\t\t\tcurrentCharsToTokenize = this._lines[lineNumber - 1].text.length;\n\n\t\t\tif (tokenizedChars > 0) {\n\t\t\t\t// If we have enough history, estimate how long tokenizing this line would take\n\t\t\t\tcurrentEstimatedTimeToTokenize = (elapsedTime / tokenizedChars) * currentCharsToTokenize;\n\t\t\t\tif (elapsedTime + currentEstimatedTimeToTokenize > MAX_ALLOWED_TIME) {\n\t\t\t\t\t// Tokenizing this line will go above MAX_ALLOWED_TIME\n\t\t\t\t\ttoLineNumber = lineNumber - 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateTokensUntilLine(lineNumber, false);\n\t\t\ttokenizedChars += currentCharsToTokenize;\n\t\t}\n\n\t\telapsedTime = sw.elapsed();\n\n\t\tif (fromLineNumber <= toLineNumber) {\n\t\t\tthis.emitModelTokensChangedEvent(fromLineNumber, toLineNumber);\n\t\t}\n\n\t\tif (this._invalidLineStartIndex < this._lines.length) {\n\t\t\tthis._beginBackgroundTokenization();\n\t\t}\n\n\t\tt1.stop();\n\t}\n\n\tprivate getStateBeforeLine(lineNumber:number): IState {\n\t\tthis._updateTokensUntilLine(lineNumber - 1, true);\n\t\treturn this._lines[lineNumber - 1].getState();\n\t}\n\n\tprivate getStateAfterLine(lineNumber:number): IState {\n\t\tthis._updateTokensUntilLine(lineNumber, true);\n\t\treturn lineNumber < this._lines.length ? this._lines[lineNumber].getState() : this._lastState;\n\t}\n\n\t_getLineModeTransitions(lineNumber:number): ModeTransition[] {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n\t\t}\n\t\tthis._updateTokensUntilLine(lineNumber, true);\n\t\treturn this._lines[lineNumber - 1].getModeTransitions(this._mode);\n\t}\n\n\tprivate _updateTokensUntilLine(lineNumber:number, emitEvents:boolean): void {\n\t\tvar linesLength = this._lines.length;\n\t\tvar endLineIndex = lineNumber - 1;\n\t\tvar stopLineTokenizationAfter = 1000000000; // 1 billion, if a line is so long, you have other trouble :).\n\n\t\tvar fromLineNumber = this._invalidLineStartIndex + 1, toLineNumber = lineNumber;\n\n\t\t// Validate all states up to and including endLineIndex\n\t\tfor (var lineIndex = this._invalidLineStartIndex; lineIndex <= endLineIndex; lineIndex++) {\n\t\t\tvar endStateIndex = lineIndex + 1;\n\t\t\tvar r:ILineTokens = null;\n\t\t\tvar text = this._lines[lineIndex].text;\n\t\t\tif (this._mode.tokenizationSupport) {\n\n\t\t\t\ttry {\n\t\t\t\t\t// Tokenize only the first X characters\n\t\t\t\t\tr = this._mode.tokenizationSupport.tokenize(this._lines[lineIndex].text, this._lines[lineIndex].getState(), 0, stopLineTokenizationAfter);\n\t\t\t\t} catch (e) {\n\t\t\t\t\te.friendlyMessage = TextModelWithTokens.MODE_TOKENIZATION_FAILED_MSG;\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\n\t\t\t\tif (r && r.retokenize) {\n\t\t\t\t\tthis._retokenizers.push(this._createRetokenizer(r.retokenize, lineIndex + 1));\n\t\t\t\t}\n\n\t\t\t\tif (r && r.tokens && r.tokens.length > 0) {\n\t\t\t\t\t// Cannot have a stop offset before the last token\n\t\t\t\t\tr.actualStopOffset = Math.max(r.actualStopOffset, r.tokens[r.tokens.length - 1].startIndex + 1);\n\t\t\t\t}\n\n\t\t\t\tif (r && r.actualStopOffset < text.length) {\n\t\t\t\t\t// Treat the rest of the line (if above limit) as one default token\n\t\t\t\t\tr.tokens.push({\n\t\t\t\t\t\tstartIndex: r.actualStopOffset,\n\t\t\t\t\t\ttype: ''\n\t\t\t\t\t});\n\n\t\t\t\t\t// Use as end state the starting state\n\t\t\t\t\tr.endState = this._lines[lineIndex].getState();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!r) {\n\t\t\t\tr = nullTokenize(this._mode, text, this._lines[lineIndex].getState());\n\t\t\t}\n\t\t\tif (!r.modeTransitions) {\n\t\t\t\tr.modeTransitions = [];\n\t\t\t}\n\t\t\tif (r.modeTransitions.length === 0) {\n\t\t\t\t// Make sure there is at least the transition to the top-most mode\n\t\t\t\tr.modeTransitions.push({\n\t\t\t\t\tstartIndex: 0,\n\t\t\t\t\tmode: this._mode\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._updateLineTokens(lineIndex, this._tokensInflatorMap, this._mode, r);\n\n\t\t\tif (this._lines[lineIndex].isInvalid) {\n\t\t\t\tthis._lines[lineIndex].isInvalid = false;\n\t\t\t}\n\n\t\t\tif (endStateIndex < linesLength) {\n\t\t\t\tif (this._lines[endStateIndex].getState() !== null && r.endState.equals(this._lines[endStateIndex].getState())) {\n\t\t\t\t\t// The end state of this line remains the same\n\t\t\t\t\tvar nextInvalidLineIndex = lineIndex + 1;\n\t\t\t\t\twhile (nextInvalidLineIndex < linesLength) {\n\t\t\t\t\t\tif (this._lines[nextInvalidLineIndex].isInvalid) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (nextInvalidLineIndex + 1 < linesLength) {\n\t\t\t\t\t\t\tif (this._lines[nextInvalidLineIndex + 1].getState() === null) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (this._lastState === null) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextInvalidLineIndex++;\n\t\t\t\t\t}\n\t\t\t\t\tthis._invalidLineStartIndex = Math.max(this._invalidLineStartIndex, nextInvalidLineIndex);\n\t\t\t\t\tlineIndex = nextInvalidLineIndex - 1; // -1 because the outer loop increments it\n\t\t\t\t} else {\n\t\t\t\t\tthis._lines[endStateIndex].setState(r.endState);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._lastState = r.endState;\n\t\t\t}\n\t\t}\n\t\tthis._invalidLineStartIndex = Math.max(this._invalidLineStartIndex, endLineIndex + 1);\n\n\t\tif (emitEvents && fromLineNumber <= toLineNumber) {\n\t\t\tthis.emitModelTokensChangedEvent(fromLineNumber, toLineNumber);\n\t\t}\n\t}\n\n\tprivate emitModelTokensChangedEvent(fromLineNumber:number, toLineNumber:number): void {\n\t\tvar e:editorCommon.IModelTokensChangedEvent = {\n\t\t\tfromLineNumber: fromLineNumber,\n\t\t\ttoLineNumber: toLineNumber\n\t\t};\n\t\tif (!this._isDisposing) {\n\t\t\tthis.emit(editorCommon.EventType.ModelTokensChanged, e);\n\t\t}\n\t}\n\n\tprivate _emitModelModeChangedEvent(e:editorCommon.IModelModeChangedEvent): void {\n\t\tif (!this._isDisposing) {\n\t\t\tthis.emit(editorCommon.EventType.ModelModeChanged, e);\n\t\t}\n\t}\n\n\tprivate _emitModelModeSupportChangedEvent(e:editorCommon.IModeSupportChangedEvent): void {\n\t\tif (!this._isDisposing) {\n\t\t\tthis.emit(editorCommon.EventType.ModelModeSupportChanged, e);\n\t\t}\n\t}\n\n\t// Having tokens allows implementing additional helper methods\n\n\t_lineIsTokenized(lineNumber:number): boolean {\n\t\treturn this._invalidLineStartIndex > lineNumber - 1;\n\t}\n\n\t_getWordDefinition(): RegExp {\n\t\treturn WordHelper.massageWordDefinitionOf(this._mode);\n\t}\n\n\tpublic getWordAtPosition(position:editorCommon.IPosition): editorCommon.IWordAtPosition {\n\t\treturn WordHelper.getWordAtPosition(this, this.validatePosition(position));\n\t}\n\n\tpublic getWordUntilPosition(position: editorCommon.IPosition): editorCommon.IWordAtPosition {\n\t\tvar wordAtPosition = this.getWordAtPosition(position);\n\t\tif (!wordAtPosition) {\n\t\t\treturn {\n\t\t\t\tword: '',\n\t\t\t\tstartColumn: position.column,\n\t\t\t\tendColumn: position.column\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tword: wordAtPosition.word.substr(0, position.column - wordAtPosition.startColumn),\n\t\t\tstartColumn: wordAtPosition.startColumn,\n\t\t\tendColumn: position.column\n\t\t};\n\t}\n\n\tpublic tokenIterator(position:editorCommon.IPosition, callback:(it:TokenIterator)=>any): any {\n\t\tvar iter = new TokenIterator(this, this.validatePosition(position));\n\t\tvar result = callback(iter);\n\t\titer._invalidate();\n\t\treturn result;\n\t}\n\n\tpublic findMatchingBracketUp(bracket:string, _position:editorCommon.IPosition): Range {\n\t\tlet position = this.validatePosition(_position);\n\t\tlet modeTransitions = this._lines[position.lineNumber - 1].getModeTransitions(this._mode);\n\t\tlet currentModeIndex = ModeTransition.findIndexInSegmentsArray(modeTransitions, position.column - 1);\n\t\tlet currentMode = modeTransitions[currentModeIndex];\n\t\tlet currentModeBrackets = LanguageConfigurationRegistry.getBracketsSupport(currentMode.modeId);\n\n\t\tif (!currentModeBrackets) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet data = currentModeBrackets.textIsBracket[bracket];\n\n\t\tif (!data) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._findMatchingBracketUp(data, position);\n\t}\n\n\tpublic matchBracket(position:editorCommon.IPosition): [Range,Range] {\n\t\treturn this._matchBracket(this.validatePosition(position));\n\t}\n\n\tprivate _matchBracket(position:Position): [Range,Range] {\n\t\tlet lineNumber = position.lineNumber;\n\t\tlet lineText = this._lines[lineNumber - 1].text;\n\n\t\tlet lineTokens = this._lines[lineNumber - 1].getTokens(this._tokensInflatorMap);\n\t\tlet currentTokenIndex = lineTokens.findIndexOfOffset(position.column - 1);\n\t\tlet currentTokenStart = lineTokens.getTokenStartIndex(currentTokenIndex);\n\n\t\tlet modeTransitions = this._lines[lineNumber - 1].getModeTransitions(this._mode);\n\t\tlet currentModeIndex = ModeTransition.findIndexInSegmentsArray(modeTransitions, position.column - 1);\n\t\tlet currentMode = modeTransitions[currentModeIndex];\n\t\tlet currentModeBrackets = LanguageConfigurationRegistry.getBracketsSupport(currentMode.modeId);\n\n\t\t// If position is in between two tokens, try first looking in the previous token\n\t\tif (currentTokenIndex > 0 && currentTokenStart === position.column - 1) {\n\t\t\tlet prevTokenIndex = currentTokenIndex - 1;\n\t\t\tlet prevTokenType = lineTokens.getTokenType(prevTokenIndex);\n\n\t\t\t// check that previous token is not to be ignored\n\t\t\tif (!ignoreBracketsInToken(prevTokenType)) {\n\t\t\t\tlet prevTokenStart = lineTokens.getTokenStartIndex(prevTokenIndex);\n\n\t\t\t\tlet prevMode = currentMode;\n\t\t\t\tlet prevModeBrackets = currentModeBrackets;\n\t\t\t\t// check if previous token is in a different mode\n\t\t\t\tif (currentModeIndex > 0 && currentMode.startIndex === position.column - 1) {\n\t\t\t\t\tprevMode = modeTransitions[currentModeIndex - 1];\n\t\t\t\t\tprevModeBrackets = LanguageConfigurationRegistry.getBracketsSupport(prevMode.modeId);\n\t\t\t\t}\n\n\t\t\t\tif (prevModeBrackets) {\n\t\t\t\t\t// limit search in case previous token is very large, there's no need to go beyond `maxBracketLength`\n\t\t\t\t\tprevTokenStart = Math.max(prevTokenStart, position.column - 1 - prevModeBrackets.maxBracketLength);\n\n\t\t\t\t\tlet foundBracket = BracketsUtils.findPrevBracketInToken(prevModeBrackets.reversedRegex, lineNumber, lineText, prevTokenStart, currentTokenStart);\n\n\t\t\t\t\t// check that we didn't hit a bracket too far away from position\n\t\t\t\t\tif (foundBracket && foundBracket.startColumn <= position.column && position.column <= foundBracket.endColumn) {\n\t\t\t\t\t\tlet foundBracketText = lineText.substring(foundBracket.startColumn - 1, foundBracket.endColumn - 1);\n\t\t\t\t\t\tlet r = this._matchFoundBracket(foundBracket, prevModeBrackets.textIsBracket[foundBracketText], prevModeBrackets.textIsOpenBracket[foundBracketText]);\n\n\t\t\t\t\t\t// check that we can actually match this bracket\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn r;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// check that the token is not to be ignored\n\t\tif (!ignoreBracketsInToken(lineTokens.getTokenType(currentTokenIndex))) {\n\n\t\t\tif (currentModeBrackets) {\n\t\t\t\t// limit search to not go before `maxBracketLength`\n\t\t\t\tcurrentTokenStart = Math.max(currentTokenStart, position.column - 1 - currentModeBrackets.maxBracketLength);\n\n\t\t\t\t// limit search to not go after `maxBracketLength`\n\t\t\t\tlet currentTokenEnd = lineTokens.getTokenEndIndex(currentTokenIndex, lineText.length);\n\t\t\t\tcurrentTokenEnd = Math.min(currentTokenEnd, position.column - 1 + currentModeBrackets.maxBracketLength);\n\n\t\t\t\t// it might still be the case that [currentTokenStart -> currentTokenEnd] contains multiple brackets\n\t\t\t\twhile(true) {\n\t\t\t\t\tlet foundBracket = BracketsUtils.findNextBracketInText(currentModeBrackets.forwardRegex, lineNumber, lineText.substring(currentTokenStart, currentTokenEnd), currentTokenStart);\n\t\t\t\t\tif (!foundBracket) {\n\t\t\t\t\t\t// there are no brackets in this text\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// check that we didn't hit a bracket too far away from position\n\t\t\t\t\tif (foundBracket.startColumn <= position.column && position.column <= foundBracket.endColumn) {\n\t\t\t\t\t\tlet foundBracketText = lineText.substring(foundBracket.startColumn - 1, foundBracket.endColumn - 1);\n\t\t\t\t\t\tlet r = this._matchFoundBracket(foundBracket, currentModeBrackets.textIsBracket[foundBracketText], currentModeBrackets.textIsOpenBracket[foundBracketText]);\n\n\t\t\t\t\t\t// check that we can actually match this bracket\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn r;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentTokenStart = foundBracket.endColumn - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _matchFoundBracket(foundBracket:Range, data:editorCommon.IRichEditBracket, isOpen:boolean): [Range,Range] {\n\t\tif (isOpen) {\n\t\t\tlet matched = this._findMatchingBracketDown(data, foundBracket.getEndPosition());\n\t\t\tif (matched) {\n\t\t\t\treturn [foundBracket, matched];\n\t\t\t}\n\t\t} else {\n\t\t\tlet matched = this._findMatchingBracketUp(data, foundBracket.getStartPosition());\n\t\t\tif (matched) {\n\t\t\t\treturn [foundBracket, matched];\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _findMatchingBracketUp(bracket:editorCommon.IRichEditBracket, position:Position): Range {\n\t\t// console.log('_findMatchingBracketUp: ', 'bracket: ', JSON.stringify(bracket), 'startPosition: ', String(position));\n\n\t\tlet modeId = bracket.modeId;\n\t\tlet reversedBracketRegex = bracket.reversedRegex;\n\t\tlet count = -1;\n\n\t\tfor (let lineNumber = position.lineNumber; lineNumber >= 1; lineNumber--) {\n\t\t\tlet lineTokens = this._lines[lineNumber - 1].getTokens(this._tokensInflatorMap);\n\t\t\tlet lineText = this._lines[lineNumber - 1].text;\n\t\t\tlet modeTransitions = this._lines[lineNumber - 1].getModeTransitions(this._mode);\n\t\t\tlet currentModeIndex = modeTransitions.length - 1;\n\t\t\tlet currentModeStart = modeTransitions[currentModeIndex].startIndex;\n\t\t\tlet currentModeId = modeTransitions[currentModeIndex].modeId;\n\n\t\t\tlet tokensLength = lineTokens.getTokenCount() - 1;\n\t\t\tlet currentTokenEnd = lineText.length;\n\t\t\tif (lineNumber === position.lineNumber) {\n\t\t\t\ttokensLength = lineTokens.findIndexOfOffset(position.column - 1);\n\t\t\t\tcurrentTokenEnd = position.column - 1;\n\n\t\t\t\tcurrentModeIndex = ModeTransition.findIndexInSegmentsArray(modeTransitions, position.column - 1);\n\t\t\t\tcurrentModeStart = modeTransitions[currentModeIndex].startIndex;\n\t\t\t\tcurrentModeId = modeTransitions[currentModeIndex].modeId;\n\t\t\t}\n\n\t\t\tfor (let tokenIndex = tokensLength; tokenIndex >= 0; tokenIndex--) {\n\t\t\t\tlet currentTokenType = lineTokens.getTokenType(tokenIndex);\n\t\t\t\tlet currentTokenStart = lineTokens.getTokenStartIndex(tokenIndex);\n\n\t\t\t\tif (currentTokenStart < currentModeStart) {\n\t\t\t\t\tcurrentModeIndex--;\n\t\t\t\t\tcurrentModeStart = modeTransitions[currentModeIndex].startIndex;\n\t\t\t\t\tcurrentModeId = modeTransitions[currentModeIndex].modeId;\n\t\t\t\t}\n\n\t\t\t\tif (currentModeId === modeId && !ignoreBracketsInToken(currentTokenType)) {\n\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tlet r = BracketsUtils.findPrevBracketInToken(reversedBracketRegex, lineNumber, lineText, currentTokenStart, currentTokenEnd);\n\t\t\t\t\t\tif (!r) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet hitText = lineText.substring(r.startColumn - 1, r.endColumn - 1);\n\n\t\t\t\t\t\tif (hitText === bracket.open) {\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t} else if (hitText === bracket.close) {\n\t\t\t\t\t\t\tcount--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (count === 0) {\n\t\t\t\t\t\t\treturn r;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentTokenEnd = r.startColumn - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcurrentTokenEnd = currentTokenStart;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _findMatchingBracketDown(bracket:editorCommon.IRichEditBracket, position:Position): Range {\n\t\t// console.log('_findMatchingBracketDown: ', 'bracket: ', JSON.stringify(bracket), 'startPosition: ', String(position));\n\n\t\tlet modeId = bracket.modeId;\n\t\tlet bracketRegex = bracket.forwardRegex;\n\t\tlet count = 1;\n\n\t\tfor (let lineNumber = position.lineNumber, lineCount = this.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n\t\t\tlet lineTokens = this._lines[lineNumber - 1].getTokens(this._tokensInflatorMap);\n\t\t\tlet lineText = this._lines[lineNumber - 1].text;\n\t\t\tlet modeTransitions = this._lines[lineNumber - 1].getModeTransitions(this._mode);\n\t\t\tlet currentModeIndex = 0;\n\t\t\tlet nextModeStart = (currentModeIndex + 1 < modeTransitions.length ? modeTransitions[currentModeIndex + 1].startIndex : lineText.length + 1);\n\t\t\tlet currentModeId = modeTransitions[currentModeIndex].modeId;\n\n\t\t\tlet startTokenIndex = 0;\n\t\t\tlet currentTokenStart = lineTokens.getTokenStartIndex(startTokenIndex);\n\t\t\tif (lineNumber === position.lineNumber) {\n\t\t\t\tstartTokenIndex = lineTokens.findIndexOfOffset(position.column - 1);\n\t\t\t\tcurrentTokenStart = Math.max(currentTokenStart, position.column - 1);\n\n\t\t\t\tcurrentModeIndex = ModeTransition.findIndexInSegmentsArray(modeTransitions, position.column - 1);\n\t\t\t\tnextModeStart = (currentModeIndex + 1 < modeTransitions.length ? modeTransitions[currentModeIndex + 1].startIndex : lineText.length + 1);\n\t\t\t\tcurrentModeId = modeTransitions[currentModeIndex].modeId;\n\t\t\t}\n\n\t\t\tfor (let tokenIndex = startTokenIndex, tokensLength = lineTokens.getTokenCount(); tokenIndex < tokensLength; tokenIndex++) {\n\t\t\t\tlet currentTokenType = lineTokens.getTokenType(tokenIndex);\n\t\t\t\tlet currentTokenEnd = lineTokens.getTokenEndIndex(tokenIndex, lineText.length);\n\n\t\t\t\tif (currentTokenStart >= nextModeStart) {\n\t\t\t\t\tcurrentModeIndex++;\n\t\t\t\t\tnextModeStart = (currentModeIndex + 1 < modeTransitions.length ? modeTransitions[currentModeIndex + 1].startIndex : lineText.length + 1);\n\t\t\t\t\tcurrentModeId = modeTransitions[currentModeIndex].modeId;\n\t\t\t\t}\n\n\t\t\t\tif (currentModeId === modeId && !ignoreBracketsInToken(currentTokenType)) {\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tlet r = BracketsUtils.findNextBracketInToken(bracketRegex, lineNumber, lineText, currentTokenStart, currentTokenEnd);\n\t\t\t\t\t\tif (!r) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet hitText = lineText.substring(r.startColumn - 1, r.endColumn - 1);\n\n\t\t\t\t\t\tif (hitText === bracket.open) {\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t} else if (hitText === bracket.close) {\n\t\t\t\t\t\t\tcount--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (count === 0) {\n\t\t\t\t\t\t\treturn r;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentTokenStart = r.endColumn - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcurrentTokenStart = currentTokenEnd;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic findPrevBracket(_position:editorCommon.IPosition): editorCommon.IFoundBracket {\n\t\tlet position = this.validatePosition(_position);\n\n\t\tlet reversedBracketRegex = /[\\(\\)\\[\\]\\{\\}]/; // TODO@Alex: use mode's brackets\n\n\t\tfor (let lineNumber = position.lineNumber; lineNumber >= 1; lineNumber--) {\n\t\t\tlet lineTokens = this._lines[lineNumber - 1].getTokens(this._tokensInflatorMap);\n\t\t\tlet lineText = this._lines[lineNumber - 1].text;\n\n\t\t\tlet tokensLength = lineTokens.getTokenCount() - 1;\n\t\t\tlet currentTokenEnd = lineText.length;\n\t\t\tif (lineNumber === position.lineNumber) {\n\t\t\t\ttokensLength = lineTokens.findIndexOfOffset(position.column - 1);\n\t\t\t\tcurrentTokenEnd = position.column - 1;\n\t\t\t}\n\n\t\t\tfor (let tokenIndex = tokensLength; tokenIndex >= 0; tokenIndex--) {\n\t\t\t\tlet currentTokenType = lineTokens.getTokenType(tokenIndex);\n\t\t\t\tlet currentTokenStart = lineTokens.getTokenStartIndex(tokenIndex);\n\n\t\t\t\tif (!ignoreBracketsInToken(currentTokenType)) {\n\t\t\t\t\tlet r = BracketsUtils.findPrevBracketInToken(reversedBracketRegex, lineNumber, lineText, currentTokenStart, currentTokenEnd);\n\t\t\t\t\tif (r) {\n\t\t\t\t\t\treturn this._toFoundBracket(r);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcurrentTokenEnd = currentTokenStart;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic findNextBracket(_position:editorCommon.IPosition): editorCommon.IFoundBracket {\n\t\tlet position = this.validatePosition(_position);\n\n\t\tlet bracketRegex = /[\\(\\)\\[\\]\\{\\}]/; // TODO@Alex: use mode's brackets\n\n\t\tfor (let lineNumber = position.lineNumber, lineCount = this.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n\t\t\tlet lineTokens = this._lines[lineNumber - 1].getTokens(this._tokensInflatorMap);\n\t\t\tlet lineText = this._lines[lineNumber - 1].text;\n\n\t\t\tlet startTokenIndex = 0;\n\t\t\tlet currentTokenStart = lineTokens.getTokenStartIndex(startTokenIndex);\n\t\t\tif (lineNumber === position.lineNumber) {\n\t\t\t\tstartTokenIndex = lineTokens.findIndexOfOffset(position.column - 1);\n\t\t\t\tcurrentTokenStart = Math.max(currentTokenStart, position.column - 1);\n\t\t\t}\n\n\t\t\tfor (let tokenIndex = startTokenIndex, tokensLength = lineTokens.getTokenCount(); tokenIndex < tokensLength; tokenIndex++) {\n\t\t\t\tlet currentTokenType = lineTokens.getTokenType(tokenIndex);\n\t\t\t\tlet currentTokenEnd = lineTokens.getTokenEndIndex(tokenIndex, lineText.length);\n\n\t\t\t\tif (!ignoreBracketsInToken(currentTokenType)) {\n\t\t\t\t\tlet r = BracketsUtils.findNextBracketInToken(bracketRegex, lineNumber, lineText, currentTokenStart, currentTokenEnd);\n\t\t\t\t\tif (r) {\n\t\t\t\t\t\treturn this._toFoundBracket(r);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcurrentTokenStart = currentTokenEnd;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _toFoundBracket(r:Range): editorCommon.IFoundBracket {\n\t\tif (!r) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet text = this.getValueInRange(r);\n\n\t\t// TODO@Alex: use mode's brackets\n\t\tswitch (text) {\n\t\t\tcase '(': return { range: r, open: '(', close: ')', isOpen: true };\n\t\t\tcase ')': return { range: r, open: '(', close: ')', isOpen: false };\n\t\t\tcase '[': return { range: r, open: '[', close: ']', isOpen: true };\n\t\t\tcase ']': return { range: r, open: '[', close: ']', isOpen: false };\n\t\t\tcase '{': return { range: r, open: '{', close: '}', isOpen: true };\n\t\t\tcase '}': return { range: r, open: '{', close: '}', isOpen: false };\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {ModelLine} from 'vs/editor/common/model/modelLine';\nimport {TextModel} from 'vs/editor/common/model/textModel';\nimport {TextModelWithTokens} from 'vs/editor/common/model/textModelWithTokens';\nimport {IMode} from 'vs/editor/common/modes';\nimport {Range} from 'vs/editor/common/core/range';\nimport {Position} from 'vs/editor/common/core/position';\n\nexport interface IMirrorModelEvents {\n\tcontentChanged: editorCommon.IModelContentChangedEvent[];\n}\n\nconst NO_TAB_SIZE = 0;\n\nexport class AbstractMirrorModel extends TextModelWithTokens implements editorCommon.IMirrorModel {\n\n\t_associatedResource:URI;\n\n\tconstructor(allowedEventTypes:string[], versionId:number, value:editorCommon.IRawText, mode:IMode|TPromise<IMode>, associatedResource?:URI) {\n\t\tsuper(allowedEventTypes.concat([editorCommon.EventType.ModelDispose]), value, mode);\n\n\t\tthis._setVersionId(versionId);\n\t\tthis._associatedResource = associatedResource;\n\t}\n\n\tpublic getModeId(): string {\n\t\treturn this.getMode().getId();\n\t}\n\n\tpublic _constructLines(rawText:editorCommon.IRawText):void {\n\t\tsuper._constructLines(rawText);\n\t\t// Force EOL to be \\n\n\t\tthis._EOL = '\\n';\n\t}\n\n\tpublic destroy(): void {\n\t\tthis.dispose();\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.emit(editorCommon.EventType.ModelDispose);\n\t\tsuper.dispose();\n\t}\n\n\tpublic get uri(): URI {\n\t\treturn this._associatedResource;\n\t}\n\n\tpublic getRangeFromOffsetAndLength(offset:number, length:number): Range {\n\t\tlet startPosition = this.getPositionAt(offset);\n\t\tlet endPosition = this.getPositionAt(offset + length);\n\t\treturn new Range(\n\t\t\tstartPosition.lineNumber,\n\t\t\tstartPosition.column,\n\t\t\tendPosition.lineNumber,\n\t\t\tendPosition.column\n\t\t);\n\t}\n\n\tpublic getOffsetAndLengthFromRange(range:editorCommon.IRange):{offset:number; length:number;} {\n\t\tlet startOffset = this.getOffsetAt(new Position(range.startLineNumber, range.startColumn));\n\t\tlet endOffset = this.getOffsetAt(new Position(range.endLineNumber, range.endColumn));\n\t\treturn {\n\t\t\toffset: startOffset,\n\t\t\tlength: endOffset - startOffset\n\t\t};\n\t}\n\n\tpublic getPositionFromOffset(offset:number): Position {\n\t\treturn this.getPositionAt(offset);\n\t}\n\n\tpublic getOffsetFromPosition(position:editorCommon.IPosition): number {\n\t\treturn this.getOffsetAt(position);\n\t}\n\n\tpublic getLineStart(lineNumber:number): number {\n\t\tif (lineNumber < 1) {\n\t\t\tlineNumber = 1;\n\t\t}\n\t\tif (lineNumber > this.getLineCount()) {\n\t\t\tlineNumber = this.getLineCount();\n\t\t}\n\t\treturn this.getOffsetAt(new Position(lineNumber, 1));\n\t}\n\n\tpublic getAllWordsWithRange(): editorCommon.IRangeWithText[] {\n\t\tif (this._lines.length > 10000) {\n\t\t\t// This is a very heavy method, unavailable for very heavy models\n\t\t\treturn [];\n\t\t}\n\n\t\tvar result:editorCommon.IRangeWithText[] = [],\n\t\t\ti:number;\n\n\t\tvar toTextRange = function (info: editorCommon.IWordRange) {\n\t\t\tvar s = line.text.substring(info.start, info.end);\n\t\t\tvar r = { startLineNumber: i + 1, startColumn: info.start + 1, endLineNumber: i + 1, endColumn: info.end + 1 };\n\t\t\tresult.push({ text: s, range: r});\n\t\t};\n\n\t\tfor(i = 0; i < this._lines.length; i++) {\n\t\t\tvar line = this._lines[i];\n\t\t\tthis.wordenize(line.text).forEach(toTextRange);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic getAllWords(): string[] {\n\t\tvar result:string[] = [];\n\t\tthis._lines.forEach((line) => {\n\t\t\tthis.wordenize(line.text).forEach((info) => {\n\t\t\t\tresult.push(line.text.substring(info.start, info.end));\n\t\t\t});\n\t\t});\n\t\treturn result;\n\t}\n\n\tpublic getAllUniqueWords(skipWordOnce?:string) : string[] {\n\t\tvar foundSkipWord = false;\n\t\tvar uniqueWords = {};\n\t\treturn this.getAllWords().filter((word) => {\n\t\t\tif (skipWordOnce && !foundSkipWord && skipWordOnce === word) {\n\t\t\t\tfoundSkipWord = true;\n\t\t\t\treturn false;\n\t\t\t} else if (uniqueWords[word]) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tuniqueWords[word] = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\n//\t// TODO@Joh, TODO@Alex - remove these and make sure the super-things work\n\tprivate wordenize(content:string): editorCommon.IWordRange[] {\n\t\tvar result:editorCommon.IWordRange[] = [];\n\t\tvar match:RegExpExecArray;\n\t\tvar wordsRegexp = this._getWordDefinition();\n\t\twhile (match = wordsRegexp.exec(content)) {\n\t\t\tresult.push({ start: match.index, end: match.index + match[0].length });\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport function createTestMirrorModelFromString(value:string, mode:IMode = null, associatedResource?:URI): MirrorModel {\n\treturn new MirrorModel(0, TextModel.toRawText(value, TextModel.DEFAULT_CREATION_OPTIONS), mode, associatedResource);\n}\n\nexport class MirrorModel extends AbstractMirrorModel implements editorCommon.IMirrorModel {\n\n\tconstructor(versionId:number, value:editorCommon.IRawText, mode:IMode|TPromise<IMode>, associatedResource?:URI) {\n\t\tsuper(['changed'], versionId, value, mode, associatedResource);\n\t}\n\n\tpublic onEvents(events:IMirrorModelEvents) : void {\n\t\tlet changed = false;\n\t\tfor (let i = 0, len = events.contentChanged.length; i < len; i++) {\n\t\t\tlet contentChangedEvent = events.contentChanged[i];\n\n\t\t\tthis._setVersionId(contentChangedEvent.versionId);\n\t\t\tswitch (contentChangedEvent.changeType) {\n\t\t\t\tcase editorCommon.EventType.ModelRawContentChangedFlush:\n\t\t\t\t\tthis._onLinesFlushed(<editorCommon.IModelContentChangedFlushEvent>contentChangedEvent);\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase editorCommon.EventType.ModelRawContentChangedLinesDeleted:\n\t\t\t\t\tthis._onLinesDeleted(<editorCommon.IModelContentChangedLinesDeletedEvent>contentChangedEvent);\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase editorCommon.EventType.ModelRawContentChangedLinesInserted:\n\t\t\t\t\tthis._onLinesInserted(<editorCommon.IModelContentChangedLinesInsertedEvent>contentChangedEvent);\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase editorCommon.EventType.ModelRawContentChangedLineChanged:\n\t\t\t\t\tthis._onLineChanged(<editorCommon.IModelContentChangedLineChangedEvent>contentChangedEvent);\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (changed) {\n\t\t\tthis.emit('changed', {});\n\t\t}\n\t}\n\n\tprivate _onLinesFlushed(e:editorCommon.IModelContentChangedFlushEvent): void {\n\t\t// Flush my lines\n\t\tthis._constructLines(e.detail);\n\t\tthis._resetTokenizationState();\n\t}\n\n\tprivate _onLineChanged(e:editorCommon.IModelContentChangedLineChangedEvent) : void {\n\t\tthis._lines[e.lineNumber - 1].applyEdits({}, [{\n\t\t\tstartColumn: 1,\n\t\t\tendColumn: Number.MAX_VALUE,\n\t\t\ttext: e.detail,\n\t\t\tforceMoveMarkers: false\n\t\t}], NO_TAB_SIZE);\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.changeValue(e.lineNumber - 1, this._lines[e.lineNumber - 1].text.length + this._EOL.length);\n\t\t}\n\n\t\tthis._invalidateLine(e.lineNumber - 1);\n\t}\n\n\tprivate _onLinesDeleted(e:editorCommon.IModelContentChangedLinesDeletedEvent) : void {\n\t\tvar fromLineIndex = e.fromLineNumber - 1,\n\t\t\ttoLineIndex = e.toLineNumber - 1;\n\n\t\t// Save first line's state\n\t\tvar firstLineState = this._lines[fromLineIndex].getState();\n\n\t\tthis._lines.splice(fromLineIndex, toLineIndex - fromLineIndex + 1);\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.removeValues(fromLineIndex, toLineIndex - fromLineIndex + 1);\n\t\t}\n\n\t\tif (fromLineIndex < this._lines.length) {\n\t\t\t// This check is always true in real world, but the tests forced this\n\n\t\t\t// Restore first line's state\n\t\t\tthis._lines[fromLineIndex].setState(firstLineState);\n\n\t\t\t// Invalidate line\n\t\t\tthis._invalidateLine(fromLineIndex);\n\t\t}\n\t}\n\n\tprivate _onLinesInserted(e:editorCommon.IModelContentChangedLinesInsertedEvent) : void {\n\t\tvar lineIndex:number,\n\t\t\ti:number,\n\t\t\tsplitLines = e.detail.split('\\n');\n\n\t\tlet newLengths:number[] = [];\n\t\tfor (lineIndex = e.fromLineNumber - 1, i = 0; lineIndex < e.toLineNumber; lineIndex++, i++) {\n\t\t\tthis._lines.splice(lineIndex, 0, new ModelLine(0, splitLines[i], NO_TAB_SIZE));\n\t\t\tnewLengths.push(splitLines[i].length + this._EOL.length);\n\t\t}\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.insertValues(e.fromLineNumber - 1, newLengths);\n\t\t}\n\n\t\tif (e.fromLineNumber >= 2) {\n\t\t\t// This check is always true in real world, but the tests forced this\n\t\t\tthis._invalidateLine(e.fromLineNumber - 2);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IEventEmitter} from 'vs/base/common/eventEmitter';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {createDecorator} from 'vs/platform/instantiation/common/instantiation';\n\nexport const IEventService = createDecorator<IEventService>('eventService');\n\nexport interface IEventService {\n\t_serviceBrand: any;\n\n\t/**\n\t * Allows to add a listener to the platform event bus for all emitters that are known to the platform.\n\t */\n\taddListener2(eventType: string, listener: (event: any) => void): IDisposable;\n\n\t/**\n\t * Allows to add an event emitter to the platform bus such as Events from the emitter\n\t * can be received from all listeners on the bus.\n\t */\n\taddEmitter2(eventEmitter: IEventEmitter, emitterType?: string): IDisposable;\n\n\t/**\n\t * Emits an event of the given type into the platform event bus.\n\t * Note: Instead of emitting directly to the platform bus, it is also possible to register\n\t * as event emitter to the bus using addEmitter() with a emitterType specified. This\n\t * makes it possible to scope Events on the bus to a specific namespace, depending on the\n\t * emitter and avoids polluting the global namespace in the bus with Events.\n\t */\n\temit(eventType: string, e?: any): void;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Severity from 'vs/base/common/severity';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {createDecorator} from 'vs/platform/instantiation/common/instantiation';\n\nexport interface IExtensionDescription {\n\tid: string;\n\tname: string;\n\tversion: string;\n\tpublisher: string;\n\tisBuiltin: boolean;\n\textensionFolderPath: string;\n\textensionDependencies?: string[];\n\tactivationEvents?: string[];\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n\tcontributes?: { [point: string]: any; };\n}\n\nexport interface IActivationEventListener {\n\t(): void;\n}\n\nexport interface IPointListener {\n\t(desc: IExtensionDescription[]): void;\n}\n\nexport const IExtensionService = createDecorator<IExtensionService>('extensionService');\n\nexport interface IMessage {\n\ttype: Severity;\n\tmessage: string;\n\tsource: string;\n}\n\nexport interface IExtensionsStatus {\n\tmessages: IMessage[];\n}\n\nexport interface IExtensionService {\n\t_serviceBrand: any;\n\n\t/**\n\t * Send an activation event and activate interested extensions.\n\t */\n\tactivateByEvent(activationEvent: string): TPromise<void>;\n\n\t/**\n\t * Block on this signal any interactions with extensions.\n\t */\n\tonReady(): TPromise<boolean>;\n\n\t/**\n\t * Get information about extensions status.\n\t */\n\tgetExtensionsStatus(): { [id: string]: IExtensionsStatus };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {binarySearch} from 'vs/base/common/arrays';\nimport {ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\nimport {SyncDescriptor} from './descriptors';\n\ntype Entry = [ServiceIdentifier<any>, any];\n\nexport class ServiceCollection {\n\n\tprivate _entries: Entry[] = [];\n\n\tconstructor(...entries:[ServiceIdentifier<any>, any][]) {\n\t\tfor (let entry of entries) {\n\t\t\tthis.set(entry[0], entry[1]);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst entry: Entry = [id, instanceOrDescriptor];\n\t\tconst idx = binarySearch(this._entries, entry, ServiceCollection._entryCompare);\n\t\tif (idx < 0) {\n\t\t\t// new element\n\t\t\tthis._entries.splice(~idx, 0, entry);\n\t\t} else {\n\t\t\tconst old = this._entries[idx];\n\t\t\tthis._entries[idx] = entry;\n\t\t\treturn old[1];\n\t\t}\n\t}\n\n\tforEach(callback: (id: ServiceIdentifier<any>, instanceOrDescriptor: any) => any): void {\n\t\tfor (let entry of this._entries) {\n\t\t\tlet [id, instanceOrDescriptor] = entry;\n\t\t\tcallback(id, instanceOrDescriptor);\n\t\t}\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn binarySearch(this._entries, ServiceCollection._searchEntry(id), ServiceCollection._entryCompare) >= 0;\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tconst idx = binarySearch(this._entries, ServiceCollection._searchEntry(id), ServiceCollection._entryCompare);\n\t\tif (idx >= 0) {\n\t\t\treturn this._entries[idx][1];\n\t\t}\n\t}\n\n\tprivate static _dummy: Entry = [undefined, undefined];\n\n\tprivate static _searchEntry(id: ServiceIdentifier<any>): Entry {\n\t\tServiceCollection._dummy[0] = id;\n\t\treturn ServiceCollection._dummy;\n\t}\n\n\tprivate static _entryCompare(a: Entry, b: Entry): number {\n\t\tconst _a = a[0].toString();\n\t\tconst _b = b[0].toString();\n\t\tif (_a < _b) {\n\t\t\treturn -1;\n\t\t} else if (_a > _b) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {illegalArgument, illegalState, canceled} from 'vs/base/common/errors';\nimport {create} from 'vs/base/common/types';\nimport * as assert from 'vs/base/common/assert';\nimport {Graph} from 'vs/base/common/graph';\nimport {SyncDescriptor, AsyncDescriptor} from 'vs/platform/instantiation/common/descriptors';\nimport {ServiceIdentifier, IInstantiationService, ServicesAccessor, _util, optional} from 'vs/platform/instantiation/common/instantiation';\nimport {ServiceCollection} from 'vs/platform/instantiation/common/serviceCollection';\n\n\nexport class InstantiationService implements IInstantiationService {\n\n\t_serviceBrand: any;\n\n\tprivate _services: ServiceCollection;\n\tprivate _strict: boolean;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\tthis._services.forEach((id, thing) => {\n\t\t\tif (services.has(id)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// If we copy descriptors we might end up with\n\t\t\t// multiple instances of the same service\n\t\t\tif (thing instanceof SyncDescriptor) {\n\t\t\t\tthing = this._createAndCacheServiceInstance(id, thing);\n\t\t\t}\n\t\t\tservices.set(id, thing);\n\t\t});\n\t\treturn new InstantiationService(services, this._strict);\n\t}\n\n\tinvokeFunction<R>(signature: (accessor: ServicesAccessor, ...more: any[]) => R, ...args: any[]): R {\n\t\tlet accessor: ServicesAccessor;\n\t\ttry {\n\t\t\taccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>, isOptional?: typeof optional) => {\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id);\n\t\t\t\t\tif (!result && isOptional !== optional) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unkown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn signature.apply(undefined, [accessor].concat(args));\n\t\t} finally {\n\t\t\taccessor.get = function () {\n\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t};\n\t\t}\n\t}\n\n\tcreateInstance<T>(param: any, ...rest:any[]): any {\n\n\t\tif (param instanceof AsyncDescriptor) {\n\t\t\t// async\n\t\t\treturn this._createInstanceAsync(param, rest);\n\n\t\t} else if (param instanceof SyncDescriptor) {\n\t\t\t// sync\n\t\t\treturn this._createInstance(param, rest);\n\n\t\t} else {\n\t\t\t// sync, just ctor\n\t\t\treturn this._createInstance(new SyncDescriptor(param), rest);\n\t\t}\n\t}\n\n\tprivate _createInstanceAsync<T>(descriptor: AsyncDescriptor<T>, args: any[]): TPromise<T> {\n\n\t\tlet canceledError: Error;\n\n\t\treturn new TPromise((c, e, p) => {\n\t\t\trequire([descriptor.moduleName], (_module?: any) => {\n\t\t\t\tif (canceledError) {\n\t\t\t\t\te(canceledError);\n\t\t\t\t}\n\n\t\t\t\tif (!_module) {\n\t\t\t\t\treturn e(illegalArgument('module not found: ' + descriptor.moduleName));\n\t\t\t\t}\n\n\t\t\t\tlet ctor: Function;\n\t\t\t\tif (!descriptor.ctorName) {\n\t\t\t\t\tctor = _module;\n\t\t\t\t} else {\n\t\t\t\t\tctor = _module[descriptor.ctorName];\n\t\t\t\t}\n\n\t\t\t\tif (typeof ctor !== 'function') {\n\t\t\t\t\treturn e(illegalArgument('not a function: ' + descriptor.ctorName || descriptor.moduleName));\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\targs.unshift.apply(args, descriptor.staticArguments()); // instead of spread in ctor call\n\t\t\t\t\tc(this._createInstance(new SyncDescriptor<T>(ctor), args));\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn e(error);\n\t\t\t\t}\n\t\t\t}, e);\n\t\t}, () => {\n\t\t\tcanceledError = canceled();\n\t\t});\n\t}\n\n\tprivate _createInstance<T>(desc: SyncDescriptor<T>, args: any[]): T {\n\n\t\t// arguments given by createInstance-call and/or the descriptor\n\t\tlet staticArgs = desc.staticArguments().concat(args);\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(desc.ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs = serviceDependencies.map(dependency => {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${desc.ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\treturn service;\n\t\t});\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : staticArgs.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (staticArgs.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${desc.ctor.name} at position ${\n\t\t\t\tfirstServiceArgPos + 1} conflicts with ${staticArgs.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - staticArgs.length;\n\t\t\tif (delta > 0) {\n\t\t\t\tstaticArgs = staticArgs.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\tstaticArgs = staticArgs.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// // check for missing args\n\t\t// for (let i = 0; i < serviceArgs.length; i++) {\n\t\t// \tif (!serviceArgs[i]) {\n\t\t// \t\tconsole.warn(`${desc.ctor.name} MISSES service dependency ${serviceDependencies[i].id}`, new Error().stack);\n\t\t// \t}\n\t\t// }\n\n\t\t// now create the instance\n\t\tconst argArray = [desc.ctor];\n\t\targArray.push(...staticArgs);\n\t\targArray.push(...serviceArgs);\n\n\t\tconst instance = create.apply(null, argArray);\n\t\tdesc._validate(instance);\n\t\treturn <T>instance;\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>): T {\n\t\tlet thing = this._services.get(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._createAndCacheServiceInstance(id, thing);\n\t\t} else {\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>): T {\n\t\tassert.ok(this._services.get(id) instanceof SyncDescriptor);\n\n\t\tconst graph = new Graph<{ id: ServiceIdentifier<any>, desc: SyncDescriptor<any> }>(data => data.id.toString());\n\n\t\tfunction throwCycleError() {\n\t\t\tconst err = new Error('[createInstance] cyclic dependency between services');\n\t\t\terr.message = graph.toString();\n\t\t\tthrow err;\n\t\t}\n\n\t\tlet count = 0;\n\t\tconst stack = [{ id, desc }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop();\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// TODO@joh use the graph to find a cycle\n\t\t\t// a weak heuristic for cycle checks\n\t\t\tif (count++ > 100) {\n\t\t\t\tthrowCycleError();\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if the need to be created first\n\t\t\tlet dependencies = _util.getServiceDependencies(item.desc.ctor);\n\t\t\tfor (let dependency of dependencies) {\n\n\t\t\t\tlet instanceOrDesc = this._services.get(dependency.id);\n\t\t\t\tif (!instanceOrDesc) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tlet roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (graph.length !== 0) {\n\t\t\t\t\tthrowCycleError();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (let root of roots) {\n\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\tconst instance = this._createInstance(root.data.desc, []);\n\t\t\t\tthis._services.set(root.data.id, instance);\n\t\t\t\tgraph.removeNode(root.data);\n\t\t\t}\n\t\t}\n\n\t\treturn <T> this._services.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Types = require('vs/base/common/types');\nimport Assert = require('vs/base/common/assert');\nimport {IInstantiationService, IConstructorSignature0} from 'vs/platform/instantiation/common/instantiation';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension idenifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension idenifier\n\t */\n\tas(id: string): any;\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate data: { [id: string]: any; };\n\n\tconstructor() {\n\t\tthis.data = {};\n\t}\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.hasOwnProperty(id), 'There is already an extension with this id');\n\n\t\tthis.data[id] = data;\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.hasOwnProperty(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data[id] || null;\n\t}\n}\n\nexport var Registry = <IRegistry>new RegistryImpl();\n\n/**\n * A base class for registries that leverage the instantiation service to create instances.\n */\nexport class BaseRegistry<T> {\n\tprivate toBeInstantiated: IConstructorSignature0<T>[] = [];\n\tprivate instances: T[] = [];\n\tprivate instantiationService: IInstantiationService;\n\n\tpublic setInstantiationService(service: IInstantiationService): void {\n\t\tthis.instantiationService = service;\n\n\t\twhile (this.toBeInstantiated.length > 0) {\n\t\t\tlet entry = this.toBeInstantiated.shift();\n\t\t\tthis.instantiate(entry);\n\t\t}\n\t}\n\n\tprivate instantiate(ctor: IConstructorSignature0<T>): void {\n\t\tlet instance = this.instantiationService.createInstance(ctor);\n\t\tthis.instances.push(instance);\n\t}\n\n\t_register(ctor: IConstructorSignature0<T>): void {\n\t\tif (this.instantiationService) {\n\t\t\tthis.instantiate(ctor);\n\t\t} else {\n\t\t\tthis.toBeInstantiated.push(ctor);\n\t\t}\n\t}\n\n\t_getInstances(): T[] {\n\t\treturn this.instances.slice(0);\n\t}\n\n\t_setInstances(instances: T[]): void {\n\t\tthis.instances = instances;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {Registry} from 'vs/platform/platform';\nimport {ILanguageExtensionPoint} from 'vs/editor/common/services/modeService';\n\nexport interface ILegacyLanguageDefinition {\n\tid: string;\n\textensions: string[];\n\tfilenames?: string[];\n\tfirstLine?: string;\n\taliases: string[];\n\tmimetypes: string[];\n\tmoduleId: string;\n\tctorName: string;\n\tdeps?: string[];\n}\n\n// Define extension point ids\nexport var Extensions = {\n\tModesRegistry: 'editor.modesRegistry'\n};\n\nexport class EditorModesRegistry {\n\n\tprivate _compatModes: ILegacyLanguageDefinition[];\n\tprivate _languages: ILanguageExtensionPoint[];\n\n\tprivate _onDidAddCompatModes: Emitter<ILegacyLanguageDefinition[]> = new Emitter<ILegacyLanguageDefinition[]>();\n\tpublic onDidAddCompatModes: Event<ILegacyLanguageDefinition[]> = this._onDidAddCompatModes.event;\n\n\tprivate _onDidAddLanguages: Emitter<ILanguageExtensionPoint[]> = new Emitter<ILanguageExtensionPoint[]>();\n\tpublic onDidAddLanguages: Event<ILanguageExtensionPoint[]> = this._onDidAddLanguages.event;\n\n\tconstructor() {\n\t\tthis._compatModes = [];\n\t\tthis._languages = [];\n\t}\n\n\t// --- compat modes\n\n\n\tpublic registerCompatModes(def:ILegacyLanguageDefinition[]): void {\n\t\tthis._compatModes = this._compatModes.concat(def);\n\t\tthis._onDidAddCompatModes.fire(def);\n\t}\n\tpublic registerCompatMode(def:ILegacyLanguageDefinition): void {\n\t\tthis._compatModes.push(def);\n\t\tthis._onDidAddCompatModes.fire([def]);\n\t}\n\tpublic getCompatModes(): ILegacyLanguageDefinition[] {\n\t\treturn this._compatModes.slice(0);\n\t}\n\n\t// --- languages\n\n\tpublic registerLanguage(def:ILanguageExtensionPoint): void {\n\t\tthis._languages.push(def);\n\t\tthis._onDidAddLanguages.fire([def]);\n\t}\n\tpublic registerLanguages(def:ILanguageExtensionPoint[]): void {\n\t\tthis._languages = this._languages.concat(def);\n\t\tthis._onDidAddLanguages.fire(def);\n\t}\n\tpublic getLanguages(): ILanguageExtensionPoint[] {\n\t\treturn this._languages.slice(0);\n\t}\n}\n\nexport var ModesRegistry = new EditorModesRegistry();\nRegistry.add(Extensions.ModesRegistry, ModesRegistry);\n\nModesRegistry.registerLanguage({\n\tid: 'plaintext',\n\textensions: ['.txt', '.gitignore'],\n\taliases: [nls.localize('plainText.alias', \"Plain Text\"), 'text'],\n\tmimetypes: ['text/plain']\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {ICompatWorkerService, ICompatMode, IRawModelData} from 'vs/editor/common/services/compatWorkerService';\nimport {IResourceService} from 'vs/editor/common/services/resourceService';\nimport {ILanguageExtensionPoint, IModeService} from 'vs/editor/common/services/modeService';\nimport {IMirrorModelEvents, MirrorModel} from 'vs/editor/common/model/mirrorModel';\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport URI from 'vs/base/common/uri';\nimport {ILegacyLanguageDefinition, ModesRegistry} from 'vs/editor/common/modes/modesRegistry';\n\nexport class CompatWorkerServiceWorker implements ICompatWorkerService {\n\tpublic _serviceBrand: any;\n\tpublic isInMainThread = false;\n\tprivate _compatModes: {[modeId:string]:ICompatMode;};\n\n\tconstructor(\n\t\t@IResourceService private resourceService: IResourceService,\n\t\t@IModeService private modeService: IModeService,\n\t\tmodesRegistryData: {\n\t\t\tcompatModes: ILegacyLanguageDefinition[];\n\t\t\tlanguages: ILanguageExtensionPoint[];\n\t\t}\n\t) {\n\t\tModesRegistry.registerCompatModes(modesRegistryData.compatModes);\n\t\tModesRegistry.registerLanguages(modesRegistryData.languages);\n\t\tthis._compatModes = Object.create(null);\n\t}\n\n\tregisterCompatMode(compatMode:ICompatMode): void {\n\t\tthis._compatModes[compatMode.getId()] = compatMode;\n\t}\n\n\tpublic handleMainRequest(rpcId: string, methodName: string, args: any[]): any {\n\t\tif (rpcId === '$') {\n\t\t\tswitch (methodName) {\n\t\t\t\tcase 'acceptNewModel':\n\t\t\t\t\treturn this._acceptNewModel(args[0]);\n\t\t\t\tcase 'acceptDidDisposeModel':\n\t\t\t\t\treturn this._acceptDidDisposeModel(args[0]);\n\t\t\t\tcase 'acceptModelEvents':\n\t\t\t\t\treturn this._acceptModelEvents(args[0], args[1]);\n\t\t\t\tcase 'acceptCompatModes':\n\t\t\t\t\treturn this._acceptCompatModes(args[0]);\n\t\t\t\tcase 'acceptLanguages':\n\t\t\t\t\treturn this._acceptLanguages(args[0]);\n\t\t\t\tcase 'instantiateCompatMode':\n\t\t\t\t\treturn this._instantiateCompatMode(args[0]);\n\t\t\t}\n\t\t}\n\n\t\tlet obj = this._compatModes[rpcId];\n\t\treturn TPromise.as(obj[methodName].apply(obj, args));\n\t}\n\n\tpublic CompatWorker(obj: ICompatMode, methodName: string, target: Function, param: any[]): TPromise<any> {\n\t\treturn target.apply(obj, param);\n\t}\n\n\tprivate _acceptNewModel(data: IRawModelData): TPromise<void> {\n\t\t// Create & insert the mirror model eagerly in the resource service\n\t\tlet mirrorModel = new MirrorModel(data.versionId, data.value, null, data.url);\n\t\tthis.resourceService.insert(mirrorModel.uri, mirrorModel);\n\n\t\t// Block worker execution until the mode is instantiated\n\t\treturn this.modeService.getOrCreateMode(data.modeId).then((mode) => {\n\t\t\t// Changing mode should trigger a remove & an add, therefore:\n\n\t\t\t// (1) Remove from resource service\n\t\t\tthis.resourceService.remove(mirrorModel.uri);\n\n\t\t\t// (2) Change mode\n\t\t\tmirrorModel.setMode(mode);\n\n\t\t\t// (3) Insert again to resource service (it will have the new mode)\n\t\t\tthis.resourceService.insert(mirrorModel.uri, mirrorModel);\n\t\t});\n\t}\n\n\tprivate _acceptDidDisposeModel(uri: URI): void {\n\t\tlet model = <MirrorModel>this.resourceService.get(uri);\n\t\tthis.resourceService.remove(uri);\n\t\tmodel.dispose();\n\t}\n\n\tprivate _acceptModelEvents(uri: URI, events: IMirrorModelEvents): void {\n\t\tlet model = <MirrorModel>this.resourceService.get(uri);\n\t\ttry {\n\t\t\tmodel.onEvents(events);\n\t\t} catch (err) {\n\t\t\tonUnexpectedError(err);\n\t\t}\n\t}\n\n\tprivate _acceptCompatModes(modes:ILegacyLanguageDefinition[]): void {\n\t\tModesRegistry.registerCompatModes(modes);\n\t}\n\n\tprivate _acceptLanguages(languages:ILanguageExtensionPoint[]): void {\n\t\tModesRegistry.registerLanguages(languages);\n\t}\n\n\tprivate _instantiateCompatMode(modeId:string): TPromise<void> {\n\t\treturn this.modeService.getOrCreateMode(modeId).then(_ => void 0);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport Event, {Emitter} from 'vs/base/common/event';\nimport * as mime from 'vs/base/common/mime';\nimport * as strings from 'vs/base/common/strings';\nimport {ILegacyLanguageDefinition, ModesRegistry} from 'vs/editor/common/modes/modesRegistry';\nimport {ILanguageExtensionPoint} from 'vs/editor/common/services/modeService';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport interface ICompatModeDescriptor {\n\tmoduleId: string;\n\tctorName: string;\n\tdeps: string[];\n}\n\nexport class LanguagesRegistry {\n\n\tprivate knownModeIds: { [id: string]: boolean; };\n\tprivate mime2LanguageId: { [mimeType: string]: string; };\n\tprivate name2LanguageId: { [name: string]: string; };\n\tprivate id2Name: { [id: string]: string; };\n\tprivate id2Extensions: { [id: string]: string[]; };\n\tprivate compatModes: { [id: string]: ICompatModeDescriptor; };\n\tprivate lowerName2Id: { [name: string]: string; };\n\tprivate id2ConfigurationFiles: { [id:string]: string[]; };\n\n\tprivate _onDidAddModes: Emitter<string[]> = new Emitter<string[]>();\n\tpublic onDidAddModes: Event<string[]> = this._onDidAddModes.event;\n\n\tconstructor(useModesRegistry = true) {\n\t\tthis.knownModeIds = {};\n\t\tthis.mime2LanguageId = {};\n\t\tthis.name2LanguageId = {};\n\t\tthis.id2Name = {};\n\t\tthis.id2Extensions = {};\n\t\tthis.compatModes = {};\n\t\tthis.lowerName2Id = {};\n\t\tthis.id2ConfigurationFiles = {};\n\n\t\tif (useModesRegistry) {\n\t\t\tthis._registerCompatModes(ModesRegistry.getCompatModes());\n\t\t\tModesRegistry.onDidAddCompatModes((m) => this._registerCompatModes(m));\n\n\t\t\tthis._registerLanguages(ModesRegistry.getLanguages());\n\t\t\tModesRegistry.onDidAddLanguages((m) => this._registerLanguages(m));\n\t\t}\n\t}\n\n\t_registerCompatModes(defs:ILegacyLanguageDefinition[]): void {\n\t\tlet addedModes: string[] = [];\n\t\tfor (let i = 0; i < defs.length; i++) {\n\t\t\tlet def = defs[i];\n\n\t\t\tthis._registerLanguage({\n\t\t\t\tid: def.id,\n\t\t\t\textensions: def.extensions,\n\t\t\t\tfilenames: def.filenames,\n\t\t\t\tfirstLine: def.firstLine,\n\t\t\t\taliases: def.aliases,\n\t\t\t\tmimetypes: def.mimetypes\n\t\t\t});\n\n\t\t\tthis.compatModes[def.id] = {\n\t\t\t\tmoduleId: def.moduleId,\n\t\t\t\tctorName: def.ctorName,\n\t\t\t\tdeps: def.deps\n\t\t\t};\n\n\t\t\taddedModes.push(def.id);\n\t\t}\n\t\tthis._onDidAddModes.fire(addedModes);\n\t}\n\n\t_registerLanguages(desc:ILanguageExtensionPoint[]): void {\n\t\tlet addedModes: string[] = [];\n\t\tfor (let i = 0; i < desc.length; i++) {\n\t\t\tthis._registerLanguage(desc[i]);\n\t\t\taddedModes.push(desc[i].id);\n\t\t}\n\t\tthis._onDidAddModes.fire(addedModes);\n\t}\n\n\tprivate _setLanguageName(languageId:string, languageName:string, force:boolean): void {\n\t\tlet prevName = this.id2Name[languageId];\n\t\tif (prevName) {\n\t\t\tif (!force) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdelete this.name2LanguageId[prevName];\n\t\t}\n\n\t\tthis.name2LanguageId[languageName] = languageId;\n\t\tthis.id2Name[languageId] = languageName;\n\t}\n\n\tprivate _registerLanguage(lang: ILanguageExtensionPoint): void {\n\t\tthis.knownModeIds[lang.id] = true;\n\n\t\tvar primaryMime: string = null;\n\n\t\tif (typeof lang.mimetypes !== 'undefined' && Array.isArray(lang.mimetypes)) {\n\t\t\tfor (var i = 0; i < lang.mimetypes.length; i++) {\n\t\t\t\tif (!primaryMime) {\n\t\t\t\t\tprimaryMime = lang.mimetypes[i];\n\t\t\t\t}\n\t\t\t\tthis.mime2LanguageId[lang.mimetypes[i]] = lang.id;\n\t\t\t}\n\t\t}\n\n\t\tif (!primaryMime) {\n\t\t\tprimaryMime = 'text/x-' + lang.id;\n\t\t\tthis.mime2LanguageId[primaryMime] = lang.id;\n\t\t}\n\n\t\tif (Array.isArray(lang.extensions)) {\n\t\t\tthis.id2Extensions[lang.id] = this.id2Extensions[lang.id] || [];\n\t\t\tfor (let extension of lang.extensions) {\n\t\t\t\tmime.registerTextMime({ mime: primaryMime, extension: extension });\n\t\t\t\tthis.id2Extensions[lang.id].push(extension);\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(lang.filenames)) {\n\t\t\tfor (let filename of lang.filenames) {\n\t\t\t\tmime.registerTextMime({ mime: primaryMime, filename: filename });\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(lang.filenamePatterns)) {\n\t\t\tfor (let filenamePattern of lang.filenamePatterns) {\n\t\t\t\tmime.registerTextMime({ mime: primaryMime, filepattern: filenamePattern });\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\n\t\t\tvar firstLineRegexStr = lang.firstLine;\n\t\t\tif (firstLineRegexStr.charAt(0) !== '^') {\n\t\t\t\tfirstLineRegexStr = '^' + firstLineRegexStr;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tvar firstLineRegex = new RegExp(firstLineRegexStr);\n\t\t\t\tif (!strings.regExpLeadsToEndlessLoop(firstLineRegex)) {\n\t\t\t\t\tmime.registerTextMime({ mime: primaryMime, firstline: firstLineRegex });\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t// Most likely, the regex was bad\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t}\n\n\t\tthis.lowerName2Id[lang.id.toLowerCase()] = lang.id;\n\n\t\tif (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\n\t\t\tfor (var i = 0; i < lang.aliases.length; i++) {\n\t\t\t\tif (!lang.aliases[i] || lang.aliases[i].length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.lowerName2Id[lang.aliases[i].toLowerCase()] = lang.id;\n\t\t\t}\n\t\t}\n\n\t\tlet containsAliases = (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases) && lang.aliases.length > 0);\n\t\tif (containsAliases && lang.aliases[0] === null) {\n\t\t\t// signal that this language should not get a name\n\t\t} else {\n\t\t\tlet bestName = (containsAliases ? lang.aliases[0] : null) || lang.id;\n\t\t\tthis._setLanguageName(lang.id, bestName, containsAliases);\n\t\t}\n\n\t\tif (typeof lang.configuration === 'string') {\n\t\t\tthis.id2ConfigurationFiles[lang.id] = this.id2ConfigurationFiles[lang.id] || [];\n\t\t\tthis.id2ConfigurationFiles[lang.id].push(lang.configuration);\n\t\t}\n\t}\n\n\tpublic isRegisteredMode(mimetypeOrModeId: string): boolean {\n\t\t// Is this a known mime type ?\n\t\tif (hasOwnProperty.call(this.mime2LanguageId, mimetypeOrModeId)) {\n\t\t\treturn true;\n\t\t}\n\t\t// Is this a known mode id ?\n\t\treturn hasOwnProperty.call(this.knownModeIds, mimetypeOrModeId);\n\t}\n\n\tpublic getRegisteredModes(): string[] {\n\t\treturn Object.keys(this.knownModeIds);\n\t}\n\n\tpublic getRegisteredLanguageNames(): string[]{\n\t\treturn Object.keys(this.name2LanguageId);\n\t}\n\n\tpublic getLanguageName(modeId: string): string {\n\t\treturn this.id2Name[modeId] || null;\n\t}\n\n\tpublic getModeIdForLanguageNameLowercase(languageNameLower: string): string {\n\t\treturn this.lowerName2Id[languageNameLower] || null;\n\t}\n\n\tpublic getConfigurationFiles(modeId: string): string[] {\n\t\treturn this.id2ConfigurationFiles[modeId] || [];\n\t}\n\n\tpublic getMimeForMode(theModeId: string): string {\n\t\tlet keys = Object.keys(this.mime2LanguageId);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tlet _mime = keys[i];\n\t\t\tlet modeId = this.mime2LanguageId[_mime];\n\t\t\tif (modeId === theModeId) {\n\t\t\t\treturn _mime;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIdsOrName: string): string[] {\n\t\tif (!commaSeparatedMimetypesOrCommaSeparatedIdsOrName) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn (\n\t\t\tcommaSeparatedMimetypesOrCommaSeparatedIdsOrName.\n\t\t\t\tsplit(',').\n\t\t\t\tmap((mimeTypeOrIdOrName) => mimeTypeOrIdOrName.trim()).\n\t\t\t\tmap((mimeTypeOrIdOrName) => {\n\t\t\t\t\treturn this.mime2LanguageId[mimeTypeOrIdOrName] || mimeTypeOrIdOrName;\n\t\t\t\t}).\n\t\t\t\tfilter((modeId) => {\n\t\t\t\t\treturn this.knownModeIds[modeId];\n\t\t\t\t})\n\t\t);\n\t}\n\n\tpublic getModeIdsFromLanguageName(languageName: string): string[]{\n\t\tif (!languageName) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (hasOwnProperty.call(this.name2LanguageId, languageName)) {\n\t\t\treturn [this.name2LanguageId[languageName]];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tpublic getModeIdsFromFilenameOrFirstLine(filename: string, firstLine?:string): string[] {\n\t\tif (!filename && !firstLine) {\n\t\t\treturn [];\n\t\t}\n\t\tvar mimeTypes = mime.guessMimeTypes(filename, firstLine);\n\t\treturn this.extractModeIds(mimeTypes.join(','));\n\t}\n\n\tpublic getCompatMode(modeId: string): ICompatModeDescriptor {\n\t\treturn this.compatModes[modeId] || null;\n\t}\n\n\tpublic getExtensions(languageName: string): string[] {\n\t\tlet languageId = this.name2LanguageId[languageName];\n\t\tif (!languageId) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this.id2Extensions[languageId];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IJSONSchema} from 'vs/base/common/jsonSchema';\nimport platform = require('vs/platform/platform');\nimport {EventEmitter} from 'vs/base/common/eventEmitter';\nimport {IDisposable} from 'vs/base/common/lifecycle';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas?: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n\n\t/**\n\t * Adds a change listener\n\t */\n\taddRegistryChangedListener(callback: (e: IJSONContributionRegistryEvent) => void): IDisposable;\n\n}\n\nexport interface IJSONContributionRegistryEvent {\n\n}\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\tprivate eventEmitter: EventEmitter;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t\tthis.eventEmitter = new EventEmitter();\n\t}\n\n\tpublic addRegistryChangedListener(callback: (e: IJSONContributionRegistryEvent) => void): IDisposable {\n\t\treturn this.eventEmitter.addListener2('registryChanged', callback);\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis.eventEmitter.emit('registryChanged', {});\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport {IJSONSchema} from 'vs/base/common/jsonSchema';\nimport * as paths from 'vs/base/common/paths';\nimport Severity from 'vs/base/common/severity';\nimport {IActivationEventListener, IMessage, IExtensionDescription, IPointListener} from 'vs/platform/extensions/common/extensions';\nimport {Extensions, IJSONContributionRegistry} from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport {Registry} from 'vs/platform/platform';\n\nexport interface IExtensionMessageCollector {\n\terror(message: string): void;\n\twarn(message: string): void;\n\tinfo(message: string): void;\n}\n\nclass ExtensionMessageCollector implements IExtensionMessageCollector {\n\n\tprivate _messageHandler: (msg:IMessage)=>void;\n\tprivate _source: string;\n\n\tconstructor(messageHandler: (msg:IMessage)=>void, source:string) {\n\t\tthis._messageHandler = messageHandler;\n\t\tthis._source = source;\n\t}\n\n\tprivate _msg(type:Severity, message:string): void {\n\t\tthis._messageHandler({\n\t\t\ttype: type,\n\t\t\tmessage: message,\n\t\t\tsource: this._source\n\t\t});\n\t}\n\n\tpublic error(message: string): void {\n\t\tthis._msg(Severity.Error, message);\n\t}\n\n\tpublic warn(message: string): void {\n\t\tthis._msg(Severity.Warning, message);\n\t}\n\n\tpublic info(message: string): void {\n\t\tthis._msg(Severity.Info, message);\n\t}\n\n}\n\nexport function isValidExtensionDescription(extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\tif (!extensionDescription) {\n\t\tnotices.push(nls.localize('extensionDescription.empty', \"Got empty extension description\"));\n\t\treturn false;\n\t}\n\tif (typeof extensionDescription.publisher !== 'string') {\n\t\tnotices.push(nls.localize('extensionDescription.publisher', \"property `{0}` is mandatory and must be of type `string`\", 'publisher'));\n\t\treturn false;\n\t}\n\tif (typeof extensionDescription.name !== 'string') {\n\t\tnotices.push(nls.localize('extensionDescription.name', \"property `{0}` is mandatory and must be of type `string`\", 'name'));\n\t\treturn false;\n\t}\n\tif (typeof extensionDescription.version !== 'string') {\n\t\tnotices.push(nls.localize('extensionDescription.version', \"property `{0}` is mandatory and must be of type `string`\", 'version'));\n\t\treturn false;\n\t}\n\tif (!extensionDescription.engines) {\n\t\tnotices.push(nls.localize('extensionDescription.engines', \"property `{0}` is mandatory and must be of type `object`\", 'engines'));\n\t\treturn false;\n\t}\n\tif (typeof extensionDescription.engines.vscode !== 'string') {\n\t\tnotices.push(nls.localize('extensionDescription.engines.vscode', \"property `{0}` is mandatory and must be of type `string`\", 'engines.vscode'));\n\t\treturn false;\n\t}\n\tif (typeof extensionDescription.extensionDependencies !== 'undefined') {\n\t\tif (!_isStringArray(extensionDescription.extensionDependencies)) {\n\t\t\tnotices.push(nls.localize('extensionDescription.extensionDependencies', \"property `{0}` can be omitted or must be of type `string[]`\", 'extensionDependencies'));\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (typeof extensionDescription.activationEvents !== 'undefined') {\n\t\tif (!_isStringArray(extensionDescription.activationEvents)) {\n\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents1', \"property `{0}` can be omitted or must be of type `string[]`\", 'activationEvents'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.main === 'undefined') {\n\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents2', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (typeof extensionDescription.main !== 'undefined') {\n\t\tif (typeof extensionDescription.main !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.main1', \"property `{0}` can be omitted or must be of type `string`\", 'main'));\n\t\t\treturn false;\n\t\t} else {\n\t\t\tlet normalizedAbsolutePath = paths.normalize(paths.join(extensionFolderPath, extensionDescription.main));\n\n\t\t\tif (normalizedAbsolutePath.indexOf(extensionFolderPath)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main2', \"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", normalizedAbsolutePath, extensionFolderPath));\n\t\t\t\t// not a failure case\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.activationEvents === 'undefined') {\n\t\t\tnotices.push(nls.localize('extensionDescription.main3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\ninterface IExtensionDescriptionMap {\n\t[extensionId: string]: IExtensionDescription;\n}\nconst hasOwnProperty = Object.hasOwnProperty;\nlet schemaRegistry = <IJSONContributionRegistry>Registry.as(Extensions.JSONContribution);\n\nexport interface IExtensionPointUser<T> {\n\tdescription: IExtensionDescription;\n\tvalue: T;\n\tcollector: IExtensionMessageCollector;\n}\n\nexport interface IExtensionPointHandler<T> {\n\t(extensions: IExtensionPointUser<T>[]): void;\n}\n\nexport interface IExtensionPoint<T> {\n\tname: string;\n\tsetHandler(handler: IExtensionPointHandler<T>): void;\n}\n\nexport interface IExtensionsRegistry {\n\tregisterExtensions(extensionDescriptions: IExtensionDescription[]): void;\n\n\tgetExtensionDescriptionsForActivationEvent(activationEvent: string): IExtensionDescription[];\n\tgetAllExtensionDescriptions(): IExtensionDescription[];\n\tgetExtensionDescription(extensionId: string): IExtensionDescription;\n\n\tregisterOneTimeActivationEventListener(activationEvent: string, listener: IActivationEventListener): void;\n\ttriggerActivationEventListeners(activationEvent: string): void;\n\n\tregisterExtensionPoint<T>(extensionPoint: string, jsonSchema: IJSONSchema): IExtensionPoint<T>;\n\thandleExtensionPoints(messageHandler: (msg:IMessage)=>void): void;\n}\n\nclass ExtensionPoint<T> implements IExtensionPoint<T> {\n\n\tpublic name: string;\n\tprivate _registry: ExtensionsRegistryImpl;\n\tprivate _handler: IExtensionPointHandler<T>;\n\tprivate _messageHandler: (msg:IMessage)=>void;\n\n\tconstructor(name: string, registry: ExtensionsRegistryImpl) {\n\t\tthis.name = name;\n\t\tthis._registry = registry;\n\t\tthis._handler = null;\n\t\tthis._messageHandler = null;\n\t}\n\n\tsetHandler(handler: IExtensionPointHandler<T>): void {\n\t\tif (this._handler) {\n\t\t\tthrow new Error('Handler already set!');\n\t\t}\n\t\tthis._handler = handler;\n\t\tthis._handle();\n\t}\n\n\thandle(messageHandler: (msg:IMessage)=>void): void {\n\t\tthis._messageHandler = messageHandler;\n\t\tthis._handle();\n\t}\n\n\tprivate _handle(): void {\n\t\tif (!this._handler || !this._messageHandler) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._registry.registerPointListener(this.name, (descriptions: IExtensionDescription[]) => {\n\t\t\tlet users = descriptions.map((desc) => {\n\t\t\t\treturn {\n\t\t\t\t\tdescription: desc,\n\t\t\t\t\tvalue: desc.contributes[this.name],\n\t\t\t\t\tcollector: new ExtensionMessageCollector(this._messageHandler, desc.extensionFolderPath)\n\t\t\t\t};\n\t\t\t});\n\t\t\tthis._handler(users);\n\t\t});\n\t}\n}\n\n\n\nconst schemaId = 'vscode://schemas/vscode-extensions';\nconst schema: IJSONSchema = {\n\tdefault: {\n\t\t'name': '{{name}}',\n\t\t'description': '{{description}}',\n\t\t'author': '{{author}}',\n\t\t'version': '{{1.0.0}}',\n\t\t'main': '{{pathToMain}}',\n\t\t'dependencies': {}\n\t},\n\tproperties: {\n\t\t// engines: {\n\t\t// \trequired: [ 'vscode' ],\n\t\t// \tproperties: {\n\t\t// \t\t'vscode': {\n\t\t// \t\t\ttype: 'string',\n\t\t// \t\t\tdescription: nls.localize('vscode.extension.engines.vscode', 'Specifies that this package only runs inside VSCode of the given version.'),\n\t\t// \t\t}\n\t\t// \t}\n\t\t// },\n\t\tdisplayName: {\n\t\t\tdescription: nls.localize('vscode.extension.displayName', 'The display name for the extension used in the VS Code gallery.'),\n\t\t\ttype: 'string'\n\t\t},\n\t\tcategories: {\n\t\t\tdescription: nls.localize('vscode.extension.categories', 'The categories used by the VS Code gallery to categorize the extension.'),\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['Languages', 'Snippets', 'Linters', 'Themes', 'Debuggers', 'Productivity', 'Other']\n\t\t\t}\n\t\t},\n\t\tgalleryBanner: {\n\t\t\ttype: 'object',\n\t\t\tdescription: nls.localize('vscode.extension.galleryBanner', 'Banner used in the VS Code marketplace.'),\n\t\t\tproperties: {\n\t\t\t\tcolor: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.galleryBanner.color', 'The banner color on the VS Code marketplace page header.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\ttheme: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.galleryBanner.theme', 'The color theme for the font used in the banner.'),\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum: ['dark', 'light']\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tpublisher: {\n\t\t\tdescription: nls.localize('vscode.extension.publisher', 'The publisher of the VS Code extension.'),\n\t\t\ttype: 'string'\n\t\t},\n\t\tactivationEvents: {\n\t\t\tdescription: nls.localize('vscode.extension.activationEvents', 'Activation events for the VS Code extension.'),\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdefaultSnippets: [{ label: 'onLanguage', body: 'onLanguage:{{languageId}}'}, {label: 'onCommand', body: 'onCommand:{{commandId}}'}, {label: 'onDebug', body: 'onDebug:{{type}}'}, {label: 'workspaceContains', body: 'workspaceContains:{{fileName}}'}],\n\t\t\t}\n\t\t},\n\t\textensionDependencies: {\n\t\t\tdescription: nls.localize('vscode.extension.extensionDependencies', 'Dependencies to other extensions. The identifier of an extension is always ${publisher}.${name}. For example: vscode.csharp.'),\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\tscripts: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\t'vscode:prepublish': {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.scripts.prepublish', 'Script executed before the package is published as a VS Code extension.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcontributes: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes', 'All contributions of the VS Code extension represented by this package.'),\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\t// extensions will fill in\n\t\t\t},\n\t\t\tdefault: {}\n\t\t}\n\t}\n};\n\ninterface IPointListenerEntry {\n\textensionPoint: string;\n\tlistener: IPointListener;\n}\n\nclass ExtensionsRegistryImpl implements IExtensionsRegistry {\n\n\tprivate _extensionsMap: IExtensionDescriptionMap;\n\tprivate _extensionsArr: IExtensionDescription[];\n\tprivate _activationMap: { [activationEvent: string]: IExtensionDescription[]; };\n\tprivate _pointListeners: IPointListenerEntry[];\n\tprivate _oneTimeActivationEventListeners: { [activationEvent: string]: IActivationEventListener[]; };\n\tprivate _extensionPoints: { [extPoint: string]: ExtensionPoint<any>; };\n\n\tconstructor() {\n\t\tthis._extensionsMap = {};\n\t\tthis._extensionsArr = [];\n\t\tthis._activationMap = {};\n\t\tthis._pointListeners = [];\n\t\tthis._extensionPoints = {};\n\t\tthis._oneTimeActivationEventListeners = {};\n\t}\n\n\tpublic registerPointListener(point: string, handler: IPointListener): void {\n\t\tlet entry = {\n\t\t\textensionPoint: point,\n\t\t\tlistener: handler\n\t\t};\n\t\tthis._pointListeners.push(entry);\n\t\tthis._triggerPointListener(entry, ExtensionsRegistryImpl._filterWithExtPoint(this.getAllExtensionDescriptions(), point));\n\t}\n\n\tpublic registerExtensionPoint<T>(extensionPoint: string, jsonSchema: IJSONSchema): IExtensionPoint<T> {\n\t\tif (hasOwnProperty.call(this._extensionPoints, extensionPoint)) {\n\t\t\tthrow new Error('Duplicate extension point: ' + extensionPoint);\n\t\t}\n\t\tlet result = new ExtensionPoint<T>(extensionPoint, this);\n\t\tthis._extensionPoints[extensionPoint] = result;\n\n\t\tschema.properties['contributes'].properties[extensionPoint] = jsonSchema;\n\t\tschemaRegistry.registerSchema(schemaId, schema);\n\n\t\treturn result;\n\t}\n\n\tpublic handleExtensionPoints(messageHandler: (msg:IMessage)=>void): void {\n\t\tObject.keys(this._extensionPoints).forEach((extensionPointName) => {\n\t\t\tthis._extensionPoints[extensionPointName].handle(messageHandler);\n\t\t});\n\t}\n\n\tprivate _triggerPointListener(handler: IPointListenerEntry, desc: IExtensionDescription[]): void {\n\t\t// console.log('_triggerPointListeners: ' + desc.length + ' OF ' + handler.extensionPoint);\n\t\tif (!desc || desc.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\thandler.listener(desc);\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t}\n\t}\n\n\tpublic registerExtensions(extensionDescriptions: IExtensionDescription[]): void {\n\t\tfor (let i = 0, len = extensionDescriptions.length; i < len; i++) {\n\t\t\tlet extensionDescription = extensionDescriptions[i];\n\n\t\t\tif (hasOwnProperty.call(this._extensionsMap, extensionDescription.id)) {\n\t\t\t\t// No overwriting allowed!\n\t\t\t\tconsole.error('Extension `' + extensionDescription.id + '` is already registered');\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis._extensionsMap[extensionDescription.id] = extensionDescription;\n\t\t\tthis._extensionsArr.push(extensionDescription);\n\n\t\t\tif (Array.isArray(extensionDescription.activationEvents)) {\n\t\t\t\tfor (let j = 0, lenJ = extensionDescription.activationEvents.length; j < lenJ; j++) {\n\t\t\t\t\tlet activationEvent = extensionDescription.activationEvents[j];\n\t\t\t\t\tthis._activationMap[activationEvent] = this._activationMap[activationEvent] || [];\n\t\t\t\t\tthis._activationMap[activationEvent].push(extensionDescription);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0, len = this._pointListeners.length; i < len; i++) {\n\t\t\tlet listenerEntry = this._pointListeners[i];\n\t\t\tlet descriptions = ExtensionsRegistryImpl._filterWithExtPoint(extensionDescriptions, listenerEntry.extensionPoint);\n\t\t\tthis._triggerPointListener(listenerEntry, descriptions);\n\t\t}\n\t}\n\n\tprivate static _filterWithExtPoint(input: IExtensionDescription[], point: string): IExtensionDescription[] {\n\t\treturn input.filter((desc) => {\n\t\t\treturn (desc.contributes && hasOwnProperty.call(desc.contributes, point));\n\t\t});\n\t}\n\n\tpublic getExtensionDescriptionsForActivationEvent(activationEvent: string): IExtensionDescription[] {\n\t\tif (!hasOwnProperty.call(this._activationMap, activationEvent)) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this._activationMap[activationEvent].slice(0);\n\t}\n\n\tpublic getAllExtensionDescriptions(): IExtensionDescription[] {\n\t\treturn this._extensionsArr.slice(0);\n\t}\n\n\tpublic getExtensionDescription(extensionId: string): IExtensionDescription {\n\t\tif (!hasOwnProperty.call(this._extensionsMap, extensionId)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._extensionsMap[extensionId];\n\t}\n\n\tpublic registerOneTimeActivationEventListener(activationEvent: string, listener: IActivationEventListener): void {\n\t\tif (!hasOwnProperty.call(this._oneTimeActivationEventListeners, activationEvent)) {\n\t\t\tthis._oneTimeActivationEventListeners[activationEvent] = [];\n\t\t}\n\t\tthis._oneTimeActivationEventListeners[activationEvent].push(listener);\n\t}\n\n\tpublic triggerActivationEventListeners(activationEvent: string): void {\n\t\tif (hasOwnProperty.call(this._oneTimeActivationEventListeners, activationEvent)) {\n\t\t\tlet listeners = this._oneTimeActivationEventListeners[activationEvent];\n\t\t\tdelete this._oneTimeActivationEventListeners[activationEvent];\n\n\t\t\tfor (let i = 0, len = listeners.length; i < len; i++) {\n\t\t\t\tlet listener = listeners[i];\n\t\t\t\ttry {\n\t\t\t\t\tlistener();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nfunction _isStringArray(arr: string[]): boolean {\n\tif (!Array.isArray(arr)) {\n\t\treturn false;\n\t}\n\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\tif (typeof arr[i] !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nconst PRExtensions = {\n\tExtensionsRegistry: 'ExtensionsRegistry'\n};\nRegistry.add(PRExtensions.ExtensionsRegistry, new ExtensionsRegistryImpl());\nexport const ExtensionsRegistry: IExtensionsRegistry = Registry.as(PRExtensions.ExtensionsRegistry);\n\nschemaRegistry.registerSchema(schemaId, schema);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {IDisposable, empty as EmptyDisposable} from 'vs/base/common/lifecycle'; // TODO@Alex\nimport * as objects from 'vs/base/common/objects';\nimport * as paths from 'vs/base/common/paths';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport mime = require('vs/base/common/mime');\nimport {IFilesConfiguration} from 'vs/platform/files/common/files';\nimport {createAsyncDescriptor1} from 'vs/platform/instantiation/common/descriptors';\nimport {IExtensionService} from 'vs/platform/extensions/common/extensions';\nimport {IExtensionPointUser, IExtensionMessageCollector, ExtensionsRegistry} from 'vs/platform/extensions/common/extensionsRegistry';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport * as modes from 'vs/editor/common/modes';\nimport {FrankensteinMode} from 'vs/editor/common/modes/abstractMode';\nimport {ModesRegistry} from 'vs/editor/common/modes/modesRegistry';\nimport {LanguagesRegistry} from 'vs/editor/common/services/languagesRegistry';\nimport {ILanguageExtensionPoint, IValidLanguageExtensionPoint, IModeLookupResult, IModeService} from 'vs/editor/common/services/modeService';\nimport {IConfigurationService} from 'vs/platform/configuration/common/configuration';\nimport {AbstractState} from 'vs/editor/common/modes/abstractState';\nimport {Token} from 'vs/editor/common/modes/supports';\n\ninterface IModeConfigurationMap { [modeId: string]: any; }\n\nlet languagesExtPoint = ExtensionsRegistry.registerExtensionPoint<ILanguageExtensionPoint[]>('languages', {\n\tdescription: nls.localize('vscode.extension.contributes.languages', 'Contributes language declarations.'),\n\ttype: 'array',\n\titems: {\n\t\ttype: 'object',\n\t\tdefaultSnippets: [{ body: { id: '{{languageId}}', aliases: ['{{label}}'], extensions: ['{{extension}}'], configuration: './language-configuration.json'} }],\n\t\tproperties: {\n\t\t\tid: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.id', 'ID of the language.'),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\taliases: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.aliases', 'Name aliases for the language.'),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t\textensions: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.extensions', 'File extensions associated to the language.'),\n\t\t\t\tdefault: ['.foo'],\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t\tfilenames: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.filenames', 'File names associated to the language.'),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t\tfilenamePatterns: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.filenamePatterns', 'File name glob patterns associated to the language.'),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t\tmimetypes: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.mimetypes', 'Mime types associated to the language.'),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t\tfirstLine: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.firstLine', 'A regular expression matching the first line of a file of the language.'),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\tconfiguration: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.configuration', 'A relative path to a file containing configuration options for the language.'),\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: './language-configuration.json'\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction isUndefinedOrStringArray(value: string[]): boolean {\n\tif (typeof value === 'undefined') {\n\t\treturn true;\n\t}\n\tif (!Array.isArray(value)) {\n\t\treturn false;\n\t}\n\treturn value.every(item => typeof item === 'string');\n}\n\nfunction isValidLanguageExtensionPoint(value:ILanguageExtensionPoint, collector:IExtensionMessageCollector): boolean {\n\tif (!value) {\n\t\tcollector.error(nls.localize('invalid.empty', \"Empty value for `contributes.{0}`\", languagesExtPoint.name));\n\t\treturn false;\n\t}\n\tif (typeof value.id !== 'string') {\n\t\tcollector.error(nls.localize('require.id', \"property `{0}` is mandatory and must be of type `string`\", 'id'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.extensions)) {\n\t\tcollector.error(nls.localize('opt.extensions', \"property `{0}` can be omitted and must be of type `string[]`\", 'extensions'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.filenames)) {\n\t\tcollector.error(nls.localize('opt.filenames', \"property `{0}` can be omitted and must be of type `string[]`\", 'filenames'));\n\t\treturn false;\n\t}\n\tif (typeof value.firstLine !== 'undefined' && typeof value.firstLine !== 'string') {\n\t\tcollector.error(nls.localize('opt.firstLine', \"property `{0}` can be omitted and must be of type `string`\", 'firstLine'));\n\t\treturn false;\n\t}\n\tif (typeof value.configuration !== 'undefined' && typeof value.configuration !== 'string') {\n\t\tcollector.error(nls.localize('opt.configuration', \"property `{0}` can be omitted and must be of type `string`\", 'configuration'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.aliases)) {\n\t\tcollector.error(nls.localize('opt.aliases', \"property `{0}` can be omitted and must be of type `string[]`\", 'aliases'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.mimetypes)) {\n\t\tcollector.error(nls.localize('opt.mimetypes', \"property `{0}` can be omitted and must be of type `string[]`\", 'mimetypes'));\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nexport class ModeServiceImpl implements IModeService {\n\tpublic _serviceBrand: any;\n\n\tprivate _instantiationService: IInstantiationService;\n\tprotected _extensionService: IExtensionService;\n\n\tprivate _activationPromises: { [modeId: string]: TPromise<modes.IMode>; };\n\tprivate _instantiatedModes: { [modeId: string]: modes.IMode; };\n\tprivate _config: IModeConfigurationMap;\n\n\tprivate _registry: LanguagesRegistry;\n\n\tprivate _onDidAddModes: Emitter<string[]> = new Emitter<string[]>();\n\tpublic onDidAddModes: Event<string[]> = this._onDidAddModes.event;\n\n\tprivate _onDidCreateMode: Emitter<modes.IMode> = new Emitter<modes.IMode>();\n\tpublic onDidCreateMode: Event<modes.IMode> = this._onDidCreateMode.event;\n\n\tconstructor(instantiationService:IInstantiationService, extensionService:IExtensionService) {\n\t\tthis._instantiationService = instantiationService;\n\t\tthis._extensionService = extensionService;\n\n\t\tthis._activationPromises = {};\n\t\tthis._instantiatedModes = {};\n\t\tthis._config = {};\n\n\t\tthis._registry = new LanguagesRegistry();\n\t\tthis._registry.onDidAddModes((modes) => this._onDidAddModes.fire(modes));\n\t}\n\n\tpublic getConfigurationForMode(modeId:string): any {\n\t\treturn this._config[modeId] || {};\n\t}\n\n\tpublic configureMode(mimetype: string, options: any): void {\n\t\tvar modeId = this.getModeId(mimetype);\n\t\tif (modeId) {\n\t\t\tthis.configureModeById(modeId, options);\n\t\t}\n\t}\n\n\tpublic configureModeById(modeId:string, options:any):void {\n\t\tvar previousOptions = this._config[modeId] || {};\n\t\tvar newOptions = objects.mixin(objects.clone(previousOptions), options);\n\n\t\tif (objects.equals(previousOptions, newOptions)) {\n\t\t\t// This configure call is a no-op\n\t\t\treturn;\n\t\t}\n\n\t\tthis._config[modeId] = newOptions;\n\n\t\tvar mode = this.getMode(modeId);\n\t\tif (mode && mode.configSupport) {\n\t\t\tmode.configSupport.configure(this.getConfigurationForMode(modeId));\n\t\t}\n\t}\n\n\tprotected _configureAllModes(config:any): void {\n\t\tif (!config) {\n\t\t\treturn;\n\t\t}\n\t\tvar modes = this._registry.getRegisteredModes();\n\t\tmodes.forEach((modeIdentifier) => {\n\t\t\tvar configuration = config[modeIdentifier];\n\t\t\tthis.configureModeById(modeIdentifier, configuration);\n\t\t});\n\t}\n\n\tpublic isRegisteredMode(mimetypeOrModeId: string): boolean {\n\t\treturn this._registry.isRegisteredMode(mimetypeOrModeId);\n\t}\n\n\tpublic isCompatMode(modeId:string): boolean {\n\t\tlet compatModeData = this._registry.getCompatMode(modeId);\n\t\treturn (compatModeData ? true : false);\n\t}\n\n\tpublic getRegisteredModes(): string[] {\n\t\treturn this._registry.getRegisteredModes();\n\t}\n\n\tpublic getRegisteredLanguageNames(): string[] {\n\t\treturn this._registry.getRegisteredLanguageNames();\n\t}\n\n\tpublic getExtensions(alias: string): string[] {\n\t\treturn this._registry.getExtensions(alias);\n\t}\n\n\tpublic getMimeForMode(modeId: string): string {\n\t\treturn this._registry.getMimeForMode(modeId);\n\t}\n\n\tpublic getLanguageName(modeId: string): string {\n\t\treturn this._registry.getLanguageName(modeId);\n\t}\n\n\tpublic getModeIdForLanguageName(alias:string): string {\n\t\treturn this._registry.getModeIdForLanguageNameLowercase(alias);\n\t}\n\n\tpublic getModeId(commaSeparatedMimetypesOrCommaSeparatedIds: string): string {\n\t\tvar modeIds = this._registry.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\n\n\t\tif (modeIds.length > 0) {\n\t\t\treturn modeIds[0];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getConfigurationFiles(modeId: string): string[] {\n\t\treturn this._registry.getConfigurationFiles(modeId);\n\t}\n\n\t// --- instantiation\n\n\tpublic lookup(commaSeparatedMimetypesOrCommaSeparatedIds: string): IModeLookupResult[]{\n\t\tvar r: IModeLookupResult[] = [];\n\t\tvar modeIds = this._registry.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\n\n\t\tfor (var i = 0; i < modeIds.length; i++) {\n\t\t\tvar modeId = modeIds[i];\n\n\t\t\tr.push({\n\t\t\t\tmodeId: modeId,\n\t\t\t\tisInstantiated: this._instantiatedModes.hasOwnProperty(modeId)\n\t\t\t});\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tpublic getMode(commaSeparatedMimetypesOrCommaSeparatedIds: string): modes.IMode {\n\t\tvar modeIds = this._registry.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\n\n\t\tvar isPlainText = false;\n\t\tfor (var i = 0; i < modeIds.length; i++) {\n\t\t\tif (this._instantiatedModes.hasOwnProperty(modeIds[i])) {\n\t\t\t\treturn this._instantiatedModes[modeIds[i]];\n\t\t\t}\n\t\t\tisPlainText = isPlainText || (modeIds[i] === 'plaintext');\n\t\t}\n\n\t\tif (isPlainText) {\n\t\t\t// Try to do it synchronously\n\t\t\tvar r: modes.IMode = null;\n\t\t\tthis.getOrCreateMode(commaSeparatedMimetypesOrCommaSeparatedIds).then((mode) => {\n\t\t\t\tr = mode;\n\t\t\t}).done(null, onUnexpectedError);\n\t\t\treturn r;\n\t\t}\n\t}\n\n\tpublic getModeIdByLanguageName(languageName: string): string {\n\t\tvar modeIds = this._registry.getModeIdsFromLanguageName(languageName);\n\n\t\tif (modeIds.length > 0) {\n\t\t\treturn modeIds[0];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getModeIdByFilenameOrFirstLine(filename: string, firstLine?:string): string {\n\t\tvar modeIds = this._registry.getModeIdsFromFilenameOrFirstLine(filename, firstLine);\n\n\t\tif (modeIds.length > 0) {\n\t\t\treturn modeIds[0];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic onReady(): TPromise<boolean> {\n\t\treturn this._extensionService.onReady();\n\t}\n\n\tpublic getOrCreateMode(commaSeparatedMimetypesOrCommaSeparatedIds: string): TPromise<modes.IMode> {\n\t\treturn this.onReady().then(() => {\n\t\t\tvar modeId = this.getModeId(commaSeparatedMimetypesOrCommaSeparatedIds);\n\t\t\t// Fall back to plain text if no mode was found\n\t\t\treturn this._getOrCreateMode(modeId || 'plaintext');\n\t\t});\n\t}\n\n\tpublic getOrCreateModeByLanguageName(languageName: string): TPromise<modes.IMode> {\n\t\treturn this.onReady().then(() => {\n\t\t\tvar modeId = this.getModeIdByLanguageName(languageName);\n\t\t\t// Fall back to plain text if no mode was found\n\t\t\treturn this._getOrCreateMode(modeId || 'plaintext');\n\t\t});\n\t}\n\n\tpublic getOrCreateModeByFilenameOrFirstLine(filename: string, firstLine?:string): TPromise<modes.IMode> {\n\t\treturn this.onReady().then(() => {\n\t\t\tvar modeId = this.getModeIdByFilenameOrFirstLine(filename, firstLine);\n\t\t\t// Fall back to plain text if no mode was found\n\t\t\treturn this._getOrCreateMode(modeId || 'plaintext');\n\t\t});\n\t}\n\n\tprivate _getOrCreateMode(modeId: string): TPromise<modes.IMode> {\n\t\tif (this._instantiatedModes.hasOwnProperty(modeId)) {\n\t\t\treturn TPromise.as(this._instantiatedModes[modeId]);\n\t\t}\n\n\t\tif (this._activationPromises.hasOwnProperty(modeId)) {\n\t\t\treturn this._activationPromises[modeId];\n\t\t}\n\t\tvar c, e;\n\t\tvar promise = new TPromise((cc,ee,pp) => { c = cc; e = ee; });\n\t\tthis._activationPromises[modeId] = promise;\n\n\t\tthis._createMode(modeId).then((mode) => {\n\t\t\tthis._instantiatedModes[modeId] = mode;\n\t\t\tdelete this._activationPromises[modeId];\n\n\t\t\tthis._onDidCreateMode.fire(mode);\n\n\t\t\tthis._extensionService.activateByEvent(`onLanguage:${modeId}`).done(null, onUnexpectedError);\n\n\t\t\treturn this._instantiatedModes[modeId];\n\t\t}).then(c, e);\n\n\t\treturn promise;\n\t}\n\n\tprivate _createMode(modeId:string): TPromise<modes.IMode> {\n\t\tlet modeDescriptor = this._createModeDescriptor(modeId);\n\n\t\tlet compatModeData = this._registry.getCompatMode(modeId);\n\t\tif (compatModeData) {\n\t\t\t// This is a compatibility mode\n\n\t\t\tlet resolvedDeps: TPromise<modes.IMode[]> = null;\n\t\t\tif (Array.isArray(compatModeData.deps)) {\n\t\t\t\tresolvedDeps = TPromise.join(compatModeData.deps.map(dep => this.getOrCreateMode(dep)));\n\t\t\t} else {\n\t\t\t\tresolvedDeps = TPromise.as<modes.IMode[]>(null);\n\t\t\t}\n\n\t\t\treturn resolvedDeps.then(_ => {\n\t\t\t\tlet compatModeAsyncDescriptor = createAsyncDescriptor1<modes.IModeDescriptor, modes.IMode>(compatModeData.moduleId, compatModeData.ctorName);\n\t\t\t\treturn this._instantiationService.createInstance(compatModeAsyncDescriptor, modeDescriptor).then((compatMode) => {\n\t\t\t\t\tif (compatMode.configSupport) {\n\t\t\t\t\t\tcompatMode.configSupport.configure(this.getConfigurationForMode(modeId));\n\t\t\t\t\t}\n\t\t\t\t\treturn compatMode;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn TPromise.as<modes.IMode>(this._instantiationService.createInstance(FrankensteinMode, modeDescriptor));\n\t}\n\n\tprivate _createModeDescriptor(modeId:string): modes.IModeDescriptor {\n\t\treturn {\n\t\t\tid: modeId\n\t\t};\n\t}\n\n\tprivate _registerTokenizationSupport<T>(mode:modes.IMode, callback: (mode: modes.IMode) => T): IDisposable {\n\t\tif (mode.setTokenizationSupport) {\n\t\t\treturn mode.setTokenizationSupport(callback);\n\t\t} else {\n\t\t\tconsole.warn('Cannot register tokenizationSupport on mode ' + mode.getId() + ' because it does not support it.');\n\t\t\treturn EmptyDisposable;\n\t\t}\n\t}\n\n\tprivate registerModeSupport<T>(modeId: string, callback: (mode: modes.IMode) => T): IDisposable {\n\t\tif (this._instantiatedModes.hasOwnProperty(modeId)) {\n\t\t\treturn this._registerTokenizationSupport(this._instantiatedModes[modeId], callback);\n\t\t}\n\n\t\tlet cc: (disposable:IDisposable)=>void;\n\t\tlet promise = new TPromise<IDisposable>((c, e) => { cc = c; });\n\n\t\tlet disposable = this.onDidCreateMode((mode) => {\n\t\t\tif (mode.getId() !== modeId) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcc(this._registerTokenizationSupport(mode, callback));\n\t\t\tdisposable.dispose();\n\t\t});\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tpromise.done(disposable => disposable.dispose(), null);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic registerTokenizationSupport(modeId: string, callback: (mode: modes.IMode) => modes.ITokenizationSupport): IDisposable {\n\t\treturn this.registerModeSupport(modeId, callback);\n\t}\n\n\tpublic registerTokenizationSupport2(modeId: string, support: modes.TokensProvider): IDisposable {\n\t\treturn this.registerModeSupport(modeId, (mode) => {\n\t\t\treturn new TokenizationSupport2Adapter(mode, support);\n\t\t});\n\t}\n}\n\nexport class TokenizationState2Adapter implements modes.IState {\n\n\tprivate _mode: modes.IMode;\n\tprivate _actual: modes.IState2;\n\tprivate _stateData: modes.IState;\n\n\tconstructor(mode: modes.IMode, actual: modes.IState2, stateData: modes.IState) {\n\t\tthis._mode = mode;\n\t\tthis._actual = actual;\n\t\tthis._stateData = stateData;\n\t}\n\n\tpublic get actual(): modes.IState2 { return this._actual; }\n\n\tpublic clone(): TokenizationState2Adapter {\n\t\treturn new TokenizationState2Adapter(this._mode, this._actual.clone(), AbstractState.safeClone(this._stateData));\n\t}\n\n\tpublic equals(other:modes.IState): boolean {\n\t\tif (other instanceof TokenizationState2Adapter) {\n\t\t\tif (!this._actual.equals(other._actual)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn AbstractState.safeEquals(this._stateData, other._stateData);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getMode(): modes.IMode {\n\t\treturn this._mode;\n\t}\n\n\tpublic tokenize(stream:any): any {\n\t\tthrow new Error('Unexpected tokenize call!');\n\t}\n\n\tpublic getStateData(): modes.IState {\n\t\treturn this._stateData;\n\t}\n\n\tpublic setStateData(stateData:modes.IState): void {\n\t\tthis._stateData = stateData;\n\t}\n}\n\nexport class TokenizationSupport2Adapter implements modes.ITokenizationSupport {\n\n\tprivate _mode: modes.IMode;\n\tprivate _actual: modes.TokensProvider;\n\n\tconstructor(mode: modes.IMode, actual: modes.TokensProvider) {\n\t\tthis._mode = mode;\n\t\tthis._actual = actual;\n\t}\n\n\tpublic getInitialState(): modes.IState {\n\t\treturn new TokenizationState2Adapter(this._mode, this._actual.getInitialState(), null);\n\t}\n\n\tpublic tokenize(line:string, state:modes.IState, offsetDelta: number = 0, stopAtOffset?: number): modes.ILineTokens {\n\t\tif (state instanceof TokenizationState2Adapter) {\n\t\t\tlet actualResult = this._actual.tokenize(line, state.actual);\n\t\t\tlet tokens: modes.IToken[] = [];\n\t\t\tactualResult.tokens.forEach((t) => {\n\t\t\t\tif (typeof t.scopes === 'string') {\n\t\t\t\t\ttokens.push(new Token(t.startIndex + offsetDelta, <string>t.scopes));\n\t\t\t\t} else if (Array.isArray(t.scopes) && t.scopes.length === 1) {\n\t\t\t\t\ttokens.push(new Token(t.startIndex + offsetDelta, t.scopes[0]));\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Only token scopes as strings or of precisely 1 length are supported at this time!');\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn {\n\t\t\t\ttokens: tokens,\n\t\t\t\tactualStopOffset: offsetDelta + line.length,\n\t\t\t\tendState: new TokenizationState2Adapter(state.getMode(), actualResult.endState, state.getStateData()),\n\t\t\t\tmodeTransitions: [{ startIndex: offsetDelta, mode: state.getMode() }],\n\t\t\t};\n\t\t}\n\t\tthrow new Error('Unexpected state to tokenize with!');\n\t}\n\n}\n\nexport class MainThreadModeServiceImpl extends ModeServiceImpl {\n\tprivate _configurationService: IConfigurationService;\n\tprivate _onReadyPromise: TPromise<boolean>;\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService:IInstantiationService,\n\t\t@IExtensionService extensionService:IExtensionService,\n\t\t@IConfigurationService configurationService:IConfigurationService\n\t) {\n\t\tsuper(instantiationService, extensionService);\n\t\tthis._configurationService = configurationService;\n\n\t\tlanguagesExtPoint.setHandler((extensions:IExtensionPointUser<ILanguageExtensionPoint[]>[]) => {\n\t\t\tlet allValidLanguages: IValidLanguageExtensionPoint[] = [];\n\n\t\t\tfor (let i = 0, len = extensions.length; i < len; i++) {\n\t\t\t\tlet extension = extensions[i];\n\n\t\t\t\tif (!Array.isArray(extension.value)) {\n\t\t\t\t\textension.collector.error(nls.localize('invalid', \"Invalid `contributes.{0}`. Expected an array.\", languagesExtPoint.name));\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (let j = 0, lenJ = extension.value.length; j < lenJ; j++) {\n\t\t\t\t\tlet ext = extension.value[j];\n\t\t\t\t\tif (isValidLanguageExtensionPoint(ext, extension.collector)) {\n\t\t\t\t\t\tlet configuration = (ext.configuration ? paths.join(extension.description.extensionFolderPath, ext.configuration) : ext.configuration);\n\t\t\t\t\t\tallValidLanguages.push({\n\t\t\t\t\t\t\tid: ext.id,\n\t\t\t\t\t\t\textensions: ext.extensions,\n\t\t\t\t\t\t\tfilenames: ext.filenames,\n\t\t\t\t\t\t\tfilenamePatterns: ext.filenamePatterns,\n\t\t\t\t\t\t\tfirstLine: ext.firstLine,\n\t\t\t\t\t\t\taliases: ext.aliases,\n\t\t\t\t\t\t\tmimetypes: ext.mimetypes,\n\t\t\t\t\t\t\tconfiguration: configuration\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tModesRegistry.registerLanguages(allValidLanguages);\n\n\t\t});\n\n\t\tthis._configurationService.onDidUpdateConfiguration(e => this.onConfigurationChange(e.config));\n\t}\n\n\tpublic onReady(): TPromise<boolean> {\n\t\tif (!this._onReadyPromise) {\n\t\t\tconst configuration = this._configurationService.getConfiguration<IFilesConfiguration>();\n\t\t\tthis._onReadyPromise = this._extensionService.onReady().then(() => {\n\t\t\t\tthis.onConfigurationChange(configuration);\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\n\t\treturn this._onReadyPromise;\n\t}\n\n\tprivate onConfigurationChange(configuration: IFilesConfiguration): void {\n\n\t\t// Update Languages\n\t\tthis._configureAllModes(configuration);\n\n\t\t// Clear user configured mime associations\n\t\tmime.clearTextMimes(true /* user configured */);\n\n\t\t// Register based on settings\n\t\tif (configuration.files && configuration.files.associations) {\n\t\t\tObject.keys(configuration.files.associations).forEach(pattern => {\n\t\t\t\tmime.registerTextMime({ mime: this.getMimeForMode(configuration.files.associations[pattern]), filepattern: pattern, userConfigured: true });\n\t\t\t});\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport Severity from 'vs/base/common/severity';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IExtensionDescription, IExtensionService, IExtensionsStatus} from 'vs/platform/extensions/common/extensions';\nimport {ExtensionsRegistry} from 'vs/platform/extensions/common/extensionsRegistry';\n\nconst hasOwnProperty = Object.hasOwnProperty;\n\nexport abstract class ActivatedExtension {\n\tactivationFailed: boolean;\n\n\tconstructor(activationFailed: boolean) {\n\t\tthis.activationFailed = activationFailed;\n\t}\n}\n\nexport interface IActivatedExtensionMap<T extends ActivatedExtension> {\n\t[extensionId: string]: T;\n}\n\ninterface IActivatingExtensionMap {\n\t[extensionId: string]: TPromise<void>;\n}\n\nexport abstract class AbstractExtensionService<T extends ActivatedExtension> implements IExtensionService {\n\tpublic _serviceBrand: any;\n\n\tprivate _activatingExtensions: IActivatingExtensionMap;\n\tprotected _activatedExtensions: IActivatedExtensionMap<T>;\n\tprivate _onReady: TPromise<boolean>;\n\tprivate _onReadyC: (v: boolean) => void;\n\n\tconstructor(isReadyByDefault: boolean) {\n\t\tif (isReadyByDefault) {\n\t\t\tthis._onReady = TPromise.as(true);\n\t\t\tthis._onReadyC = (v: boolean) => { /*no-op*/ };\n\t\t} else {\n\t\t\tthis._onReady = new TPromise<boolean>((c, e, p) => {\n\t\t\t\tthis._onReadyC = c;\n\t\t\t}, () => {\n\t\t\t\tconsole.warn('You should really not try to cancel this ready promise!');\n\t\t\t});\n\t\t}\n\t\tthis._activatingExtensions = {};\n\t\tthis._activatedExtensions = {};\n\t}\n\n\tprotected _triggerOnReady(): void {\n\t\tthis._onReadyC(true);\n\t}\n\n\tpublic onReady(): TPromise<boolean> {\n\t\treturn this._onReady;\n\t}\n\n\tpublic getExtensionsStatus(): { [id: string]: IExtensionsStatus } {\n\t\treturn null;\n\t}\n\n\tpublic isActivated(extensionId: string): boolean {\n\t\treturn hasOwnProperty.call(this._activatedExtensions, extensionId);\n\t}\n\n\tpublic activateByEvent(activationEvent: string): TPromise<void> {\n\t\treturn this._onReady.then(() => {\n\t\t\tExtensionsRegistry.triggerActivationEventListeners(activationEvent);\n\t\t\tlet activateExtensions = ExtensionsRegistry.getExtensionDescriptionsForActivationEvent(activationEvent);\n\t\t\treturn this._activateExtensions(activateExtensions, 0);\n\t\t});\n\t}\n\n\tpublic activateById(extensionId: string): TPromise<void> {\n\t\treturn this._onReady.then(() => {\n\t\t\tlet desc = ExtensionsRegistry.getExtensionDescription(extensionId);\n\t\t\tif (!desc) {\n\t\t\t\tthrow new Error('Extension `' + extensionId + '` is not known');\n\t\t\t}\n\n\t\t\treturn this._activateExtensions([desc], 0);\n\t\t});\n\t}\n\n\t/**\n\t * Handle semantics related to dependencies for `currentExtension`.\n\t * semantics: `redExtensions` must wait for `greenExtensions`.\n\t */\n\tprivate _handleActivateRequest(currentExtension: IExtensionDescription, greenExtensions: { [id: string]: IExtensionDescription; }, redExtensions: IExtensionDescription[]): void {\n\t\tlet depIds = (typeof currentExtension.extensionDependencies === 'undefined' ? [] : currentExtension.extensionDependencies);\n\t\tlet currentExtensionGetsGreenLight = true;\n\n\t\tfor (let j = 0, lenJ = depIds.length; j < lenJ; j++) {\n\t\t\tlet depId = depIds[j];\n\t\t\tlet depDesc = ExtensionsRegistry.getExtensionDescription(depId);\n\n\t\t\tif (!depDesc) {\n\t\t\t\t// Error condition 1: unknown dependency\n\t\t\t\tthis._showMessage(Severity.Error, nls.localize('unknownDep', \"Extension `{1}` failed to activate. Reason: unknown dependency `{0}`.\", depId, currentExtension.id));\n\t\t\t\tthis._activatedExtensions[currentExtension.id] = this._createFailedExtension();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (hasOwnProperty.call(this._activatedExtensions, depId)) {\n\t\t\t\tlet dep = this._activatedExtensions[depId];\n\t\t\t\tif (dep.activationFailed) {\n\t\t\t\t\t// Error condition 2: a dependency has already failed activation\n\t\t\t\t\tthis._showMessage(Severity.Error, nls.localize('failedDep1', \"Extension `{1}` failed to activate. Reason: dependency `{0}` failed to activate.\", depId, currentExtension.id));\n\t\t\t\t\tthis._activatedExtensions[currentExtension.id] = this._createFailedExtension();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// must first wait for the dependency to activate\n\t\t\t\tcurrentExtensionGetsGreenLight = false;\n\t\t\t\tgreenExtensions[depId] = depDesc;\n\t\t\t}\n\t\t}\n\n\t\tif (currentExtensionGetsGreenLight) {\n\t\t\tgreenExtensions[currentExtension.id] = currentExtension;\n\t\t} else {\n\t\t\tredExtensions.push(currentExtension);\n\t\t}\n\t}\n\n\tprivate _activateExtensions(extensionDescriptions: IExtensionDescription[], recursionLevel: number): TPromise<void> {\n\t\t// console.log(recursionLevel, '_activateExtensions: ', extensionDescriptions.map(p => p.id));\n\t\tif (extensionDescriptions.length === 0) {\n\t\t\treturn TPromise.as(void 0);\n\t\t}\n\n\t\textensionDescriptions = extensionDescriptions.filter((p) => !hasOwnProperty.call(this._activatedExtensions, p.id));\n\t\tif (extensionDescriptions.length === 0) {\n\t\t\treturn TPromise.as(void 0);\n\t\t}\n\n\t\tif (recursionLevel > 10) {\n\t\t\t// More than 10 dependencies deep => most likely a dependency loop\n\t\t\tfor (let i = 0, len = extensionDescriptions.length; i < len; i++) {\n\t\t\t\t// Error condition 3: dependency loop\n\t\t\t\tthis._showMessage(Severity.Error, nls.localize('failedDep2', \"Extension `{0}` failed to activate. Reason: more than 10 levels of dependencies (most likely a dependency loop).\", extensionDescriptions[i].id));\n\t\t\t\tthis._activatedExtensions[extensionDescriptions[i].id] = this._createFailedExtension();\n\t\t\t}\n\t\t\treturn TPromise.as(void 0);\n\t\t}\n\n\t\tlet greenMap: { [id: string]: IExtensionDescription; } = Object.create(null),\n\t\t\tred: IExtensionDescription[] = [];\n\n\t\tfor (let i = 0, len = extensionDescriptions.length; i < len; i++) {\n\t\t\tthis._handleActivateRequest(extensionDescriptions[i], greenMap, red);\n\t\t}\n\n\t\t// Make sure no red is also green\n\t\tfor (let i = 0, len = red.length; i < len; i++) {\n\t\t\tif (greenMap[red[i].id]) {\n\t\t\t\tdelete greenMap[red[i].id];\n\t\t\t}\n\t\t}\n\n\t\tlet green = Object.keys(greenMap).map(id => greenMap[id]);\n\n\t\t// console.log('greenExtensions: ', green.map(p => p.id));\n\t\t// console.log('redExtensions: ', red.map(p => p.id));\n\n\t\tif (red.length === 0) {\n\t\t\t// Finally reached only leafs!\n\t\t\treturn TPromise.join(green.map((p) => this._activateExtension(p))).then(_ => void 0);\n\t\t}\n\n\t\treturn this._activateExtensions(green, recursionLevel + 1).then(_ => {\n\t\t\treturn this._activateExtensions(red, recursionLevel + 1);\n\t\t});\n\t}\n\n\tprotected _activateExtension(extensionDescription: IExtensionDescription): TPromise<void> {\n\t\tif (hasOwnProperty.call(this._activatedExtensions, extensionDescription.id)) {\n\t\t\treturn TPromise.as(void 0);\n\t\t}\n\n\t\tif (hasOwnProperty.call(this._activatingExtensions, extensionDescription.id)) {\n\t\t\treturn this._activatingExtensions[extensionDescription.id];\n\t\t}\n\n\t\tthis._activatingExtensions[extensionDescription.id] = this._actualActivateExtension(extensionDescription).then(null, (err) => {\n\t\t\tthis._showMessage(Severity.Error, nls.localize('activationError', \"Activating extension `{0}` failed: {1}.\", extensionDescription.id, err.message));\n\t\t\tconsole.error('Activating extension `' + extensionDescription.id + '` failed: ', err.message);\n\t\t\tconsole.log('Here is the error stack: ', err.stack);\n\t\t\t// Treat the extension as being empty\n\t\t\treturn this._createFailedExtension();\n\t\t}).then((x: T) => {\n\t\t\tthis._activatedExtensions[extensionDescription.id] = x;\n\t\t\tdelete this._activatingExtensions[extensionDescription.id];\n\t\t});\n\n\t\treturn this._activatingExtensions[extensionDescription.id];\n\t}\n\n\tprotected abstract _showMessage(severity: Severity, message: string): void;\n\n\tprotected abstract _createFailedExtension(): T;\n\n\tprotected abstract _actualActivateExtension(extensionDescription: IExtensionDescription): TPromise<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {ITimerEvent, nullEvent} from 'vs/base/common/timer';\nimport {createDecorator} from 'vs/platform/instantiation/common/instantiation';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tinstanceId: string;\n}\n\nexport interface ITelemetryService {\n\n\t_serviceBrand: any;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: any): TPromise<void>;\n\n\t/**\n\t * Starts a telemetry timer. Call stop() to send the event.\n\t */\n\ttimedPublicLog(name: string, data?: any): ITimerEvent;\n\n\tgetTelemetryInfo(): TPromise<ITelemetryInfo>;\n\n\tisOptedIn: boolean;\n}\n\nexport const NullTelemetryService: ITelemetryService = {\n\t_serviceBrand: undefined,\n\ttimedPublicLog(name: string, data?: any) {\n\t\treturn nullEvent;\n\t},\n\tpublicLog(eventName: string, data?: any) {\n\t\treturn TPromise.as<void>(null);\n\t},\n\tisOptedIn: true,\n\tgetTelemetryInfo(): TPromise<ITelemetryInfo> {\n\t\treturn TPromise.as({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId'\n\t\t});\n\t}\n};\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n}\n\nexport function combinedAppender(...appenders: ITelemetryAppender[]): ITelemetryAppender {\n\treturn { log: (e, d) => appenders.forEach(a => a.log(e,d)) };\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null };\n\n// --- util\n\nexport function anonymize(input: string): string {\n\tif (!input) {\n\t\treturn input;\n\t}\n\n\tlet r = '';\n\tfor (let i = 0; i < input.length; i++) {\n\t\tlet ch = input[i];\n\t\tif (ch >= '0' && ch <= '9') {\n\t\t\tr += '0';\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch >= 'a' && ch <= 'z') {\n\t\t\tr += 'a';\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch >= 'A' && ch <= 'Z') {\n\t\t\tr += 'A';\n\t\t\tcontinue;\n\t\t}\n\t\tr += ch;\n\t}\n\treturn r;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {createDecorator} from 'vs/platform/instantiation/common/instantiation';\n\nexport const IWorkspaceContextService = createDecorator<IWorkspaceContextService>('contextService');\n\nexport interface IWorkspaceContextService {\n\t_serviceBrand: any;\n\n\t/**\n\t * Provides access to the workspace object the platform is running with. This may be null if the workbench was opened\n\t * without workspace (empty);\n\t */\n\tgetWorkspace(): IWorkspace;\n\n\t/**\n\t * Provides access to the configuration object the platform is running with.\n\t */\n\tgetConfiguration(): IConfiguration;\n\n\t/**\n\t * Provides access to the options object the platform is running with.\n\t */\n\tgetOptions(): any;\n\n\t/**\n\t * Returns iff the provided resource is inside the workspace or not.\n\t */\n\tisInsideWorkspace(resource: URI): boolean;\n\n\t/**\n\t * Given a resource inside the workspace, returns its relative path from the workspace root\n\t * without leading or trailing slashes. Returns null if the file is not inside an opened\n\t * workspace.\n\t */\n\ttoWorkspaceRelativePath: (resource: URI) => string;\n\n\t/**\n\t * Given a workspace relative path, returns the resource with the absolute path.\n\t */\n\ttoResource: (workspaceRelativePath: string) => URI;\n}\n\nexport interface IWorkspace {\n\n\t/**\n\t * the full uri of the workspace. this is a file:// URL to the location\n\t * of the workspace on disk.\n\t */\n\tresource: URI;\n\n\t/**\n\t * the identifier that uniquely identifies this workspace among others.\n\t */\n\tid: string;\n\n\t/**\n\t * the name of the workspace\n\t */\n\tname: string;\n\n\t/**\n\t * the last modified date of the workspace if known\n\t */\n\tmtime?: number;\n\n\t/**\n\t * the unique identifier of the workspace. if the workspace is deleted and recreated\n\t * the identifier also changes. this makes the uid more unique compared to the id which\n\t * is just derived from the workspace name.\n\t */\n\tuid?: number;\n}\n\nexport interface IConfiguration {\n\t/**\n\t * Some environmental flags\n\t */\n\tenv?: IEnvironment;\n}\n\nexport interface IEnvironment {\n\tappName: string;\n\tappRoot: string;\n\tisBuilt: boolean;\n\texecPath: string;\n\n\tapplicationName: string;\n\tdarwinBundleIdentifier: string;\n\n\tversion: string;\n\tcommitHash: string;\n\n\tupdateFeedUrl: string;\n\tupdateChannel: string;\n\n\textensionsGallery: {\n\t\tserviceUrl: string;\n\t\titemUrl: string;\n\t};\n\n\textensionTips: { [id: string]: string; };\n\n\treleaseNotesUrl: string;\n\tlicenseUrl: string;\n\tproductDownloadUrl: string;\n\n\twelcomePage: string;\n\n\tcrashReporter: any;\n\n\tappSettingsHome: string;\n\tappSettingsPath: string;\n\tappKeybindingsPath: string;\n\n\tdebugExtensionHostPort: number;\n\tdebugBrkExtensionHost: boolean;\n\tdisableExtensions: boolean;\n\n\tlogExtensionHostCommunication: boolean;\n\tdebugBrkFileWatcherPort: number;\n\tverboseLogging: boolean;\n\tenablePerformance: boolean;\n\n\tuserExtensionsHome: string;\n\tsharedIPCHandle: string;\n\textensionDevelopmentPath: string;\n\textensionTestsPath: string;\n\n\trecentFiles: string[];\n\trecentFolders: string[];\n\n\tenableTelemetry: boolean;\n\n\taiConfig: {\n\t\tkey: string;\n\t\tasimovKey: string;\n\t};\n\n\tsendASmile: {\n\t\treportIssueUrl: string,\n\t\trequestFeatureUrl: string\n\t};\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n// base common\nimport 'vs/base/common/assert';\nimport 'vs/base/common/async';\nimport 'vs/base/common/callbackList';\nimport 'vs/base/common/cancellation';\nimport 'vs/base/common/collections';\nimport 'vs/base/common/event';\nimport 'vs/base/common/events';\nimport 'vs/base/common/lifecycle';\nimport 'vs/base/common/paths';\nimport 'vs/base/common/uri';\n\n// platform common\nimport 'vs/platform/platform';\nimport 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport 'vs/platform/workspace/common/workspace';\nimport 'vs/platform/telemetry/common/telemetry';\n\n// editor common\nimport 'vs/editor/common/editorCommon';\nimport 'vs/editor/common/modes';\nimport 'vs/editor/common/modes/abstractMode';\nimport 'vs/editor/common/modes/abstractState';\nimport 'vs/editor/common/modes/monarch/monarchCommon';\nimport 'vs/editor/common/modes/monarch/monarchLexer';\nimport 'vs/editor/common/modes/monarch/monarchCompile';\nimport 'vs/editor/common/modes/languageConfigurationRegistry';\nimport 'vs/editor/common/modes/supports/suggestSupport';\nimport 'vs/editor/common/modes/supports/tokenizationSupport';\nimport 'vs/editor/common/services/modelService';\nimport 'vs/editor/common/services/modeService';\nimport 'vs/editor/common/services/compatWorkerService';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n// include these in the editor bundle because they are widely used by many languages\nimport 'vs/editor/common/languages.common';\nimport Severity from 'vs/base/common/severity';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {WorkerServer} from 'vs/base/common/worker/workerServer';\nimport {EventService} from 'vs/platform/event/common/eventService';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {AbstractExtensionService, ActivatedExtension} from 'vs/platform/extensions/common/abstractExtensionService';\nimport {IExtensionDescription, IExtensionService} from 'vs/platform/extensions/common/extensions';\nimport {ServiceCollection} from 'vs/platform/instantiation/common/serviceCollection';\nimport {InstantiationService} from 'vs/platform/instantiation/common/instantiationService';\nimport {ModeServiceImpl} from 'vs/editor/common/services/modeServiceImpl';\nimport {IModeService, ILanguageExtensionPoint} from 'vs/editor/common/services/modeService';\nimport {ResourceService} from 'vs/editor/common/services/resourceServiceImpl';\nimport {IResourceService} from 'vs/editor/common/services/resourceService';\nimport {CompatWorkerServiceWorker} from 'vs/editor/common/services/compatWorkerServiceWorker';\nimport {ICompatWorkerService} from 'vs/editor/common/services/compatWorkerService';\nimport {ILegacyLanguageDefinition} from 'vs/editor/common/modes/modesRegistry';\n\nexport interface IInitData {\n\tmodesRegistryData?: {\n\t\tcompatModes: ILegacyLanguageDefinition[];\n\t\tlanguages: ILanguageExtensionPoint[];\n\t};\n}\n\nexport interface ICallback {\n\t(something:any):void;\n}\n\nclass WorkerExtensionService extends AbstractExtensionService<ActivatedExtension> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n\tprotected _showMessage(severity:Severity, msg:string): void {\n\t\tswitch (severity) {\n\t\t\tcase Severity.Error:\n\t\t\t\tconsole.error(msg);\n\t\t\t\tbreak;\n\t\t\tcase Severity.Warning:\n\t\t\t\tconsole.warn(msg);\n\t\t\t\tbreak;\n\t\t\tcase Severity.Info:\n\t\t\t\tconsole.info(msg);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(msg);\n\t\t}\n\t}\n\n\tprotected _createFailedExtension(): ActivatedExtension {\n\t\tthrow new Error('unexpected');\n\t}\n\n\tprotected _actualActivateExtension(extensionDescription: IExtensionDescription): TPromise<ActivatedExtension> {\n\t\tthrow new Error('unexpected');\n\t}\n}\n\nexport class EditorWorkerServer {\n\n\tprivate compatWorkerService:CompatWorkerServiceWorker;\n\n\tconstructor() {\n\t}\n\n\tpublic initialize(mainThread:WorkerServer, complete:ICallback, error:ICallback, progress:ICallback, initData:IInitData):void {\n\n\t\tconst services = new ServiceCollection();\n\t\tconst instantiationService = new InstantiationService(services);\n\n\t\tconst extensionService = new WorkerExtensionService();\n\t\tservices.set(IExtensionService, extensionService);\n\n\t\tconst resourceService = new ResourceService();\n\t\tservices.set(IResourceService, resourceService);\n\n\t\tservices.set(IEventService, new EventService());\n\n\t\tconst modeService = new ModeServiceImpl(instantiationService, extensionService);\n\t\tservices.set(IModeService, modeService);\n\n\t\tthis.compatWorkerService = new CompatWorkerServiceWorker(resourceService, modeService, initData.modesRegistryData);\n\t\tservices.set(ICompatWorkerService, this.compatWorkerService);\n\n\t\tcomplete(undefined);\n\t}\n\n\tpublic request(mainThread:WorkerServer, complete:ICallback, error:ICallback, progress:ICallback, data:any):void {\n\t\ttry {\n\t\t\tTPromise.as(\n\t\t\t\tthis.compatWorkerService.handleMainRequest(data.target, data.methodName, data.args)\n\t\t\t).then(complete, error);\n\t\t} catch (err) {\n\t\t\terror(err);\n\t\t}\n\t}\n}\n\nexport var value = new EditorWorkerServer();\n"]}